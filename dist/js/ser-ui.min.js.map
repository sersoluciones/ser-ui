{"version":3,"sources":["utils.js","js.cookie.js","tooltipster.bundle.js","blob.js","jurlp.js","image-zoom.js","jquery.daterangepicker.js","angular-animate.js","angular-aria.js","angular-filter.js","angular-fullscreen.js","angular-messages.js","angular-resource.js","angular-sanitize.js","../node_modules/@uirouter/core/lib-esm/common/@uirouter/core/common/hof.ts","../node_modules/@uirouter/core/lib-esm/common/@uirouter/core/common/predicates.ts","../node_modules/@uirouter/core/lib-esm/common/@uirouter/core/common/common.ts","../node_modules/@uirouter/core/lib-esm/common/@uirouter/core/common/trace.ts","../node_modules/@uirouter/core/lib-esm/transition/@uirouter/core/transition/hookRegistry.ts","../node_modules/@uirouter/core/lib-esm/transition/@uirouter/core/transition/hookBuilder.ts","../node_modules/@uirouter/core/lib-esm/params/@uirouter/core/params/paramType.ts","../node_modules/@uirouter/core/lib-esm/params/@uirouter/core/params/param.ts","../node_modules/@uirouter/core/lib-esm/common/@uirouter/core/common/strings.ts","../node_modules/@uirouter/core/lib-esm/state/@uirouter/core/state/stateBuilder.ts","../node_modules/@uirouter/core/lib-esm/url/@uirouter/core/url/urlMatcher.ts","../node_modules/@uirouter/core/lib-esm/url/@uirouter/core/url/urlRouter.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/coreResolvables.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/onEnterExitRetain.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/lazyLoad.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/ignoredTransition.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/invalidTransition.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/utils.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/plugins.ts","@uirouter/angularjs/statebuilders/views.ts","@uirouter/angularjs/templateFactory.ts","@uirouter/angularjs/services.ts","@uirouter/angularjs/directives/stateDirectives.ts","@uirouter/angularjs/stateFilters.ts","@uirouter/angularjs/directives/viewDirective.ts","@uirouter/angularjs/angular.ts","../node_modules/@uirouter/core/lib-esm/common/@uirouter/core/common/glob.ts","../node_modules/@uirouter/core/lib-esm/state/@uirouter/core/state/stateObject.ts","../node_modules/@uirouter/core/lib-esm/common/@uirouter/core/common/coreservices.ts","../node_modules/@uirouter/core/lib-esm/common/@uirouter/core/common/queue.ts","../node_modules/@uirouter/core/lib-esm/transition/@uirouter/core/transition/rejectFactory.ts","../node_modules/@uirouter/core/lib-esm/transition/@uirouter/core/transition/interface.ts","../node_modules/@uirouter/core/lib-esm/state/@uirouter/core/state/targetState.ts","../node_modules/@uirouter/core/lib-esm/transition/@uirouter/core/transition/transitionHook.ts","../node_modules/@uirouter/core/lib-esm/path/@uirouter/core/path/pathNode.ts","../node_modules/@uirouter/core/lib-esm/path/@uirouter/core/path/pathFactory.ts","../node_modules/@uirouter/core/lib-esm/resolve/@uirouter/core/resolve/resolvable.ts","../node_modules/@uirouter/core/lib-esm/resolve/@uirouter/core/resolve/interface.ts","../node_modules/@uirouter/core/lib-esm/resolve/@uirouter/core/resolve/resolveContext.ts","../node_modules/@uirouter/core/lib-esm/transition/@uirouter/core/transition/transition.ts","../node_modules/@uirouter/core/lib-esm/params/@uirouter/core/params/paramTypes.ts","../node_modules/@uirouter/core/lib-esm/params/@uirouter/core/params/stateParams.ts","../node_modules/@uirouter/core/lib-esm/state/@uirouter/core/state/stateMatcher.ts","../node_modules/@uirouter/core/lib-esm/state/@uirouter/core/state/stateQueueManager.ts","../node_modules/@uirouter/core/lib-esm/state/@uirouter/core/state/stateRegistry.ts","../node_modules/@uirouter/core/lib-esm/url/@uirouter/core/url/urlMatcherFactory.ts","../node_modules/@uirouter/core/lib-esm/url/@uirouter/core/url/urlRule.ts","../node_modules/@uirouter/core/lib-esm/view/@uirouter/core/view/view.ts","../node_modules/@uirouter/core/lib-esm/@uirouter/core/globals.ts","../node_modules/@uirouter/core/lib-esm/url/@uirouter/core/url/urlService.ts","../node_modules/@uirouter/core/lib-esm/@uirouter/core/router.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/redirectTo.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/resolve.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/views.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/updateGlobals.ts","../node_modules/@uirouter/core/lib-esm/hooks/@uirouter/core/hooks/url.ts","../node_modules/@uirouter/core/lib-esm/transition/@uirouter/core/transition/transitionEventType.ts","../node_modules/@uirouter/core/lib-esm/transition/@uirouter/core/transition/transitionService.ts","../node_modules/@uirouter/core/lib-esm/state/@uirouter/core/state/stateService.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/q.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/injector.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/baseLocationService.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/hashLocationService.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/memoryLocationService.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/pushStateLocationService.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/memoryLocationConfig.ts","../node_modules/@uirouter/core/lib-esm/vanilla/@uirouter/core/vanilla/browserLocationConfig.ts","../node_modules/@uirouter/core/lib-esm/@uirouter/core/interface.ts","@uirouter/angularjs/stateProvider.ts","@uirouter/angularjs/statebuilders/onEnterExitRetain.ts","@uirouter/angularjs/locationServices.ts","@uirouter/angularjs/urlRouterProvider.ts","@uirouter/angularjs/viewScroll.ts","@uirouter/angularjs/index.ts","ng-file-upload.js","angular-websocket.js","randexp.min.js","auth.js","autocomplete.js","date.js","filters.js","i18n.js","image.js","loader.js","search.js","selector.js","tooltipster.js","validation-match.js","barcode.js","diff.js","main.js"],"names":["getStyles","element","HTMLElement","ownerDocument","defaultView","opener","getComputedStyle","window","arrayGroupBy","array","field","array_group_by","index","length","undefined","push","hasValue","value","angular","isArray","isDate","isObject","isEmptyObject","NaN","indexOf","notValue","hasProperty","obj","key","hasOwnProperty","inArray","notInArray","getObjectByValue","attr","i","prop","browserWidth","innerWidth","screen","width","hasPdfViewer","navigator","plugins","name","toLowerCase","getRandomInt","min","max","Math","floor","random","factory","registeredInModuleLoader","define","amd","exports","module","OldCookies","Cookies","api","noConflict","extend","result","arguments","attributes","init","converter","document","path","defaults","expires","Date","setMilliseconds","getMilliseconds","toUTCString","JSON","stringify","test","e","write","encodeURIComponent","String","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","cookie","cookies","split","rdecode","parts","slice","join","charAt","read","this","json","parse","set","get","call","getJSON","apply","remove","withConverter","root","a0","require","jQuery","$","Ruler","$tooltip","$container","constraints","__$tooltip","__init","areEqual","a","b","same","each","_","bodyContains","$obj","id","el","env","getElementById","contains","body","animation","animationDuration","content","contentAsHTML","contentCloning","debug","delay","delayTouch","functionInit","functionBefore","functionReady","functionAfter","functionFormat","IEmin","interactive","multiple","parent","repositionOnScroll","restoration","selfDestruction","theme","timer","trackerInterval","trackOrigin","trackTooltip","trigger","triggerClose","click","mouseleave","originClick","scroll","tap","touchleave","triggerOpen","mouseenter","touchstart","updateAnimation","zIndex","win","hasTouchCapability","DocumentTouch","maxTouchPoints","hasTransitions","s","documentElement","style","p","v","toUpperCase","substr","IE","semVer","core","__$emitterPrivate","__$emitterPublic","__instancesLatestArr","__plugins","_env","prototype","__bridge","constructor","pluginName","fn","pluginInstance","methodName","console","log","Array","bridged","__setWindow","_getRuler","_off","off","_on","on","_one","one","_plugin","plugin","self","substring","Error","_trigger","args","type","instances","selector","$this","ns","data","namespace","instancesLatest","origins","toArray","setDefaults","d","triggerHandler","tooltipster","Tooltipster","options","__callbacks","close","open","__closingTime","__Content","__contentBcr","__destroyed","__destroying","__enabled","__garbageCollector","__Geometry","__lastPosition","__namespace","round","__options","__$originParents","__pointerIsOverOrigin","__previousThemes","__state","__timeouts","__touchEvents","__tracker","_$origin","_$tooltip","origin","__optionsFormat","initialTitle","__contentSet","$el","first","removeAttr","addClass","__prepareOrigin","__prepareGC","_plug","event","_touchRecordEvent","__prepareTooltip","position","disabled","__contentInsert","find","formattedContent","format","empty","append","text","clone","__destroyError","__geometry","$target","originIsArea","is","mapName","bcr","getBoundingClientRect","$document","$window","$parent","geo","available","size","height","left","scrollX","scrollLeft","top","scrollY","scrollTop","fixedLineage","offset","bottom","right","usemapImage","windowOffset","shape","coords","map","val","parseInt","circleCenterLeft","circleCenterTop","circleRadius","areaTopOffset","areaLeftOffset","areaLeft","areaTop","areaRight","areaBottom","areaSmallestX","areaSmallestY","areaGreatestX","areaGreatestY","arrayAlternate","areaNumber","edit","r","geometry","tagName","css","setInterval","now","getTime","grep","time","destroy","clearInterval","eventNames","_touchIsMeaningfulEvent","_open","_touchIsTouchEvent","_touchIsEmulatedEvent","_openShortly","pointer-events","removeClass","merge","__scrollHandler","_close","target","reposition","g","overflows","overflowX","overflowY","offsetLeft","offsetTop","coord","__stateSet","state","__timeoutsClear","clearTimeout","timeout","__trackerStart","$content","identical","currentBcr","callback","ok","stop","finishCallbacks","c","necessary","newClosingTime","finish","-moz-animation-duration","-ms-animation-duration","-o-animation-duration","-webkit-animation-duration","animation-duration","transition-duration","clearQueue","queue","fadeOut","extraTime","tooltip","fadeIn","setTimeout","$ae","activeElement","parents","dismissable","$elements","eventNamesIn","eventNamesOut","add","_optionsExtract","defaultOptions","pluginOptions","optionName","o","instance","isEmulated","_touchSwiped","swiped","_unplug","__destroy","fadeTo","removeData","title","html","disable","elementOrigin","elementTooltip","enable","hide","option","tooltipIsDetached","detach","helper","show","status","destroyed","destroying","enabled","contentCloningWarning","resp","multipleIsSet","contentIsSet","contentCloningIsSet","debugIsSet","go","overflow","appendTo","__forceRedraw","$p","constrain","display","free","measure","tooltipBcr","outerHeight","contentBcr","fits","scrollWidth","clientWidth","ceil","uA","userAgent","__defaults","arrow","distance","functionPosition","maxWidth","minIntersection","minWidth","side","viewportAware","__instance","__previousState","__close","__create","__reposition","$html","end","opposites","finalResult","targets","__targetFind","testResults","$clone","ruler","satisfied","container","takeTest","bool","results","horizontal","vertical","__sideChange","mode","testResult","outerSize","whole","rulerResults","sort","ai","bi","tooltipClone","tooltipParent","finalResultClone","arrowCoord","maxVal","originParentOffset","rects","getClientRects","targetRect","view","URL","webkitURL","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","get_class","object","Object","toString","match","FakeBlobBuilder","FakeBlob","encoding","FBB_proto","FB_proto","FileReaderSync","FileException","code","file_ex_codes","file_ex_code","real_URL","real_create_object_URL","createObjectURL","real_revoke_object_URL","revokeObjectURL","btoa","atob","ArrayBuffer","Uint8Array","fake","uri","uri_origin","uri_info","createElementNS","href","protocol","blob","data_URI_header","object_URL","bb","str","buf","buf_len","fromCharCode","fr","readAsBinaryString","unescape","getBlob","start","blobParts","builder","len","buffer","webkitSlice","getPrototypeOf","__proto__","urlRegEx","selectorCallStack","currentSelector","initialiseElement","getHref","location","sanitiseUrl","initialiseElementText","hasClass","urls","modifiedHtml","findUrlRegExp","exec","pos","setHref","setAttrUrl","url","restoreAttrUrl","restoreElement","methods","unwatch","updateHref","segment","setUrlSegment","updateHrefShim","parameters","objectToUrl","urlToObject","scheme","user","password","host","port","query","fragment","credentials","urlSegments","createElement","err","number","authority","pathname","hostname","search","hash","urlString","urlObject","getUrlObject","getFragmentString","getQueryString","updateQuery","queryObject","currentQueryObject","getQueryObject","queryStringToObject","queryObjectToString","elements","parameter","string","getPathString","getPathObject","pathString","updatePath","pathArray","newPathArray","splice","l","pathObjectToString","getPortString","getHostString","getPasswordString","getUserString","getSchemeString","addSelectorCallback","returnEachElement","returnEachObject","dispatchGetSetHelper","getHelper","setHelper","helperArguments","methodDispatcher","method","initialise","http","mailto","javascript","generic","parsers","helpers","getUrl","setUrl","parseUrl","getFragment","setFragment","getQuery","setQuery","getPath","setPath","getPort","setPort","getHost","setHost","getPassword","setPassword","getUser","setUser","getScheme","setScheme","filters","=","actualValue","userValue","!=","<",">","<=",">=","*=","^=","$=","regex","me","filter","restore","goto","proxy","elementUrl","watch","bind","DOMListener","filtered","output","unbind","operator","interface","jurlp","create","F","ElevateZoom","elem","$elem","elevateZoom","imageSrc","tint","lensColour","lensOpacity","zoomType","showLens","zoomImage","refresh","gallery","galleryActiveClass","preventDefault","zoomImagePre","swaptheimage","fetch","imgsrc","newImg","Image","onload","largeWidth","largeHeight","startZoom","currentImage","onZoomedImageLoaded","src","nzWidth","nzHeight","isWindowActive","isLensActive","isTintActive","overWindow","imageCrossfade","zoomWrap","wrap","zoomLock","scrollingLock","changeBgSize","currentZoomLevel","zoomLevel","nzOffset","widthRatio","heightRatio","zoomWindowStyle","zoomWindowBgColour","zoomWindowWidth","zoomWindowHeight","borderSize","borderColour","borderWidth","lensHeight","lensWidth","lensStyle","tintStyle","tintColour","lensRound","lensSize","lensShape","zoomContainer","after","containLensZoom","zoomLens","tintContainer","zoomTint","zoomTintcss","zoomTintImage","isNaN","zoomWindowPosition","zoomWindow","zoomWindowContainer","backgroundImage","touch","originalEvent","touches","changedTouches","setPosition","showHideWindow","showHideLens","showHideTint","setElements","lastX","clientX","lastY","clientY","currentLoc","scrollLock","onDestroy","minZoomLevel","scrollZoomIncrement","scrollZoom","theEvent","wheelDelta","detail","stopImmediatePropagation","stopPropagation","changeZoomLevel","maxZoomLevel","parseFloat","zoomEnabled","isWindowSet","responsive","mouseLeft","pageX","mouseTop","pageY","Etoppos","Eboppos","lensBorderSize","Eloppos","Eroppos","lensLeftPos","lensTopPos","windowLeftPos","tintpos","windowTopPos","backgroundPosition","background-size","newvalueheight","newvaluewidth","setWindowPostition","setTintPosition","fullwidth","change","zoomWindowFadeIn","zoomWindowFadeOut","loop","lensFadeIn","lensFadeOut","zoomTintFadeIn","opacity","tintOpacity","animate","zoomTintFadeOut","setLensPostition","externalContainer","externalContainerWidth","externalContainerHeight","externalContainerOffset","windowOffsetTop","windowOffsetLeft","zoomWindowOffety","zoomWindowOffetx","fullheight","easing","xp","yp","easingAmount","abs","tintposy","smallimage","largeimage","loadingIcon","spinner","onImageSwap","swapAction","newImg2","onImageSwapComplete","doneCallback","oldImg","oldImgTint","newImgTint","constrainType","constrainSize","constwidth","constheight","getCurrentImage","getGalleryList","gallerylist","img_src","unshift","newvalue","toFixed","maxheightnewvalue","maxwidthtnewvalue","scrcontinue","changeZoom","closeAll","changeState","elevate","zoomActivation","preloading","zoomWindowAlwaysShow","lensBorderColour","lenszoom","cursor","onComplete","noop","moment","dateRangePickerLanguages","default","selected","day","days","week-1","week-2","week-3","week-4","week-5","week-6","week-7","week-number","month-name","shortcuts","custom-values","past","following","previous","prev-week","prev-month","prev-year","next","next-week","next-month","next-year","less-than","more-than","default-more","default-single","default-less","default-range","default-default","hour","minute","de","Time","es","pt","dateRangePicker","opt","IsOwnDatePickerClicked","evt","selfObj","childNodes","calcPosition","inline","containerOffset","box","animationTime","redrawDatePicker","checkAndSetDefaultValue","customOpenAnimation","relatedTarget","slideDown","showGap","updateCalendarWidth","__default_string","getValue","selfDom","separator","singleDate","___format","initiated","setDateRange","getValidValue","locale","language","setSingleDate","date","isValid","toDate","gapMargin","w1","w2","w3","singleMonth","renderTime","hours","minutes","setTime","changeTime","startOf","valueOf","swapTime","setRange","timePoint","h","m","startTime","endTime","checkSelectionValid","showSelectedInfo","showSelectedDays","handleStart","batchMode","startOfWeek","handleEnd","endOf","dayClicked","tmp","clearHovering","date1","dayHovering","updateSelectableRange","autoclose","weekNumberClicked","weekNumberDom","date2","thisTime","startWeek","isValidTime","startDate","compare_day","endDate","maxDays","countDays","minDays","selectForward","selectBackward","beforeShowDay","valid","timeTmp","hoverTime","hoveringTooltip","translate","posDay","posBox","_left","_top","$tip","w","visibility","autoClose","closeDatePicker","forceValid","silent","getDateString","dateRange","setValue","daysFrom1970","showMonth","nextMonth","stickyMonths","compare_month","lookBehind","prevMonth","month","monthName","nameMonth","getMonth","getFullYear","createMonthHTML","bindDayEvents","showTime","getTimeHTML","m1","month1","m2","month2","h1","h2","alwaysOpen","afterAnim","customCloseAnimation","slideUp","duration","createDom","extraClass","_colspan","showWeekNumbers","arrowPrev","customArrowPrevSymbol","arrowNext","customArrowNextSymbol","getWeekHead","hasMonth2","prepend","isMonthOutOfBounds","isBefore","isAfter","attributesCallbacks","initialObject","callbacksArray","today","resultObject","cbAttrIndex","cbAttr","addAttributes","attrString","t","toLocalTimestamp","isMoment","getTimezoneOffset","setDate","dayOfWeek","getDay","getDate","toMonth","week","highlightToday","_r","todayDivAttr","data-tooltip","class","getWeekNumber","dayTdAttrs","dayDivAttrs","showDayHTML","showDateFilter","translationKey","translationKeyLowerCase","languages","defaultLanguage","getDefaultTime","defaultTime","resetMonthsView","customShortcuts","applyBtnClass","hoveringTime","showTopbar","isTouchDevice","msMaxTouchPoints","domChangeTimer","browserLanguage","gotoNextMonth","isMonth2","gotoNextMonth_stickily","nextMonth1","nextMonth2","gotoPrevMonth","gotoPrevMonth_stickily","prevMonth1","prevMonth2","defaultEndTime","defaultTopText","valueName","dir","shortcut","stopDay","setFullYear","setMonth","sh","movetodate","setStart","d1","setEnd","d2","clear","redraw","getDatePicker","assertArg","arg","reason","ngMinErr","mergeClasses","packageStyles","styles","to","from","pendClasses","classes","fix","isPrefix","className","isString","forEach","klass","removeFromArray","arr","stripCommentsFromElement","jqLite","nodeType","ELEMENT_NODE","extractElementNode","elm","$$addClass","$$jqLite","$$removeClass","applyAnimationClassesFactory","prepareAnimationOptions","$$prepared","domOperation","$$domOperationFired","applyAnimationStyles","applyAnimationFromStyles","applyAnimationToStyles","mergeAnimationDetails","oldAnimation","newAnimation","newOptions","toAdd","toRemove","resolveElementClasses","preparationClasses","concatWithSpace","realDomOperation","existing","splitClassesToLookup","flags","allow","REMOVE_CLASS_SUFFIX","ADD_CLASS_SUFFIX","getDomNode","applyGeneratedPreparationClasses","EVENT_CLASS_PREFIX","clearGeneratedClasses","activeClasses","blockTransitions","node","applyInlineStyle","TRANSITION_DELAY_PROP","blockKeyframeAnimations","applyBlock","ANIMATION_PROP","ANIMATION_PLAYSTATE_KEY","styleTuple","getCssKeyframeDurationStyle","ANIMATION_DURATION_PROP","getCssDelayStyle","isKeyframeAnimation","ANIMATION_DELAY_PROP","computeCssStyles","properties","detectedStyles","formalStyleName","actualStyleName","parseMaxTime","maxValue","values","truthyTimingValue","getCssTransitionDurationStyle","applyOnlyDuration","TRANSITION_PROP","DURATION_KEY","createLocalCacheLookup","cache","flush","count","entry","total","put","registerRestorableStyles","backup","isDefined","getPropertyValue","TRANSITIONEND_EVENT","ANIMATIONEND_EVENT","NG_ANIMATE_CLASSNAME","NG_ANIMATE_CHILDREN_DATA","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","copy","isElement","isFunction","isUndefined","TIMING_KEY","TRANSITION_DURATION_PROP","$$minErr","$$rAFSchedulerFactory","$$rAF","scheduler","tasks","concat","nextTick","items","shift","cancelFn","waitUntilQuiet","$$AnimateChildrenDirective","$interpolate","link","scope","attrs","setData","ngAnimateChildren","$observe","ANIMATE_TIMER_KEY","ONE_SECOND","ELAPSED_TIME_MAX_DECIMAL_PLACES","CLOSING_TIME_BUFFER","DETECT_CSS_PROPERTIES","transitionDuration","transitionDelay","transitionProperty","animationDelay","animationIterationCount","DETECT_STAGGER_CSS_PROPERTIES","$AnimateCssProvider","$animateProvider","gcsLookup","gcsStaggerLookup","$get","$$AnimateRunner","$timeout","$$forceReflow","$sniffer","$$rAFScheduler","$$animateQueue","gcsHashFn","extraClasses","KEY","parentNode","parentCounter","getAttribute","computeCachedCssStyles","cacheKey","timings","computeCachedCssStaggerStyles","stagger","staggerClassName","rafWaitQueue","pageWidth","computeTimings","aD","tD","maxDelay","maxDuration","applyAnimationClasses","initialOptions","endFn","rejected","animationClosed","animationCompleted","animationPaused","$$skipPreparationClasses","temporaryStyles","keys","restoreStyles","setProperty","removeProperty","onDone","events","onAnimationProgress","animationTimerData","cancel","runner","complete","applyBlocking","blockTransition","blockKeyframeAnimation","closeAndReturnNoopAnimator","$$willAnimate","ev","timeStamp","$manualTimeStamp","elapsedTime","maxDelayTime","triggerAnimationStart","recalculateTimingStyles","fullClassName","relativeDelay","hasAnimations","applyAnimationDelay","delayStyle","maxDurationTime","easeProp","easeVal","timerTime","animationsData","setupFallbackTimer","currentTimerData","expectedEndTime","onAnimationExpired","cleanupStyles","playPause","playAnimation","maxStagger","itemIndex","runnerHost","resume","pause","animations","transitions","structuralClassName","addRemoveClassName","structural","applyClassesEarly","trim","hasToStyles","keyframeStyle","staggerVal","transitionStyle","durationStyle","staggerIndex","isFirst","skipBlocking","hasTransitionAll","applyTransitionDuration","applyAnimationDuration","applyTransitionDelay","$$AnimateCssDriverProvider","$$animationProvider","isDocumentFragment","drivers","NG_ANIMATE_SHIM_CLASS_NAME","NG_ANIMATE_ANCHOR_CLASS_NAME","NG_OUT_ANCHOR_CLASS_NAME","NG_IN_ANCHOR_CLASS_NAME","$animateCss","$rootScope","$rootElement","filterCssClasses","getUniqueValues","prepareAnchoredAnimation","outAnchor","inAnchor","calculateAnchorStyles","anchor","bodyNode","getClassVal","prepareInAnimation","endingClasses","startingClasses","animator","cloneNode","rootBodyElement","animatorIn","animatorOut","startingAnimator","currentAnimation","done","prepareFromToAnchorAnimation","anchors","fromAnimation","prepareRegularAnimation","toAnimation","anchorAnimations","outElement","inElement","animationRunners","all","animationDetails","rootNode","$$AnimateJsProvider","$injector","lookupAnimations","matches","flagMap","animationFactory","$$registeredAnimations","applyOptions","executeAnimationFn","classesToAdd","classesToRemove","groupEventedAnimations","fnName","operations","ani","endProgressCb","resolved","onAnimationComplete","packageAnimations","runners","animateFn","reject","before","afterFn","beforeFn","success","endAnimations","cancelled","closeActiveAnimations","chain","$$AnimateJsDriverProvider","$$animateJs","prepareAnimation","endFnFactory","NG_ANIMATE_ATTR_NAME","NG_ANIMATE_PIN_DATA","$$AnimateQueueProvider","makeTruthyCssClassMap","classString","ONE_SPACE","hasMatchingClasses","newClassString","currentClassString","currentClassMap","some","isAllowed","ruleType","previousAnimation","rules","hasAnimationClasses","and","PRE_DIGEST_STATE","RUNNING_STATE","skip","nA","nR","cA","cR","$$Map","$$animation","$templateRequest","$$isDocumentHidden","postDigestTaskFactory","postDigestCalled","$$postDigest","normalizeAnimationDetails","findCallbacks","targetParentNode","targetNode","entries","callbackRegistry","filterFromRegistry","list","matchContainer","matchCallback","containerNode","cleanupEventListeners","phase","$animate","queueAnimation","originalElement","notifyProgress","runInNextPostDigestOrNow","callbacks","progress","animationsEnabled","isAnimatableByFilter","isAnimatableClassName","isStructural","documentHidden","skipAnimations","disabledElementsLookup","existingAnimation","activeAnimationsLookup","hasExistingAnimation","areAnimationsAllowed","closeChildAnimations","isValidAnimation","clearElementAnimationState","counter","markElementAnimationState","animationCancelled","realRunner","children","querySelectorAll","child","delete","removeAttribute","animateChildren","bodyNodeDetected","nodeName","rootNodeDetected","parentAnimationDetected","elementDisabled","parentHost","details","parentNodeDisabled","setAttribute","oldValue","newValue","deregisterWatch","$watch","totalPendingRequests","isEmpty","customFilter","classNameFilter","returnTrue","Node","compareDocumentPosition","eventType","pin","parentElement","argCount","$$AnimationProvider","setRunner","RUNNER_STORAGE_KEY","removeRunner","getRunner","NG_ANIMATE_REF_ATTR","sortAnimations","processNode","processed","elementNode","domNode","lookup","parentEntry","tree","remainingLevelEntries","nextLevelEntries","row","childEntry","animationQueue","getAnchorNodes","SELECTOR","hasAttribute","groupAnimations","preparedAnimations","refLookup","enterOrMove","anchorNodes","direction","animationID","usedIndicesLookup","anchorGroups","lookupKey","group","beforeStart","cssClassesIntersection","out","in","indexKey","aa","j","invokeFirstDriver","driverName","driver","updateAnimationRunners","newRunner","update","handleDestroyedElement","tempClasses","prepareClassName","groupedAnimations","toBeSortedAnimations","animationEntry","startAnimationFn","closeFn","operation","animationRunner","ngAnimateSwapDirective","restrict","transclude","terminal","priority","$element","ctrl","$transclude","previousElement","previousScope","$watchCollection","ngAnimateSwap","leave","$destroy","$new","enter","info","angularVersion","directive","provider","ngAriaModule","watchExpr","attrName","ariaAttr","nodeBlackList","negate","ariaCamelName","$normalize","config","isNodeOneOf","boolVal","ariaHidden","ariaChecked","ariaReadonly","ariaDisabled","ariaRequired","ariaInvalid","ariaValue","tabindex","bindKeydown","bindRoleForClick","newConfig","$$watchExpr","nodeTypeArray","$aria","shouldAttachAttr","normalizedAttr","allowBlacklistEls","shouldAttachRole","role","getShape","compile","post","ngModel","ngAriaWatchModelValue","$modelValue","needsTabIndex","newVal","$viewValue","$isEmpty","needsAriaValuemin","needsAriaValuemax","needsAriaValuenow","$validators","required","$invalid","ngMessages","$parse","ngClick","ngKeydown","ngKeypress","ngKeyup","keyCode","which","$apply","$event","isNull","objectContains","partial","hasApproxPattern","word","pattern","getFirstMatches","n","expression","rest","convertToDecimal","num","decimal","pow","deepKeys","stack","isScope","$evalAsync","isGreaterThanFilter","input","check","isGreaterThanOrEqualToFilter","isLessThanFilter","isLessThanOrEqualToFilter","isEqualToFilter","isNotEqualToFilter","isIdenticalToFilter","isNotIdenticalToFilter","containsFilter","collection","flatten","uniqFilter","property","member","equals","uniqueItems","strRepeat","sep","isNumber","o1","o2","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isEqualTo","==","isNotEqualTo","isIdenticalTo","===","isNotIdenticalTo","!==","filterWatcher","fillVal","fill","ret","isMemoized","memoize","joined","getter","setter","assign","every","strict","comparator","propList","shallow","csensitive","sensitive","_hasApproximateKey","flag","delimiter","reversed","reverse","increment","cb","nest","searchField","addKey","$key","unique","uniq","col1","col2","col","dElm","compared","bytes","isFinite","radians","degrees","PI","indexByMax","exp","mappedArray","indexByMin","divided","divider","Number","radix","RANGE","initial","reduce","prev","curr","ends","removeDiacritics","diacriticsMap","defaultDiacriticsRemovalap","base","letters","chars","RegExp","reg","times","sub","suffix","preserve","ch","encodeURI","getHashKey","fName","removeCache","targetScope","$id","$$listeners","$$cache","cleanStateless","$$timeout","$$phase","addListener","hashKey","$on","filterName","createModule","isKeyboardAvailbleOnFullScreen","Element","ALLOW_KEYBOARD_INPUT","emitter","$emit","serviceInstance","isEnabled","requestFullScreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","cancelFullScreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","toggleAll","isSupported","docElm","Fullscreen","$scope","$attrs","fullscreen","removeFullscreenHandler","isFullscreenEnabled","$eval","onlyWatchedProperty","ngMessageDirectiveFactory","ngMessagesCtrl","records","commentNode","staticExp","ngMessage","when","dynamicExp","ngMessageExp","whenExp","assignRecords","reRender","currentElement","messageCtrl","register","attach","newScope","$$attachId","getAttachId","deregister","isAttrTruthy","truthy","controller","findPreviousMessage","comment","prevNode","parentLookup","prevKey","$$ngMessageNode","messages","previousSibling","insertMessageNode","messageNode","head","removeMessageNode","latestKey","nextAttachId","renderLater","cachedCollection","render","ngMessagesMultiple","unmatchedMessages","matchedKeys","messageItem","messageFound","totalMessages","message","messageUsed","setClass","item","nextKey","$compile","replaceElementWithMarker","$$createComment","createComment","marker","ngMessagesInclude","then","$$destroyed","contents","isValidDottedPath","MEMBER_NAME_REGEX","lookupDottedPath","$resourceMinErr","ii","shallowClearAndCopy","dst","PROTOCOL_AND_IPV6_REGEX","stripTrailingSlashes","cancellable","actions","save","$http","$log","$q","Route","template","urlParams","resourceFactory","paramDefaults","extractParams","actionParams","ids","defaultResponseInterceptor","response","resource","Resource","route","toJSON","$promise","$resolved","$cancelRequest","action","hasBody","numericTimeout","a1","a2","a3","a4","error","params","timeoutDeferred","numericTimeoutPromise","isInstanceCall","httpConfig","responseInterceptor","interceptor","responseErrorInterceptor","responseError","hasError","hasResponseErrorInterceptor","defer","promise","resolve","setUrlParams","headers","statusText","catch","additionalParamDefaults","extendedParamDefaults","encodeUriQuery","$$encodeUriQuery","encodeUriSegment","$$encodeUriSegment","actionUrl","encodedVal","protocolAndIpv6","param","isQueryParamValue","paramInfo","urlParam","p1","leadingSlashes","tail","sanitizeText","htmlSanitizeWriter","lowercase","nodeContains","htmlParser","$sanitizeMinErr","toMap","lowercaseKeys","attrToMap","encodeEntities","SURROGATE_PAIR_REGEXP","charCodeAt","NON_ALPHANUMERIC_REGEXP","stripCustomNsAttrs","attrNode","lastIndexOf","removeAttributeNode","nextNode","firstChild","getNonDescendant","propName","outerHTML","outerText","svgEnabled","$$sanitizeUri","validElements","svgElements","isImage","enableSvg","handler","inertBodyElement","getInertBodyElement","mXSSAttempts","innerHTML","textContent","removeChild","uriValidator","ignoreCurrentElement","tag","blockedElements","lkey","validAttrs","uriAttrs","voidElements","optionalEndTagBlockElements","optionalEndTagInlineElements","optionalEndTagElements","blockElements","inlineElements","htmlAttrs","svgAttrs","inertDocument","implementation","createHTMLDocument","getDocumentElement","querySelector","DOMParser","parseFromString","documentMode","xhr","XMLHttpRequest","responseType","send","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","linkyMinErr","addText","attributesFn","raw","linkAttributes","curry","curried","func_args_length","initial_args","compose","pipe","funcs","_i","fn1","fn2","or","invoke","struct","x","isInjectable","not","identity","noop$1","createProxyFunctions","source","fnNames","latebind","bindFunction","makeLateRebindFn","acc","_inArray","_removeFrom","idx","_pushTo","opts","defaultsList","_defaultsList","defaultVals","pick","ancestors","second","propNames","objCopy","prop_1","omit","pluck","accept","pushR","assertFn","predicateOrMap","errMsg","arrayTuples","maxArrayLen","applyPairs","memo","keyValTuple","_extend","toObj","_equals","t1","tup","_arraysEq","isRegExp","any","uiViewString","uiview","creationContext","$type","fqn","normalizedCat","Category","matchState","criterion","toMatch","_state","globStrings","glob","Glob","makeEvent","registry","transitionService","hookRegistrationFn","matchObject","registeredHook","RegisteredHook","hooks","_deregistered","removeFrom","_registeredHooks","tupleSort","reverseDepthSort","factor","depthDelta","hook","ArrayType","arrayWrap","arrayUnwrap","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","_this","paramTypeFn","wrapperFn","dynamic","inherit","$arrayMode","unwrapShorthand","cfg","getStaticDefaultValue","isShorthand","$$fn","getType","urlType","paramTypes","DefType","CONFIG","PATH","SEARCH","ParamType","getSquashPolicy","isOptional","defaultPolicy","squash","getReplace","arrayMode","configuredKeys","maxLength","padString","kebobString","camelCase","$1","functionToString","fnStr","fnToString","namedFunctionMatch","toStr","_fn","seen","stringifyPattern","splitOnDelim","delim","re","joinNeighborsR","nameBuilder","selfBuilder","$$state","dataBuilder","pathBuilder","includesBuilder","includes","resolvablesBuilder","annotate","services","strictDi","token","provide","literal2Resolvable","Resolvable","resolveFn","deps","policy","useFactory","dependencies","useClass","useValue","useExisting","tuple2Resolvable","tuple","item2Resolvable","decl","resolveObj","resolvePolicies","resolvePolicy","quoteRegExp","surroundPattern","appendBasePath","isHtml5","absolute","baseHref","getHandlerFn","TargetState","isDef","addCoreResolvables","trans","addResolvable","UIRouter","router","Transition","entering","makeEnterExitRetainHook","hookName","transition","hookFn","lazyLoadState","lazyLoadFn","lazyLoad","states","stateRegistry","ignoredHook","ignoredReason","_ignoredReason","trace","traceTransitionIgnored","pending","globals","abort","Rejection","ignored","toPromise","invalidTransitionHook","parseUrl$1","orEmptyString","_a","splitHash","beforehash","_b","splitQuery","locationPluginFactory","serviceClass","configurationClass","service","locationService","configuration","locationConfig","dispose","servicesPlugin","templateFactory","Ng1ViewConfig","ng1ViewsBuilder","ctrlKeys","compKeys","nonCompKeys","allViewKeys","views","hasAnyKey","viewsObject","$default","component","resolveAs","$context","$name","normalized","ViewService","normalizeUIViewTarget","$uiViewName","uiViewName","$uiViewContextAnchor","uiViewContextAnchor","getComponentBindings","cmpDefs","getBindings","unnestR","$uiRouter","$locationProvider","$location","$browser","$templateCache","ng1LocationService","_runtimeServices","stateProvider","StateProvider","stateService","decorator","getStateHookBuilder","viewService","_pluginapi","_viewConfigFactory","getNg1ViewConfigFactory","Ng1LocationServices","monkeyPatchPathParameterType","$inject","runBlock","resolvables","resolvable","watchDigests","approximateDigests","parseStateRef","ref","parsed","paramsOnly","paramExpr","stateContext","$uiView","inheritedData","processedDef","$state","def","uiState","current","uiStateOpts","defaultOpts","uiStateParams","getTypeInfo","isSvg","isForm","isAnchor","clickable","clickHook","getDef","button","ctrlKey","metaKey","shiftKey","ignorePreventDefaultCount","relative","$current","bindEvents","events_1","event_1","events_2","event_2","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","$ViewDirectiveFill","$controller","$transitions","$view","getControllerAs","getResolveAs","tElement","$cfg","viewDecl","getTemplate","resolveCtx","ResolveContext","traceUIViewFill","controllerAs","locals","getLocals","controllerInstance","registerControllerCallbacks","cmp_1","kebobName","tagRegexp_1","deregisterWatch_1","directiveEl","ctrlInstance","$onInit","hasComponentImpl","viewState","hookOptions","uiOnParamsChanged","viewCreationTrans_1","getResolvable","onSuccess","$transition$","exiting","toParams","fromParams","toSchema","treeChanges","paramSchema","fromSchema","changedToParams","changedKeys_1","newValues","uiCanExit","id_1","_uiCanExitId","prevTruthyAnswer_1","redirectedFrom","criteria","onBefore","ng_from_global","ng","ng_from_import","ng_from_import.module","propEq","ctor","eq","other","regexpString","seg","regexp","fromString","StateObject","stateDecl","isStateClass","__stateObjectCache","nameGlob","matchingKeys","isState","tis","isNullOrUndefined","isPromise","notImplemented","fnname","fromJson","toJson","dest","extra","pushTo","deregAll","functions","mergeR","mapObj","allTrueR","anyTrueR","flattenR","uniqR","unnest","assertPredicate","assertMap","pairs","silenceUncaughtInPromise","silentRejection","Queue","_items","_limit","enqueue","dequeue","peekTail","peekHead","RejectType","_transitionRejection","isRejectionPromise","superseded","rejection","SUPERSEDED","redirected","invalid","INVALID","IGNORED","aborted","ABORTED","errored","ERROR","normalize","viewConfigString","viewConfig","_tid","_rid","transLbl","Trace","_enabled","_set","categories","k","category","traceTransitionStart","TRANSITION","traceHookInvocation","step","HOOK","context","traceHookResult","hookResult","transitionOptions","traceResolvePath","RESOLVE","traceResolvableResolved","traceError","traceSuccess","finalState","traceUIViewEvent","viewData","UIVIEW","traceUIViewConfigUpdated","traceViewSync","VIEWCONFIG","mapping","uiViewData","ui-view fqn","state: view name","localeCompare","table","traceViewServiceEvent","traceViewServiceUIViewEvent","TransitionHookPhase","TransitionHookScope","_identifier","_definition","_params","_options","identifier","exists","stateName","traceData","TransitionHook","isSuperseded","hookPhase","RUN","isActive","logError","defaultErrorHandler","invokeHook","notCurrent","getNotCurrentRejection","handleError","getErrorHandler","handleResult","getResultHandler","synchronous","handleHookResult","_disposed","_aborted","waitFor","nextHook","invokeHooks","remainingHooks","runAllHooks","HANDLE_RESULT","LOG_REJECTED_RESULT","LOG_ERROR","REJECT_ERROR","THROW_ERROR","tranSvc","matchCriteria","_matchingNodes","nodes","matching","_getDefaultMatchCriteria","_getPathTypes","_getMatchingNodes","mn","pathtype","isStateHook","STATE","HookBuilder","buildHooksForPhase","_getEvents","buildHooks","hookType","matchingHooks","getMatchingHooks","baseHookOptions","criteriaMatchPath","transitionHook","reverseSort","isCreate","CREATE","getHooks","encode","decode","$subPattern","$asArray","isSearch","hasOwn","Param","urlMatcherFactory","arrayDefaults","arrayParamNomenclature","defaultSquashPolicy","inherit$$1","isDefaultValue","_defaultValueCache","defaultValue","validates","encoded","values$$1","paramValues","params_1","changed","values1","values2","PathNode","stateOrNode","res","applyRawParams","getParamVal","paramDef","pDef","paramsFn","diff","PathUtils","makeTargetState","buildPath","targetState","buildToPath","fromPath","toPath","inheritParams","applyViewConfigs","viewDecls","subPath","viewConfigs","createViewConfig","toKeys","nodeParamVals","noInherit","toNode","toParamVals","incomingParamVals","fromParamVals","ownParamVals","reloadState","keep","node1","node2","nonDynamicParams","retained","retainedWithToParams","retainedNode","cloned","pathA","pathB","nodeA","nodeB","predicate","elementIdx","defaultResolvePolicy","async","arg1","literal","getPolicy","thisPolicy","statePolicy","resolveContext","findNode","maybeWaitForRx","observable$","cached","take","getDependencies","resolvedDeps","resolvedValue","fromData","LAZY","EAGER","WAIT","NOWAIT","RXWAIT","ALL_WHENS","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","_path","getTokens","subContext","addResolvables","newResolvables","resolvePath","matchedWhens","matchesPolicy","acceptedVals","whenOrAsync","promises","nodeResolvables","nowait","wait","getResult","injector","_injector","UIInjectorImpl","availableResolvables","fromInjector","getNative","native","getAsync","stateSelf","_deferred","_hookBuilder","_targetState","_transitionCount","_treeChanges","createTransitionHookRegFns","onCreateHooks","onStart","onExit","onRetain","onEnter","onFinish","onError","enteringStates","$from","$to","compare","freeze","pathName","getResolveTokens","topath","originalTransition","rf","redirect","redirects","redirectOpts","newTransition","originalEnteringNodes","redirectEnteringNodes","_changedParams","tc","reload","nodeSchemas","schema","toVals","fromVals","changes","newTC","pendTC","run","getHooksFor","allBeforeHooks","BEFORE","lastStartedTransitionId","transitionHistory","allRunHooks","SUCCESS","_error","abstract","paramDefs","invalidParams","fromStateOrName","toStateOrName","avoidEmptyHash","diToken","stringifyPatternFn","isRejection","beforeAfterSubstr","char","ParamTypes","typeQueue","defaultTypes","types","definition","definitionFn","_flushTypeQueue","makeDefaultType","valToString","defaultTypeBase","int","Boolean","capture","defaultRuleSortFn","StateParams","$inherit","newParams","parentParams","inherited","inheritList","getUrlBuilder","$urlMatcherFactoryProvider","stateDec","paramMap","paramConfig","reloadOnSearch","isMatcher","navigable","getNavigableBuilder","isRoot","getParamsBuilder","paramFactory","nonUrlParams","fromConfig","StateBuilder","matcher","builders","parentName","build","parentFn","segments","pop","StateMatcher","_states","isRelative","stateOrName","matchGlob","isStr","baseState","splitName","pathLength","relName","StateQueueManager","$registry","$urlRouter","listeners","registered","orphans","previousQueueLength","getState","name_1","orphanIdx","existingState","existingFutureState","attachRoute","listener","rule","urlRuleFactory","StateRegistry","_router","stateQueue","urlRouter","_registerRoot","rootStateDef","#","_root","onStatesChanged","stateDefinition","_deregisterTree","getChildren","deregistered","$ur","removeRule","deregisteredStates","found","func","memoizeTo","splitOnSlash","UrlMatcher","_cache","_children","_segments","_compiled","caseInsensitive","placeholder","searchPlaceholder","last","patterns","checkParamErrors","nameValidator","matchDetails","lastIndex","fromSearch","allParams","pathParams","searchParams","nPathSegments","urlm","reverseString","validParamVal","getDetails","urlMatchers","pathSegmentsAndParams","queryParams","encodeDashes","queryString","paramDetails","weights","weightsA","weightsB","padVal","cmp","UrlMatcherFactory","_isCaseInsensitive","_isStrictMode","_defaultSquashPolicy","_getConfig","strictMode","UrlRuleFactory","what","makeRule","_what","fromUrlMatcher","fromState","fromRegExp","BaseUrlRule","urlMatcher","_handler","matchPriority","optional","transitionTo","global","sticky","isUrlRule","prioritySort","typeSort","URLMATCHER","REGEXP","RAW","OTHER","urlMatcherSort","idSort","useMatchPriority","UrlRouter","_sortFn","_rules","interceptDeferred","_id","_sorted","listen","_otherwiseFn","compareFn","stableSort","ensureSorted","arrOfWrapper","wrapperA","wrapperB","cmpDiff","wrapper","best","weight","sync","defaultPrevented","$url","urlService","newurl","_stopFn","onChange","html5Mode","hashPrefix","slash","otherwise","handlerFn","urlParts","deferIntercept","_uiViews","_viewConfigs","_viewConfigFactories","_rootViewContext","_registeredUIViews","_activeViewConfigs","_rootContext","viewType","cfgFactory","cfgs","deactivateViewConfig","activateViewConfig","viewConfigDepth","uiViewsByFqn","uiv","depthCompare","depthFn","posNeg","uiView","stateDepth","matchingConfigs","configUpdated","registerUIView","uiViews","active","rawViewName","viewAtContext","relativeViewNameSugar","vc","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","UIRouterGlobals","successfulTransitions","makeStub","locationServicesFns","locationConfigFns","umfFns","rulesFns","syncFns","UrlService","lateBind","locationServices","umf","locationServiceStub","locationConfigStub","_routerInstance","_disposables","TransitionService","StateService","_plugins","disposable","getPlugin","registerAddCoreResolvables","onCreate","redirectToHook","redirectTo","registerRedirectToHook","onExitHook","registerOnExitHook","onRetainHook","registerOnRetainHook","onEnterHook","registerOnEnterHook","eagerResolvePath","registerEagerResolvePath","lazyResolveState","registerLazyResolveState","loadEnteringViews","enteringViews","load","registerLoadEnteringViews","activateViews","exitingViews","registerActivateViews","updateGlobalState","clearCurrentTransition","registerUpdateGlobalState","updateUrl","urlOptions","registerUpdateUrl","lazyLoadHook","orig","registerLazyLoadHook","TransitionEventType","hookOrder","registerIgnoredTransitionHook","registerInvalidTransitionHook","defaultTransOpts","notify","custom","_eventTypes","_criteriaPaths","_deregisterHookFns","_defineCorePaths","_defineCoreEvents","_registerCoreTransitionHooks","hooksArray","Phase","TH","paths","_defineEvent","_definePathType","cmpByPhase","hookScope","fns","addCoreResolves","eagerResolve","lazyResolve","loadViews","updateGlobals","invalidCallbacks","_defaultErrorHandler","$error$","getters","boundFns","defineProperty","_handleInvalidTargetState","toState","invokeNextCallback","nextCallback","callbackQueue","checkForRedirect","latestThing","latest","onInvalid","transOpts","getCurrentPath","latestSuccess","currentPath","rejectedTransitionHandler","isLatest","transitionToPromise","include","lossy","nav","Promise","deferred","val$$1","STRIP_COMMENTS","ARGUMENT_NAMES","has","ensureExist","splitEqual","trimHashVal","keyValsToObjectR","accum","getParams","buildUrl","loc","searchObject","BaseLocationServices","fireAfterUpdate","_listener","_listeners","_get","_location","_history","history","evt_1","Event","HashLocationService","_super","addEventListener","__extends","removeEventListener","MemoryLocationService","_url","PushStateLocationService","_config","fullUrl","replaceState","pushState","MemoryLocationConfig","_baseHref","_port","_protocol","_host","_hashPrefix","newval","BrowserLocationConfig","_isHtml5","newprefix","applyDocumentBaseHref","baseTags","getElementsByTagName","hashLocationPlugin","pushStateLocationPlugin","memoryLocationPlugin","UIRouterPluginBase","loaded","makeComponentTemplate","bindings","getController","controllerProvider","providerFn","TemplateFactory","_useHttp","version","minor","useHttpService","asTemplate","asComponent","templateUrl","fromUrl","templateProvider","fromProvider","componentProvider","fromComponentProvider","Accept","prefix","kebob","kebobed","resolveName","scopeBindings","bindToController","bindingsObj","$state$","_urlListeners","_lp","newUrl","_loc","_browser","pathType","~","/","~~","~2F","UrlRouterProvider","_urlRouter","ruleFn","injectableHandler","$match","$stateParams","mod_init","mod_util","mod_rtr","mod_state","mod_main","getProviderFor","serviceName","$urp","uiRouter","urlRouterProvider","$urlMatcherFactory","uiSref","ctx","uiSrefActive","unlinkInfoFn","$$addStateInfo","$set","rawDef","uiSrefOpts","inputAttrs","watchDeregFns","expr","updateAfterTransition","addState","stateParams","activeClass","stateInfo","splitClasses","getClasses","stateList","allClasses","activeEqClass","fuzzyClasses","exactClasses","addClasses","removeClasses","cls","uiSrefActiveEq","newState","$uiViewScroll","getRenderer","configsEqual","config1","config2","rootData","tAttrs","cleanupLastView","previousEl","currentScope","activeUIView","currentEl","_viewData_1","renderer","$$animLeave","updateView","animEnter","animLeave","$uiViewData","$uiViewAnim","$animEnter","$animLeave","autoScrollExp","onloadExp","unregister","fromParentTagConfig","fromParentTag","useAnchorScroll","$anchorScroll","scrollIntoView","FileAPI","shouldLoad","setRequestHeader","header","Function","ngFileUpload","sendHttp","progressFunc","getNotifyEvent","_start","resumeSupported","_file","lengthComputable","uploadWithAngular","_chunkSize","_finished","fileSize","_end","upload","disableProgress","__setXHR_","__XHR","xhrFn","resumeSizeUrl","resumeSizeResponseReader","resumeSize","origXhrFn","promisesCount","isResumeSupported","isUploadInProgress","rename","file","ngfName","jsonBlob","_ngfBlob","isFile","flashId","internal","toResumeFile","formData","addFieldToFormData","toISOString","_fileKey","$$ngfCircularDetection","objectKey","arrayKey","_isDigested","translateScalars","resumeChunkSize","transformRequest","FormData","fields","formDataAppender","urlToBlob","arrayBufferView","UploadExif","applyExifRotations","files","emptyPromise","f","attrGetter","$file","happyPromise","applyExifRotation","fixedFile","resizeFile","resizeVal","isResizeSupported","resizeWithParams","validatePattern","resizeIf","$width","$height","resize","resizedFile","$error","$errorMessages","$errorParam","$ngfValidations","applyModelValidation","getAttrWithDefaults","attrVal","shouldUpdateOn","modelOptions","updateOn","rejectPromise","updateModel","fileChange","noDelay","invalidFiles","newFiles","dupFiles","isSingleModel","$$ngfPrevValidFiles","$$ngfPrevInvalidFiles","invalidFile","$setViewValue","$files","$newFiles","$duplicateFiles","$invalidFiles","$invalidFile","invalidModel","resizeAndUpdate","prevValidFiles","valids","prevInvalidFiles","invalids","debounce","resizingFiles","validateAfterResize","allNewFiles","validate","validationResult","validsFiles","invalidsFiles","f1","f2","$ngfOrigSize","allowInvalid","validFiles","isExifSupported","Upload","isDelayedClickSupported","ua","androidFixMinorVersion","linkFileSelect","isInputTypeFile","fileChangeAttr","changeFn","fileList","__files_","bindAttrToFileInput","fileElem","label","updateId","attribute","unwatches","detectSwipe","initialTouchStartX","initialTouchStartY","currentX","currentY","resetModel","ie10SameFileSelectFix","replaceWith","registerModelChangeValidator","generatedElems","appendChild","appVersion","$formatters","ngfFixIE","getTagType","linkFileDirective","directiveName","resizeParams","isBackground","constructDataUrl","disallowObjectUrl","dataUrl","$ngfDataUrl","$ngfBlobUrl","naturalWidth","naturalHeight","clientHeight","UploadBase","base64DataUrl","ff","$$ngfDataUrlPromise","$$ngfBlobUrlPromise","FileReader","blobUrls","blobUrlsTotalSize","maxMemory","blobUrlsMaxMemory","blobUrlsMaxQueueSize","fileReader","onerror","readAsDataURL","$compileProvider","imgSrcSanitizationWhitelist","aHrefSanitizationWhitelist","UploadDataUrl","$sce","trustedUrl","trustAsResourceUrl","$ngfDataUrlFilterInProgress","globStringToRegex","excludes","markModelAsDirty","$dirty","$setDirty","exclude","ratioToFloat","xIndex","filesArray","validation","$setValidity","getValidationAttr","validationName","dName","prevLength","validateSync","ignoredErrors","runAllValidation","validateAsync","asyncFn","resolveResult","resolveInternal","imageDimensions","mediaDuration","$duration","deffer","totalSize","$ngfWidth","$ngfHeight","$ngfDimensionPromise","img","checkLoadErrorInCaseOfNoCallback","secondsCounter","$ngfDuration","$ngfDurationPromise","checkLoadError","UploadValidate","calculateAspectRatioFit","srcWidth","srcHeight","maxHeight","centerCrop","ratio","marginX","marginY","imagen","quality","canvasElement","imageElement","imgWidth","imgHeight","ratioFloat","dimensions","getContext","drawImage","toDataURL","dataUrltoBlob","dataurl","origSize","mime","bstr","u8arr","$ngfName","configurable","restoreExif","linkDrop","isDisabled","extractFilesAndUpdateModel","updateOnType","getData","extractFiles","extractFilesFromHtml","calculateDragOverClass","dClass","dragOverDelay","dataTransfer","allowDir","traverseFileTree","isDirectory","includeDir","dirReader","createReader","readEntries","maxFiles","maxTotalSize","MAX_VALUE","webkitGetAsEntry","getAsFile","dropAvailable","actualDragOverClass","leaveTimeout","effectAllowed","dropEffect","clazz","$isDragging","$class","clipboardData","div","model","UploadResize","applyTransform","orientation","transform","arrayBufferToBase64","binary","byteLength","readAsArrayBuffer","readOrientation","reader","slicedFile","DataView","getUint16","getUint32","little","tags","setUint16","fixedArrayBuffer","canvas","resized","ExifRestorer","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","chr3","enc4","origFileBase64","resizedFileBase64","rawImage","decode64","slice2Segments","image","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","imageData","separatePoint","mae","ato","rawImageArray","endPoint","mod","ws","angularWebsocket","_angular","$WebSocketProvider","$websocketBackend","$WebSocket","protocols","ssl","rootScopeFailover","useApplyAsync","initialTimeout","maxTimeout","reconnectIfNotNormalClose","binaryType","_reconnectAttempts","sendQueue","onOpenCallbacks","onMessageCallbacks","onErrorCallbacks","onCloseCallbacks","objectFreeze","_readyStateConstants","_connect","_setInternalState","CONNECTING","OPEN","CLOSING","CLOSED","RECONNECT_ABORTED","_normalCloseCode","_reconnectableStatusCodes","safeDigest","autoApply","$digest","bindToScope","force","socket","readyState","onmessage","_angular2","_onMessageHandler","onopen","_onOpenHandler","_onErrorHandler","onclose","_onCloseHandler","fireQueue","notifyOpenCallbacks","notifyCloseCallbacks","notifyErrorCallbacks","onOpen","onClose","onMessage","$applyAsync","reconnect","applyAsyncOrDigest","arraySlice","currentCallback","bufferedAmount","cancelableify","isMocked","isConnected","mockSend","backoffDelay","_getBackoffDelay","backoffDelaySeconds","attempt","R","T","N","M","objectDefineProperty","_internalConnectionState","$WebSocketBackendProvider","Socket","createWebSocketBackend","warn","__esModule","_typeof","Symbol","iterator","Client","client","WebSocket","MozWebSocket","elt","u","1","randInt","CHAR","ignoreCase","defaultRange","subtract","ROOT","GROUP","followedBy","notFollowedBy","remember","groupNumber","POSITION","SET","REPETITION","REFERENCE","multiline","tokens","gen","randexp","_randexp","sugar","discontinuous-range","2","low","high","ranges","overlaps","3","strToChars","wordBoundary","nonWordBoundary","words","notWords","ints","notInts","whitespace","notWhitespace","begin","y","tokenizeClass","anyChar","C","./positions","./sets","./types","./util","4","5","6","7","0","SyntaxError","KEYS","up","down","backspace","leftCmd","rightCmd","alt","tab","onbeforeprint","onafterprint","matchMedia","mediaQueryList","mql","userPermissions","isSuperuser","hasPermission","requiredPermission","atLeastPermissions","requiredPermissions","hasPermissions","remoteUrl","keyword","keywordField","selectItem","__","focus","blur","isFetching","showResults","searchFocus","checkFocus","searchBlur","selectInternalItem","inputChangedPromise","isChild","isSelf","addon","templateTag","emptyTag","$filter","positionTracker","picker_instance","setHours","FromDate","ToDate","resultArray","i18n","__DICT","loadJSON","locale_json","callbackImage","retryGetImage","fallbackRetry","retry","new_value","zoomReset","max-height","zoomIn","zoomOut","zoomExpand","defaultValues","ngSrc","afterPromises","topCount","callbackFunction","remoteSearchResults","remoteSearch","ngEnter","disableSearch","valueAttr","labelAttr","dropdownClass","limit","rtl","removeButton","softDelete","closeAfterSelection","dropdown","selectInput","originParents","inputCtrl","selectCtrl","selectedValues","highlighted","Infinity","defaultsKey","getObjValue","setObjValue","optionValue","optionEquals","optionToObject","dataset","fillWithHtml","updateSelected","initialize","filterOptions","updateValue","setInputWidth","dropdownPosition","offsetWidth","offsetHeight","showDropdown","isOpen","scrollToHighlighted","resetInput","highlight","filteredOptions","decrementHighlighted","incrementHighlighted","unset","keydown","inOptions","measureWidth","shadow","$pristine","$touched","indexes","isDirty","isInvalid","dropdownItemTemplate","viewItemTemplate","tooltipster_default","tooltipsterOptions","tooltipsterMenu","closeTooltip","getMatchValue","matchGetter","caselessGetter","matchCaseless","noMatchGetter","notMatch","matchIgnoreEmptyGetter","matchIgnoreEmpty","$$parseAndValidate","modelValue","viewValue","default_options","lineColor","displayValue","JsBarcode","isOwn","equalObj","diffValue","equal","isValidAttr","valueDiff","removed","added","typeA","typeB","getPatchChanges","init_obj","mod_obj","_mod_obj","_diff","op","SerImagePowered","$urlRouterProvider","$resourceProvider","$httpProvider","paramSerialize","GUID_REGEXP","backHistory","back","bodyHeight","trustAsHtml"],"mappings":"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","file":"ser-ui.min.js","sourcesContent":["angular.module('SER.utils', []);\n\n// Key codes\nvar KEYS = { up: 38, down: 40, left: 37, right: 39, escape: 27, enter: 13, backspace: 8, delete: 46, shift: 16, leftCmd: 91, rightCmd: 93, ctrl: 17, alt: 18, tab: 9 };\n\nfunction getStyles(element) {\n    return !(element instanceof HTMLElement) ? {} :\n        element.ownerDocument && element.ownerDocument.defaultView.opener\n            ? element.ownerDocument.defaultView.getComputedStyle(element)\n            : window.getComputedStyle(element);\n}\n\nfunction arrayGroupBy(array, field) {\n\n    var array_group_by = {};\n\n    for (var index = 0; index < array.length; ++index) {\n\n        if (array_group_by[array[index][field]] === undefined)\n            array_group_by[array[index][field]] = [];\n\n        array_group_by[array[index][field]].push(array[index]);\n    }\n\n    return array_group_by;\n}\n\nfunction hasValue(value) {\n    if (angular.isArray(value)) {\n        return 0 < value.length;\n    } else if (angular.isDate(value)) {\n        return true;\n    } else if (angular.isObject(value)) {\n        return !angular.element.isEmptyObject(value);\n    } else {\n        return ['', null, undefined, NaN].indexOf(value) === -1;\n    }\n}\n\nfunction notValue(value) {\n    if (angular.isArray(value)) {\n        return 0 === value.length;\n    } else if (angular.isDate(value)) {\n        return false;\n    } else if (angular.isObject(value)) {\n        return angular.element.isEmptyObject(value);\n    } else {\n        return ['', null, undefined, NaN].indexOf(value) > -1;\n    }\n}\n\nfunction hasProperty(obj, key) {\n    if (obj){\n        return obj.hasOwnProperty(key);\n    } else {\n        return false;\n    }\n}\n\nfunction inArray(value, array) {\n    return array ? array.indexOf(value) !== -1 : false;\n}\n\nfunction notInArray(value, array) {\n    return array ? array.indexOf(value) === -1 : false;\n}\n\nfunction getObjectByValue(array, attr, value) {\n\n    for (var i = 0; i < array.length; i++) {\n\n        if (array[i].hasOwnProperty(attr)) {\n\n            if (array[i][attr] === value) {\n\n                return array[i];\n\n            } else {\n\n                for (var prop in array[i][attr]) {\n\n                    if (array[i][attr][prop] === value) {\n\n                        return array[i];\n\n                    }\n\n                }\n\n            }\n\n        }\n\n    }\n}\n\nfunction browserWidth() {\n    return 0 < window.innerWidth ? window.innerWidth : screen.width;\n}\n\nfunction hasPdfViewer() {\n    for (var index = 0; index < window.navigator.plugins.length; index++) {\n        if (window.navigator.plugins[index].name.toLowerCase().indexOf(\"pdf\") > -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nwindow.onbeforeprint = function () {\n    console.log('Functionality to run before printing: ', window.location.href);\n};\nwindow.onafterprint = function () {\n    console.log('Functionality to run after printing: ', window.location.href);\n};\n\nif (window.matchMedia) {\n    var mediaQueryList = window.matchMedia('print');\n    mediaQueryList.addListener(function (mql) {\n        if (mql.matches) {\n            window.onbeforeprint();\n        } else {\n            window.onafterprint();\n        }\n    });\n}","/*!\n * JavaScript Cookie v2.1.4\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","/**\r\n * tooltipster http://iamceege.github.io/tooltipster/\r\n * A rockin' custom tooltip jQuery plugin\r\n * Developed by Caleb Jacob and Louis Ameline\r\n * MIT license\r\n */\r\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([\"jquery\"], function (a0) {\n      return (factory(a0));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"));\n  } else {\n    factory(jQuery);\n  }\n}(this, function ($) {\n\n// This file will be UMDified by a build task.\n\nvar defaults = {\n\t\tanimation: 'fade',\n\t\tanimationDuration: 350,\n\t\tcontent: null,\n\t\tcontentAsHTML: false,\n\t\tcontentCloning: false,\n\t\tdebug: true,\n\t\tdelay: 300,\n\t\tdelayTouch: [300, 500],\n\t\tfunctionInit: null,\n\t\tfunctionBefore: null,\n\t\tfunctionReady: null,\n\t\tfunctionAfter: null,\n\t\tfunctionFormat: null,\n\t\tIEmin: 6,\n\t\tinteractive: false,\n\t\tmultiple: false,\n\t\t// must be 'body' for now, or an element positioned at (0, 0)\n\t\t// in the document, typically like the very top views of an app.\n\t\tparent: 'body',\n\t\tplugins: ['sideTip'],\n\t\trepositionOnScroll: false,\n\t\trestoration: 'none',\n\t\tselfDestruction: true,\n\t\ttheme: [],\n\t\ttimer: 0,\n\t\ttrackerInterval: 500,\n\t\ttrackOrigin: false,\n\t\ttrackTooltip: false,\n\t\ttrigger: 'hover',\n\t\ttriggerClose: {\n\t\t\tclick: false,\n\t\t\tmouseleave: false,\n\t\t\toriginClick: false,\n\t\t\tscroll: false,\n\t\t\ttap: false,\n\t\t\ttouchleave: false\n\t\t},\n\t\ttriggerOpen: {\n\t\t\tclick: false,\n\t\t\tmouseenter: false,\n\t\t\ttap: false,\n\t\t\ttouchstart: false\n\t\t},\n\t\tupdateAnimation: 'rotate',\n\t\tzIndex: 9999999\n\t},\n\t// we'll avoid using the 'window' global as a good practice but npm's\n\t// jquery@<2.1.0 package actually requires a 'window' global, so not sure\n\t// it's useful at all\n\twin = (typeof window != 'undefined') ? window : null,\n\t// env will be proxied by the core for plugins to have access its properties\n\tenv = {\n\t\t// detect if this device can trigger touch events. Better have a false\n\t\t// positive (unused listeners, that's ok) than a false negative.\n\t\t// https://github.com/Modernizr/Modernizr/blob/master/feature-detects/touchevents.js\n\t\t// http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript\n\t\thasTouchCapability: !!(\n\t\t\twin\n\t\t\t&&\t(\t'ontouchstart' in win\n\t\t\t\t||\t(win.DocumentTouch && win.document instanceof win.DocumentTouch)\n\t\t\t\t||\twin.navigator.maxTouchPoints\n\t\t\t)\n\t\t),\n\t\thasTransitions: transitionSupport(),\n\t\tIE: false,\n\t\t// don't set manually, it will be updated by a build task after the manifest\n\t\tsemVer: '4.1.7',\n\t\twindow: win\n\t},\n\tcore = function() {\n\t\t\n\t\t// core variables\n\t\t\n\t\t// the core emitters\n\t\tthis.__$emitterPrivate = $({});\n\t\tthis.__$emitterPublic = $({});\n\t\tthis.__instancesLatestArr = [];\n\t\t// collects plugin constructors\n\t\tthis.__plugins = {};\n\t\t// proxy env variables for plugins who might use them\n\t\tthis._env = env;\n\t};\n\n// core methods\ncore.prototype = {\n\t\n\t/**\n\t * A function to proxy the public methods of an object onto another\n\t *\n\t * @param {object} constructor The constructor to bridge\n\t * @param {object} obj The object that will get new methods (an instance or the core)\n\t * @param {string} pluginName A plugin name for the console log message\n\t * @return {core}\n\t * @private\n\t */\n\t__bridge: function(constructor, obj, pluginName) {\n\t\t\n\t\t// if it's not already bridged\n\t\tif (!obj[pluginName]) {\n\t\t\t\n\t\t\tvar fn = function() {};\n\t\t\tfn.prototype = constructor;\n\t\t\t\n\t\t\tvar pluginInstance = new fn();\n\t\t\t\n\t\t\t// the _init method has to exist in instance constructors but might be missing\n\t\t\t// in core constructors\n\t\t\tif (pluginInstance.__init) {\n\t\t\t\tpluginInstance.__init(obj);\n\t\t\t}\n\t\t\t\n\t\t\t$.each(constructor, function(methodName, fn) {\n\t\t\t\t\n\t\t\t\t// don't proxy \"private\" methods, only \"protected\" and public ones\n\t\t\t\tif (methodName.indexOf('__') != 0) {\n\t\t\t\t\t\n\t\t\t\t\t// if the method does not exist yet\n\t\t\t\t\tif (!obj[methodName]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tobj[methodName] = function() {\n\t\t\t\t\t\t\treturn pluginInstance[methodName].apply(pluginInstance, Array.prototype.slice.apply(arguments));\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\t// remember to which plugin this method corresponds (several plugins may\n\t\t\t\t\t\t// have methods of the same name, we need to be sure)\n\t\t\t\t\t\tobj[methodName].bridged = pluginInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if (defaults.debug) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log('The '+ methodName +' method of the '+ pluginName\n\t\t\t\t\t\t\t+' plugin conflicts with another plugin or native methods');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tobj[pluginName] = pluginInstance;\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For mockup in Node env if need be, for testing purposes\n\t *\n\t * @return {core}\n\t * @private\n\t */\n\t__setWindow: function(window) {\n\t\tenv.window = window;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Returns a ruler, a tool to help measure the size of a tooltip under\n\t * various settings. Meant for plugins\n\t * \n\t * @see Ruler\n\t * @return {object} A Ruler instance\n\t * @protected\n\t */\n\t_getRuler: function($tooltip) {\n\t\treturn new Ruler($tooltip);\n\t},\n\t\n\t/**\n\t * For internal use by plugins, if needed\n\t *\n\t * @return {core}\n\t * @protected\n\t */\n\t_off: function() {\n\t\tthis.__$emitterPrivate.off.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For internal use by plugins, if needed\n\t *\n\t * @return {core}\n\t * @protected\n\t */\n\t_on: function() {\n\t\tthis.__$emitterPrivate.on.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For internal use by plugins, if needed\n\t *\n\t * @return {core}\n\t * @protected\n\t */\n\t_one: function() {\n\t\tthis.__$emitterPrivate.one.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Returns (getter) or adds (setter) a plugin\n\t *\n\t * @param {string|object} plugin Provide a string (in the full form\n\t * \"namespace.name\") to use as as getter, an object to use as a setter\n\t * @return {object|core}\n\t * @protected\n\t */\n\t_plugin: function(plugin) {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\t// getter\n\t\tif (typeof plugin == 'string') {\n\t\t\t\n\t\t\tvar pluginName = plugin,\n\t\t\t\tp = null;\n\t\t\t\n\t\t\t// if the namespace is provided, it's easy to search\n\t\t\tif (pluginName.indexOf('.') > 0) {\n\t\t\t\tp = self.__plugins[pluginName];\n\t\t\t}\n\t\t\t// otherwise, return the first name that matches\n\t\t\telse {\n\t\t\t\t$.each(self.__plugins, function(i, plugin) {\n\t\t\t\t\t\n\t\t\t\t\tif (plugin.name.substring(plugin.name.length - pluginName.length - 1) == '.'+ pluginName) {\n\t\t\t\t\t\tp = plugin;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\treturn p;\n\t\t}\n\t\t// setter\n\t\telse {\n\t\t\t\n\t\t\t// force namespaces\n\t\t\tif (plugin.name.indexOf('.') < 0) {\n\t\t\t\tthrow new Error('Plugins must be namespaced');\n\t\t\t}\n\t\t\t\n\t\t\tself.__plugins[plugin.name] = plugin;\n\t\t\t\n\t\t\t// if the plugin has core features\n\t\t\tif (plugin.core) {\n\t\t\t\t\n\t\t\t\t// bridge non-private methods onto the core to allow new core methods\n\t\t\t\tself.__bridge(plugin.core, self, plugin.name);\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t}\n\t},\n\t\n\t/**\n\t * Trigger events on the core emitters\n\t * \n\t * @returns {core}\n\t * @protected\n\t */\n\t_trigger: function() {\n\t\t\n\t\tvar args = Array.prototype.slice.apply(arguments);\n\t\t\n\t\tif (typeof args[0] == 'string') {\n\t\t\targs[0] = { type: args[0] };\n\t\t}\n\t\t\n\t\t// note: the order of emitters matters\n\t\tthis.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, args);\n\t\tthis.__$emitterPublic.trigger.apply(this.__$emitterPublic, args);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Returns instances of all tooltips in the page or an a given element\n\t *\n\t * @param {string|HTML object collection} selector optional Use this\n\t * parameter to restrict the set of objects that will be inspected\n\t * for the retrieval of instances. By default, all instances in the\n\t * page are returned.\n\t * @return {array} An array of instance objects\n\t * @public\n\t */\n\tinstances: function(selector) {\n\t\t\n\t\tvar instances = [],\n\t\t\tsel = selector || '.tooltipstered';\n\t\t\n\t\t$(sel).each(function() {\n\t\t\t\n\t\t\tvar $this = $(this),\n\t\t\t\tns = $this.data('tooltipster-ns');\n\t\t\t\n\t\t\tif (ns) {\n\t\t\t\t\n\t\t\t\t$.each(ns, function(i, namespace) {\n\t\t\t\t\tinstances.push($this.data(namespace));\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn instances;\n\t},\n\t\n\t/**\n\t * Returns the Tooltipster objects generated by the last initializing call\n\t *\n\t * @return {array} An array of instance objects\n\t * @public\n\t */\n\tinstancesLatest: function() {\n\t\treturn this.__instancesLatestArr;\n\t},\n\t\n\t/**\n\t * For public use only, not to be used by plugins (use ::_off() instead)\n\t *\n\t * @return {core}\n\t * @public\n\t */\n\toff: function() {\n\t\tthis.__$emitterPublic.off.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For public use only, not to be used by plugins (use ::_on() instead)\n\t *\n\t * @return {core}\n\t * @public\n\t */\n\ton: function() {\n\t\tthis.__$emitterPublic.on.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For public use only, not to be used by plugins (use ::_one() instead)\n\t * \n\t * @return {core}\n\t * @public\n\t */\n\tone: function() {\n\t\tthis.__$emitterPublic.one.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Returns all HTML elements which have one or more tooltips\n\t *\n\t * @param {string} selector optional Use this to restrict the results\n\t * to the descendants of an element\n\t * @return {array} An array of HTML elements\n\t * @public\n\t */\n\torigins: function(selector) {\n\t\t\n\t\tvar sel = selector ?\n\t\t\tselector +' ' :\n\t\t\t'';\n\t\t\n\t\treturn $(sel +'.tooltipstered').toArray();\n\t},\n\t\n\t/**\n\t * Change default options for all future instances\n\t *\n\t * @param {object} d The options that should be made defaults\n\t * @return {core}\n\t * @public\n\t */\n\tsetDefaults: function(d) {\n\t\t$.extend(defaults, d);\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For users to trigger their handlers on the public emitter\n\t * \n\t * @returns {core}\n\t * @public\n\t */\n\ttriggerHandler: function() {\n\t\tthis.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t}\n};\n\n// $.tooltipster will be used to call core methods\n$.tooltipster = new core();\n\n// the Tooltipster instance class (mind the capital T)\n$.Tooltipster = function(element, options) {\n\t\n\t// list of instance variables\n\t\n\t// stack of custom callbacks provided as parameters to API methods\n\tthis.__callbacks = {\n\t\tclose: [],\n\t\topen: []\n\t};\n\t// the schedule time of DOM removal\n\tthis.__closingTime;\n\t// this will be the user content shown in the tooltip. A capital \"C\" is used\n\t// because there is also a method called content()\n\tthis.__Content;\n\t// for the size tracker\n\tthis.__contentBcr;\n\t// to disable the tooltip once the destruction has begun\n\tthis.__destroyed = false;\n\tthis.__destroying = false;\n\t// we can't emit directly on the instance because if a method with the same\n\t// name as the event exists, it will be called by jQuery. Se we use a plain\n\t// object as emitter. This emitter is for internal use by plugins,\n\t// if needed.\n\tthis.__$emitterPrivate = $({});\n\t// this emitter is for the user to listen to events without risking to mess\n\t// with our internal listeners\n\tthis.__$emitterPublic = $({});\n\tthis.__enabled = true;\n\t// the reference to the gc interval\n\tthis.__garbageCollector;\n\t// various position and size data recomputed before each repositioning\n\tthis.__Geometry;\n\t// the tooltip position, saved after each repositioning by a plugin\n\tthis.__lastPosition;\n\t// a unique namespace per instance\n\tthis.__namespace = 'tooltipster-'+ Math.round(Math.random()*1000000);\n\tthis.__options;\n\t// will be used to support origins in scrollable areas\n\tthis.__$originParents;\n\tthis.__pointerIsOverOrigin = false;\n\t// to remove themes if needed\n\tthis.__previousThemes = [];\n\t// the state can be either: appearing, stable, disappearing, closed\n\tthis.__state = 'closed';\n\t// timeout references\n\tthis.__timeouts = {\n\t\tclose: [],\n\t\topen: null\n\t};\n\t// store touch events to be able to detect emulated mouse events\n\tthis.__touchEvents = [];\n\t// the reference to the tracker interval\n\tthis.__tracker = null;\n\t// the element to which this tooltip is associated\n\tthis._$origin;\n\t// this will be the tooltip element (jQuery wrapped HTML element).\n\t// It's the job of a plugin to create it and append it to the DOM\n\tthis._$tooltip;\n\t\n\t// launch\n\tthis.__init(element, options);\n};\n\n$.Tooltipster.prototype = {\n\t\n\t/**\n\t * @param origin\n\t * @param options\n\t * @private\n\t */\n\t__init: function(origin, options) {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\tself._$origin = $(origin);\n\t\tself.__options = $.extend(true, {}, defaults, options);\n\t\t\n\t\t// some options may need to be reformatted\n\t\tself.__optionsFormat();\n\t\t\n\t\t// don't run on old IE if asked no to\n\t\tif (\t!env.IE\n\t\t\t||\tenv.IE >= self.__options.IEmin\n\t\t) {\n\t\t\t\n\t\t\t// note: the content is null (empty) by default and can stay that\n\t\t\t// way if the plugin remains initialized but not fed any content. The\n\t\t\t// tooltip will just not appear.\n\t\t\t\n\t\t\t// let's save the initial value of the title attribute for later\n\t\t\t// restoration if need be.\n\t\t\tvar initialTitle = null;\n\t\t\t\n\t\t\t// it will already have been saved in case of multiple tooltips\n\t\t\tif (self._$origin.data('tooltipster-initialTitle') === undefined) {\n\t\t\t\t\n\t\t\t\tinitialTitle = self._$origin.attr('title');\n\t\t\t\t\n\t\t\t\t// we do not want initialTitle to be \"undefined\" because\n\t\t\t\t// of how jQuery's .data() method works\n\t\t\t\tif (initialTitle === undefined) initialTitle = null;\n\t\t\t\t\n\t\t\t\tself._$origin.data('tooltipster-initialTitle', initialTitle);\n\t\t\t}\n\t\t\t\n\t\t\t// If content is provided in the options, it has precedence over the\n\t\t\t// title attribute.\n\t\t\t// Note: an empty string is considered content, only 'null' represents\n\t\t\t// the absence of content.\n\t\t\t// Also, an existing title=\"\" attribute will result in an empty string\n\t\t\t// content\n\t\t\tif (self.__options.content !== null) {\n\t\t\t\tself.__contentSet(self.__options.content);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\n\t\t\t\tvar selector = self._$origin.attr('data-tooltip-content'),\n\t\t\t\t\t$el;\n\t\t\t\t\n\t\t\t\tif (selector){\n\t\t\t\t\t$el = $(selector);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ($el && $el[0]) {\n\t\t\t\t\tself.__contentSet($el.first());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tself.__contentSet(initialTitle);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tself._$origin\n\t\t\t\t// strip the title off of the element to prevent the default tooltips\n\t\t\t\t// from popping up\n\t\t\t\t.removeAttr('title')\n\t\t\t\t// to be able to find all instances on the page later (upon window\n\t\t\t\t// events in particular)\n\t\t\t\t.addClass('tooltipstered');\n\t\t\t\n\t\t\t// set listeners on the origin\n\t\t\tself.__prepareOrigin();\n\t\t\t\n\t\t\t// set the garbage collector\n\t\t\tself.__prepareGC();\n\t\t\t\n\t\t\t// init plugins\n\t\t\t$.each(self.__options.plugins, function(i, pluginName) {\n\t\t\t\tself._plug(pluginName);\n\t\t\t});\n\t\t\t\n\t\t\t// to detect swiping\n\t\t\tif (env.hasTouchCapability) {\n\t\t\t\t$('body').on('touchmove.'+ self.__namespace +'-triggerOpen', function(event) {\n\t\t\t\t\tself._touchRecordEvent(event);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tself\n\t\t\t\t// prepare the tooltip when it gets created. This event must\n\t\t\t\t// be fired by a plugin\n\t\t\t\t._on('created', function() {\n\t\t\t\t\tself.__prepareTooltip();\n\t\t\t\t})\n\t\t\t\t// save position information when it's sent by a plugin\n\t\t\t\t._on('repositioned', function(e) {\n\t\t\t\t\tself.__lastPosition = e.position;\n\t\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tself.__options.disabled = true;\n\t\t}\n\t},\n\t\n\t/**\n\t * Insert the content into the appropriate HTML element of the tooltip\n\t * \n\t * @returns {self}\n\t * @private\n\t */\n\t__contentInsert: function() {\n\t\t\n\t\tvar self = this,\n\t\t\t$el = self._$tooltip.find('.tooltipster-content'),\n\t\t\tformattedContent = self.__Content,\n\t\t\tformat = function(content) {\n\t\t\t\tformattedContent = content;\n\t\t\t};\n\t\t\n\t\tself._trigger({\n\t\t\ttype: 'format',\n\t\t\tcontent: self.__Content,\n\t\t\tformat: format\n\t\t});\n\t\t\n\t\tif (self.__options.functionFormat) {\n\t\t\t\n\t\t\tformattedContent = self.__options.functionFormat.call(\n\t\t\t\tself,\n\t\t\t\tself,\n\t\t\t\t{ origin: self._$origin[0] },\n\t\t\t\tself.__Content\n\t\t\t);\n\t\t}\n\t\t\n\t\tif (typeof formattedContent === 'string' && !self.__options.contentAsHTML) {\n\t\t\t$el.text(formattedContent);\n\t\t}\n\t\telse {\n\t\t\t$el\n\t\t\t\t.empty()\n\t\t\t\t.append(formattedContent);\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Save the content, cloning it beforehand if need be\n\t * \n\t * @param content\n\t * @returns {self}\n\t * @private\n\t */\n\t__contentSet: function(content) {\n\t\t\n\t\t// clone if asked. Cloning the object makes sure that each instance has its\n\t\t// own version of the content (in case a same object were provided for several\n\t\t// instances)\n\t\t// reminder: typeof null === object\n\t\tif (content instanceof $ && this.__options.contentCloning) {\n\t\t\tcontent = content.clone(true);\n\t\t}\n\t\t\n\t\tthis.__Content = content;\n\t\t\n\t\tthis._trigger({\n\t\t\ttype: 'updated',\n\t\t\tcontent: content\n\t\t});\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Error message about a method call made after destruction\n\t * \n\t * @private\n\t */\n\t__destroyError: function() {\n\t\tthrow new Error('This tooltip has been destroyed and cannot execute your method call.');\n\t},\n\t\n\t/**\n\t * Gather all information about dimensions and available space,\n\t * called before every repositioning\n\t * \n\t * @private\n\t * @returns {object}\n\t */\n\t__geometry: function() {\n\t\t\n\t\tvar\tself = this,\n\t\t\t$target = self._$origin,\n\t\t\toriginIsArea = self._$origin.is('area');\n\t\t\n\t\t// if this._$origin is a map area, the target we'll need\n\t\t// the dimensions of is actually the image using the map,\n\t\t// not the area itself\n\t\tif (originIsArea) {\n\t\t\t\n\t\t\tvar mapName = self._$origin.parent().attr('name');\n\t\t\t\n\t\t\t$target = $('img[usemap=\"#'+ mapName +'\"]');\n\t\t}\n\t\t\n\t\tvar bcr = $target[0].getBoundingClientRect(),\n\t\t\t$document = $(env.window.document),\n\t\t\t$window = $(env.window),\n\t\t\t$parent = $target,\n\t\t\t// some useful properties of important elements\n\t\t\tgeo = {\n\t\t\t\t// available space for the tooltip, see down below\n\t\t\t\tavailable: {\n\t\t\t\t\tdocument: null,\n\t\t\t\t\twindow: null\n\t\t\t\t},\n\t\t\t\tdocument: {\n\t\t\t\t\tsize: {\n\t\t\t\t\t\theight: $document.height(),\n\t\t\t\t\t\twidth: $document.width()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\twindow: {\n\t\t\t\t\tscroll: {\n\t\t\t\t\t\t// the second ones are for IE compatibility\n\t\t\t\t\t\tleft: env.window.scrollX || env.window.document.documentElement.scrollLeft,\n\t\t\t\t\t\ttop: env.window.scrollY || env.window.document.documentElement.scrollTop\n\t\t\t\t\t},\n\t\t\t\t\tsize: {\n\t\t\t\t\t\theight: $window.height(),\n\t\t\t\t\t\twidth: $window.width()\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\torigin: {\n\t\t\t\t\t// the origin has a fixed lineage if itself or one of its\n\t\t\t\t\t// ancestors has a fixed position\n\t\t\t\t\tfixedLineage: false,\n\t\t\t\t\t// relative to the document\n\t\t\t\t\toffset: {},\n\t\t\t\t\tsize: {\n\t\t\t\t\t\theight: bcr.bottom - bcr.top,\n\t\t\t\t\t\twidth: bcr.right - bcr.left\n\t\t\t\t\t},\n\t\t\t\t\tusemapImage: originIsArea ? $target[0] : null,\n\t\t\t\t\t// relative to the window\n\t\t\t\t\twindowOffset: {\n\t\t\t\t\t\tbottom: bcr.bottom,\n\t\t\t\t\t\tleft: bcr.left,\n\t\t\t\t\t\tright: bcr.right,\n\t\t\t\t\t\ttop: bcr.top\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tgeoFixed = false;\n\t\t\n\t\t// if the element is a map area, some properties may need\n\t\t// to be recalculated\n\t\tif (originIsArea) {\n\t\t\t\n\t\t\tvar shape = self._$origin.attr('shape'),\n\t\t\t\tcoords = self._$origin.attr('coords');\n\t\t\t\n\t\t\tif (coords) {\n\t\t\t\t\n\t\t\t\tcoords = coords.split(',');\n\t\t\t\t\n\t\t\t\t$.map(coords, function(val, i) {\n\t\t\t\t\tcoords[i] = parseInt(val);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// if the image itself is the area, nothing more to do\n\t\t\tif (shape != 'default') {\n\t\t\t\t\n\t\t\t\tswitch(shape) {\n\t\t\t\t\t\n\t\t\t\t\tcase 'circle':\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar circleCenterLeft = coords[0],\n\t\t\t\t\t\t\tcircleCenterTop = coords[1],\n\t\t\t\t\t\t\tcircleRadius = coords[2],\n\t\t\t\t\t\t\tareaTopOffset = circleCenterTop - circleRadius,\n\t\t\t\t\t\t\tareaLeftOffset = circleCenterLeft - circleRadius;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.origin.size.height = circleRadius * 2;\n\t\t\t\t\t\tgeo.origin.size.width = geo.origin.size.height;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.origin.windowOffset.left += areaLeftOffset;\n\t\t\t\t\t\tgeo.origin.windowOffset.top += areaTopOffset;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tcase 'rect':\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar areaLeft = coords[0],\n\t\t\t\t\t\t\tareaTop = coords[1],\n\t\t\t\t\t\t\tareaRight = coords[2],\n\t\t\t\t\t\t\tareaBottom = coords[3];\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.origin.size.height = areaBottom - areaTop;\n\t\t\t\t\t\tgeo.origin.size.width = areaRight - areaLeft;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.origin.windowOffset.left += areaLeft;\n\t\t\t\t\t\tgeo.origin.windowOffset.top += areaTop;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tcase 'poly':\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar areaSmallestX = 0,\n\t\t\t\t\t\t\tareaSmallestY = 0,\n\t\t\t\t\t\t\tareaGreatestX = 0,\n\t\t\t\t\t\t\tareaGreatestY = 0,\n\t\t\t\t\t\t\tarrayAlternate = 'even';\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar areaNumber = coords[i];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (arrayAlternate == 'even') {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (areaNumber > areaGreatestX) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tareaGreatestX = areaNumber;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\t\t\tareaSmallestX = areaGreatestX;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (areaNumber < areaSmallestX) {\n\t\t\t\t\t\t\t\t\tareaSmallestX = areaNumber;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tarrayAlternate = 'odd';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (areaNumber > areaGreatestY) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tareaGreatestY = areaNumber;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (i == 1) {\n\t\t\t\t\t\t\t\t\t\tareaSmallestY = areaGreatestY;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (areaNumber < areaSmallestY) {\n\t\t\t\t\t\t\t\t\tareaSmallestY = areaNumber;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tarrayAlternate = 'even';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.origin.size.height = areaGreatestY - areaSmallestY;\n\t\t\t\t\t\tgeo.origin.size.width = areaGreatestX - areaSmallestX;\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.origin.windowOffset.left += areaSmallestX;\n\t\t\t\t\t\tgeo.origin.windowOffset.top += areaSmallestY;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// user callback through an event\n\t\tvar edit = function(r) {\n\t\t\tgeo.origin.size.height = r.height,\n\t\t\t\tgeo.origin.windowOffset.left = r.left,\n\t\t\t\tgeo.origin.windowOffset.top = r.top,\n\t\t\t\tgeo.origin.size.width = r.width\n\t\t};\n\t\t\n\t\tself._trigger({\n\t\t\ttype: 'geometry',\n\t\t\tedit: edit,\n\t\t\tgeometry: {\n\t\t\t\theight: geo.origin.size.height,\n\t\t\t\tleft: geo.origin.windowOffset.left,\n\t\t\t\ttop: geo.origin.windowOffset.top,\n\t\t\t\twidth: geo.origin.size.width\n\t\t\t}\n\t\t});\n\t\t\n\t\t// calculate the remaining properties with what we got\n\t\t\n\t\tgeo.origin.windowOffset.right = geo.origin.windowOffset.left + geo.origin.size.width;\n\t\tgeo.origin.windowOffset.bottom = geo.origin.windowOffset.top + geo.origin.size.height;\n\t\t\n\t\tgeo.origin.offset.left = geo.origin.windowOffset.left + geo.window.scroll.left;\n\t\tgeo.origin.offset.top = geo.origin.windowOffset.top + geo.window.scroll.top;\n\t\tgeo.origin.offset.bottom = geo.origin.offset.top + geo.origin.size.height;\n\t\tgeo.origin.offset.right = geo.origin.offset.left + geo.origin.size.width;\n\t\t\n\t\t// the space that is available to display the tooltip relatively to the document\n\t\tgeo.available.document = {\n\t\t\tbottom: {\n\t\t\t\theight: geo.document.size.height - geo.origin.offset.bottom,\n\t\t\t\twidth: geo.document.size.width\n\t\t\t},\n\t\t\tleft: {\n\t\t\t\theight: geo.document.size.height,\n\t\t\t\twidth: geo.origin.offset.left\n\t\t\t},\n\t\t\tright: {\n\t\t\t\theight: geo.document.size.height,\n\t\t\t\twidth: geo.document.size.width - geo.origin.offset.right\n\t\t\t},\n\t\t\ttop: {\n\t\t\t\theight: geo.origin.offset.top,\n\t\t\t\twidth: geo.document.size.width\n\t\t\t}\n\t\t};\n\t\t\n\t\t// the space that is available to display the tooltip relatively to the viewport\n\t\t// (the resulting values may be negative if the origin overflows the viewport)\n\t\tgeo.available.window = {\n\t\t\tbottom: {\n\t\t\t\t// the inner max is here to make sure the available height is no bigger\n\t\t\t\t// than the viewport height (when the origin is off screen at the top).\n\t\t\t\t// The outer max just makes sure that the height is not negative (when\n\t\t\t\t// the origin overflows at the bottom).\n\t\t\t\theight: Math.max(geo.window.size.height - Math.max(geo.origin.windowOffset.bottom, 0), 0),\n\t\t\t\twidth: geo.window.size.width\n\t\t\t},\n\t\t\tleft: {\n\t\t\t\theight: geo.window.size.height,\n\t\t\t\twidth: Math.max(geo.origin.windowOffset.left, 0)\n\t\t\t},\n\t\t\tright: {\n\t\t\t\theight: geo.window.size.height,\n\t\t\t\twidth: Math.max(geo.window.size.width - Math.max(geo.origin.windowOffset.right, 0), 0)\n\t\t\t},\n\t\t\ttop: {\n\t\t\t\theight: Math.max(geo.origin.windowOffset.top, 0),\n\t\t\t\twidth: geo.window.size.width\n\t\t\t}\n\t\t};\n\t\t\n\t\twhile ($parent[0].tagName.toLowerCase() != 'html') {\n\t\t\t\n\t\t\tif ($parent.css('position') == 'fixed') {\n\t\t\t\tgeo.origin.fixedLineage = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t$parent = $parent.parent();\n\t\t}\n\t\t\n\t\treturn geo;\n\t},\n\t\n\t/**\n\t * Some options may need to be formated before being used\n\t * \n\t * @returns {self}\n\t * @private\n\t */\n\t__optionsFormat: function() {\n\t\t\n\t\tif (typeof this.__options.animationDuration == 'number') {\n\t\t\tthis.__options.animationDuration = [this.__options.animationDuration, this.__options.animationDuration];\n\t\t}\n\t\t\n\t\tif (typeof this.__options.delay == 'number') {\n\t\t\tthis.__options.delay = [this.__options.delay, this.__options.delay];\n\t\t}\n\t\t\n\t\tif (typeof this.__options.delayTouch == 'number') {\n\t\t\tthis.__options.delayTouch = [this.__options.delayTouch, this.__options.delayTouch];\n\t\t}\n\t\t\n\t\tif (typeof this.__options.theme == 'string') {\n\t\t\tthis.__options.theme = [this.__options.theme];\n\t\t}\n\t\t\n\t\t// determine the future parent\n\t\tif (typeof this.__options.parent == 'string') {\n\t\t\tthis.__options.parent = $(this.__options.parent);\n\t\t}\n\t\t\n\t\tif (this.__options.trigger == 'hover') {\n\t\t\t\n\t\t\tthis.__options.triggerOpen = {\n\t\t\t\tmouseenter: true,\n\t\t\t\ttouchstart: true\n\t\t\t};\n\t\t\t\n\t\t\tthis.__options.triggerClose = {\n\t\t\t\tmouseleave: true,\n\t\t\t\toriginClick: true,\n\t\t\t\ttouchleave: true\n\t\t\t};\n\t\t}\n\t\telse if (this.__options.trigger == 'click') {\n\t\t\t\n\t\t\tthis.__options.triggerOpen = {\n\t\t\t\tclick: true,\n\t\t\t\ttap: true\n\t\t\t};\n\t\t\t\n\t\t\tthis.__options.triggerClose = {\n\t\t\t\tclick: true,\n\t\t\t\ttap: true\n\t\t\t};\n\t\t}\n\t\t\n\t\t// for the plugins\n\t\tthis._trigger('options');\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Schedules or cancels the garbage collector task\n\t *\n\t * @returns {self}\n\t * @private\n\t */\n\t__prepareGC: function() {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\t// in case the selfDestruction option has been changed by a method call\n\t\tif (self.__options.selfDestruction) {\n\t\t\t\n\t\t\t// the GC task\n\t\t\tself.__garbageCollector = setInterval(function() {\n\t\t\t\t\n\t\t\t\tvar now = new Date().getTime();\n\t\t\t\t\n\t\t\t\t// forget the old events\n\t\t\t\tself.__touchEvents = $.grep(self.__touchEvents, function(event, i) {\n\t\t\t\t\t// 1 minute\n\t\t\t\t\treturn now - event.time > 60000;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// auto-destruct if the origin is gone\n\t\t\t\tif (!bodyContains(self._$origin)) {\n\t\t\t\t\tself.destroy();\n\t\t\t\t}\n\t\t\t}, 20000);\n\t\t}\n\t\telse {\n\t\t\tclearInterval(self.__garbageCollector);\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Sets listeners on the origin if the open triggers require them.\n\t * Unlike the listeners set at opening time, these ones\n\t * remain even when the tooltip is closed. It has been made a\n\t * separate method so it can be called when the triggers are\n\t * changed in the options. Closing is handled in _open()\n\t * because of the bindings that may be needed on the tooltip\n\t * itself\n\t *\n\t * @returns {self}\n\t * @private\n\t */\n\t__prepareOrigin: function() {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\t// in case we're resetting the triggers\n\t\tself._$origin.off('.'+ self.__namespace +'-triggerOpen');\n\t\t\n\t\t// if the device is touch capable, even if only mouse triggers\n\t\t// are asked, we need to listen to touch events to know if the mouse\n\t\t// events are actually emulated (so we can ignore them)\n\t\tif (env.hasTouchCapability) {\n\t\t\t\n\t\t\tself._$origin.on(\n\t\t\t\t'touchstart.'+ self.__namespace +'-triggerOpen ' +\n\t\t\t\t'touchend.'+ self.__namespace +'-triggerOpen ' +\n\t\t\t\t'touchcancel.'+ self.__namespace +'-triggerOpen',\n\t\t\t\tfunction(event){\n\t\t\t\t\tself._touchRecordEvent(event);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t\t\n\t\t// mouse click and touch tap work the same way\n\t\tif (\tself.__options.triggerOpen.click\n\t\t\t||\t(self.__options.triggerOpen.tap && env.hasTouchCapability)\n\t\t) {\n\t\t\t\n\t\t\tvar eventNames = '';\n\t\t\tif (self.__options.triggerOpen.click) {\n\t\t\t\teventNames += 'click.'+ self.__namespace +'-triggerOpen ';\n\t\t\t}\n\t\t\tif (self.__options.triggerOpen.tap && env.hasTouchCapability) {\n\t\t\t\teventNames += 'touchend.'+ self.__namespace +'-triggerOpen';\n\t\t\t}\n\t\t\t\n\t\t\tself._$origin.on(eventNames, function(event) {\n\t\t\t\tif (self._touchIsMeaningfulEvent(event)) {\n\t\t\t\t\tself._open(event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t// mouseenter and touch start work the same way\n\t\tif (\tself.__options.triggerOpen.mouseenter\n\t\t\t||\t(self.__options.triggerOpen.touchstart && env.hasTouchCapability)\n\t\t) {\n\t\t\t\n\t\t\tvar eventNames = '';\n\t\t\tif (self.__options.triggerOpen.mouseenter) {\n\t\t\t\teventNames += 'mouseenter.'+ self.__namespace +'-triggerOpen ';\n\t\t\t}\n\t\t\tif (self.__options.triggerOpen.touchstart && env.hasTouchCapability) {\n\t\t\t\teventNames += 'touchstart.'+ self.__namespace +'-triggerOpen';\n\t\t\t}\n\t\t\t\n\t\t\tself._$origin.on(eventNames, function(event) {\n\t\t\t\tif (\tself._touchIsTouchEvent(event)\n\t\t\t\t\t||\t!self._touchIsEmulatedEvent(event)\n\t\t\t\t) {\n\t\t\t\t\tself.__pointerIsOverOrigin = true;\n\t\t\t\t\tself._openShortly(event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t// info for the mouseleave/touchleave close triggers when they use a delay\n\t\tif (\tself.__options.triggerClose.mouseleave\n\t\t\t||\t(self.__options.triggerClose.touchleave && env.hasTouchCapability)\n\t\t) {\n\t\t\t\n\t\t\tvar eventNames = '';\n\t\t\tif (self.__options.triggerClose.mouseleave) {\n\t\t\t\teventNames += 'mouseleave.'+ self.__namespace +'-triggerOpen ';\n\t\t\t}\n\t\t\tif (self.__options.triggerClose.touchleave && env.hasTouchCapability) {\n\t\t\t\teventNames += 'touchend.'+ self.__namespace +'-triggerOpen touchcancel.'+ self.__namespace +'-triggerOpen';\n\t\t\t}\n\t\t\t\n\t\t\tself._$origin.on(eventNames, function(event) {\n\t\t\t\t\n\t\t\t\tif (self._touchIsMeaningfulEvent(event)) {\n\t\t\t\t\tself.__pointerIsOverOrigin = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Do the things that need to be done only once after the tooltip\n\t * HTML element it has been created. It has been made a separate\n\t * method so it can be called when options are changed. Remember\n\t * that the tooltip may actually exist in the DOM before it is\n\t * opened, and present after it has been closed: it's the display\n\t * plugin that takes care of handling it.\n\t * \n\t * @returns {self}\n\t * @private\n\t */\n\t__prepareTooltip: function() {\n\t\t\n\t\tvar self = this,\n\t\t\tp = self.__options.interactive ? 'auto' : '';\n\t\t\n\t\t// this will be useful to know quickly if the tooltip is in\n\t\t// the DOM or not \n\t\tself._$tooltip\n\t\t\t.attr('id', self.__namespace)\n\t\t\t.css({\n\t\t\t\t// pointer events\n\t\t\t\t'pointer-events': p,\n\t\t\t\tzIndex: self.__options.zIndex\n\t\t\t});\n\t\t\n\t\t// themes\n\t\t// remove the old ones and add the new ones\n\t\t$.each(self.__previousThemes, function(i, theme) {\n\t\t\tself._$tooltip.removeClass(theme);\n\t\t});\n\t\t$.each(self.__options.theme, function(i, theme) {\n\t\t\tself._$tooltip.addClass(theme);\n\t\t});\n\t\t\n\t\tself.__previousThemes = $.merge([], self.__options.theme);\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Handles the scroll on any of the parents of the origin (when the\n\t * tooltip is open)\n\t *\n\t * @param {object} event\n\t * @returns {self}\n\t * @private\n\t */\n\t__scrollHandler: function(event) {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\tif (self.__options.triggerClose.scroll) {\n\t\t\tself._close(event);\n\t\t}\n\t\telse {\n\t\t\t\n\t\t\t// if the origin or tooltip have been removed: do nothing, the tracker will\n\t\t\t// take care of it later\n\t\t\tif (bodyContains(self._$origin) && bodyContains(self._$tooltip)) {\n\t\t\t\t\n\t\t\t\t// if the scroll happened on the window\n\t\t\t\tif (event.target === env.window.document) {\n\t\t\t\t\t\n\t\t\t\t\t// if the origin has a fixed lineage, window scroll will have no\n\t\t\t\t\t// effect on its position nor on the position of the tooltip\n\t\t\t\t\tif (!self.__Geometry.origin.fixedLineage) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// we don't need to do anything unless repositionOnScroll is true\n\t\t\t\t\t\t// because the tooltip will already have moved with the window\n\t\t\t\t\t\t// (and of course with the origin)\n\t\t\t\t\t\tif (self.__options.repositionOnScroll) {\n\t\t\t\t\t\t\tself.reposition(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// if the scroll happened on another parent of the tooltip, it means\n\t\t\t\t// that it's in a scrollable area and now needs to have its position\n\t\t\t\t// adjusted or recomputed, depending ont the repositionOnScroll\n\t\t\t\t// option. Also, if the origin is partly hidden due to a parent that\n\t\t\t\t// hides its overflow, we'll just hide (not close) the tooltip.\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\tvar g = self.__geometry(),\n\t\t\t\t\t\toverflows = false;\n\t\t\t\t\t\n\t\t\t\t\t// a fixed position origin is not affected by the overflow hiding\n\t\t\t\t\t// of a parent\n\t\t\t\t\tif (self._$origin.css('position') != 'fixed') {\n\t\t\t\t\t\t\n\t\t\t\t\t\tself.__$originParents.each(function(i, el) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar $el = $(el),\n\t\t\t\t\t\t\t\toverflowX = $el.css('overflow-x'),\n\t\t\t\t\t\t\t\toverflowY = $el.css('overflow-y');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (overflowX != 'visible' || overflowY != 'visible') {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar bcr = el.getBoundingClientRect();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (overflowX != 'visible') {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (\tg.origin.windowOffset.left < bcr.left\n\t\t\t\t\t\t\t\t\t\t||\tg.origin.windowOffset.right > bcr.right\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\toverflows = true;\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (overflowY != 'visible') {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (\tg.origin.windowOffset.top < bcr.top\n\t\t\t\t\t\t\t\t\t\t||\tg.origin.windowOffset.bottom > bcr.bottom\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\toverflows = true;\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// no need to go further if fixed, for the same reason as above\n\t\t\t\t\t\t\tif ($el.css('position') == 'fixed') {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (overflows) {\n\t\t\t\t\t\tself._$tooltip.css('visibility', 'hidden');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tself._$tooltip.css('visibility', 'visible');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// reposition\n\t\t\t\t\t\tif (self.__options.repositionOnScroll) {\n\t\t\t\t\t\t\tself.reposition(event);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// or just adjust offset\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// we have to use offset and not windowOffset because this way,\n\t\t\t\t\t\t\t// only the scroll distance of the scrollable areas are taken into\n\t\t\t\t\t\t\t// account (the scrolltop value of the main window must be\n\t\t\t\t\t\t\t// ignored since the tooltip already moves with it)\n\t\t\t\t\t\t\tvar offsetLeft = g.origin.offset.left - self.__Geometry.origin.offset.left,\n\t\t\t\t\t\t\t\toffsetTop = g.origin.offset.top - self.__Geometry.origin.offset.top;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// add the offset to the position initially computed by the display plugin\n\t\t\t\t\t\t\tself._$tooltip.css({\n\t\t\t\t\t\t\t\tleft: self.__lastPosition.coord.left + offsetLeft,\n\t\t\t\t\t\t\t\ttop: self.__lastPosition.coord.top + offsetTop\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tself._trigger({\n\t\t\t\t\ttype: 'scroll',\n\t\t\t\t\tevent: event\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Changes the state of the tooltip\n\t *\n\t * @param {string} state\n\t * @returns {self}\n\t * @private\n\t */\n\t__stateSet: function(state) {\n\t\t\n\t\tthis.__state = state;\n\t\t\n\t\tthis._trigger({\n\t\t\ttype: 'state',\n\t\t\tstate: state\n\t\t});\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Clear appearance timeouts\n\t *\n\t * @returns {self}\n\t * @private\n\t */\n\t__timeoutsClear: function() {\n\t\t\n\t\t// there is only one possible open timeout: the delayed opening\n\t\t// when the mouseenter/touchstart open triggers are used\n\t\tclearTimeout(this.__timeouts.open);\n\t\tthis.__timeouts.open = null;\n\t\t\n\t\t// ... but several close timeouts: the delayed closing when the\n\t\t// mouseleave close trigger is used and the timer option\n\t\t$.each(this.__timeouts.close, function(i, timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t});\n\t\tthis.__timeouts.close = [];\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Start the tracker that will make checks at regular intervals\n\t * \n\t * @returns {self}\n\t * @private\n\t */\n\t__trackerStart: function() {\n\t\t\n\t\tvar self = this,\n\t\t\t$content = self._$tooltip.find('.tooltipster-content');\n\t\t\n\t\t// get the initial content size\n\t\tif (self.__options.trackTooltip) {\n\t\t\tself.__contentBcr = $content[0].getBoundingClientRect();\n\t\t}\n\t\t\n\t\tself.__tracker = setInterval(function() {\n\t\t\t\n\t\t\t// if the origin or tooltip elements have been removed.\n\t\t\t// Note: we could destroy the instance now if the origin has\n\t\t\t// been removed but we'll leave that task to our garbage collector\n\t\t\tif (!bodyContains(self._$origin) || !bodyContains(self._$tooltip)) {\n\t\t\t\tself._close();\n\t\t\t}\n\t\t\t// if everything is alright\n\t\t\telse {\n\t\t\t\t\n\t\t\t\t// compare the former and current positions of the origin to reposition\n\t\t\t\t// the tooltip if need be\n\t\t\t\tif (self.__options.trackOrigin) {\n\t\t\t\t\t\n\t\t\t\t\tvar g = self.__geometry(),\n\t\t\t\t\t\tidentical = false;\n\t\t\t\t\t\n\t\t\t\t\t// compare size first (a change requires repositioning too)\n\t\t\t\t\tif (areEqual(g.origin.size, self.__Geometry.origin.size)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// for elements that have a fixed lineage (see __geometry()), we track the\n\t\t\t\t\t\t// top and left properties (relative to window)\n\t\t\t\t\t\tif (self.__Geometry.origin.fixedLineage) {\n\t\t\t\t\t\t\tif (areEqual(g.origin.windowOffset, self.__Geometry.origin.windowOffset)) {\n\t\t\t\t\t\t\t\tidentical = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// otherwise, track total offset (relative to document)\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (areEqual(g.origin.offset, self.__Geometry.origin.offset)) {\n\t\t\t\t\t\t\t\tidentical = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!identical) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// close the tooltip when using the mouseleave close trigger\n\t\t\t\t\t\t// (see https://github.com/iamceege/tooltipster/pull/253)\n\t\t\t\t\t\tif (self.__options.triggerClose.mouseleave) {\n\t\t\t\t\t\t\tself._close();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tself.reposition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (self.__options.trackTooltip) {\n\t\t\t\t\t\n\t\t\t\t\tvar currentBcr = $content[0].getBoundingClientRect();\n\t\t\t\t\t\n\t\t\t\t\tif (\tcurrentBcr.height !== self.__contentBcr.height\n\t\t\t\t\t\t||\tcurrentBcr.width !== self.__contentBcr.width\n\t\t\t\t\t) {\n\t\t\t\t\t\tself.reposition();\n\t\t\t\t\t\tself.__contentBcr = currentBcr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}, self.__options.trackerInterval);\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Closes the tooltip (after the closing delay)\n\t * \n\t * @param event\n\t * @param callback\n\t * @returns {self}\n\t * @protected\n\t */\n\t_close: function(event, callback) {\n\t\t\n\t\tvar self = this,\n\t\t\tok = true;\n\t\t\n\t\tself._trigger({\n\t\t\ttype: 'close',\n\t\t\tevent: event,\n\t\t\tstop: function() {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t});\n\t\t\n\t\t// a destroying tooltip may not refuse to close\n\t\tif (ok || self.__destroying) {\n\t\t\t\n\t\t\t// save the method custom callback and cancel any open method custom callbacks\n\t\t\tif (callback) self.__callbacks.close.push(callback);\n\t\t\tself.__callbacks.open = [];\n\t\t\t\n\t\t\t// clear open/close timeouts\n\t\t\tself.__timeoutsClear();\n\t\t\t\n\t\t\tvar finishCallbacks = function() {\n\t\t\t\t\n\t\t\t\t// trigger any close method custom callbacks and reset them\n\t\t\t\t$.each(self.__callbacks.close, function(i,c) {\n\t\t\t\t\tc.call(self, self, {\n\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\torigin: self._$origin[0]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tself.__callbacks.close = [];\n\t\t\t};\n\t\t\t\n\t\t\tif (self.__state != 'closed') {\n\t\t\t\t\n\t\t\t\tvar necessary = true,\n\t\t\t\t\td = new Date(),\n\t\t\t\t\tnow = d.getTime(),\n\t\t\t\t\tnewClosingTime = now + self.__options.animationDuration[1];\n\t\t\t\t\n\t\t\t\t// the tooltip may already already be disappearing, but if a new\n\t\t\t\t// call to close() is made after the animationDuration was changed\n\t\t\t\t// to 0 (for example), we ought to actually close it sooner than\n\t\t\t\t// previously scheduled. In that case it should be noted that the\n\t\t\t\t// browser will not adapt the animation duration to the new\n\t\t\t\t// animationDuration that was set after the start of the closing\n\t\t\t\t// animation.\n\t\t\t\t// Note: the same thing could be considered at opening, but is not\n\t\t\t\t// really useful since the tooltip is actually opened immediately\n\t\t\t\t// upon a call to _open(). Since it would not make the opening\n\t\t\t\t// animation finish sooner, its sole impact would be to trigger the\n\t\t\t\t// state event and the open callbacks sooner than the actual end of\n\t\t\t\t// the opening animation, which is not great.\n\t\t\t\tif (self.__state == 'disappearing') {\n\t\t\t\t\t\n\t\t\t\t\tif (newClosingTime > self.__closingTime) {\n\t\t\t\t\t\tnecessary = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (necessary) {\n\t\t\t\t\t\n\t\t\t\t\tself.__closingTime = newClosingTime;\n\t\t\t\t\t\n\t\t\t\t\tif (self.__state != 'disappearing') {\n\t\t\t\t\t\tself.__stateSet('disappearing');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar finish = function() {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// stop the tracker\n\t\t\t\t\t\tclearInterval(self.__tracker);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// a \"beforeClose\" option has been asked several times but would\n\t\t\t\t\t\t// probably useless since the content element is still accessible\n\t\t\t\t\t\t// via ::content(), and because people can always use listeners\n\t\t\t\t\t\t// inside their content to track what's going on. For the sake of\n\t\t\t\t\t\t// simplicity, this has been denied. Bur for the rare people who\n\t\t\t\t\t\t// really need the option (for old browsers or for the case where\n\t\t\t\t\t\t// detaching the content is actually destructive, for file or\n\t\t\t\t\t\t// password inputs for example), this event will do the work.\n\t\t\t\t\t\tself._trigger({\n\t\t\t\t\t\t\ttype: 'closing',\n\t\t\t\t\t\t\tevent: event\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// unbind listeners which are no longer needed\n\t\t\t\t\t\t\n\t\t\t\t\t\tself._$tooltip\n\t\t\t\t\t\t\t.off('.'+ self.__namespace +'-triggerClose')\n\t\t\t\t\t\t\t.removeClass('tooltipster-dying');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// orientationchange, scroll and resize listeners\n\t\t\t\t\t\t$(env.window).off('.'+ self.__namespace +'-triggerClose');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// scroll listeners\n\t\t\t\t\t\tself.__$originParents.each(function(i, el) {\n\t\t\t\t\t\t\t$(el).off('scroll.'+ self.__namespace +'-triggerClose');\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// clear the array to prevent memory leaks\n\t\t\t\t\t\tself.__$originParents = null;\n\t\t\t\t\t\t\n\t\t\t\t\t\t$('body').off('.'+ self.__namespace +'-triggerClose');\n\t\t\t\t\t\t\n\t\t\t\t\t\tself._$origin.off('.'+ self.__namespace +'-triggerClose');\n\t\t\t\t\t\t\n\t\t\t\t\t\tself._off('dismissable');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// a plugin that would like to remove the tooltip from the\n\t\t\t\t\t\t// DOM when closed should bind on this\n\t\t\t\t\t\tself.__stateSet('closed');\n\t\t\t\t\t\t\n\t\t\t\t\t\t// trigger event\n\t\t\t\t\t\tself._trigger({\n\t\t\t\t\t\t\ttype: 'after',\n\t\t\t\t\t\t\tevent: event\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// call our constructor custom callback function\n\t\t\t\t\t\tif (self.__options.functionAfter) {\n\t\t\t\t\t\t\tself.__options.functionAfter.call(self, self, {\n\t\t\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\t\t\torigin: self._$origin[0]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// call our method custom callbacks functions\n\t\t\t\t\t\tfinishCallbacks();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif (env.hasTransitions) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tself._$tooltip.css({\n\t\t\t\t\t\t\t'-moz-animation-duration': self.__options.animationDuration[1] + 'ms',\n\t\t\t\t\t\t\t'-ms-animation-duration': self.__options.animationDuration[1] + 'ms',\n\t\t\t\t\t\t\t'-o-animation-duration': self.__options.animationDuration[1] + 'ms',\n\t\t\t\t\t\t\t'-webkit-animation-duration': self.__options.animationDuration[1] + 'ms',\n\t\t\t\t\t\t\t'animation-duration': self.__options.animationDuration[1] + 'ms',\n\t\t\t\t\t\t\t'transition-duration': self.__options.animationDuration[1] + 'ms'\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\tself._$tooltip\n\t\t\t\t\t\t\t// clear both potential open and close tasks\n\t\t\t\t\t\t\t.clearQueue()\n\t\t\t\t\t\t\t.removeClass('tooltipster-show')\n\t\t\t\t\t\t\t// for transitions only\n\t\t\t\t\t\t\t.addClass('tooltipster-dying');\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (self.__options.animationDuration[1] > 0) {\n\t\t\t\t\t\t\tself._$tooltip.delay(self.__options.animationDuration[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tself._$tooltip.queue(finish);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t\n\t\t\t\t\t\tself._$tooltip\n\t\t\t\t\t\t\t.stop()\n\t\t\t\t\t\t\t.fadeOut(self.__options.animationDuration[1], finish);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if the tooltip is already closed, we still need to trigger\n\t\t\t// the method custom callbacks\n\t\t\telse {\n\t\t\t\tfinishCallbacks();\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * For internal use by plugins, if needed\n\t * \n\t * @returns {self}\n\t * @protected\n\t */\n\t_off: function() {\n\t\tthis.__$emitterPrivate.off.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For internal use by plugins, if needed\n\t *\n\t * @returns {self}\n\t * @protected\n\t */\n\t_on: function() {\n\t\tthis.__$emitterPrivate.on.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For internal use by plugins, if needed\n\t *\n\t * @returns {self}\n\t * @protected\n\t */\n\t_one: function() {\n\t\tthis.__$emitterPrivate.one.apply(this.__$emitterPrivate, Array.prototype.slice.apply(arguments));\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Opens the tooltip right away\n\t *\n\t * @param event\n\t * @param callback\n\t * @returns {self}\n\t * @protected\n\t */\n\t_open: function(event, callback) {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\t// if the destruction process has not begun and if this was not\n\t\t// triggered by an unwanted emulated click event\n\t\tif (!self.__destroying) {\n\t\t\t\n\t\t\t// check that the origin is still in the DOM\n\t\t\tif (\tbodyContains(self._$origin)\n\t\t\t\t// if the tooltip is enabled\n\t\t\t\t&&\tself.__enabled\n\t\t\t) {\n\t\t\t\t\n\t\t\t\tvar ok = true;\n\t\t\t\t\n\t\t\t\t// if the tooltip is not open yet, we need to call functionBefore.\n\t\t\t\t// otherwise we can jst go on\n\t\t\t\tif (self.__state == 'closed') {\n\t\t\t\t\t\n\t\t\t\t\t// trigger an event. The event.stop function allows the callback\n\t\t\t\t\t// to prevent the opening of the tooltip\n\t\t\t\t\tself._trigger({\n\t\t\t\t\t\ttype: 'before',\n\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\tstop: function() {\n\t\t\t\t\t\t\tok = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (ok && self.__options.functionBefore) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// call our custom function before continuing\n\t\t\t\t\t\tok = self.__options.functionBefore.call(self, self, {\n\t\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\t\torigin: self._$origin[0]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (ok !== false) {\n\t\t\t\t\t\n\t\t\t\t\t// if there is some content\n\t\t\t\t\tif (self.__Content !== null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// save the method callback and cancel close method callbacks\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\tself.__callbacks.open.push(callback);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself.__callbacks.close = [];\n\t\t\t\t\t\t\n\t\t\t\t\t\t// get rid of any appearance timeouts\n\t\t\t\t\t\tself.__timeoutsClear();\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar extraTime,\n\t\t\t\t\t\t\tfinish = function() {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (self.__state != 'stable') {\n\t\t\t\t\t\t\t\t\tself.__stateSet('stable');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// trigger any open method custom callbacks and reset them\n\t\t\t\t\t\t\t\t$.each(self.__callbacks.open, function(i,c) {\n\t\t\t\t\t\t\t\t\tc.call(self, self, {\n\t\t\t\t\t\t\t\t\t\torigin: self._$origin[0],\n\t\t\t\t\t\t\t\t\t\ttooltip: self._$tooltip[0]\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tself.__callbacks.open = [];\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if the tooltip is already open\n\t\t\t\t\t\tif (self.__state !== 'closed') {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// the timer (if any) will start (or restart) right now\n\t\t\t\t\t\t\textraTime = 0;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// if it was disappearing, cancel that\n\t\t\t\t\t\t\tif (self.__state === 'disappearing') {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tself.__stateSet('appearing');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (env.hasTransitions) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tself._$tooltip\n\t\t\t\t\t\t\t\t\t\t.clearQueue()\n\t\t\t\t\t\t\t\t\t\t.removeClass('tooltipster-dying')\n\t\t\t\t\t\t\t\t\t\t.addClass('tooltipster-show');\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (self.__options.animationDuration[0] > 0) {\n\t\t\t\t\t\t\t\t\t\tself._$tooltip.delay(self.__options.animationDuration[0]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tself._$tooltip.queue(finish);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// in case the tooltip was currently fading out, bring it back\n\t\t\t\t\t\t\t\t\t// to life\n\t\t\t\t\t\t\t\t\tself._$tooltip\n\t\t\t\t\t\t\t\t\t\t.stop()\n\t\t\t\t\t\t\t\t\t\t.fadeIn(finish);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if the tooltip is already open, we still need to trigger the method\n\t\t\t\t\t\t\t// custom callback\n\t\t\t\t\t\t\telse if (self.__state == 'stable') {\n\t\t\t\t\t\t\t\tfinish();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if the tooltip isn't already open, open it\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// a plugin must bind on this and store the tooltip in this._$tooltip\n\t\t\t\t\t\t\tself.__stateSet('appearing');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// the timer (if any) will start when the tooltip has fully appeared\n\t\t\t\t\t\t\t// after its transition\n\t\t\t\t\t\t\textraTime = self.__options.animationDuration[0];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// insert the content inside the tooltip\n\t\t\t\t\t\t\tself.__contentInsert();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// reposition the tooltip and attach to the DOM\n\t\t\t\t\t\t\tself.reposition(event, true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// animate in the tooltip. If the display plugin wants no css\n\t\t\t\t\t\t\t// animations, it may override the animation option with a\n\t\t\t\t\t\t\t// dummy value that will produce no effect\n\t\t\t\t\t\t\tif (env.hasTransitions) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// note: there seems to be an issue with start animations which\n\t\t\t\t\t\t\t\t// are randomly not played on fast devices in both Chrome and FF,\n\t\t\t\t\t\t\t\t// couldn't find a way to solve it yet. It seems that applying\n\t\t\t\t\t\t\t\t// the classes before appending to the DOM helps a little, but\n\t\t\t\t\t\t\t\t// it messes up some CSS transitions. The issue almost never\n\t\t\t\t\t\t\t\t// happens when delay[0]==0 though\n\t\t\t\t\t\t\t\tself._$tooltip\n\t\t\t\t\t\t\t\t\t.addClass('tooltipster-'+ self.__options.animation)\n\t\t\t\t\t\t\t\t\t.addClass('tooltipster-initial')\n\t\t\t\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\t\t\t\t'-moz-animation-duration': self.__options.animationDuration[0] + 'ms',\n\t\t\t\t\t\t\t\t\t\t'-ms-animation-duration': self.__options.animationDuration[0] + 'ms',\n\t\t\t\t\t\t\t\t\t\t'-o-animation-duration': self.__options.animationDuration[0] + 'ms',\n\t\t\t\t\t\t\t\t\t\t'-webkit-animation-duration': self.__options.animationDuration[0] + 'ms',\n\t\t\t\t\t\t\t\t\t\t'animation-duration': self.__options.animationDuration[0] + 'ms',\n\t\t\t\t\t\t\t\t\t\t'transition-duration': self.__options.animationDuration[0] + 'ms'\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsetTimeout(\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// a quick hover may have already triggered a mouseleave\n\t\t\t\t\t\t\t\t\t\tif (self.__state != 'closed') {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tself._$tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t.addClass('tooltipster-show')\n\t\t\t\t\t\t\t\t\t\t\t\t.removeClass('tooltipster-initial');\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (self.__options.animationDuration[0] > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tself._$tooltip.delay(self.__options.animationDuration[0]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tself._$tooltip.queue(finish);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t0\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// old browsers will have to live with this\n\t\t\t\t\t\t\t\tself._$tooltip\n\t\t\t\t\t\t\t\t\t.css('display', 'none')\n\t\t\t\t\t\t\t\t\t.fadeIn(self.__options.animationDuration[0], finish);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// checks if the origin is removed while the tooltip is open\n\t\t\t\t\t\t\tself.__trackerStart();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// NOTE: the listeners below have a '-triggerClose' namespace\n\t\t\t\t\t\t\t// because we'll remove them when the tooltip closes (unlike\n\t\t\t\t\t\t\t// the '-triggerOpen' listeners). So some of them are actually\n\t\t\t\t\t\t\t// not about close triggers, rather about positioning.\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$(env.window)\n\t\t\t\t\t\t\t\t// reposition on resize\n\t\t\t\t\t\t\t\t.on('resize.'+ self.__namespace +'-triggerClose', function(e) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar $ae = $(document.activeElement);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// reposition only if the resize event was not triggered upon the opening\n\t\t\t\t\t\t\t\t\t// of a virtual keyboard due to an input field being focused within the tooltip\n\t\t\t\t\t\t\t\t\t// (otherwise the repositioning would lose the focus)\n\t\t\t\t\t\t\t\t\tif (\t(!$ae.is('input') && !$ae.is('textarea'))\n\t\t\t\t\t\t\t\t\t\t||\t!$.contains(self._$tooltip[0], $ae[0])\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tself.reposition(e);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t// same as below for parents\n\t\t\t\t\t\t\t\t.on('scroll.'+ self.__namespace +'-triggerClose', function(e) {\n\t\t\t\t\t\t\t\t\tself.__scrollHandler(e);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tself.__$originParents = self._$origin.parents();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// scrolling may require the tooltip to be moved or even\n\t\t\t\t\t\t\t// repositioned in some cases\n\t\t\t\t\t\t\tself.__$originParents.each(function(i, parent) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$(parent).on('scroll.'+ self.__namespace +'-triggerClose', function(e) {\n\t\t\t\t\t\t\t\t\tself.__scrollHandler(e);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (\tself.__options.triggerClose.mouseleave\n\t\t\t\t\t\t\t\t||\t(self.__options.triggerClose.touchleave && env.hasTouchCapability)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// we use an event to allow users/plugins to control when the mouseleave/touchleave\n\t\t\t\t\t\t\t\t// close triggers will come to action. It allows to have more triggering elements\n\t\t\t\t\t\t\t\t// than just the origin and the tooltip for example, or to cancel/delay the closing,\n\t\t\t\t\t\t\t\t// or to make the tooltip interactive even if it wasn't when it was open, etc.\n\t\t\t\t\t\t\t\tself._on('dismissable', function(event) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (event.dismissable) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (event.delay) {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\ttimeout = setTimeout(function() {\n\t\t\t\t\t\t\t\t\t\t\t\t// event.event may be undefined\n\t\t\t\t\t\t\t\t\t\t\t\tself._close(event.event);\n\t\t\t\t\t\t\t\t\t\t\t}, event.delay);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tself.__timeouts.close.push(timeout);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tself._close(event);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// now set the listeners that will trigger 'dismissable' events\n\t\t\t\t\t\t\t\tvar $elements = self._$origin,\n\t\t\t\t\t\t\t\t\teventNamesIn = '',\n\t\t\t\t\t\t\t\t\teventNamesOut = '',\n\t\t\t\t\t\t\t\t\ttimeout = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// if we have to allow interaction, bind on the tooltip too\n\t\t\t\t\t\t\t\tif (self.__options.interactive) {\n\t\t\t\t\t\t\t\t\t$elements = $elements.add(self._$tooltip);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (self.__options.triggerClose.mouseleave) {\n\t\t\t\t\t\t\t\t\teventNamesIn += 'mouseenter.'+ self.__namespace +'-triggerClose ';\n\t\t\t\t\t\t\t\t\teventNamesOut += 'mouseleave.'+ self.__namespace +'-triggerClose ';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (self.__options.triggerClose.touchleave && env.hasTouchCapability) {\n\t\t\t\t\t\t\t\t\teventNamesIn += 'touchstart.'+ self.__namespace +'-triggerClose';\n\t\t\t\t\t\t\t\t\teventNamesOut += 'touchend.'+ self.__namespace +'-triggerClose touchcancel.'+ self.__namespace +'-triggerClose';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$elements\n\t\t\t\t\t\t\t\t\t// close after some time spent outside of the elements\n\t\t\t\t\t\t\t\t\t.on(eventNamesOut, function(event) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// it's ok if the touch gesture ended up to be a swipe,\n\t\t\t\t\t\t\t\t\t\t// it's still a \"touch leave\" situation\n\t\t\t\t\t\t\t\t\t\tif (\tself._touchIsTouchEvent(event)\n\t\t\t\t\t\t\t\t\t\t\t||\t!self._touchIsEmulatedEvent(event)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tvar delay = (event.type == 'mouseleave') ?\n\t\t\t\t\t\t\t\t\t\t\t\tself.__options.delay :\n\t\t\t\t\t\t\t\t\t\t\t\tself.__options.delayTouch;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tself._trigger({\n\t\t\t\t\t\t\t\t\t\t\t\tdelay: delay[1],\n\t\t\t\t\t\t\t\t\t\t\t\tdismissable: true,\n\t\t\t\t\t\t\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'dismissable'\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t// suspend the mouseleave timeout when the pointer comes back\n\t\t\t\t\t\t\t\t\t// over the elements\n\t\t\t\t\t\t\t\t\t.on(eventNamesIn, function(event) {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// it's also ok if the touch event is a swipe gesture\n\t\t\t\t\t\t\t\t\t\tif (\tself._touchIsTouchEvent(event)\n\t\t\t\t\t\t\t\t\t\t\t||\t!self._touchIsEmulatedEvent(event)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tself._trigger({\n\t\t\t\t\t\t\t\t\t\t\t\tdismissable: false,\n\t\t\t\t\t\t\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'dismissable'\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// close the tooltip when the origin gets a mouse click (common behavior of\n\t\t\t\t\t\t\t// native tooltips)\n\t\t\t\t\t\t\tif (self.__options.triggerClose.originClick) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tself._$origin.on('click.'+ self.__namespace + '-triggerClose', function(event) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// we could actually let a tap trigger this but this feature just\n\t\t\t\t\t\t\t\t\t// does not make sense on touch devices\n\t\t\t\t\t\t\t\t\tif (\t!self._touchIsTouchEvent(event)\n\t\t\t\t\t\t\t\t\t\t&&\t!self._touchIsEmulatedEvent(event)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tself._close(event);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// set the same bindings for click and touch on the body to close the tooltip\n\t\t\t\t\t\t\tif (\tself.__options.triggerClose.click\n\t\t\t\t\t\t\t\t||\t(self.__options.triggerClose.tap && env.hasTouchCapability)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// don't set right away since the click/tap event which triggered this method\n\t\t\t\t\t\t\t\t// (if it was a click/tap) is going to bubble up to the body, we don't want it\n\t\t\t\t\t\t\t\t// to close the tooltip immediately after it opened\n\t\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (self.__state != 'closed') {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar eventNames = '';\n\t\t\t\t\t\t\t\t\t\tif (self.__options.triggerClose.click) {\n\t\t\t\t\t\t\t\t\t\t\teventNames += 'click.'+ self.__namespace +'-triggerClose ';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (self.__options.triggerClose.tap && env.hasTouchCapability) {\n\t\t\t\t\t\t\t\t\t\t\teventNames += 'touchend.'+ self.__namespace +'-triggerClose';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t$('body').on(eventNames, function(event) {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (self._touchIsMeaningfulEvent(event)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tself._touchRecordEvent(event);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (!self.__options.interactive || !$.contains(self._$tooltip[0], event.target)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tself._close(event);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// needed to detect and ignore swiping\n\t\t\t\t\t\t\t\t\t\tif (self.__options.triggerClose.tap && env.hasTouchCapability) {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t$('body').on('touchstart.'+ self.__namespace +'-triggerClose', function(event) {\n\t\t\t\t\t\t\t\t\t\t\t\tself._touchRecordEvent(event);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tself._trigger('ready');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// call our custom callback\n\t\t\t\t\t\t\tif (self.__options.functionReady) {\n\t\t\t\t\t\t\t\tself.__options.functionReady.call(self, self, {\n\t\t\t\t\t\t\t\t\torigin: self._$origin[0],\n\t\t\t\t\t\t\t\t\ttooltip: self._$tooltip[0]\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if we have a timer set, let the countdown begin\n\t\t\t\t\t\tif (self.__options.timer > 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar timeout = setTimeout(function() {\n\t\t\t\t\t\t\t\tself._close();\n\t\t\t\t\t\t\t}, self.__options.timer + extraTime);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tself.__timeouts.close.push(timeout);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * When using the mouseenter/touchstart open triggers, this function will\n\t * schedule the opening of the tooltip after the delay, if there is one\n\t *\n\t * @param event\n\t * @returns {self}\n\t * @protected\n \t */\n\t_openShortly: function(event) {\n\t\t\n\t\tvar self = this,\n\t\t\tok = true;\n\t\t\n\t\tif (self.__state != 'stable' && self.__state != 'appearing') {\n\t\t\t\n\t\t\t// if a timeout is not already running\n\t\t\tif (!self.__timeouts.open) {\n\t\t\t\t\n\t\t\t\tself._trigger({\n\t\t\t\t\ttype: 'start',\n\t\t\t\t\tevent: event,\n\t\t\t\t\tstop: function() {\n\t\t\t\t\t\tok = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (ok) {\n\t\t\t\t\t\n\t\t\t\t\tvar delay = (event.type.indexOf('touch') == 0) ?\n\t\t\t\t\t\tself.__options.delayTouch :\n\t\t\t\t\t\tself.__options.delay;\n\t\t\t\t\t\n\t\t\t\t\tif (delay[0]) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tself.__timeouts.open = setTimeout(function() {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tself.__timeouts.open = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// open only if the pointer (mouse or touch) is still over the origin.\n\t\t\t\t\t\t\t// The check on the \"meaningful event\" can only be made here, after some\n\t\t\t\t\t\t\t// time has passed (to know if the touch was a swipe or not)\n\t\t\t\t\t\t\tif (self.__pointerIsOverOrigin && self._touchIsMeaningfulEvent(event)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// signal that we go on\n\t\t\t\t\t\t\t\tself._trigger('startend');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tself._open(event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// signal that we cancel\n\t\t\t\t\t\t\t\tself._trigger('startcancel');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, delay[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// signal that we go on\n\t\t\t\t\t\tself._trigger('startend');\n\t\t\t\t\t\t\n\t\t\t\t\t\tself._open(event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Meant for plugins to get their options\n\t * \n\t * @param {string} pluginName The name of the plugin that asks for its options\n\t * @param {object} defaultOptions The default options of the plugin\n\t * @returns {object} The options\n\t * @protected\n\t */\n\t_optionsExtract: function(pluginName, defaultOptions) {\n\t\t\n\t\tvar self = this,\n\t\t\toptions = $.extend(true, {}, defaultOptions);\n\t\t\n\t\t// if the plugin options were isolated in a property named after the\n\t\t// plugin, use them (prevents conflicts with other plugins)\n\t\tvar pluginOptions = self.__options[pluginName];\n\t\t\n\t\t// if not, try to get them as regular options\n\t\tif (!pluginOptions){\n\t\t\t\n\t\t\tpluginOptions = {};\n\t\t\t\n\t\t\t$.each(defaultOptions, function(optionName, value) {\n\t\t\t\t\n\t\t\t\tvar o = self.__options[optionName];\n\t\t\t\t\n\t\t\t\tif (o !== undefined) {\n\t\t\t\t\tpluginOptions[optionName] = o;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t// let's merge the default options and the ones that were provided. We'd want\n\t\t// to do a deep copy but not let jQuery merge arrays, so we'll do a shallow\n\t\t// extend on two levels, that will be enough if options are not more than 1\n\t\t// level deep\n\t\t$.each(options, function(optionName, value) {\n\t\t\t\n\t\t\tif (pluginOptions[optionName] !== undefined) {\n\t\t\t\t\n\t\t\t\tif ((\t\ttypeof value == 'object'\n\t\t\t\t\t\t&&\t!(value instanceof Array)\n\t\t\t\t\t\t&&\tvalue != null\n\t\t\t\t\t)\n\t\t\t\t\t&&\n\t\t\t\t\t(\t\ttypeof pluginOptions[optionName] == 'object'\n\t\t\t\t\t\t&&\t!(pluginOptions[optionName] instanceof Array)\n\t\t\t\t\t\t&&\tpluginOptions[optionName] != null\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t$.extend(options[optionName], pluginOptions[optionName]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toptions[optionName] = pluginOptions[optionName];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn options;\n\t},\n\t\n\t/**\n\t * Used at instantiation of the plugin, or afterwards by plugins that activate themselves\n\t * on existing instances\n\t * \n\t * @param {object} pluginName\n\t * @returns {self}\n\t * @protected\n\t */\n\t_plug: function(pluginName) {\n\t\t\n\t\tvar plugin = $.tooltipster._plugin(pluginName);\n\t\t\n\t\tif (plugin) {\n\t\t\t\n\t\t\t// if there is a constructor for instances\n\t\t\tif (plugin.instance) {\n\t\t\t\t\n\t\t\t\t// proxy non-private methods on the instance to allow new instance methods\n\t\t\t\t$.tooltipster.__bridge(plugin.instance, this, plugin.name);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('The \"'+ pluginName +'\" plugin is not defined');\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * This will return true if the event is a mouse event which was\n\t * emulated by the browser after a touch event. This allows us to\n\t * really dissociate mouse and touch triggers.\n\t * \n\t * There is a margin of error if a real mouse event is fired right\n\t * after (within the delay shown below) a touch event on the same\n\t * element, but hopefully it should not happen often.\n\t * \n\t * @returns {boolean}\n\t * @protected\n\t */\n\t_touchIsEmulatedEvent: function(event) {\n\t\t\n\t\tvar isEmulated = false,\n\t\t\tnow = new Date().getTime();\n\t\t\n\t\tfor (var i = this.__touchEvents.length - 1; i >= 0; i--) {\n\t\t\t\n\t\t\tvar e = this.__touchEvents[i];\n\t\t\t\n\t\t\t// delay, in milliseconds. It's supposed to be 300ms in\n\t\t\t// most browsers (350ms on iOS) to allow a double tap but\n\t\t\t// can be less (check out FastClick for more info)\n\t\t\tif (now - e.time < 500) {\n\t\t\t\t\n\t\t\t\tif (e.target === event.target) {\n\t\t\t\t\tisEmulated = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn isEmulated;\n\t},\n\t\n\t/**\n\t * Returns false if the event was an emulated mouse event or\n\t * a touch event involved in a swipe gesture.\n\t * \n\t * @param {object} event\n\t * @returns {boolean}\n\t * @protected\n\t */\n\t_touchIsMeaningfulEvent: function(event) {\n\t\treturn (\n\t\t\t\t(this._touchIsTouchEvent(event) && !this._touchSwiped(event.target))\n\t\t\t||\t(!this._touchIsTouchEvent(event) && !this._touchIsEmulatedEvent(event))\n\t\t);\n\t},\n\t\n\t/**\n\t * Checks if an event is a touch event\n\t * \n\t * @param {object} event\n\t * @returns {boolean}\n\t * @protected\n\t */\n\t_touchIsTouchEvent: function(event){\n\t\treturn event.type.indexOf('touch') == 0;\n\t},\n\t\n\t/**\n\t * Store touch events for a while to detect swiping and emulated mouse events\n\t * \n\t * @param {object} event\n\t * @returns {self}\n\t * @protected\n\t */\n\t_touchRecordEvent: function(event) {\n\t\t\n\t\tif (this._touchIsTouchEvent(event)) {\n\t\t\tevent.time = new Date().getTime();\n\t\t\tthis.__touchEvents.push(event);\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Returns true if a swipe happened after the last touchstart event fired on\n\t * event.target.\n\t * \n\t * We need to differentiate a swipe from a tap before we let the event open\n\t * or close the tooltip. A swipe is when a touchmove (scroll) event happens\n\t * on the body between the touchstart and the touchend events of an element.\n\t * \n\t * @param {object} target The HTML element that may have triggered the swipe\n\t * @returns {boolean}\n\t * @protected\n\t */\n\t_touchSwiped: function(target) {\n\t\t\n\t\tvar swiped = false;\n\t\t\n\t\tfor (var i = this.__touchEvents.length - 1; i >= 0; i--) {\n\t\t\t\n\t\t\tvar e = this.__touchEvents[i];\n\t\t\t\n\t\t\tif (e.type == 'touchmove') {\n\t\t\t\tswiped = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if (\n\t\t\t\te.type == 'touchstart'\n\t\t\t\t&&\ttarget === e.target\n\t\t\t) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn swiped;\n\t},\n\t\n\t/**\n\t * Triggers an event on the instance emitters\n\t * \n\t * @returns {self}\n\t * @protected\n\t */\n\t_trigger: function() {\n\t\t\n\t\tvar args = Array.prototype.slice.apply(arguments);\n\t\t\n\t\tif (typeof args[0] == 'string') {\n\t\t\targs[0] = { type: args[0] };\n\t\t}\n\t\t\n\t\t// add properties to the event\n\t\targs[0].instance = this;\n\t\targs[0].origin = this._$origin ? this._$origin[0] : null;\n\t\targs[0].tooltip = this._$tooltip ? this._$tooltip[0] : null;\n\t\t\n\t\t// note: the order of emitters matters\n\t\tthis.__$emitterPrivate.trigger.apply(this.__$emitterPrivate, args);\n\t\t$.tooltipster._trigger.apply($.tooltipster, args);\n\t\tthis.__$emitterPublic.trigger.apply(this.__$emitterPublic, args);\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Deactivate a plugin on this instance\n\t * \n\t * @returns {self}\n\t * @protected\n\t */\n\t_unplug: function(pluginName) {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\t// if the plugin has been activated on this instance\n\t\tif (self[pluginName]) {\n\t\t\t\n\t\t\tvar plugin = $.tooltipster._plugin(pluginName);\n\t\t\t\n\t\t\t// if there is a constructor for instances\n\t\t\tif (plugin.instance) {\n\t\t\t\t\n\t\t\t\t// unbridge\n\t\t\t\t$.each(plugin.instance, function(methodName, fn) {\n\t\t\t\t\t\n\t\t\t\t\t// if the method exists (privates methods do not) and comes indeed from\n\t\t\t\t\t// this plugin (may be missing or come from a conflicting plugin).\n\t\t\t\t\tif (\tself[methodName]\n\t\t\t\t\t\t&&\tself[methodName].bridged === self[pluginName]\n\t\t\t\t\t) {\n\t\t\t\t\t\tdelete self[methodName];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// destroy the plugin\n\t\t\tif (self[pluginName].__destroy) {\n\t\t\t\tself[pluginName].__destroy();\n\t\t\t}\n\t\t\t\n\t\t\t// remove the reference to the plugin instance\n\t\t\tdelete self[pluginName];\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * @see self::_close\n\t * @returns {self}\n\t * @public\n\t */\n\tclose: function(callback) {\n\t\t\n\t\tif (!this.__destroyed) {\n\t\t\tthis._close(null, callback);\n\t\t}\n\t\telse {\n\t\t\tthis.__destroyError();\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Sets or gets the content of the tooltip\n\t * \n\t * @returns {mixed|self}\n\t * @public\n\t */\n\tcontent: function(content) {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\t// getter method\n\t\tif (content === undefined) {\n\t\t\treturn self.__Content;\n\t\t}\n\t\t// setter method\n\t\telse {\n\t\t\t\n\t\t\tif (!self.__destroyed) {\n\t\t\t\t\n\t\t\t\t// change the content\n\t\t\t\tself.__contentSet(content);\n\t\t\t\t\n\t\t\t\tif (self.__Content !== null) {\n\t\t\t\t\t\n\t\t\t\t\t// update the tooltip if it is open\n\t\t\t\t\tif (self.__state !== 'closed') {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// reset the content in the tooltip\n\t\t\t\t\t\tself.__contentInsert();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// reposition and resize the tooltip\n\t\t\t\t\t\tself.reposition();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if we want to play a little animation showing the content changed\n\t\t\t\t\t\tif (self.__options.updateAnimation) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (env.hasTransitions) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// keep the reference in the local scope\n\t\t\t\t\t\t\t\tvar animation = self.__options.updateAnimation;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tself._$tooltip.addClass('tooltipster-update-'+ animation);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// remove the class after a while. The actual duration of the\n\t\t\t\t\t\t\t\t// update animation may be shorter, it's set in the CSS rules\n\t\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (self.__state != 'closed') {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tself._$tooltip.removeClass('tooltipster-update-'+ animation);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tself._$tooltip.fadeTo(200, 0.5, function() {\n\t\t\t\t\t\t\t\t\tif (self.__state != 'closed') {\n\t\t\t\t\t\t\t\t\t\tself._$tooltip.fadeTo(200, 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tself._close();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tself.__destroyError();\n\t\t\t}\n\t\t\t\n\t\t\treturn self;\n\t\t}\n\t},\n\t\n\t/**\n\t * Destroys the tooltip\n\t * \n\t * @returns {self}\n\t * @public\n\t */\n\tdestroy: function() {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\tif (!self.__destroyed) {\n\t\t\t\n\t\t\tif (!self.__destroying) {\n\t\t\t\t\n\t\t\t\tself.__destroying = true;\n\t\t\t\t\n\t\t\t\tself._close(null, function() {\n\t\t\t\t\t\n\t\t\t\t\tself._trigger('destroy');\n\t\t\t\t\t\n\t\t\t\t\tself.__destroying = false;\n\t\t\t\t\tself.__destroyed = true;\n\t\t\t\t\t\n\t\t\t\t\tself._$origin\n\t\t\t\t\t\t.removeData(self.__namespace)\n\t\t\t\t\t\t// remove the open trigger listeners\n\t\t\t\t\t\t.off('.'+ self.__namespace +'-triggerOpen');\n\t\t\t\t\t\n\t\t\t\t\t// remove the touch listener\n\t\t\t\t\t$('body').off('.' + self.__namespace +'-triggerOpen');\n\t\t\t\t\t\n\t\t\t\t\tvar ns = self._$origin.data('tooltipster-ns');\n\t\t\t\t\t\n\t\t\t\t\t// if the origin has been removed from DOM, its data may\n\t\t\t\t\t// well have been destroyed in the process and there would\n\t\t\t\t\t// be nothing to clean up or restore\n\t\t\t\t\tif (ns) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if there are no more tooltips on this element\n\t\t\t\t\t\tif (ns.length === 1) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// optional restoration of a title attribute\n\t\t\t\t\t\t\tvar title = null;\n\t\t\t\t\t\t\tif (self.__options.restoration == 'previous') {\n\t\t\t\t\t\t\t\ttitle = self._$origin.data('tooltipster-initialTitle');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (self.__options.restoration == 'current') {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// old school technique to stringify when outerHTML is not supported\n\t\t\t\t\t\t\t\ttitle = (typeof self.__Content == 'string') ?\n\t\t\t\t\t\t\t\t\tself.__Content :\n\t\t\t\t\t\t\t\t\t$('<div></div>').append(self.__Content).html();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (title) {\n\t\t\t\t\t\t\t\tself._$origin.attr('title', title);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// final cleaning\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tself._$origin.removeClass('tooltipstered');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tself._$origin\n\t\t\t\t\t\t\t\t.removeData('tooltipster-ns')\n\t\t\t\t\t\t\t\t.removeData('tooltipster-initialTitle');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// remove the instance namespace from the list of namespaces of\n\t\t\t\t\t\t\t// tooltips present on the element\n\t\t\t\t\t\t\tns = $.grep(ns, function(el, i) {\n\t\t\t\t\t\t\t\treturn el !== self.__namespace;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tself._$origin.data('tooltipster-ns', ns);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// last event\n\t\t\t\t\tself._trigger('destroyed');\n\t\t\t\t\t\n\t\t\t\t\t// unbind private and public event listeners\n\t\t\t\t\tself._off();\n\t\t\t\t\tself.off();\n\t\t\t\t\t\n\t\t\t\t\t// remove external references, just in case\n\t\t\t\t\tself.__Content = null;\n\t\t\t\t\tself.__$emitterPrivate = null;\n\t\t\t\t\tself.__$emitterPublic = null;\n\t\t\t\t\tself.__options.parent = null;\n\t\t\t\t\tself._$origin = null;\n\t\t\t\t\tself._$tooltip = null;\n\t\t\t\t\t\n\t\t\t\t\t// make sure the object is no longer referenced in there to prevent\n\t\t\t\t\t// memory leaks\n\t\t\t\t\t$.tooltipster.__instancesLatestArr = $.grep($.tooltipster.__instancesLatestArr, function(el, i) {\n\t\t\t\t\t\treturn self !== el;\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tclearInterval(self.__garbageCollector);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tself.__destroyError();\n\t\t}\n\t\t\n\t\t// we return the scope rather than true so that the call to\n\t\t// .tooltipster('destroy') actually returns the matched elements\n\t\t// and applies to all of them\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Disables the tooltip\n\t * \n\t * @returns {self}\n\t * @public\n\t */\n\tdisable: function() {\n\t\t\n\t\tif (!this.__destroyed) {\n\t\t\t\n\t\t\t// close first, in case the tooltip would not disappear on\n\t\t\t// its own (no close trigger)\n\t\t\tthis._close();\n\t\t\tthis.__enabled = false;\n\t\t\t\n\t\t\treturn this;\n\t\t}\n\t\telse {\n\t\t\tthis.__destroyError();\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Returns the HTML element of the origin\n\t *\n\t * @returns {self}\n\t * @public\n\t */\n\telementOrigin: function() {\n\t\t\n\t\tif (!this.__destroyed) {\n\t\t\treturn this._$origin[0];\n\t\t}\n\t\telse {\n\t\t\tthis.__destroyError();\n\t\t}\n\t},\n\t\n\t/**\n\t * Returns the HTML element of the tooltip\n\t *\n\t * @returns {self}\n\t * @public\n\t */\n\telementTooltip: function() {\n\t\treturn this._$tooltip ? this._$tooltip[0] : null;\n\t},\n\t\n\t/**\n\t * Enables the tooltip\n\t * \n\t * @returns {self}\n\t * @public\n\t */\n\tenable: function() {\n\t\tthis.__enabled = true;\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Alias, deprecated in 4.0.0\n\t * \n\t * @param {function} callback\n\t * @returns {self}\n\t * @public\n\t */\n\thide: function(callback) {\n\t\treturn this.close(callback);\n\t},\n\t\n\t/**\n\t * Returns the instance\n\t * \n\t * @returns {self}\n\t * @public\n\t */\n\tinstance: function() {\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For public use only, not to be used by plugins (use ::_off() instead)\n\t * \n\t * @returns {self}\n\t * @public\n\t */\n\toff: function() {\n\t\t\n\t\tif (!this.__destroyed) {\n\t\t\tthis.__$emitterPublic.off.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For public use only, not to be used by plugins (use ::_on() instead)\n\t *\n\t * @returns {self}\n\t * @public\n\t */\n\ton: function() {\n\t\t\n\t\tif (!this.__destroyed) {\n\t\t\tthis.__$emitterPublic.on.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));\n\t\t}\n\t\telse {\n\t\t\tthis.__destroyError();\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * For public use only, not to be used by plugins\n\t *\n\t * @returns {self}\n\t * @public\n\t */\n\tone: function() {\n\t\t\n\t\tif (!this.__destroyed) {\n\t\t\tthis.__$emitterPublic.one.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));\n\t\t}\n\t\telse {\n\t\t\tthis.__destroyError();\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * @see self::_open\n\t * @returns {self}\n\t * @public\n\t */\n\topen: function(callback) {\n\t\t\n\t\tif (!this.__destroyed && !this.__destroying) {\n\t\t\tthis._open(null, callback);\n\t\t}\n\t\telse {\n\t\t\tthis.__destroyError();\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Get or set options. For internal use and advanced users only.\n\t * \n\t * @param {string} o Option name\n\t * @param {mixed} val optional A new value for the option\n\t * @return {mixed|self} If val is omitted, the value of the option\n\t * is returned, otherwise the instance itself is returned\n\t * @public\n\t */ \n\toption: function(o, val) {\n\t\t\n\t\t// getter\n\t\tif (val === undefined) {\n\t\t\treturn this.__options[o];\n\t\t}\n\t\t// setter\n\t\telse {\n\t\t\t\n\t\t\tif (!this.__destroyed) {\n\t\t\t\t\n\t\t\t\t// change value\n\t\t\t\tthis.__options[o] = val;\n\t\t\t\t\n\t\t\t\t// format\n\t\t\t\tthis.__optionsFormat();\n\t\t\t\t\n\t\t\t\t// re-prepare the triggers if needed\n\t\t\t\tif ($.inArray(o, ['trigger', 'triggerClose', 'triggerOpen']) >= 0) {\n\t\t\t\t\tthis.__prepareOrigin();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (o === 'selfDestruction') {\n\t\t\t\t\tthis.__prepareGC();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.__destroyError();\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t}\n\t},\n\t\n\t/**\n\t * This method is in charge of setting the position and size properties of the tooltip.\n\t * All the hard work is delegated to the display plugin.\n\t * Note: The tooltip may be detached from the DOM at the moment the method is called \n\t * but must be attached by the end of the method call.\n\t * \n\t * @param {object} event For internal use only. Defined if an event such as\n\t * window resizing triggered the repositioning\n\t * @param {boolean} tooltipIsDetached For internal use only. Set this to true if you\n\t * know that the tooltip not being in the DOM is not an issue (typically when the\n\t * tooltip element has just been created but has not been added to the DOM yet).\n\t * @returns {self}\n\t * @public\n\t */\n\treposition: function(event, tooltipIsDetached) {\n\t\t\n\t\tvar self = this;\n\t\t\n\t\tif (!self.__destroyed) {\n\t\t\t\n\t\t\t// if the tooltip is still open and the origin is still in the DOM\n\t\t\tif (self.__state != 'closed' && bodyContains(self._$origin)) {\n\t\t\t\t\n\t\t\t\t// if the tooltip has not been removed from DOM manually (or if it\n\t\t\t\t// has been detached on purpose)\n\t\t\t\tif (tooltipIsDetached || bodyContains(self._$tooltip)) {\n\t\t\t\t\t\n\t\t\t\t\tif (!tooltipIsDetached) {\n\t\t\t\t\t\t// detach in case the tooltip overflows the window and adds\n\t\t\t\t\t\t// scrollbars to it, so __geometry can be accurate\n\t\t\t\t\t\tself._$tooltip.detach();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// refresh the geometry object before passing it as a helper\n\t\t\t\t\tself.__Geometry = self.__geometry();\n\t\t\t\t\t\n\t\t\t\t\t// let a plugin fo the rest\n\t\t\t\t\tself._trigger({\n\t\t\t\t\t\ttype: 'reposition',\n\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\thelper: {\n\t\t\t\t\t\t\tgeo: self.__Geometry\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tself.__destroyError();\n\t\t}\n\t\t\n\t\treturn self;\n\t},\n\t\n\t/**\n\t * Alias, deprecated in 4.0.0\n\t *\n\t * @param callback\n\t * @returns {self}\n\t * @public\n\t */\n\tshow: function(callback) {\n\t\treturn this.open(callback);\n\t},\n\t\n\t/**\n\t * Returns some properties about the instance\n\t * \n\t * @returns {object}\n\t * @public\n\t */\n\tstatus: function() {\n\t\t\n\t\treturn {\n\t\t\tdestroyed: this.__destroyed,\n\t\t\tdestroying: this.__destroying,\n\t\t\tenabled: this.__enabled,\n\t\t\topen: this.__state !== 'closed',\n\t\t\tstate: this.__state\n\t\t};\n\t},\n\t\n\t/**\n\t * For public use only, not to be used by plugins\n\t *\n\t * @returns {self}\n\t * @public\n\t */\n\ttriggerHandler: function() {\n\t\t\n\t\tif (!this.__destroyed) {\n\t\t\tthis.__$emitterPublic.triggerHandler.apply(this.__$emitterPublic, Array.prototype.slice.apply(arguments));\n\t\t}\n\t\telse {\n\t\t\tthis.__destroyError();\n\t\t}\n\t\t\n\t\treturn this;\n\t}\n};\n\n$.fn.tooltipster = function() {\n\t\n\t// for using in closures\n\tvar args = Array.prototype.slice.apply(arguments),\n\t\t// common mistake: an HTML element can't be in several tooltips at the same time\n\t\tcontentCloningWarning = 'You are using a single HTML element as content for several tooltips. You probably want to set the contentCloning option to TRUE.';\n\t\n\t// this happens with $(sel).tooltipster(...) when $(sel) does not match anything\n\tif (this.length === 0) {\n\t\t\n\t\t// still chainable\n\t\treturn this;\n\t}\n\t// this happens when calling $(sel).tooltipster('methodName or options')\n\t// where $(sel) matches one or more elements\n\telse {\n\t\t\n\t\t// method calls\n\t\tif (typeof args[0] === 'string') {\n\t\t\t\n\t\t\tvar v = '#*$~&';\n\t\t\t\n\t\t\tthis.each(function() {\n\t\t\t\t\n\t\t\t\t// retrieve the namepaces of the tooltip(s) that exist on that element.\n\t\t\t\t// We will interact with the first tooltip only.\n\t\t\t\tvar ns = $(this).data('tooltipster-ns'),\n\t\t\t\t\t// self represents the instance of the first tooltipster plugin\n\t\t\t\t\t// associated to the current HTML object of the loop\n\t\t\t\t\tself = ns ? $(this).data(ns[0]) : null;\n\t\t\t\t\n\t\t\t\t// if the current element holds a tooltipster instance\n\t\t\t\tif (self) {\n\t\t\t\t\t\n\t\t\t\t\tif (typeof self[args[0]] === 'function') {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (\tthis.length > 1\n\t\t\t\t\t\t\t&&\targs[0] == 'content'\n\t\t\t\t\t\t\t&&\t(\targs[1] instanceof $\n\t\t\t\t\t\t\t\t|| (typeof args[1] == 'object' && args[1] != null && args[1].tagName)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t&&\t!self.__options.contentCloning\n\t\t\t\t\t\t\t&&\tself.__options.debug\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconsole.log(contentCloningWarning);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// note : args[1] and args[2] may not be defined\n\t\t\t\t\t\tvar resp = self[args[0]](args[1], args[2]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow new Error('Unknown method \"'+ args[0] +'\"');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// if the function returned anything other than the instance\n\t\t\t\t\t// itself (which implies chaining, except for the `instance` method)\n\t\t\t\t\tif (resp !== self || args[0] === 'instance') {\n\t\t\t\t\t\t\n\t\t\t\t\t\tv = resp;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// return false to stop .each iteration on the first element\n\t\t\t\t\t\t// matched by the selector\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error('You called Tooltipster\\'s \"'+ args[0] +'\" method on an uninitialized element');\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn (v !== '#*$~&') ? v : this;\n\t\t}\n\t\t// first argument is undefined or an object: the tooltip is initializing\n\t\telse {\n\t\t\t\n\t\t\t// reset the array of last initialized objects\n\t\t\t$.tooltipster.__instancesLatestArr = [];\n\t\t\t\n\t\t\t// is there a defined value for the multiple option in the options object ?\n\t\t\tvar\tmultipleIsSet = args[0] && args[0].multiple !== undefined,\n\t\t\t\t// if the multiple option is set to true, or if it's not defined but\n\t\t\t\t// set to true in the defaults\n\t\t\t\tmultiple = (multipleIsSet && args[0].multiple) || (!multipleIsSet && defaults.multiple),\n\t\t\t\t// same for content\n\t\t\t\tcontentIsSet = args[0] && args[0].content !== undefined,\n\t\t\t\tcontent = (contentIsSet && args[0].content) || (!contentIsSet && defaults.content),\n\t\t\t\t// same for contentCloning\n\t\t\t\tcontentCloningIsSet = args[0] && args[0].contentCloning !== undefined,\n\t\t\t\tcontentCloning =\n\t\t\t\t\t\t(contentCloningIsSet && args[0].contentCloning)\n\t\t\t\t\t||\t(!contentCloningIsSet && defaults.contentCloning),\n\t\t\t\t// same for debug\n\t\t\t\tdebugIsSet = args[0] && args[0].debug !== undefined,\n\t\t\t\tdebug = (debugIsSet && args[0].debug) || (!debugIsSet && defaults.debug);\n\t\t\t\n\t\t\tif (\tthis.length > 1\n\t\t\t\t&&\t(\tcontent instanceof $\n\t\t\t\t\t|| (typeof content == 'object' && content != null && content.tagName)\n\t\t\t\t)\n\t\t\t\t&&\t!contentCloning\n\t\t\t\t&&\tdebug\n\t\t\t) {\n\t\t\t\tconsole.log(contentCloningWarning);\n\t\t\t}\n\t\t\t\n\t\t\t// create a tooltipster instance for each element if it doesn't\n\t\t\t// already have one or if the multiple option is set, and attach the\n\t\t\t// object to it\n\t\t\tthis.each(function() {\n\t\t\t\t\n\t\t\t\tvar go = false,\n\t\t\t\t\t$this = $(this),\n\t\t\t\t\tns = $this.data('tooltipster-ns'),\n\t\t\t\t\tobj = null;\n\t\t\t\t\n\t\t\t\tif (!ns) {\n\t\t\t\t\tgo = true;\n\t\t\t\t}\n\t\t\t\telse if (multiple) {\n\t\t\t\t\tgo = true;\n\t\t\t\t}\n\t\t\t\telse if (debug) {\n\t\t\t\t\tconsole.log('Tooltipster: one or more tooltips are already attached to the element below. Ignoring.');\n\t\t\t\t\tconsole.log(this);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (go) {\n\t\t\t\t\tobj = new $.Tooltipster(this, args[0]);\n\t\t\t\t\t\n\t\t\t\t\t// save the reference of the new instance\n\t\t\t\t\tif (!ns) ns = [];\n\t\t\t\t\tns.push(obj.__namespace);\n\t\t\t\t\t$this.data('tooltipster-ns', ns);\n\t\t\t\t\t\n\t\t\t\t\t// save the instance itself\n\t\t\t\t\t$this.data(obj.__namespace, obj);\n\t\t\t\t\t\n\t\t\t\t\t// call our constructor custom function.\n\t\t\t\t\t// we do this here and not in ::init() because we wanted\n\t\t\t\t\t// the object to be saved in $this.data before triggering\n\t\t\t\t\t// it\n\t\t\t\t\tif (obj.__options.functionInit) {\n\t\t\t\t\t\tobj.__options.functionInit.call(obj, obj, {\n\t\t\t\t\t\t\torigin: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// and now the event, for the plugins and core emitter\n\t\t\t\t\tobj._trigger('init');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$.tooltipster.__instancesLatestArr.push(obj);\n\t\t\t});\n\t\t\t\n\t\t\treturn this;\n\t\t}\n\t}\n};\n\n// Utilities\n\n/**\n * A class to check if a tooltip can fit in given dimensions\n * \n * @param {object} $tooltip The jQuery wrapped tooltip element, or a clone of it\n */\nfunction Ruler($tooltip) {\n\t\n\t// list of instance variables\n\t\n\tthis.$container;\n\tthis.constraints = null;\n\tthis.__$tooltip;\n\t\n\tthis.__init($tooltip);\n}\n\nRuler.prototype = {\n\t\n\t/**\n\t * Move the tooltip into an invisible div that does not allow overflow to make\n\t * size tests. Note: the tooltip may or may not be attached to the DOM at the\n\t * moment this method is called, it does not matter.\n\t * \n\t * @param {object} $tooltip The object to test. May be just a clone of the\n\t * actual tooltip.\n\t * @private\n\t */\n\t__init: function($tooltip) {\n\t\t\n\t\tthis.__$tooltip = $tooltip;\n\t\t\n\t\tthis.__$tooltip\n\t\t\t.css({\n\t\t\t\t// for some reason we have to specify top and left 0\n\t\t\t\tleft: 0,\n\t\t\t\t// any overflow will be ignored while measuring\n\t\t\t\toverflow: 'hidden',\n\t\t\t\t// positions at (0,0) without the div using 100% of the available width\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0\n\t\t\t})\n\t\t\t// overflow must be auto during the test. We re-set this in case\n\t\t\t// it were modified by the user\n\t\t\t.find('.tooltipster-content')\n\t\t\t\t.css('overflow', 'auto');\n\t\t\n\t\tthis.$container = $('<div class=\"tooltipster-ruler\"></div>')\n\t\t\t.append(this.__$tooltip)\n\t\t\t.appendTo('body');\n\t},\n\t\n\t/**\n\t * Force the browser to redraw (re-render) the tooltip immediately. This is required\n\t * when you changed some CSS properties and need to make something with it\n\t * immediately, without waiting for the browser to redraw at the end of instructions.\n\t *\n\t * @see http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes\n\t * @private\n\t */\n\t__forceRedraw: function() {\n\t\t\n\t\t// note: this would work but for Webkit only\n\t\t//this.__$tooltip.close();\n\t\t//this.__$tooltip[0].offsetHeight;\n\t\t//this.__$tooltip.open();\n\t\t\n\t\t// works in FF too\n\t\tvar $p = this.__$tooltip.parent();\n\t\tthis.__$tooltip.detach();\n\t\tthis.__$tooltip.appendTo($p);\n\t},\n\t\n\t/**\n\t * Set maximum dimensions for the tooltip. A call to ::measure afterwards\n\t * will tell us if the content overflows or if it's ok\n\t *\n\t * @param {int} width\n\t * @param {int} height\n\t * @return {Ruler}\n\t * @public\n\t */\n\tconstrain: function(width, height) {\n\t\t\n\t\tthis.constraints = {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t\t\n\t\tthis.__$tooltip.css({\n\t\t\t// we disable display:flex, otherwise the content would overflow without\n\t\t\t// creating horizontal scrolling (which we need to detect).\n\t\t\tdisplay: 'block',\n\t\t\t// reset any previous height\n\t\t\theight: '',\n\t\t\t// we'll check if horizontal scrolling occurs\n\t\t\toverflow: 'auto',\n\t\t\t// we'll set the width and see what height is generated and if there\n\t\t\t// is horizontal overflow\n\t\t\twidth: width\n\t\t});\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Reset the tooltip content overflow and remove the test container\n\t * \n\t * @returns {Ruler}\n\t * @public\n\t */\n\tdestroy: function() {\n\t\t\n\t\t// in case the element was not a clone\n\t\tthis.__$tooltip\n\t\t\t.detach()\n\t\t\t.find('.tooltipster-content')\n\t\t\t\t.css({\n\t\t\t\t\t// reset to CSS value\n\t\t\t\t\tdisplay: '',\n\t\t\t\t\toverflow: ''\n\t\t\t\t});\n\t\t\n\t\tthis.$container.remove();\n\t},\n\t\n\t/**\n\t * Removes any constraints\n\t * \n\t * @returns {Ruler}\n\t * @public\n\t */\n\tfree: function() {\n\t\t\n\t\tthis.constraints = null;\n\t\t\n\t\t// reset to natural size\n\t\tthis.__$tooltip.css({\n\t\t\tdisplay: '',\n\t\t\theight: '',\n\t\t\toverflow: 'visible',\n\t\t\twidth: ''\n\t\t});\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Returns the size of the tooltip. When constraints are applied, also returns\n\t * whether the tooltip fits in the provided dimensions.\n\t * The idea is to see if the new height is small enough and if the content does\n\t * not overflow horizontally.\n\t *\n\t * @param {int} width\n\t * @param {int} height\n\t * @returns {object} An object with a bool `fits` property and a `size` property\n\t * @public\n\t */\n\tmeasure: function() {\n\t\t\n\t\tthis.__forceRedraw();\n\t\t\n\t\tvar tooltipBcr = this.__$tooltip[0].getBoundingClientRect(),\n\t\t\tresult = { size: {\n\t\t\t\t// bcr.width/height are not defined in IE8- but in this\n\t\t\t\t// case, bcr.right/bottom will have the same value\n\t\t\t\t// except in iOS 8+ where tooltipBcr.bottom/right are wrong\n\t\t\t\t// after scrolling for reasons yet to be determined\n\t\t\t\theight: tooltipBcr.height || tooltipBcr.bottom,\n\t\t\t\twidth: tooltipBcr.width || tooltipBcr.right\n\t\t\t}};\n\t\t\n\t\tif (this.constraints) {\n\t\t\t\n\t\t\t// note: we used to use offsetWidth instead of boundingRectClient but\n\t\t\t// it returned rounded values, causing issues with sub-pixel layouts.\n\t\t\t\n\t\t\t// note2: noticed that the bcrWidth of text content of a div was once\n\t\t\t// greater than the bcrWidth of its container by 1px, causing the final\n\t\t\t// tooltip box to be too small for its content. However, evaluating\n\t\t\t// their widths one against the other (below) surprisingly returned\n\t\t\t// equality. Happened only once in Chrome 48, was not able to reproduce\n\t\t\t// => just having fun with float position values...\n\t\t\t\n\t\t\tvar $content = this.__$tooltip.find('.tooltipster-content'),\n\t\t\t\theight = this.__$tooltip.outerHeight(),\n\t\t\t\tcontentBcr = $content[0].getBoundingClientRect(),\n\t\t\t\tfits = {\n\t\t\t\t\theight: height <= this.constraints.height,\n\t\t\t\t\twidth: (\n\t\t\t\t\t\t// this condition accounts for min-width property that\n\t\t\t\t\t\t// may apply\n\t\t\t\t\t\ttooltipBcr.width <= this.constraints.width\n\t\t\t\t\t\t\t// the -1 is here because scrollWidth actually returns\n\t\t\t\t\t\t\t// a rounded value, and may be greater than bcr.width if\n\t\t\t\t\t\t\t// it was rounded up. This may cause an issue for contents\n\t\t\t\t\t\t\t// which actually really overflow  by 1px or so, but that\n\t\t\t\t\t\t\t// should be rare. Not sure how to solve this efficiently.\n\t\t\t\t\t\t\t// See http://blogs.msdn.com/b/ie/archive/2012/02/17/sub-pixel-rendering-and-the-css-object-model.aspx\n\t\t\t\t\t\t&&\tcontentBcr.width >= $content[0].scrollWidth - 1\n\t\t\t\t\t)\n\t\t\t\t};\n\t\t\t\n\t\t\tresult.fits = fits.height && fits.width;\n\t\t}\n\t\t\n\t\t// old versions of IE get the width wrong for some reason and it causes\n\t\t// the text to be broken to a new line, so we round it up. If the width\n\t\t// is the width of the screen though, we can assume it is accurate.\n\t\tif (\tenv.IE\n\t\t\t&&\tenv.IE <= 11\n\t\t\t&&\tresult.size.width !== env.window.document.documentElement.clientWidth\n\t\t) {\n\t\t\tresult.size.width = Math.ceil(result.size.width) + 1;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n// quick & dirty compare function, not bijective nor multidimensional\nfunction areEqual(a,b) {\n\tvar same = true;\n\t$.each(a, function(i, _) {\n\t\tif (b[i] === undefined || a[i] !== b[i]) {\n\t\t\tsame = false;\n\t\t\treturn false;\n\t\t}\n\t});\n\treturn same;\n}\n\n/**\n * A fast function to check if an element is still in the DOM. It\n * tries to use an id as ids are indexed by the browser, or falls\n * back to jQuery's `contains` method. May fail if two elements\n * have the same id, but so be it\n *\n * @param {object} $obj A jQuery-wrapped HTML element\n * @return {boolean}\n */\nfunction bodyContains($obj) {\n\tvar id = $obj.attr('id'),\n\t\tel = id ? env.window.document.getElementById(id) : null;\n\t// must also check that the element with the id is the one we want\n\treturn el ? el === $obj[0] : $.contains(env.window.document.body, $obj[0]);\n}\n\n// detect IE versions for dirty fixes\nvar uA = navigator.userAgent.toLowerCase();\nif (uA.indexOf('msie') != -1) env.IE = parseInt(uA.split('msie')[1]);\nelse if (uA.toLowerCase().indexOf('trident') !== -1 && uA.indexOf(' rv:11') !== -1) env.IE = 11;\nelse if (uA.toLowerCase().indexOf('edge/') != -1) env.IE = parseInt(uA.toLowerCase().split('edge/')[1]);\n\n// detecting support for CSS transitions\nfunction transitionSupport() {\n\t\n\t// env.window is not defined yet when this is called\n\tif (!win) return false;\n\t\n\tvar b = win.document.body || win.document.documentElement,\n\t\ts = b.style,\n\t\tp = 'transition',\n\t\tv = ['Moz', 'Webkit', 'Khtml', 'O', 'ms'];\n\t\n\tif (typeof s[p] == 'string') { return true; }\n\t\n\tp = p.charAt(0).toUpperCase() + p.substr(1);\n\tfor (var i=0; i<v.length; i++) {\n\t\tif (typeof s[v[i] + p] == 'string') { return true; }\n\t}\n\treturn false;\n}\n\n// we'll return jQuery for plugins not to have to declare it as a dependency,\n// but it's done by a build task since it should be included only once at the\n// end when we concatenate the core file with a plugin\r\n// sideTip is Tooltipster's default plugin.\n// This file will be UMDified by a build task.\n\nvar pluginName = 'tooltipster.sideTip';\n\n$.tooltipster._plugin({\n\tname: pluginName,\n\tinstance: {\n\t\t/**\n\t\t * Defaults are provided as a function for an easy override by inheritance\n\t\t *\n\t\t * @return {object} An object with the defaults options\n\t\t * @private\n\t\t */\n\t\t__defaults: function() {\n\t\t\t\n\t\t\treturn {\n\t\t\t\t// if the tooltip should display an arrow that points to the origin\n\t\t\t\tarrow: true,\n\t\t\t\t// the distance in pixels between the tooltip and the origin\n\t\t\t\tdistance: 6,\n\t\t\t\t// allows to easily change the position of the tooltip\n\t\t\t\tfunctionPosition: null,\n\t\t\t\tmaxWidth: null,\n\t\t\t\t// used to accomodate the arrow of tooltip if there is one.\n\t\t\t\t// First to make sure that the arrow target is not too close\n\t\t\t\t// to the edge of the tooltip, so the arrow does not overflow\n\t\t\t\t// the tooltip. Secondly when we reposition the tooltip to\n\t\t\t\t// make sure that it's positioned in such a way that the arrow is\n\t\t\t\t// still pointing at the target (and not a few pixels beyond it).\n\t\t\t\t// It should be equal to or greater than half the width of\n\t\t\t\t// the arrow (by width we mean the size of the side which touches\n\t\t\t\t// the side of the tooltip).\n\t\t\t\tminIntersection: 16,\n\t\t\t\tminWidth: 0,\n\t\t\t\t// deprecated in 4.0.0. Listed for _optionsExtract to pick it up\n\t\t\t\tposition: null,\n\t\t\t\tside: 'top',\n\t\t\t\t// set to false to position the tooltip relatively to the document rather\n\t\t\t\t// than the window when we open it\n\t\t\t\tviewportAware: true\n\t\t\t};\n\t\t},\n\t\t\n\t\t/**\n\t\t * Run once: at instantiation of the plugin\n\t\t *\n\t\t * @param {object} instance The tooltipster object that instantiated this plugin\n\t\t * @private\n\t\t */\n\t\t__init: function(instance) {\n\t\t\t\n\t\t\tvar self = this;\n\t\t\t\n\t\t\t// list of instance variables\n\t\t\t\n\t\t\tself.__instance = instance;\n\t\t\tself.__namespace = 'tooltipster-sideTip-'+ Math.round(Math.random()*1000000);\n\t\t\tself.__previousState = 'closed';\n\t\t\tself.__options;\n\t\t\t\n\t\t\t// initial formatting\n\t\t\tself.__optionsFormat();\n\t\t\t\n\t\t\tself.__instance._on('state.'+ self.__namespace, function(event) {\n\t\t\t\t\n\t\t\t\tif (event.state == 'closed') {\n\t\t\t\t\tself.__close();\n\t\t\t\t}\n\t\t\t\telse if (event.state == 'appearing' && self.__previousState == 'closed') {\n\t\t\t\t\tself.__create();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tself.__previousState = event.state;\n\t\t\t});\n\t\t\t\n\t\t\t// reformat every time the options are changed\n\t\t\tself.__instance._on('options.'+ self.__namespace, function() {\n\t\t\t\tself.__optionsFormat();\n\t\t\t});\n\t\t\t\n\t\t\tself.__instance._on('reposition.'+ self.__namespace, function(e) {\n\t\t\t\tself.__reposition(e.event, e.helper);\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Called when the tooltip has closed\n\t\t * \n\t\t * @private\n\t\t */\n\t\t__close: function() {\n\t\t\t\n\t\t\t// detach our content object first, so the next jQuery's remove()\n\t\t\t// call does not unbind its event handlers\n\t\t\tif (this.__instance.content() instanceof $) {\n\t\t\t\tthis.__instance.content().detach();\n\t\t\t}\n\t\t\t\n\t\t\t// remove the tooltip from the DOM\n\t\t\tthis.__instance._$tooltip.remove();\n\t\t\tthis.__instance._$tooltip = null;\n\t\t},\n\t\t\n\t\t/**\n\t\t * Creates the HTML element of the tooltip.\n\t\t * \n\t\t * @private\n\t\t */\n\t\t__create: function() {\n\t\t\t\n\t\t\t// note: we wrap with a .tooltipster-box div to be able to set a margin on it\n\t\t\t// (.tooltipster-base must not have one)\n\t\t\tvar $html = $(\n\t\t\t\t'<div class=\"tooltipster-base tooltipster-sidetip\">' +\n\t\t\t\t\t'<div class=\"tooltipster-box\">' +\n\t\t\t\t\t\t'<div class=\"tooltipster-content\"></div>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t\t'<div class=\"tooltipster-arrow\">' +\n\t\t\t\t\t\t'<div class=\"tooltipster-arrow-uncropped\">' +\n\t\t\t\t\t\t\t'<div class=\"tooltipster-arrow-border\"></div>' +\n\t\t\t\t\t\t\t'<div class=\"tooltipster-arrow-background\"></div>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t\t\n\t\t\t// hide arrow if asked\n\t\t\tif (!this.__options.arrow) {\n\t\t\t\t$html\n\t\t\t\t\t.find('.tooltipster-box')\n\t\t\t\t\t\t.css('margin', 0)\n\t\t\t\t\t\t.end()\n\t\t\t\t\t.find('.tooltipster-arrow')\n\t\t\t\t\t\t.hide();\n\t\t\t}\n\t\t\t\n\t\t\t// apply min/max width if asked\n\t\t\tif (this.__options.minWidth) {\n\t\t\t\t$html.css('min-width', this.__options.minWidth + 'px');\n\t\t\t}\n\t\t\tif (this.__options.maxWidth) {\n\t\t\t\t$html.css('max-width', this.__options.maxWidth + 'px');\n\t\t\t}\n\t\t\t\n\t\t\tthis.__instance._$tooltip = $html;\n\t\t\t\n\t\t\t// tell the instance that the tooltip element has been created\n\t\t\tthis.__instance._trigger('created');\n\t\t},\n\t\t\n\t\t/**\n\t\t * Used when the plugin is to be unplugged\n\t\t *\n\t\t * @private\n\t\t */\n\t\t__destroy: function() {\n\t\t\tthis.__instance._off('.'+ self.__namespace);\n\t\t},\n\t\t\n\t\t/**\n\t\t * (Re)compute this.__options from the options declared to the instance\n\t\t *\n\t\t * @private\n\t\t */\n\t\t__optionsFormat: function() {\n\t\t\t\n\t\t\tvar self = this;\n\t\t\t\n\t\t\t// get the options\n\t\t\tself.__options = self.__instance._optionsExtract(pluginName, self.__defaults());\n\t\t\t\n\t\t\t// for backward compatibility, deprecated in v4.0.0\n\t\t\tif (self.__options.position) {\n\t\t\t\tself.__options.side = self.__options.position;\n\t\t\t}\n\t\t\t\n\t\t\t// options formatting\n\t\t\t\n\t\t\t// format distance as a four-cell array if it ain't one yet and then make\n\t\t\t// it an object with top/bottom/left/right properties\n\t\t\tif (typeof self.__options.distance != 'object') {\n\t\t\t\tself.__options.distance = [self.__options.distance];\n\t\t\t}\n\t\t\tif (self.__options.distance.length < 4) {\n\t\t\t\t\n\t\t\t\tif (self.__options.distance[1] === undefined) self.__options.distance[1] = self.__options.distance[0];\n\t\t\t\tif (self.__options.distance[2] === undefined) self.__options.distance[2] = self.__options.distance[0];\n\t\t\t\tif (self.__options.distance[3] === undefined) self.__options.distance[3] = self.__options.distance[1];\n\t\t\t\t\n\t\t\t\tself.__options.distance = {\n\t\t\t\t\ttop: self.__options.distance[0],\n\t\t\t\t\tright: self.__options.distance[1],\n\t\t\t\t\tbottom: self.__options.distance[2],\n\t\t\t\t\tleft: self.__options.distance[3]\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\t// let's transform:\n\t\t\t// 'top' into ['top', 'bottom', 'right', 'left']\n\t\t\t// 'right' into ['right', 'left', 'top', 'bottom']\n\t\t\t// 'bottom' into ['bottom', 'top', 'right', 'left']\n\t\t\t// 'left' into ['left', 'right', 'top', 'bottom']\n\t\t\tif (typeof self.__options.side == 'string') {\n\t\t\t\t\n\t\t\t\tvar opposites = {\n\t\t\t\t\t'top': 'bottom',\n\t\t\t\t\t'right': 'left',\n\t\t\t\t\t'bottom': 'top',\n\t\t\t\t\t'left': 'right'\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tself.__options.side = [self.__options.side, opposites[self.__options.side]];\n\t\t\t\t\n\t\t\t\tif (self.__options.side[0] == 'left' || self.__options.side[0] == 'right') {\n\t\t\t\t\tself.__options.side.push('top', 'bottom');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tself.__options.side.push('right', 'left');\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// misc\n\t\t\t// disable the arrow in IE6 unless the arrow option was explicitly set to true\n\t\t\tif (\t$.tooltipster._env.IE === 6\n\t\t\t\t&&\tself.__options.arrow !== true\n\t\t\t) {\n\t\t\t\tself.__options.arrow = false;\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * This method must compute and set the positioning properties of the\n\t\t * tooltip (left, top, width, height, etc.). It must also make sure the\n\t\t * tooltip is eventually appended to its parent (since the element may be\n\t\t * detached from the DOM at the moment the method is called).\n\t\t *\n\t\t * We'll evaluate positioning scenarios to find which side can contain the\n\t\t * tooltip in the best way. We'll consider things relatively to the window\n\t\t * (unless the user asks not to), then to the document (if need be, or if the\n\t\t * user explicitly requires the tests to run on the document). For each\n\t\t * scenario, measures are taken, allowing us to know how well the tooltip\n\t\t * is going to fit. After that, a sorting function will let us know what\n\t\t * the best scenario is (we also allow the user to choose his favorite\n\t\t * scenario by using an event).\n\t\t * \n\t\t * @param {object} helper An object that contains variables that plugin\n\t\t * creators may find useful (see below)\n\t\t * @param {object} helper.geo An object with many layout properties\n\t\t * about objects of interest (window, document, origin). This should help\n\t\t * plugin users compute the optimal position of the tooltip\n\t\t * @private\n\t\t */\n\t\t__reposition: function(event, helper) {\n\t\t\t\n\t\t\tvar self = this,\n\t\t\t\tfinalResult,\n\t\t\t\t// to know where to put the tooltip, we need to know on which point\n\t\t\t\t// of the x or y axis we should center it. That coordinate is the target\n\t\t\t\ttargets = self.__targetFind(helper),\n\t\t\t\ttestResults = [];\n\t\t\t\n\t\t\t// make sure the tooltip is detached while we make tests on a clone\n\t\t\tself.__instance._$tooltip.detach();\n\t\t\t\n\t\t\t// we could actually provide the original element to the Ruler and\n\t\t\t// not a clone, but it just feels right to keep it out of the\n\t\t\t// machinery.\n\t\t\tvar $clone = self.__instance._$tooltip.clone(),\n\t\t\t\t// start position tests session\n\t\t\t\truler = $.tooltipster._getRuler($clone),\n\t\t\t\tsatisfied = false,\n\t\t\t\tanimation = self.__instance.option('animation');\n\t\t\t\n\t\t\t// an animation class could contain properties that distort the size\n\t\t\tif (animation) {\n\t\t\t\t$clone.removeClass('tooltipster-'+ animation);\n\t\t\t}\n\t\t\t\n\t\t\t// start evaluating scenarios\n\t\t\t$.each(['window', 'document'], function(i, container) {\n\t\t\t\t\n\t\t\t\tvar takeTest = null;\n\t\t\t\t\n\t\t\t\t// let the user decide to keep on testing or not\n\t\t\t\tself.__instance._trigger({\n\t\t\t\t\tcontainer: container,\n\t\t\t\t\thelper: helper,\n\t\t\t\t\tsatisfied: satisfied,\n\t\t\t\t\ttakeTest: function(bool) {\n\t\t\t\t\t\ttakeTest = bool;\n\t\t\t\t\t},\n\t\t\t\t\tresults: testResults,\n\t\t\t\t\ttype: 'positionTest'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (\ttakeTest == true\n\t\t\t\t\t||\t(\ttakeTest != false\n\t\t\t\t\t\t&&\tsatisfied == false\n\t\t\t\t\t\t\t// skip the window scenarios if asked. If they are reintegrated by\n\t\t\t\t\t\t\t// the callback of the positionTest event, they will have to be\n\t\t\t\t\t\t\t// excluded using the callback of positionTested\n\t\t\t\t\t\t&&\t(container != 'window' || self.__options.viewportAware)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t\n\t\t\t\t\t// for each allowed side\n\t\t\t\t\tfor (var i=0; i < self.__options.side.length; i++) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar distance = {\n\t\t\t\t\t\t\t\thorizontal: 0,\n\t\t\t\t\t\t\t\tvertical: 0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tside = self.__options.side[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (side == 'top' || side == 'bottom') {\n\t\t\t\t\t\t\tdistance.vertical = self.__options.distance[side];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance.horizontal = self.__options.distance[side];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// this may have an effect on the size of the tooltip if there are css\n\t\t\t\t\t\t// rules for the arrow or something else\n\t\t\t\t\t\tself.__sideChange($clone, side);\n\t\t\t\t\t\t\n\t\t\t\t\t\t$.each(['natural', 'constrained'], function(i, mode) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttakeTest = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// emit an event on the instance\n\t\t\t\t\t\t\tself.__instance._trigger({\n\t\t\t\t\t\t\t\tcontainer: container,\n\t\t\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\t\t\thelper: helper,\n\t\t\t\t\t\t\t\tmode: mode,\n\t\t\t\t\t\t\t\tresults: testResults,\n\t\t\t\t\t\t\t\tsatisfied: satisfied,\n\t\t\t\t\t\t\t\tside: side,\n\t\t\t\t\t\t\t\ttakeTest: function(bool) {\n\t\t\t\t\t\t\t\t\ttakeTest = bool;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ttype: 'positionTest'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (\ttakeTest == true\n\t\t\t\t\t\t\t\t||\t(\ttakeTest != false\n\t\t\t\t\t\t\t\t\t&&\tsatisfied == false\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar testResult = {\n\t\t\t\t\t\t\t\t\tcontainer: container,\n\t\t\t\t\t\t\t\t\t// we let the distance as an object here, it can make things a little easier\n\t\t\t\t\t\t\t\t\t// during the user's calculations at positionTest/positionTested\n\t\t\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t\t\t// whether the tooltip can fit in the size of the viewport (does not mean\n\t\t\t\t\t\t\t\t\t// that we'll be able to make it initially entirely visible, see 'whole')\n\t\t\t\t\t\t\t\t\tfits: null,\n\t\t\t\t\t\t\t\t\tmode: mode,\n\t\t\t\t\t\t\t\t\touterSize: null,\n\t\t\t\t\t\t\t\t\tside: side,\n\t\t\t\t\t\t\t\t\tsize: null,\n\t\t\t\t\t\t\t\t\ttarget: targets[side],\n\t\t\t\t\t\t\t\t\t// check if the origin has enough surface on screen for the tooltip to\n\t\t\t\t\t\t\t\t\t// aim at it without overflowing the viewport (this is due to the thickness\n\t\t\t\t\t\t\t\t\t// of the arrow represented by the minIntersection length).\n\t\t\t\t\t\t\t\t\t// If not, the tooltip will have to be partly or entirely off screen in\n\t\t\t\t\t\t\t\t\t// order to stay docked to the origin. This value will stay null when the\n\t\t\t\t\t\t\t\t\t// container is the document, as it is not relevant\n\t\t\t\t\t\t\t\t\twhole: null\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// get the size of the tooltip with or without size constraints\n\t\t\t\t\t\t\t\tvar rulerConfigured = (mode == 'natural') ?\n\t\t\t\t\t\t\t\t\t\truler.free() :\n\t\t\t\t\t\t\t\t\t\truler.constrain(\n\t\t\t\t\t\t\t\t\t\t\thelper.geo.available[container][side].width - distance.horizontal,\n\t\t\t\t\t\t\t\t\t\t\thelper.geo.available[container][side].height - distance.vertical\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\trulerResults = rulerConfigured.measure();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttestResult.size = rulerResults.size;\n\t\t\t\t\t\t\t\ttestResult.outerSize = {\n\t\t\t\t\t\t\t\t\theight: rulerResults.size.height + distance.vertical,\n\t\t\t\t\t\t\t\t\twidth: rulerResults.size.width + distance.horizontal\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (mode == 'natural') {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(\t\thelper.geo.available[container][side].width >= testResult.outerSize.width\n\t\t\t\t\t\t\t\t\t\t&&\thelper.geo.available[container][side].height >= testResult.outerSize.height\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\ttestResult.fits = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ttestResult.fits = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\ttestResult.fits = rulerResults.fits;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (container == 'window') {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (!testResult.fits) {\n\t\t\t\t\t\t\t\t\t\ttestResult.whole = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tif (side == 'top' || side == 'bottom') {\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\ttestResult.whole = (\n\t\t\t\t\t\t\t\t\t\t\t\t\thelper.geo.origin.windowOffset.right >= self.__options.minIntersection\n\t\t\t\t\t\t\t\t\t\t\t\t&&\thelper.geo.window.size.width - helper.geo.origin.windowOffset.left >= self.__options.minIntersection\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\ttestResult.whole = (\n\t\t\t\t\t\t\t\t\t\t\t\t\thelper.geo.origin.windowOffset.bottom >= self.__options.minIntersection\n\t\t\t\t\t\t\t\t\t\t\t\t&&\thelper.geo.window.size.height - helper.geo.origin.windowOffset.top >= self.__options.minIntersection\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttestResults.push(testResult);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// we don't need to compute more positions if we have one fully on screen\n\t\t\t\t\t\t\t\tif (testResult.whole) {\n\t\t\t\t\t\t\t\t\tsatisfied = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// don't run the constrained test unless the natural width was greater\n\t\t\t\t\t\t\t\t\t// than the available width, otherwise it's pointless as we know it\n\t\t\t\t\t\t\t\t\t// wouldn't fit either\n\t\t\t\t\t\t\t\t\tif (\ttestResult.mode == 'natural'\n\t\t\t\t\t\t\t\t\t\t&&\t(\ttestResult.fits\n\t\t\t\t\t\t\t\t\t\t\t||\ttestResult.size.width <= helper.geo.available[container][side].width\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// the user may eliminate the unwanted scenarios from testResults, but he's\n\t\t\t// not supposed to alter them at this point. functionPosition and the\n\t\t\t// position event serve that purpose.\n\t\t\tself.__instance._trigger({\n\t\t\t\tedit: function(r) {\n\t\t\t\t\ttestResults = r;\n\t\t\t\t},\n\t\t\t\tevent: event,\n\t\t\t\thelper: helper,\n\t\t\t\tresults: testResults,\n\t\t\t\ttype: 'positionTested'\n\t\t\t});\n\t\t\t\n\t\t\t/**\n\t\t\t * Sort the scenarios to find the favorite one.\n\t\t\t * \n\t\t\t * The favorite scenario is when we can fully display the tooltip on screen,\n\t\t\t * even if it means that the middle of the tooltip is no longer centered on\n\t\t\t * the middle of the origin (when the origin is near the edge of the screen\n\t\t\t * or even partly off screen). We want the tooltip on the preferred side,\n\t\t\t * even if it means that we have to use a constrained size rather than a\n\t\t\t * natural one (as long as it fits). When the origin is off screen at the top\n\t\t\t * the tooltip will be positioned at the bottom (if allowed), if the origin\n\t\t\t * is off screen on the right, it will be positioned on the left, etc.\n\t\t\t * If there are no scenarios where the tooltip can fit on screen, or if the\n\t\t\t * user does not want the tooltip to fit on screen (viewportAware == false),\n\t\t\t * we fall back to the scenarios relative to the document.\n\t\t\t * \n\t\t\t * When the tooltip is bigger than the viewport in either dimension, we stop\n\t\t\t * looking at the window scenarios and consider the document scenarios only,\n\t\t\t * with the same logic to find on which side it would fit best.\n\t\t\t * \n\t\t\t * If the tooltip cannot fit the document on any side, we force it at the\n\t\t\t * bottom, so at least the user can scroll to see it.\n \t\t\t */\n\t\t\ttestResults.sort(function(a, b) {\n\t\t\t\t\n\t\t\t\t// best if it's whole (the tooltip fits and adapts to the viewport)\n\t\t\t\tif (a.whole && !b.whole) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\telse if (!a.whole && b.whole) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse if (a.whole && b.whole) {\n\t\t\t\t\t\n\t\t\t\t\tvar ai = self.__options.side.indexOf(a.side),\n\t\t\t\t\t\tbi = self.__options.side.indexOf(b.side);\n\t\t\t\t\t\n\t\t\t\t\t// use the user's sides fallback array\n\t\t\t\t\tif (ai < bi) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (ai > bi) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// will be used if the user forced the tests to continue\n\t\t\t\t\t\treturn a.mode == 'natural' ? -1 : 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\t// better if it fits\n\t\t\t\t\tif (a.fits && !b.fits) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (!a.fits && b.fits) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (a.fits && b.fits) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar ai = self.__options.side.indexOf(a.side),\n\t\t\t\t\t\t\tbi = self.__options.side.indexOf(b.side);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// use the user's sides fallback array\n\t\t\t\t\t\tif (ai < bi) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (ai > bi) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// will be used if the user forced the tests to continue\n\t\t\t\t\t\t\treturn a.mode == 'natural' ? -1 : 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if everything failed, this will give a preference to the case where\n\t\t\t\t\t\t// the tooltip overflows the document at the bottom\n\t\t\t\t\t\tif (\ta.container == 'document'\n\t\t\t\t\t\t\t&&\ta.side == 'bottom'\n\t\t\t\t\t\t\t&&\ta.mode == 'natural'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tfinalResult = testResults[0];\n\t\t\t\n\t\t\t\n\t\t\t// now let's find the coordinates of the tooltip relatively to the window\n\t\t\tfinalResult.coord = {};\n\t\t\t\n\t\t\tswitch (finalResult.side) {\n\t\t\t\t\n\t\t\t\tcase 'left':\n\t\t\t\tcase 'right':\n\t\t\t\t\tfinalResult.coord.top = Math.floor(finalResult.target - finalResult.size.height / 2);\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'bottom':\n\t\t\t\tcase 'top':\n\t\t\t\t\tfinalResult.coord.left = Math.floor(finalResult.target - finalResult.size.width / 2);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tswitch (finalResult.side) {\n\t\t\t\t\n\t\t\t\tcase 'left':\n\t\t\t\t\tfinalResult.coord.left = helper.geo.origin.windowOffset.left - finalResult.outerSize.width;\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'right':\n\t\t\t\t\tfinalResult.coord.left = helper.geo.origin.windowOffset.right + finalResult.distance.horizontal;\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'top':\n\t\t\t\t\tfinalResult.coord.top = helper.geo.origin.windowOffset.top - finalResult.outerSize.height;\n\t\t\t\t\tbreak;\n\t\t\t\t\n\t\t\t\tcase 'bottom':\n\t\t\t\t\tfinalResult.coord.top = helper.geo.origin.windowOffset.bottom + finalResult.distance.vertical;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t// if the tooltip can potentially be contained within the viewport dimensions\n\t\t\t// and that we are asked to make it fit on screen\n\t\t\tif (finalResult.container == 'window') {\n\t\t\t\t\n\t\t\t\t// if the tooltip overflows the viewport, we'll move it accordingly (then it will\n\t\t\t\t// not be centered on the middle of the origin anymore). We only move horizontally\n\t\t\t\t// for top and bottom tooltips and vice versa.\n\t\t\t\tif (finalResult.side == 'top' || finalResult.side == 'bottom') {\n\t\t\t\t\t\n\t\t\t\t\t// if there is an overflow on the left\n\t\t\t\t\tif (finalResult.coord.left < 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// prevent the overflow unless the origin itself gets off screen (minus the\n\t\t\t\t\t\t// margin needed to keep the arrow pointing at the target)\n\t\t\t\t\t\tif (helper.geo.origin.windowOffset.right - this.__options.minIntersection >= 0) {\n\t\t\t\t\t\t\tfinalResult.coord.left = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfinalResult.coord.left = helper.geo.origin.windowOffset.right - this.__options.minIntersection - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// or an overflow on the right\n\t\t\t\t\telse if (finalResult.coord.left > helper.geo.window.size.width - finalResult.size.width) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (helper.geo.origin.windowOffset.left + this.__options.minIntersection <= helper.geo.window.size.width) {\n\t\t\t\t\t\t\tfinalResult.coord.left = helper.geo.window.size.width - finalResult.size.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfinalResult.coord.left = helper.geo.origin.windowOffset.left + this.__options.minIntersection + 1 - finalResult.size.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t\t// overflow at the top\n\t\t\t\t\tif (finalResult.coord.top < 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (helper.geo.origin.windowOffset.bottom - this.__options.minIntersection >= 0) {\n\t\t\t\t\t\t\tfinalResult.coord.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfinalResult.coord.top = helper.geo.origin.windowOffset.bottom - this.__options.minIntersection - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// or at the bottom\n\t\t\t\t\telse if (finalResult.coord.top > helper.geo.window.size.height - finalResult.size.height) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (helper.geo.origin.windowOffset.top + this.__options.minIntersection <= helper.geo.window.size.height) {\n\t\t\t\t\t\t\tfinalResult.coord.top = helper.geo.window.size.height - finalResult.size.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfinalResult.coord.top = helper.geo.origin.windowOffset.top + this.__options.minIntersection + 1 - finalResult.size.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\n\t\t\t\t// there might be overflow here too but it's easier to handle. If there has\n\t\t\t\t// to be an overflow, we'll make sure it's on the right side of the screen\n\t\t\t\t// (because the browser will extend the document size if there is an overflow\n\t\t\t\t// on the right, but not on the left). The sort function above has already\n\t\t\t\t// made sure that a bottom document overflow is preferred to a top overflow,\n\t\t\t\t// so we don't have to care about it.\n\t\t\t\t\n\t\t\t\t// if there is an overflow on the right\n\t\t\t\tif (finalResult.coord.left > helper.geo.window.size.width - finalResult.size.width) {\n\t\t\t\t\t\n\t\t\t\t\t// this may actually create on overflow on the left but we'll fix it in a sec\n\t\t\t\t\tfinalResult.coord.left = helper.geo.window.size.width - finalResult.size.width;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// if there is an overflow on the left\n\t\t\t\tif (finalResult.coord.left < 0) {\n\t\t\t\t\t\n\t\t\t\t\t// don't care if it overflows the right after that, we made our best\n\t\t\t\t\tfinalResult.coord.left = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t// submit the positioning proposal to the user function which may choose to change\n\t\t\t// the side, size and/or the coordinates\n\t\t\t\n\t\t\t// first, set the rules that corresponds to the proposed side: it may change\n\t\t\t// the size of the tooltip, and the custom functionPosition may want to detect the\n\t\t\t// size of something before making a decision. So let's make things easier for the\n\t\t\t// implementor\n\t\t\tself.__sideChange($clone, finalResult.side);\n\t\t\t\n\t\t\t// add some variables to the helper\n\t\t\thelper.tooltipClone = $clone[0];\n\t\t\thelper.tooltipParent = self.__instance.option('parent').parent[0];\n\t\t\t// move informative values to the helper\n\t\t\thelper.mode = finalResult.mode;\n\t\t\thelper.whole = finalResult.whole;\n\t\t\t// add some variables to the helper for the functionPosition callback (these\n\t\t\t// will also be added to the event fired by self.__instance._trigger but that's\n\t\t\t// ok, we're just being consistent)\n\t\t\thelper.origin = self.__instance._$origin[0];\n\t\t\thelper.tooltip = self.__instance._$tooltip[0];\n\t\t\t\n\t\t\t// leave only the actionable values in there for functionPosition\n\t\t\tdelete finalResult.container;\n\t\t\tdelete finalResult.fits;\n\t\t\tdelete finalResult.mode;\n\t\t\tdelete finalResult.outerSize;\n\t\t\tdelete finalResult.whole;\n\t\t\t\n\t\t\t// keep only the distance on the relevant side, for clarity\n\t\t\tfinalResult.distance = finalResult.distance.horizontal || finalResult.distance.vertical;\n\t\t\t\n\t\t\t// beginners may not be comfortable with the concept of editing the object\n\t\t\t//  passed by reference, so we provide an edit function and pass a clone\n\t\t\tvar finalResultClone = $.extend(true, {}, finalResult);\n\t\t\t\n\t\t\t// emit an event on the instance\n\t\t\tself.__instance._trigger({\n\t\t\t\tedit: function(result) {\n\t\t\t\t\tfinalResult = result;\n\t\t\t\t},\n\t\t\t\tevent: event,\n\t\t\t\thelper: helper,\n\t\t\t\tposition: finalResultClone,\n\t\t\t\ttype: 'position'\n\t\t\t});\n\t\t\t\n\t\t\tif (self.__options.functionPosition) {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tvar result = self.__options.functionPosition.call(self, self.__instance, helper, finalResultClone);\n\t\t\t\t\n\t\t\t\tif (result) finalResult = result;\n\t\t\t}\n\t\t\t\n\t\t\t// end the positioning tests session (the user might have had a\n\t\t\t// use for it during the position event, now it's over)\n\t\t\truler.destroy();\n\t\t\t\n\t\t\t\n\t\t\t// compute the position of the target relatively to the tooltip root\n\t\t\t// element so we can place the arrow and make the needed adjustments\n\t\t\tvar arrowCoord,\n\t\t\t\tmaxVal;\n\t\t\t\n\t\t\tif (finalResult.side == 'top' || finalResult.side == 'bottom') {\n\t\t\t\t\n\t\t\t\tarrowCoord = {\n\t\t\t\t\tprop: 'left',\n\t\t\t\t\tval: finalResult.target - finalResult.coord.left\n\t\t\t\t};\n\t\t\t\tmaxVal = finalResult.size.width - this.__options.minIntersection;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\n\t\t\t\tarrowCoord = {\n\t\t\t\t\tprop: 'top',\n\t\t\t\t\tval: finalResult.target - finalResult.coord.top\n\t\t\t\t};\n\t\t\t\tmaxVal = finalResult.size.height - this.__options.minIntersection;\n\t\t\t}\n\t\t\t\n\t\t\t// cannot lie beyond the boundaries of the tooltip, minus the\n\t\t\t// arrow margin\n\t\t\tif (arrowCoord.val < this.__options.minIntersection) {\n\t\t\t\tarrowCoord.val = this.__options.minIntersection;\n\t\t\t}\n\t\t\telse if (arrowCoord.val > maxVal) {\n\t\t\t\tarrowCoord.val = maxVal;\n\t\t\t}\n\t\t\t\n\t\t\tvar originParentOffset;\n\t\t\t\n\t\t\t// let's convert the window-relative coordinates into coordinates relative to the\n\t\t\t// future positioned parent that the tooltip will be appended to\n\t\t\tif (helper.geo.origin.fixedLineage) {\n\t\t\t\t\n\t\t\t\t// same as windowOffset when the position is fixed\n\t\t\t\toriginParentOffset = helper.geo.origin.windowOffset;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\n\t\t\t\t// this assumes that the parent of the tooltip is located at\n\t\t\t\t// (0, 0) in the document, typically like when the parent is\n\t\t\t\t// <body>.\n\t\t\t\t// If we ever allow other types of parent, .tooltipster-ruler\n\t\t\t\t// will have to be appended to the parent to inherit css style\n\t\t\t\t// values that affect the display of the text and such.\n\t\t\t\toriginParentOffset = {\n\t\t\t\t\tleft: helper.geo.origin.windowOffset.left + helper.geo.window.scroll.left,\n\t\t\t\t\ttop: helper.geo.origin.windowOffset.top + helper.geo.window.scroll.top\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tfinalResult.coord = {\n\t\t\t\tleft: originParentOffset.left + (finalResult.coord.left - helper.geo.origin.windowOffset.left),\n\t\t\t\ttop: originParentOffset.top + (finalResult.coord.top - helper.geo.origin.windowOffset.top)\n\t\t\t};\n\t\t\t\n\t\t\t// set position values on the original tooltip element\n\t\t\t\n\t\t\tself.__sideChange(self.__instance._$tooltip, finalResult.side);\n\t\t\t\n\t\t\tif (helper.geo.origin.fixedLineage) {\n\t\t\t\tself.__instance._$tooltip\n\t\t\t\t\t.css('position', 'fixed');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// CSS default\n\t\t\t\tself.__instance._$tooltip\n\t\t\t\t\t.css('position', '');\n\t\t\t}\n\t\t\t\n\t\t\tself.__instance._$tooltip\n\t\t\t\t.css({\n\t\t\t\t\tleft: finalResult.coord.left,\n\t\t\t\t\ttop: finalResult.coord.top,\n\t\t\t\t\t// we need to set a size even if the tooltip is in its natural size\n\t\t\t\t\t// because when the tooltip is positioned beyond the width of the body\n\t\t\t\t\t// (which is by default the width of the window; it will happen when\n\t\t\t\t\t// you scroll the window horizontally to get to the origin), its text\n\t\t\t\t\t// content will otherwise break lines at each word to keep up with the\n\t\t\t\t\t// body overflow strategy.\n\t\t\t\t\theight: finalResult.size.height,\n\t\t\t\t\twidth: finalResult.size.width\n\t\t\t\t})\n\t\t\t\t.find('.tooltipster-arrow')\n\t\t\t\t\t.css({\n\t\t\t\t\t\t'left': '',\n\t\t\t\t\t\t'top': ''\n\t\t\t\t\t})\n\t\t\t\t\t.css(arrowCoord.prop, arrowCoord.val);\n\t\t\t\n\t\t\t// append the tooltip HTML element to its parent\n\t\t\tself.__instance._$tooltip.appendTo(self.__instance.option('parent'));\n\t\t\t\n\t\t\tself.__instance._trigger({\n\t\t\t\ttype: 'repositioned',\n\t\t\t\tevent: event,\n\t\t\t\tposition: finalResult\n\t\t\t});\n\t\t},\n\t\t\n\t\t/**\n\t\t * Make whatever modifications are needed when the side is changed. This has\n\t\t * been made an independant method for easy inheritance in custom plugins based\n\t\t * on this default plugin.\n\t\t *\n\t\t * @param {object} $obj\n\t\t * @param {string} side\n\t\t * @private\n\t\t */\n\t\t__sideChange: function($obj, side) {\n\t\t\t\n\t\t\t$obj\n\t\t\t\t.removeClass('tooltipster-bottom')\n\t\t\t\t.removeClass('tooltipster-left')\n\t\t\t\t.removeClass('tooltipster-right')\n\t\t\t\t.removeClass('tooltipster-top')\n\t\t\t\t.addClass('tooltipster-'+ side);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Returns the target that the tooltip should aim at for a given side.\n\t\t * The calculated value is a distance from the edge of the window\n\t\t * (left edge for top/bottom sides, top edge for left/right side). The\n\t\t * tooltip will be centered on that position and the arrow will be\n\t\t * positioned there (as much as possible).\n\t\t *\n\t\t * @param {object} helper\n\t\t * @return {integer}\n\t\t * @private\n\t\t */\n\t\t__targetFind: function(helper) {\n\t\t\t\n\t\t\tvar target = {},\n\t\t\t\trects = this.__instance._$origin[0].getClientRects();\n\t\t\t\n\t\t\t// these lines fix a Chrome bug (issue #491)\n\t\t\tif (rects.length > 1) {\n\t\t\t\tvar opacity = this.__instance._$origin.css('opacity');\n\t\t\t\tif(opacity == 1) {\n\t\t\t\t\tthis.__instance._$origin.css('opacity', 0.99);\n\t\t\t\t\trects = this.__instance._$origin[0].getClientRects();\n\t\t\t\t\tthis.__instance._$origin.css('opacity', 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// by default, the target will be the middle of the origin\n\t\t\tif (rects.length < 2) {\n\t\t\t\t\n\t\t\t\ttarget.top = Math.floor(helper.geo.origin.windowOffset.left + (helper.geo.origin.size.width / 2));\n\t\t\t\ttarget.bottom = target.top;\n\t\t\t\t\n\t\t\t\ttarget.left = Math.floor(helper.geo.origin.windowOffset.top + (helper.geo.origin.size.height / 2));\n\t\t\t\ttarget.right = target.left;\n\t\t\t}\n\t\t\t// if multiple client rects exist, the element may be text split\n\t\t\t// up into multiple lines and the middle of the origin may not be\n\t\t\t// best option anymore. We need to choose the best target client rect\n\t\t\telse {\n\t\t\t\t\n\t\t\t\t// top: the first\n\t\t\t\tvar targetRect = rects[0];\n\t\t\t\ttarget.top = Math.floor(targetRect.left + (targetRect.right - targetRect.left) / 2);\n\t\t\n\t\t\t\t// right: the middle line, rounded down in case there is an even\n\t\t\t\t// number of lines (looks more centered => check out the\n\t\t\t\t// demo with 4 split lines)\n\t\t\t\tif (rects.length > 2) {\n\t\t\t\t\ttargetRect = rects[Math.ceil(rects.length / 2) - 1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttargetRect = rects[0];\n\t\t\t\t}\n\t\t\t\ttarget.right = Math.floor(targetRect.top + (targetRect.bottom - targetRect.top) / 2);\n\t\t\n\t\t\t\t// bottom: the last\n\t\t\t\ttargetRect = rects[rects.length - 1];\n\t\t\t\ttarget.bottom = Math.floor(targetRect.left + (targetRect.right - targetRect.left) / 2);\n\t\t\n\t\t\t\t// left: the middle line, rounded up\n\t\t\t\tif (rects.length > 2) {\n\t\t\t\t\ttargetRect = rects[Math.ceil((rects.length + 1) / 2) - 1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttargetRect = rects[rects.length - 1];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttarget.left = Math.floor(targetRect.top + (targetRect.bottom - targetRect.top) / 2);\n\t\t\t}\n\t\t\t\n\t\t\treturn target;\n\t\t}\n\t}\n});\n\n/* a build task will add \"return $;\" here */\nreturn $;\n\n}));\n","/* Blob.js\n * A Blob implementation.\n * 2014-07-24\n *\n * By Eli Grey, http://eligrey.com\n * By Devin Samarin, https://github.com/dsamarin\n * License: MIT\n *   See https://github.com/eligrey/Blob.js/blob/master/LICENSE.md\n */\n\n/*global self, unescape */\n/*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,\n  plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/Blob.js/blob/master/Blob.js */\n\n(function (view) {\n\t\"use strict\";\n\n\tview.URL = view.URL || view.webkitURL;\n\n\tif (view.Blob && view.URL) {\n\t\ttry {\n\t\t\tnew Blob;\n\t\t\treturn;\n\t\t} catch (e) {}\n\t}\n\n\t// Internally we use a BlobBuilder implementation to base Blob off of\n\t// in order to support older browsers that only have BlobBuilder\n\tvar BlobBuilder = view.BlobBuilder || view.WebKitBlobBuilder || view.MozBlobBuilder || (function(view) {\n\t\tvar\n\t\t\t  get_class = function(object) {\n\t\t\t\treturn Object.prototype.toString.call(object).match(/^\\[object\\s(.*)\\]$/)[1];\n\t\t\t}\n\t\t\t, FakeBlobBuilder = function BlobBuilder() {\n\t\t\t\tthis.data = [];\n\t\t\t}\n\t\t\t, FakeBlob = function Blob(data, type, encoding) {\n\t\t\t\tthis.data = data;\n\t\t\t\tthis.size = data.length;\n\t\t\t\tthis.type = type;\n\t\t\t\tthis.encoding = encoding;\n\t\t\t}\n\t\t\t, FBB_proto = FakeBlobBuilder.prototype\n\t\t\t, FB_proto = FakeBlob.prototype\n\t\t\t, FileReaderSync = view.FileReaderSync\n\t\t\t, FileException = function(type) {\n\t\t\t\tthis.code = this[this.name = type];\n\t\t\t}\n\t\t\t, file_ex_codes = (\n\t\t\t\t  \"NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR \"\n\t\t\t\t+ \"NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR\"\n\t\t\t).split(\" \")\n\t\t\t, file_ex_code = file_ex_codes.length\n\t\t\t, real_URL = view.URL || view.webkitURL || view\n\t\t\t, real_create_object_URL = real_URL.createObjectURL\n\t\t\t, real_revoke_object_URL = real_URL.revokeObjectURL\n\t\t\t, URL = real_URL\n\t\t\t, btoa = view.btoa\n\t\t\t, atob = view.atob\n\n\t\t\t, ArrayBuffer = view.ArrayBuffer\n\t\t\t, Uint8Array = view.Uint8Array\n\n\t\t\t, origin = /^[\\w-]+:\\/*\\[?[\\w\\.:-]+\\]?(?::[0-9]+)?/\n\t\t;\n\t\tFakeBlob.fake = FB_proto.fake = true;\n\t\twhile (file_ex_code--) {\n\t\t\tFileException.prototype[file_ex_codes[file_ex_code]] = file_ex_code + 1;\n\t\t}\n\t\t// Polyfill URL\n\t\tif (!real_URL.createObjectURL) {\n\t\t\tURL = view.URL = function(uri) {\n\t\t\t\tvar\n\t\t\t\t\t  uri_info = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t\t\t\t, uri_origin\n\t\t\t\t;\n\t\t\t\turi_info.href = uri;\n\t\t\t\tif (!(\"origin\" in uri_info)) {\n\t\t\t\t\tif (uri_info.protocol.toLowerCase() === \"data:\") {\n\t\t\t\t\t\turi_info.origin = null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\turi_origin = uri.match(origin);\n\t\t\t\t\t\turi_info.origin = uri_origin && uri_origin[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn uri_info;\n\t\t\t};\n\t\t}\n\t\tURL.createObjectURL = function(blob) {\n\t\t\tvar\n\t\t\t\t  type = blob.type\n\t\t\t\t, data_URI_header\n\t\t\t;\n\t\t\tif (type === null) {\n\t\t\t\ttype = \"application/octet-stream\";\n\t\t\t}\n\t\t\tif (blob instanceof FakeBlob) {\n\t\t\t\tdata_URI_header = \"data:\" + type;\n\t\t\t\tif (blob.encoding === \"base64\") {\n\t\t\t\t\treturn data_URI_header + \";base64,\" + blob.data;\n\t\t\t\t} else if (blob.encoding === \"URI\") {\n\t\t\t\t\treturn data_URI_header + \",\" + decodeURIComponent(blob.data);\n\t\t\t\t} if (btoa) {\n\t\t\t\t\treturn data_URI_header + \";base64,\" + btoa(blob.data);\n\t\t\t\t} else {\n\t\t\t\t\treturn data_URI_header + \",\" + encodeURIComponent(blob.data);\n\t\t\t\t}\n\t\t\t} else if (real_create_object_URL) {\n\t\t\t\treturn real_create_object_URL.call(real_URL, blob);\n\t\t\t}\n\t\t};\n\t\tURL.revokeObjectURL = function(object_URL) {\n\t\t\tif (object_URL.substring(0, 5) !== \"data:\" && real_revoke_object_URL) {\n\t\t\t\treal_revoke_object_URL.call(real_URL, object_URL);\n\t\t\t}\n\t\t};\n\t\tFBB_proto.append = function(data/*, endings*/) {\n\t\t\tvar bb = this.data;\n\t\t\t// decode data to a binary string\n\t\t\tif (Uint8Array && (data instanceof ArrayBuffer || data instanceof Uint8Array)) {\n\t\t\t\tvar\n\t\t\t\t\t  str = \"\"\n\t\t\t\t\t, buf = new Uint8Array(data)\n\t\t\t\t\t, i = 0\n\t\t\t\t\t, buf_len = buf.length\n\t\t\t\t;\n\t\t\t\tfor (; i < buf_len; i++) {\n\t\t\t\t\tstr += String.fromCharCode(buf[i]);\n\t\t\t\t}\n\t\t\t\tbb.push(str);\n\t\t\t} else if (get_class(data) === \"Blob\" || get_class(data) === \"File\") {\n\t\t\t\tif (FileReaderSync) {\n\t\t\t\t\tvar fr = new FileReaderSync;\n\t\t\t\t\tbb.push(fr.readAsBinaryString(data));\n\t\t\t\t} else {\n\t\t\t\t\t// async FileReader won't work as BlobBuilder is sync\n\t\t\t\t\tthrow new FileException(\"NOT_READABLE_ERR\");\n\t\t\t\t}\n\t\t\t} else if (data instanceof FakeBlob) {\n\t\t\t\tif (data.encoding === \"base64\" && atob) {\n\t\t\t\t\tbb.push(atob(data.data));\n\t\t\t\t} else if (data.encoding === \"URI\") {\n\t\t\t\t\tbb.push(decodeURIComponent(data.data));\n\t\t\t\t} else if (data.encoding === \"raw\") {\n\t\t\t\t\tbb.push(data.data);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (typeof data !== \"string\") {\n\t\t\t\t\tdata += \"\"; // convert unsupported types to strings\n\t\t\t\t}\n\t\t\t\t// decode UTF-16 to binary string\n\t\t\t\tbb.push(unescape(encodeURIComponent(data)));\n\t\t\t}\n\t\t};\n\t\tFBB_proto.getBlob = function(type) {\n\t\t\tif (!arguments.length) {\n\t\t\t\ttype = null;\n\t\t\t}\n\t\t\treturn new FakeBlob(this.data.join(\"\"), type, \"raw\");\n\t\t};\n\t\tFBB_proto.toString = function() {\n\t\t\treturn \"[object BlobBuilder]\";\n\t\t};\n\t\tFB_proto.slice = function(start, end, type) {\n\t\t\tvar args = arguments.length;\n\t\t\tif (args < 3) {\n\t\t\t\ttype = null;\n\t\t\t}\n\t\t\treturn new FakeBlob(\n\t\t\t\t  this.data.slice(start, args > 1 ? end : this.data.length)\n\t\t\t\t, type\n\t\t\t\t, this.encoding\n\t\t\t);\n\t\t};\n\t\tFB_proto.toString = function() {\n\t\t\treturn \"[object Blob]\";\n\t\t};\n\t\tFB_proto.close = function() {\n\t\t\tthis.size = 0;\n\t\t\tdelete this.data;\n\t\t};\n\t\treturn FakeBlobBuilder;\n\t}(view));\n\n\tview.Blob = function(blobParts, options) {\n\t\tvar type = options ? (options.type || \"\") : \"\";\n\t\tvar builder = new BlobBuilder();\n\t\tif (blobParts) {\n\t\t\tfor (var i = 0, len = blobParts.length; i < len; i++) {\n\t\t\t\tif (Uint8Array && blobParts[i] instanceof Uint8Array) {\n\t\t\t\t\tbuilder.append(blobParts[i].buffer);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbuilder.append(blobParts[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar blob = builder.getBlob(type);\n\t\tif (!blob.slice && blob.webkitSlice) {\n\t\t\tblob.slice = blob.webkitSlice;\n\t\t}\n\t\treturn blob;\n\t};\n\n\tvar getPrototypeOf = Object.getPrototypeOf || function(object) {\n\t\treturn object.__proto__;\n\t};\n\tview.Blob.prototype = getPrototypeOf(new view.Blob());\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this.content || this));","/**\n *\n *\tFile:\tjurlp.js\n *\n *\tTitle:\tJQuery URL parser.\n *\n * \tJQuery URL parser plugin for parsing, manipulating, filtering and monitoring URLs in href and src attributes within arbitrary elements (including document.location.href), as well as creating anchor elements from URLs found in HTML/text.\n *\n *\tAbout: Authors\n *\n *\tThomas James Bonner (tom.bonner@gmail.com).\n *\n *\tYonas Sandb�k (seltar@gmail.com).\n *\n *\tAbout: Version\n *\n *\t1.0.4\n *\n *\tAbout: License\n *\n *\tCopyright (C) 2012, Thomas James Bonner (tom.bonner@gmail.com).\n *\n *\tMIT License:\n *\tPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n *\t- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n *\n *\t- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n **/ \n\n/**\n *\n *\tSection: URL overview.\n *\n *\tURL naming scheme:\n *\n *\tA quick quide to URL nomenclature in this plugin.\n *\n *\tThroughout this plugin, URLs are segmented and refered to in the following manner;\n *\n *\t> http://username:password@www.example.com:443/path/file.name?query=string#anchor\n *\t> |_____||______| |______| |_____________| |_||_____________||___________||_____|\n *\t>    |       |       |           |          |         |             |         |\n *\t> scheme   user   password      host       port      path         query   fragment\n *\t> |______________________________________________________________________________|\n *\t>                                        |\n *  >                                       url\n *\n *\tScheme:\n *\n *\tContains the protocol identifier (i.e. \"https://\", \"ftp://\").\n *\n *\tUser:\n *\n *\tConains the username to use when connecting to the host server. This segment may be empty.\n *\n *\tPassword:\n *\n *\tContains the password to use in conjunction with the username when connecting to the remote server. This segment may be empty (and cannot be set without a user name).\n *\n *\tHost:\n *\n *\tContains the name or IP address of the host server (i.e. \"www.example.com\", or \"127.0.0.1\").\n *\n *\tPort:\n *\n *\tContains the listening port number for the host server (i.e. \"80\", or \"8080\"). Note that an empty port value implies the default port (80).\n *\n *\tPath:\n *\n *\tContains the file path (i.e. \"/index.html\", or \"/\").\n *\n *\tQuery:\n *\n *\tContains any parameters passed in the query (i.e. \"?param1=value1&param2=value2\"). This segment may be empty.\n *\n *\tFragment:\n *\n *\tContains any anchors/hash tags (i.e. \"#elementname\"). This segment may be empty.\n *\n *\tSection: URL Objects\n *\n *\tURL object definition.\n *\n *\tFor the purposes of this plugin, URLs can be represented either as a string, for example \"http://www.example.com:8080/path/file.name?query=string#anchor\", or as an object;\n *\n *\t(start code)\n *\n *\t{\n *\t\tscheme: \"http://\"\n *\t\tuser: \"username\",\n *\t\tpassword: \"password\",\n *\t\thost: \"www.example.com\",\n *\t\tport: \"8080\",\n *\t\tpath: \"/path/file.name\",\n *\t\tquery: \"?query=string\",\n *\t\tfragment: \"#anchor\" \n *\t}\n *\n *\t(end code)\n *\n *\tTherefore, wherever URLs are supplied as a parameter to the plugin via the <url> or <proxy> methods, either a string or object representation or the URL may be supplied.\n *\n *\tURL objects that have been returned via the parser interface can easily be converted to a string by calling the objects toString() method. \n *\n *\tExample:\n *\n *\t(start code)\n *\n *\t// Parse the document.location.href URL, and convert it back to a string again.\n *\t$(document).jurlp(\"url\").toString();\n *\n *\t(end code)\n *\n */\n \n/**\n *\n *\tSection: Quick overview\n *\n *\tUseful example code.\n *\n *\t(start code)\n *\n *\t// Parse and set the element(s) URL\n *\t$(\"a\").jurlp(\"url\");\n *\t$(\"a\").jurlp(\"url\", \"http://www.example.com/\");\n *\t\n *\t// Get or set individual URL segments for the element(s)\n *\t$(\"a\").jurlp(\"scheme\");\n *\t$(\"a\").jurlp(\"scheme\", \"https://\");\n *\n *\t$(\"a\").jurlp(\"user\");\n *\t$(\"a\").jurlp(\"user\", \"username\");\n *\n *\t$(\"a\").jurlp(\"password\");\n *\t$(\"a\").jurlp(\"password\", \"password\");\n *\n *\t$(\"a\").jurlp(\"host\");\n *\t$(\"a\").jurlp(\"host\", \"www.example.com\");\n *\t\n *\t$(\"a\").jurlp(\"port\");\n *\t$(\"a\").jurlp(\"port\", \"8080\");\n *\t\n *\t$(\"a\").jurlp(\"path\");\n *\t$(\"a\").jurlp(\"path\", \"../file.name\");\n *\t\n *\t$(\"a\").jurlp(\"query\");\n *\t$(\"a\").jurlp(\"query\", {\"param\":\"value\"});\n *\t\n *\t$(\"a\").jurlp(\"fragment\");\n *\t$(\"a\").jurlp(\"fragment\", \"elementid\");\n *\t\n *\t// Filter on URL segments\n *\t$(\"a\").jurlp(\"filter\", \"scheme\", \"^=\", \"http\")\n *\t      .jurlp(\"filter\", \"user\", \"=\", \"user\")\n *\t      .jurlp(\"filter\", \"password\", \"=\", \"password\")\n *\t      .jurlp(\"filter\", \"host\", \"=\", \"www.example.com\")\n *\t      .jurlp(\"filter\", \"port\", \"!=\", \"8080\")\n *\t      .jurlp(\"filter\", \"path\", \"$=\", \".html\")\n *\t      .jurlp(\"filter\", \"query\", \"*=\", \"param=value\")\n *\t      .jurlp(\"filter\", \"fragment\", \"regex\", /(\\#)/);\n *\t\n *\t// Watch a selector for new nodes\n *\t$(\"a:eq(0)\").jurlp(\"watch\", function(element, selector){})\n *\t            .jurlp(\"filter\", \"host\", \"=\", \"www.example.com\")\n *\t            .jurlp(\"query\",{\"found\":\"example\"});\n *\t\n *\t$(\"body\").prepend(\"<a href='http://www.example.com/'></a>\");\n *\t\n *\t$(\"a:eq(0)\").jurlp(\"unwatch\");\n *\t\n *\t// Parse an element's text for URLs and create/return anchor elements\n *\t$(\"<div>www.example.com</div>\").jurlp();\n *\n *\t// Get an interface for parsing/manipulating the supplied URL\n *\turl = $.jurlp(\"http://www.example.com:80/path/file.name?param1=value1#fragment\");\n *\n *\t// Parse the URL to an object.\n *\turl.url();\n *\n *\t// Get the URL scheme.\n *\turl.scheme();\n *\n *\t// Get the URL user name.\n *\turl.user();\n *\n *\t// Get the URL password.\n *\turl.password();\n *\n *\t// Get the URL host.\n *\turl.host();\n *\n *\t// Get the URL port.\n *\turl.port();\n *\n *\t// Get the URL path.\n *\turl.path();\n *\n *\t// Get the URL query.\n *\turl.query();\n *\n *\t// Get a specific parameter value from the URL query.\n *\turl.query().param1;\n *\n *\t// Get the URL fragment.\n *\turl.fragment();\n *\n *\t// Set the full URL.\n *\turl.url(\"http://www.example.com:80/path/file.name?param1=value1#fragment\");\n *\n *\t// Set the URL scheme.\n *\turl.scheme(\"https://\");\n *\n *\t// Set the URL user name.\n *\turl.user(\"user\");\n *\n *\t// Set the URL password.\n *\turl.password(\"password\");\n *\n *\t// Set the URL host.\n *\turl.host(\"www.newexample.com\");\n *\n *\t// Set the URL port.\n *\turl.port(\"80\");\n *\n *\t// Set the URL path.\n *\turl.path(\"/newpath/newfile.file\");\n *\n *\t// Append to the URL path.\n *\turl.path(\"./newfile.file\");\n *\n *\t// Remove two path elements and append to the URL path.\n *\turl.path(\"../../newfile.file\");\n *\n *\t// Set the URL query.\n *\turl.query(\"?param=value\");\n *\n *\t// Append/modify the URL query (string or object)\n *\turl.query(\"param=value\");\n *\turl.query({\"param\":\"value\"});\n *\n *\t// Remove the URL query\n *\turl.query(\"\");\n *\turl.query({});\n *\n *\t// Set the URL fragment.\n *\turl.fragment(\"#newfragment\");\n *\n *\t(end code)\n *\n **/\n\n/**\n *\tSection: Parsing document.location.href\n *\n *\tParsing the document URL.\n *\n *\tThe document URL (document.location.href) can be parsed by specifying the HTML document element to the parser in the following manner;\n *\n *\t(start code)\n *\n *\t// Parse the document.location.href URL string into a URL object\n *\t$(document).jurlp(\"url\");\n *\n *\t(end code)\n *\n *\tSimilarly, the document URL can be modified by the plugin, but it is worth noting that changes will not be directly applied to document.location.href until <goto> is explicitly called on the element, and instead, a working copy of the URL is stored under the documents \"data-href\" attribute.\n *\n *\t(start code)\n *\n *\t// Does not modify document.location.href (updates $(document).data(\"href\"))\n *\t$(document).jurlp(\"url\", \"www.example.com\");\n *\n *\t// Does modify document.location.href (from $(document).data(\"href\"))\n *\t$(document).jurlp(\"goto\");\n *\n *\t(end code)\n *\n */\n \n/**\n *\tSection: Parsing elements with an \"href\" or \"src\" attribute.\n *\n *\tParsing \"href\" or \"src\" attributes.\n *\n *\tElements with an \"href\" or \"src\" attribute (i.e. <a href=\"\">, <base href=\"\">, <link href=\"\">, <img src=\"\">, <script src=\"\"> or <iframe src=\"\">), can be parsed by specifying the element(s) to the parser in the following manner;\n *\n *\t(start code)\n *\n *\t// Parse all anchor element URLs into an array\n *\t$(\"a\").jurlp(\"url\");\n *\n *\t(end code)\n *\n *\tAny modifications made to the URL will modify the relevant \"href\" or \"src\" attribute directly. If you want to visit the URL within an elements \"href\" or \"src\" attribute, it is possible to call <goto> on the element.\n *\n *\t(start code)\n *\n *\t// Directly set the first anchor elements URL, and then goto it!\n *\t$(\"a:eq(0)\").jurlp(\"url\", \"www.example.com\").jurlp(\"goto\");\n *\n *\t(end code)\n *\n */\n\n/**\n *\tSection: Parsing element text/HTML.\n *\n *\tParsing text/HTML for URLs.\n *\n *\tIt is possible for the URL parser to find URLs within text/HTML, and convert them into HTML anchor elements.\n *\n *\t(start code)\n *\n *\t// Parse the HTML for URLs, and convert all URLs found in the text to anchors.\n *\t$(\"<div>Here are URLs: www.example1.com, www.example2.com</div>\").jurlp();\n *\n *\t// HTML becomes:\n *\t<div>\n *\t\tHere are URLs: \n *\t\t<a href=\"http://www.example1.com/\" class=\"jurlp-no-watch\">www.example1.com</a>, \n *\t\t<a href=\"http://www.example2.com/\" class=\"jurlp-no-watch\">www.example2.com</a>\n *\t</div>\n *\t(end code)\n *\n **/\n \n/**\n *\tSection: Parsing URL strings directly.\n *\n *\tHow to directly parse, modify or monitor an arbitrary URL string.\n *\n *\t(start code)\n *\n *\t// Get an interface for parsing the document URL...\n *\tvar url = $.jurlp();\n *\n *\t// .. or get an interface for parsing your own URL.\n *\turl = $.jurlp(\"www.example.com\");\n *\n *\t// Parse the URL to an object.\n *\turl.url();\n *\n *\t// Get the URL scheme.\n *\turl.scheme();\n *\n *\t// Get the URL host.\n *\turl.host();\n *\n *\t// Get the URL port.\n *\turl.port();\n *\n *\t// Get the URL path.\n *\turl.path();\n *\n *\t// Get the URL query.\n *\turl.query();\n *\n *\t// Get a specific parameter value from the URL query.\n *\turl.query().parameter;\n *\n *\t// Get the URL fragment.\n *\turl.fragment();\n *\n *\t// Create a watch for new URLs that contain \"example.com\" in the host name\n *\tvar watch = $.jurlp(\"example.com\").watch(function(element, selector){\n *\t\tconsole.log(\"Found example.com URL!\", element, selector);\n *\t});\n *\n *\t// We can even apply filters to the watch to be sure!\n *\twatch.jurlp(\"filter\", \"host\", \"*=\", \"example.com\");\n *\n *\t// Append a new URL, which will trigger the watch\n *\t$(\"body\").append(\"<a href=\\\"www.example.com\\\"></a>\");\n *\n *\t// Stop watching for \"example.com\" URLs.\n *\twatch.jurlp(\"unwatch\");\n *\n *\t(end code)\n *\n */\n \n/**\n *\tSection: Unknown URLs.\n *\n *\tOverview of unknown URL parsing.\n *\n *\tUnknown scheme:\n *\n *\tThe parser will attempt to parse any type of URL it encounters based on its scheme. However, not all URLs are parsable, for example \"spotify:track:<trackid>\". In this case, the following URL object is returned;\n *\n *\t(start code)\n *\n *\t{\n *\t\tscheme: \"spotify:\",\n *\t\turl: \"track:<trackid>\"\n *\t}\n *\n *\t(end code)\n *\n *\tThe unknown URL object will always contain the scheme (if present), for filtering purposes, and also contains a toString() method, which will convert the URL object back to the original URL string.\n *\n *\tmailto:\n *\n *\t\"mailto:\" URLs are parsable in the same manner as a regular HTTP URL. For example, the following URL object is returned for a URL with a \"mailto:\" scheme;\n *\n *\t(start code)\n *\n *\t{\n *\t\tscheme: \"mailto:\"\n *\t\tuser: \"username\",\n *\t\tpassword: \"\",\n *\t\thost: \"www.example.com\",\n *\t\tport: \"\",\n *\t\tpath: \"\",\n *\t\tquery: \"?subject=subject&body=body\",\n *\t\tfragment: \"\" \n *\t}\n *\n *\t(end code)\n *\n *\tTherefore, \"mailto:\" URLs can be fully parsed using this parser, but note that it is not possible to set the password, port or fragment strings on a \"mailto:\" URL.\n *\n *\tjavascript:\n *\n *\t\"javascript\" URLs are parsable in the same manner as a regular HTTP URL. For example, the following URL object is returned for a URL with a \"javasrcipt:\" scheme;\n *\n *\t(start code)\n *\n *\t{\n *\t\tscheme: \"javascript:\"\n *\t\tuser: \"\",\n *\t\tpassword: \"\",\n *\t\thost: \"www.example.com\",\n *\t\tport: \"\",\n *\t\tpath: \"/\",\n *\t\tquery: \"\",\n *\t\tfragment: \"\",\n *\t\tjavascript: \"alert('!');\"\n *\t}\n *\n *\t(end code)\n *\n *\tTherefore, \"javascript:\" URLs can be fully parsed using this parser, but note that the current \"document.location.href\" will always be parsed/returned as the main URL object.\n *\n **/\n \n/**\n *\tSection: Operators.\n *\n *\tOverview of filter operators.\n *\n *\tThe following filter operators may be specified as the \"operator\" parameter to the <filter> method.\n *\n *\tURL filter operators:\n *\n *\t\"=\" - Equal to.\n *\t\"!=\" - Not equal to.\n *\t\"*=\" - Contains.\n *\t\"<\" - Less than. \n *\t\"<=\" - Less than or equal to.\n *\t\">\" - Greater than.\n *\t\">=\" - Greater than or equal to.\n *\t\"^=\" - Starts with.\n *\t\"$=\" - Ends with.\n *\t\"regex\" - Regular expression.\n *\n **/\n\n /**\n *\tSection: this parameter.\n *\n *\tWhere \"this\" is refered to as an argument to the method functions, it may be one of the following;\n *\n *\t- HTML document element.\n *\t- An array of 1 or more elements with a \"href\" or \"src\" attribute.\n *\t- A URL parser interface returned from $.jurlp().\n *\n **/\n\n(\n\tfunction ( $ )\n\t{\n\t\t/**\n\t\t *\n\t\t *\tRegular expression for parsing URLs.\n\t\t *\n\t\t *\tTaken from parseUri 1.2 (http://blog.stevenlevithan.com/archives/parseuri).\n\t\t *\n\t\t **/ \n\n\t\tvar urlRegEx = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\n\t\t/*\n\n\t\t\tGlobal object of watched selectors and their array of callstacks.\n\n\t\t*/ \n\n\t\tvar selectorCallStack = { };\n\n\t\t/*\n\n\t\t\tCurrently watched selector. ToDo: Remove this and use a better mechanism for selector tracking.\n\n\t\t*/\n\n\t\tvar currentSelector = \"\";\n\n\t\t/**\n\t\t *\n\t\t *\tSection: Internal functions.\n\t\t *\n\t\t *\tAll internal private functions.\n\t\t *\n\t\t *\tThis section contains all internal functions that perform the grunt work for the parser interface.\n\t\t *\n\t\t **/ \n\n\t\t/**\n\t\t *\n\t\t *\tFunction: initialiseElement\n\t\t *\n\t\t *\tInitialise an element for use with the URL parser.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to initialise. See <this parameter>.\n\t\t *\n\t\t **/ \n\n\t\tvar initialiseElement = function ( )\n\t\t{\n\t\t\t/* Attempt to retreive a href from the element */ \n\n\t\t\tvar href = getHref.apply ( this );\n\n\t\t\t/* Was a href found for the element? */ \n\n\t\t\tif ( href == \"\" )\n\t\t\t{\n\t\t\t\t/* Is the current element the document? */\n\n\t\t\t\tif ( this.get ( 0 ) == $( document ).get ( 0 ) )\n\t\t\t\t{\n\t\t\t\t\t/* Use the document href */ \n\n\t\t\t\t\thref = document.location.href;\n\t\t\t\t}\n\t\t\t\telse if ( this.is ( \"[href]\" ) )\n\t\t\t\t{\n\t\t\t\t\t/* Use the element href attribute */ \n\n\t\t\t\t\thref = this.attr ( \"href\" );\n\t\t\t\t}\n\t\t\t\telse if ( this.is ( \"[src]\" ) )\n\t\t\t\t{\n\t\t\t\t\t/* Use the element src attribute */ \n\n\t\t\t\t\thref = this.attr ( \"src\" );\n\t\t\t\t}\n\n\t\t\t\t/* Check the href is not empty so we don't initialise the \"data-href\" attribute on text elements (although maybe this is not wanted, as an empty href is technically the current page?). */ \n\n\t\t\t\tif ( href != \"\" )\n\t\t\t\t{\n\t\t\t\t\t/* Sanitise the URL */ \n\n\t\t\t\t\thref = sanitiseUrl ( href );\n\n\t\t\t\t\t/* Store the URL as a data attribute within the element */ \n\n\t\t\t\t\tthis.data ( \"href\", href );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: initialiseElementText\n\t\t *\n\t\t *\tInitialise an elements text field for use with the URL parser.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to initialise.\n\t\t *\n\t\t **/ \n\n\t\tvar initialiseElementText = function ( )\n\t\t{\n\t\t\t/* Is the current element not the document, and also does not contain a \"href\" attribute */ \n\n\t\t\tif ( this.get ( 0 ) != $( document ).get ( 0 ) && this.attr ( \"href\" ) == null && this.attr ( \"src\" ) == null )\n\t\t\t{\n\t\t\t\t/* Does the element contain anything? */ \n\n\t\t\t\tif ( this.html ( ) != null && this.hasClass ( \"jurlp-span\" ) == false )\n\t\t\t\t{\n\t\t\t\t\tvar urls = [ ];\n\t\t\t\t\tvar modifiedHtml = false;\n\t\t\t\t\tvar match = \"\";\n\n\t\t\t\t\t/* Regular expression for finding URLs in free text */ \n\n\t\t\t\t\tvar findUrlRegExp = /((((mailto|spotify|skype)\\:([a-zA-Z0-9\\.\\-\\:@\\?\\=\\%]*))|((ftp|git|irc|ircs|irc6|pop|rss|ssh|svn|udp|feed|imap|ldap|nntp|rtmp|sftp|snmp|xmpp|http|https|telnet|ventrilo|webcal|view\\-source)\\:[\\/]{2})?(([a-zA-Z0-9\\.\\-]+)\\:([a-zA-Z0-9\\.&;%\\$\\-]+)*@)*((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])|localhost|([a-zA-Z0-9\\-]+\\.)*[a-zA-Z0-9\\-]+\\.(aero|arpa|asia|biz|cat|com|coop|edu|gov|info|int|jobs|mil|mobi|museum|name|net|org|pro|tel|travel|xn--0zwm56d|xn--11b5bs3a9aj6g|xn--80akhbyknj4f|xn--9t4b11yi5a|xn--deba0ad|xn--g6w251d|xn--hgbk6aj7f53bba|xn--hlcj6aya9esc7a|xn--jxalpdlp|xn--kgbechtv|xn--zckzah|[a-zA-Z]{2}))(\\:[0-9]+)*(\\/($|[a-zA-Z0-9\\.\\,\\?\\'\\\\\\+&;%\\$\\=~_\\-]+)?(#\\w*)?)*))/i;\n\n\t\t\t\t\t/* Store the elements HTML */ \n\n\t\t\t\t\tvar html = this.html ( );\n\n\t\t\t\t\t/* Attempt to locate URLs within the HTML */ \n\n\t\t\t\t\twhile ( match = findUrlRegExp.exec ( html ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Replace the URL with a unique ID */ \n\n\t\t\t\t\t\thtml = html.replace ( match [ 0 ], \"$\" + urls.length );\n\n\t\t\t\t\t\t/* Store the discovered URL */ \n\n\t\t\t\t\t\turls.push ( match [ 0 ] );\n\n\t\t\t\t\t\t/* Indicate that the HTML was modified */ \n\n\t\t\t\t\t\tmodifiedHtml = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Iterate through all discovered URLs */ \n\n\t\t\t\t\tfor ( var i = 0; i < urls.length; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Get the postion of the current URL ID */ \n\n\t\t\t\t\t\tvar pos = html.indexOf ( \"$\" + i );\n\n\t\t\t\t\t\t/* Get the possible attribute name */ \n\n\t\t\t\t\t\tvar attr = html.substring ( pos - 6, pos - 1 );\n\n\t\t\t\t\t\t/* Does the URL reside within an attribute (i.e. an existing tag) */ \n\n\t\t\t\t\t\tif ( attr == \"href=\" || attr == \" src=\" || html.substring ( pos - 1, pos ) == \">\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Replace the ID with the original URL (do not convert this URL to an anchor as it most likely is part of one) */ \n\n\t\t\t\t\t\t\thtml = html.replace ( \"$\" + i, urls [ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Replace the unique ID with an anchor tag */ \n\n\t\t\t\t\t\t\thtml = html.replace ( \"$\" + i, \"<a href=\\\"[url]\\\" class=\\\"jurlp-no-watch\\\">[url]</a>\".replace ( /\\[url\\]/g, urls [ i ] ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Did we change the HTML at all? */ \n\n\t\t\t\t\tif ( modifiedHtml != false )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Add a class on the parent element to indicate that we have modified it */ \n\n\t\t\t\t\t\tthis.addClass ( \"jurlp-span\" );\n\n\t\t\t\t\t\t/* Update the elements HTML */ \n\n\t\t\t\t\t\tthis.html ( html );\n\n\t\t\t\t\t\t/* Find and return all newly created anchor tags */ \n\n\t\t\t\t\t\treturn this.find ( \"a[href]\" ).each\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tfunction ( )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* Get the href attribute for the element */ \n\n\t\t\t\t\t\t\t\tvar href = getHref.apply ( $( this ) );\n\n\t\t\t\t\t\t\t\t/* Sanitise the URL and reset the elements href */ \n\n\t\t\t\t\t\t\t\tsetHref.apply ( $( this ), [ href ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* No URLs found */ \n\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: setAttrUrl\n\t\t *\n\t\t *\tGiven an element, and an attribute, set the attribute to the supplied URL, and created a backup of the original URL if not already done.\n\t\t *\n\t\t *\tNote, if the attribute doesn't exist, then it will not be created.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to set the attribute URL on.\n\t\t *\n\t\t *\tattr - The name of the attribute to set.\n\t\t *\n\t\t *\turl - The value of the attributes URL.\n\t\t *\n\t\t **/ \n\n\t\tvar setAttrUrl = function ( attr, url )\n\t\t{\n\t\t\t/* Is the attribute present on this element? */ \n\n\t\t\tif ( this.is ( \"[\" + attr + \"]\" ) != false )\n\t\t\t{\n\t\t\t\t/* Has a copy of the original attribute been stored? */ \n\n\t\t\t\tif ( this.data ( \"original-\" + attr ) == null )\n\t\t\t\t{\n\t\t\t\t\t/* Store a copy of the original attribute */ \n\n\t\t\t\t\tthis.data ( \"original-\" + attr, this.attr ( attr ) );\n\t\t\t\t}\n\n\t\t\t\t/* Update the elements attribute */ \n\n\t\t\t\tthis.attr ( attr, url );\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: restoreAttrUrl\n\t\t *\n\t\t *\tGiven an element, and an attribute, then restore the URL attribute value to its original value.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to restore the attribute URL on.\n\t\t *\n\t\t *\tattr - The name of the attribute to restore.\n\t\t *\n\t\t **/ \n\n\t\tvar restoreAttrUrl = function ( attr )\n\t\t{\n\t\t\t/* Was a backup of the original attribute URL made? */ \n\n\t\t\tif ( this.data ( \"original-\" + attr ) != null )\n\t\t\t{\n\t\t\t\t/* Restore the attribute URL */ \n\n\t\t\t\tthis.attr ( attr, this.data ( \"original-\" + attr ) );\n\n\t\t\t\t/* Remove the original URL */ \n\n\t\t\t\tthis.removeData ( \"original-\" + attr );\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: restoreElement\n\t\t *\n\t\t *\tDestroys any data associated with an element that has previously been initialised for use with the URL parser, and restores the elements \"href\" or \"src\" attribute (if any) to its original value.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to destroy.\n\t\t *\n\t\t **/ \n\n\t\tvar restoreElement = function ( )\n\t\t{\n\t\t\t/* Remove the working href URL */ \n\n\t\t\tthis.removeData ( \"href\" );\n\n\t\t\t/* Restore the href attribute */ \n\n\t\t\trestoreAttrUrl.apply ( this, [ \"href\" ] );\n\n\t\t\t/* Restore the src attribute */ \n\n\t\t\trestoreAttrUrl.apply ( this, [ \"src\" ] );\n\n\t\t\t/* Remove any watch attributes */ \n\n\t\t\tthis.removeData ( \"jurlp-no-watch\" );\n\t\t\tthis.removeData ( \"is-watched\" );\n\n\t\t\t/* clean up selector callstack and unbind */ \n\n\t\t\tmethods.unwatch.apply ( this );\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getHref\n\t\t *\n\t\t *\tGet the href URL for the element. Prioritises internal objects href, over \"data-href\", over \"href\", over \"src\" attributes.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to retieve the URL value from.\n\t\t *\n\t\t **/ \n\n\t\tvar getHref = function ( )\n\t\t{\n\t\t\treturn this.href || this.data ( \"href\" ) || this.attr ( \"href\" ) || this.attr ( \"src\" ) || \"\";\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: updateHref\n\t\t *\n\t\t *\tUpdate a segment of the elements href URL.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to update the URL value on.\n\t\t *\n\t\t *\tsegment - The segment to update (\"scheme\", \"host\", \"port\", \"path\", \"query\" or \"fragment\").\n\t\t *\n\t\t *\tvalue - The new value for the segment.\n\t\t *\n\t\t **/ \n\n\t\tvar updateHref = function ( segment, value )\n\t\t{\n\t\t\tsetHref.apply ( this, [ setUrlSegment ( getHref.apply ( this ), segment, value ) ] );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: updateHrefShim\n\t\t *\n\t\t *\tShim function for reorganising parameters before calling updateHref(). Called via the each callback.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to update the URL value on.\n\t\t *\n\t\t *\tparameters - Array containing segment and value parameters for updateHref().\n\t\t *\n\t\t **/ \n\n\t\tvar updateHrefShim = function ( parameters )\n\t\t{\n\t\t\tupdateHref.apply ( this, [ parameters [ 0 ], parameters [ 1 ] ] );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: setHref\n\t\t *\n\t\t *\tSets the href URL value for an element.\n\t\t *\n\t\t *\tParameters: \n\t\t * \n\t\t *\tthis - The element to set the URL value on.\n\t\t *\n\t\t *\turl - The new url (string) value.\n\t\t *\n\t\t **/ \n\n\t\tvar setHref = function ( url )\n\t\t{\n\t\t\t/* Ensure the supplied URL is a string */ \n\n\t\t\tif ( typeof url == \"object\" )\n\t\t\t{\n\t\t\t\turl = objectToUrl ( url );\n\t\t\t}\n\n\t\t\t/* Sanitise the URL - slow and horrible :( */ \n\n\t\t\turl = sanitiseUrl ( url );\n\n\t\t\tif ( this.href != null )\n\t\t\t{\n\t\t\t\tthis.href = url;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* Is the current element the document? */ \n\n\t\t\tif ( this.get ( 0 ) == $( document ).get ( 0 ) )\n\t\t\t{\n\t\t\t\t/* Current element is the document. Save the href under a data attribute. */\n\n\t\t\t\tthis.data ( \"href\", url );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Update href URL (if present) */ \n\n\t\t\t\tsetAttrUrl.apply ( this, [ \"href\", url ] );\n\n\t\t\t\t/* Update src URL (if present) */ \n\n\t\t\t\tsetAttrUrl.apply ( this, [ \"src\", url ] );\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: urlToObject\n\t\t *\n\t\t *\tParse a URL into segments using the DOM. Parses authority information from the URL using parseUri (http://blog.stevenlevithan.com/archives/parseuri).\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL String to parse.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tURL object.\n\t\t *\n\t\t **/ \n\n\t\tvar urlToObject = function ( url )\n\t\t{\n\t\t\t/* Was a null URL supplied? */ \n\n\t\t\tif ( url == null )\n\t\t\t{\n\t\t\t\t/* Return an empty object */ \n\n\t\t\t\treturn { scheme : \"\", user : \"\", password : \"\", host : \"\", port : \"\", path : \"\", query : \"\", fragment : \"\" };\n\t\t\t}\n\n\t\t\tvar credentials = { user : \"\", password : \"\" };\n\n\t\t\tif ( url.substring ( 0, 2 ) == \"//\" )\n\t\t\t{\n\t\t\t\turl = \"http:\" + url;\n\t\t\t}\n\n\t\t\t/* If a URL is supplied, ensure a protocol is specified, otherwise the parser will assume that the supplied host is the path */ \n\n\t\t\tif ( url != \"\" && url.indexOf ( \"://\" ) == -1 )\n\t\t\t{\n\t\t\t\turl = \"http://\" + url;\n\t\t\t}\n\n\t\t\t/* Does the URL contain authority information? */ \n\n\t\t\tif ( url.indexOf ( \"@\" ) != -1 )\n\t\t\t{\n\t\t\t\t/* Parse the URL using regex */ \n\n\t\t\t\tvar urlSegments = url.match ( urlRegEx );\n\n\t\t\t\t/* Was a username found? */ \n\n\t\t\t\tif ( urlSegments [ 4 ] )\n\t\t\t\t{\n\t\t\t\t\tcredentials.user = urlSegments [ 4 ];\n\t\t\t\t}\n\n\t\t\t\t/* Was a password found? */ \n\n\t\t\t\tif ( urlSegments [ 5 ] )\n\t\t\t\t{\n\t\t\t\t\tcredentials.password = urlSegments [ 5 ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Construct a new anchor element based on the supplied URL */ \n\n\t\t\tvar a = document.createElement ( \"a\" );\n\n\t\t\t/* Set the anchor href to the URL to parse (let the browser do (most of) the parsing) */ \n\n\t\t\ta.href = url;\n\n\t\t\t/* Under IE, an anchor element containing a username and password is inaccessible, so we will probe \"a.protocol\" to test if we have access */ \n\n\t\t\ttry\n\t\t\t{\n\t\t\t\t/* Check if the element is accessible */ \n\n\t\t\t\tvar accessible = a.protocol;\n\t\t\t}\n\t\t\tcatch ( err )\n\t\t\t{\n\t\t\t\t/* MSIE: A security problem occurred. (cannot access the anchor element) */ \n\n\t\t\t\tif ( err.number == -2146697202 )\n\t\t\t\t{\n\t\t\t\t\t/* IE hack!.. strip the username and password from the URL, and reparse */ \n\n\t\t\t\t\tvar authority = \"\";\n\n\t\t\t\t\t/* Were credentials found in the URL? */ \n\n\t\t\t\t\tif ( credentials.user != \"\" )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Build string containing the username and password to strip from the URL */ \n\n\t\t\t\t\t\tauthority += credentials.user;\n\n\t\t\t\t\t\tif ( credentials.password != \"\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tauthority += \":\" + credentials.password;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tauthority += \"@\";\n\n\t\t\t\t\t\t/* Strip the username and password from the URL and set the anchor href (this could in theory be done for all browsers) */ \n\n\t\t\t\t\t\ta.href = url.replace ( authority, \"\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Sanitise the protocol string */ \n\n\t\t\tvar protocol = a.protocol;\n\n\t\t\tif ( a.protocol.indexOf ( \"//\" ) == -1 )\n\t\t\t{\n\t\t\t\tprotocol += \"//\";\n\t\t\t}\n\n\t\t\t/* Sanitise the path string */ \n\n\t\t\tvar pathname = a.pathname;\n\n\t\t\tif ( pathname [ 0 ] != \"/\" )\n\t\t\t{\n\t\t\t\tpathname = \"/\" + pathname;\n\t\t\t}\n\n\t\t\t/* Ensure the port value is a string */ \n\n\t\t\tvar port = a.port + \"\";\n\n\t\t\t/* Strip of default port numbers if added, and not present in the original URL */ \n\n\t\t\tif ( ( port == \"21\" && url.indexOf ( \":21\" ) == -1 ) || ( port == \"80\" && url.indexOf ( \":80\" ) == -1 ) || ( port == \"443\" && url.indexOf ( \":443\" ) == -1 ) || port == \"0\" )\n\t\t\t{\n\t\t\t\tport = \"\";\n\t\t\t}\n\n\t\t\t/* Return the URL object, based on the URL information for the newly created anchor element contained in the DOM */ \n\n\t\t\treturn { scheme : protocol, user : credentials.user, password : credentials.password, host : a.hostname, port : port, path : pathname, query : a.search, fragment : a.hash };\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: objectToUrl\n\t\t *\n\t\t *\tConvert a URL object to a string.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - The URL object to convert.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tURL string.\n\t\t *\n\t\t **/ \n\n\t\tvar objectToUrl = function ( url )\n\t\t{\n\t\t\t/* Build URL string, starting with the scheme */ \n\n\t\t\tvar urlString = url.scheme;\n\n\t\t\t/* Was a username specified? */ \n\n\t\t\tif ( url.user != null && url.user != \"\" )\n\t\t\t{\n\t\t\t\t/* Insert the username */ \n\n\t\t\t\turlString += url.user;\n\n\t\t\t\t/* Was a password also specified? */ \n\n\t\t\t\tif ( url.password != null && url.password != \"\" )\n\t\t\t\t{\n\t\t\t\t\turlString += \":\" + url.password;\n\t\t\t\t}\n\n\t\t\t\t/* Insert authority/host seperator */ \n\n\t\t\t\turlString += \"@\";\n\t\t\t}\n\n\t\t\t/* Glue the remainder of the URL together (only including the port if explicitly specified) */ \n\n\t\t\treturn urlString + url.host + ( url.port != \"\" ? \":\" + url.port : \"\" ) + url.path + url.query + url.fragment;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: sanitiseUrl\n\t\t *\n\t\t *\tSanitise a URL. Creates a fully qualified URL by converting it from a string to a DOM element and back to a string again.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - The URL to sanitise.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe sanitised URL string.\n\t\t *\n\t\t **/ \n\n\t\tvar sanitiseUrl = function ( url )\n\t\t{\n\t\t\treturn uri.parse ( url ).toString ( );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: urlObjectToString\n\t\t *\n\t\t *\tConverts a URL object to a string (used to override toString for URL objects).\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\tthis - The URL object to convert to a string.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe URL string.\n\t\t *\n\t\t **/ \n\n\t\tvar urlObjectToString = function ( )\n\t\t{\n\t\t\treturn objectToUrl ( this );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: setUrlSegment\n\t\t *\n\t\t *\tSet the value of a segment within a URL string.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - The URL to modify.\n\t\t *\n\t\t *\tsegment - The segment of the URL to modify (\"scheme\", \"host\", \"port\", \"path\", \"query\" or \"fragment\").\n\t\t *\n\t\t *\tvalue - The new segment value.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe URL string containing the update segment.\n\t\t *\n\t\t **/ \n\n\t\tvar setUrlSegment = function ( url, segment, value )\n\t\t{\n\t\t\t/* Convert the URL to an object */ \n\n\t\t\tvar urlObject = uri.parse ( url );\n\n\t\t\t/* Update the URL segment */ \n\n\t\t\turlObject [ segment ] = value;\n\n\t\t\t/* Convert the URL object back to a string */ \n\n\t\t\treturn objectToUrl ( urlObject );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getUrlObject\n\t\t *\n\t\t *\tConvert a URL string to an object, if not already. Used to ensure we always work with URL objects where either a string or object can be supplied.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tURL object.\n\t\t *\n\t\t **/ \n\n\t\tvar getUrlObject = function ( url )\n\t\t{\n\t\t\t/* Is the URL a string? */ \n\n\t\t\tif ( typeof url == \"string\" )\n\t\t\t{\n\t\t\t\t/* Return the URL string converted to an object */ \n\n\t\t\t\treturn uri.parse ( url );\n\t\t\t}\n\n\t\t\t/* Return the URL object */ \n\n\t\t\treturn url;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getFragmentString\n\t\t *\n\t\t *\tRetrieve the fragment string for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe fragment string.\n\t\t *\n\t\t **/ \n\n\t\tvar getFragmentString = function ( url )\n\t\t{\n\t\t\treturn getUrlObject ( url ).fragment;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getQueryString\n\t\t *\n\t\t *\tRetrieve the query string for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe query string.\n\t\t *\n\t\t **/ \n\n\t\tvar getQueryString = function ( url )\n\t\t{\n\t\t\t/* Get the query string from the URL object */ \n\n\t\t\tvar query = getUrlObject ( url ).query;\n\n\t\t\t/* Anything?`*/ \n\n\t\t\tif ( query [ 0 ] == \"?\" )\n\t\t\t{\n\t\t\t\t/* Strip the leading \"?\" (makes .split() happy later) */ \n\n\t\t\t\treturn query.slice ( 1 );\n\t\t\t}\n\n\t\t\t/* Return the (probably not very valid?) query */ \n\n\t\t\treturn query;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: updateQuery\n\t\t *\n\t\t *\tUpdate the query string for the elements URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\tthis - The element to set the new query string on.\n\t\t *\n\t\t *\tquery - New query object.\n\t\t *\n\t\t **/ \n\n\t\tvar updateQuery = function ( query )\n\t\t{\n\t\t\tvar queryObject = { };\n\n\t\t\t/* Get the query object for the current URL */ \n\n\t\t\tvar currentQueryObject = getQueryObject ( getHref.apply ( this ) );\n\n\t\t\t/* Was a string supplied as the parameter? */ \n\n\t\t\tif ( typeof query == \"string\" )\n\t\t\t{\n\t\t\t\t/* If the first character is a \"?\", then replace the whole query string */ \n\n\t\t\t\tif ( query [ 0 ] == \"?\" )\n\t\t\t\t{\n\t\t\t\t\t/* Trash the existing query object */ \n\n\t\t\t\t\tcurrentQueryObject = { };\n\n\t\t\t\t\t/* Strip the leading question mark */ \n\n\t\t\t\t\tquery = query.substring ( 1 );\n\t\t\t\t}\n\n\t\t\t\t/* Convert the supplied query string to an object */ \n\n\t\t\t\tqueryObject = queryStringToObject ( query );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tqueryObject = query;\n\t\t\t}\n\n\t\t\t/* Did the supplied query object contain parameters? */ \n\n\t\t\tif ( $.isEmptyObject ( queryObject ) == false )\n\t\t\t{\n\t\t\t\t/* Extend the existing query object with the new query object */ \n\n\t\t\t\tqueryObject = $.extend ( currentQueryObject, queryObject );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* An empty query object was supplied, so null the query string */ \n\n\t\t\t\tcurrentQueryObject = { };\n\t\t\t}\n\n\t\t\t/* Convert the query object to a string, and update the URL query string */ \n\n\t\t\tupdateHref.apply ( this, [ \"query\", queryObjectToString.apply ( queryObject ) ] );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: queryStringToObject\n\t\t *\n\t\t *\tConvert a query string to an object.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\tquery - Query string to convert to an object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe query object.\n\t\t *\n\t\t **/ \n\n\t\tvar queryStringToObject = function ( query )\n\t\t{\n\t\t\tvar object = { };\n\n\t\t\t/* Was a query string supplied? */ \n\n\t\t\tif ( query != \"\" )\n\t\t\t{\n\t\t\t\t/* Get all elements of the query string (\"&name=value\") */ \n\n\t\t\t\tvar elements = query.split ( \"&\" );\n\n\t\t\t\t/* Create the query object */ \n\n\t\t\t\tfor ( var i = 0; i < elements.length; i++ )\n\t\t\t\t{\n\t\t\t\t\t/* Retrieve the parameter name and value from the string \"name=value\" */ \n\n\t\t\t\t\tvar parameter = elements [ i ].split ( \"=\" );\n\n\t\t\t\t\t/* Add the parameter to the query object */ \n\n\t\t\t\t\tobject [ parameter [ 0 ] ] = parameter [ 1 ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Return the query object */ \n\n\t\t\treturn object;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getQueryObject\n\t\t *\n\t\t *\tRetrieve the query object for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe query object.\n\t\t *\n\t\t **/ \n\n\t\tvar getQueryObject = function ( url )\n\t\t{\n\t\t\t/* Get the query string from the URL and convert it to an object */ \n\n\t\t\treturn queryStringToObject ( getQueryString ( url ) );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: queryObjectToString\n\t\t *\n\t\t *\tQuery objects toString method.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\tthis - Query object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe query string.\n\t\t *\n\t\t **/ \n\n\t\tvar queryObjectToString = function ( )\n\t\t{\n\t\t\tvar string = \"\";\n\n\t\t\t/* For each item in the query string */ \n\n\t\t\tfor ( var i in this )\n\t\t\t{\n\t\t\t\t/* Ensure that it contains valid data */ \n\n\t\t\t\tif ( i != \"toString\" && this [ i ] != null )\n\t\t\t\t{\n\t\t\t\t\tstring += \"&\" + i + \"=\" + this [ i ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Anything? */ \n\n\t\t\tif ( string [ 0 ] == \"&\" )\n\t\t\t{\n\t\t\t\t/* Return the query string (replacing the first \"&\" character with a \"?\" character. */ \n\n\t\t\t\tstring = \"?\" + string.slice ( 1 );\n\t\t\t}\n \n\t\t\t/* Empty query string */ \n\n\t\t\treturn string;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getPathString\n\t\t *\n\t\t *\tRetrieve the path string for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe path string.\n\t\t *\n\t\t **/ \n\n\t\tvar getPathString = function ( url )\n\t\t{\n\t\t\t/* Get the path string from the URL object */ \n\n\t\t\tvar path = getUrlObject ( url ).path;\n\n\t\t\t/* Ensure the path starts with a leading slash */ \n\n\t\t\tif ( path [ 0 ] == \"/\" )\n\t\t\t{\n\t\t\t\t/* Strip the leading slash from the path */ \n\n\t\t\t\treturn path.slice ( 1 );\n\t\t\t}\n\n\t\t\t/* Empty or malformed path */ \n\n\t\t\treturn path;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getPathObject\n\t\t *\n\t\t *\tRetrieve the path object for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe path obbject.\n\t\t *\n\t\t **/ \n\n\t\tvar getPathObject = function ( url )\n\t\t{\n\t\t\t/* Get the path string from the URL object (without leading slash) */ \n\n\t\t\tvar pathString = getPathString ( url );\n\n\t\t\t/* Anything? */ \n\n\t\t\tif ( pathString != \"\" )\n\t\t\t{\n\t\t\t\t/* Create the path object */ \n\n\t\t\t\treturn pathString.split ( \"/\" );\n\t\t\t}\n\n\t\t\t/* No path specified */ \n\n\t\t\treturn [ ];\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: updatePath\n\t\t *\n\t\t *\tUpdate the path string for the elements URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\tthis - The element to set the new path string on.\n\t\t *\n\t\t *\tpath - New path object.\n\t\t *\n\t\t **/ \n\n\t\tvar updatePath = function ( path )\n\t\t{\n\t\t\tvar pathString = \"\";\n\n\t\t\t/* Get an array of existing path elements */ \n\n\t\t\tvar pathArray = getUrlObject ( getHref.apply ( this ) ).path.split ( \"/\" );\n\n\t\t\t/* Get an array of new path elements */ \n\n\t\t\tvar newPathArray = path.split ( \"/\" );\n\t\t\tvar i = 0;\n\n\t\t\t/* Was the first character a \"/\"? */ \n\n\t\t\tif ( newPathArray [ 0 ] == \"\" )\n\t\t\t{\n\t\t\t\t/* Truncate the existing path */ \n\n\t\t\t\tpathArray = [ ];\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\t/* Remove the initial empty path element */ \n\n\t\t\tpathArray.splice ( 0, 1 );\n\n\t\t\t/* Iterate through all new path elements */ \n\n\t\t\tfor ( var l = newPathArray.length; i < l; i++ )\n\t\t\t{\n\t\t\t\t/* Remove an old path element? */ \n\n\t\t\t\tif ( newPathArray [ i ] == \"..\" )\n\t\t\t\t{\n\t\t\t\t\t/* Remove the element from the path array */ \n\n\t\t\t\t\tif ( pathArray.length > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tpathArray.splice ( pathArray.length - 1, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( newPathArray [ i ] == \".\" )\n\t\t\t\t{\n\t\t\t\t\t/* Current directory */ \n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t/* Include the new path element */ \n\n\t\t\t\t\tpathArray.push ( newPathArray [ i ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Update the path string */ \n\n\t\t\tupdateHref.apply ( this, [ \"path\", pathObjectToString.apply ( pathArray ) ] );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: pathObjectToString\n\t\t *\n\t\t *\tPath objects toString method.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\tthis - Path object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe path string.\n\t\t *\n\t\t **/ \n\n\t\tvar pathObjectToString = function ( )\n\t\t{\n\t\t\t/* Are there any path elements? */ \n\n\t\t\tif ( this.length > 0 )\n\t\t\t{\n\t\t\t\t/* Join all elements with a \"/\", and return the leading path slash again */ \n\n\t\t\t\treturn \"/\" + this.join ( \"/\" );\n\t\t\t}\n\n\t\t\t/* No path */ \n\n\t\t\treturn \"/\";\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getPortString\n\t\t *\n\t\t *\tRetrieve the port string for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe port string.\n\t\t *\n\t\t **/ \n\n\t\tvar getPortString = function ( url )\n\t\t{\n\t\t\treturn getUrlObject ( url ).port;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getHostString\n\t\t *\n\t\t *\tRetrieve the host string for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe host string.\n\t\t *\n\t\t **/ \n\n\t\tvar getHostString = function ( url )\n\t\t{\n\t\t\treturn getUrlObject ( url ).host;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getPasswordString\n\t\t *\n\t\t *\tRetrieve the password string for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe password string.\n\t\t *\n\t\t **/ \n\n\t\tvar getPasswordString = function ( url )\n\t\t{\n\t\t\treturn getUrlObject ( url ).password;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getUserString\n\t\t *\n\t\t *\tRetrieve the user string for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe user string.\n\t\t *\n\t\t **/ \n\n\t\tvar getUserString = function ( url )\n\t\t{\n\t\t\treturn getUrlObject ( url ).user;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: getSchemeString\n\t\t *\n\t\t *\tRetrieve the scheme string for a given URL.\n\t\t *\n\t\t *\tParameters: \n\t\t *\n\t\t *\turl - URL string or object.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe scheme string.\n\t\t *\n\t\t **/ \n\n\t\tvar getSchemeString = function ( url )\n\t\t{\n\t\t\treturn getUrlObject ( url ).scheme;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: addSelectorCallback\n\t\t *\n\t\t *\tAdd a function the selector callstack.\n\t\t *\n\t\t **/ \n\n\t\tvar addSelectorCallback = function ( element, callback, parameters )\n\t\t{\n\t\t\tif ( element.data ( \"is-watched\" ) == true )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( selectorCallStack [ currentSelector ] )\n\t\t\t{\n\t\t\t\tselectorCallStack [ currentSelector ].push ( [ callback, parameters ] );\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: returnEachElement\n\t\t *\n\t\t *\tApply the callback for each element in this. Used for methods that return elements.\n\t\t *\n\t\t *\tParameters:\n\t\t *\n\t\t *\tthis Array of elements to iterate through.\n\t\t *\n\t\t *\tcallback Function to call for each element found.\n\t\t *\n\t\t *\tparameters Callback function parameters (array).\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tArray of elements.\n\t\t *\n\t\t **/ \n\n\t\tvar returnEachElement = function ( callback, parameters )\n\t\t{\n\t\t\t/* Is this an object, containing an href member? */ \n\n\t\t\tif ( this.href != null )\n\t\t\t{\n\t\t\t\t/* Issue the callback */ \n\n\t\t\t\tcallback.apply ( this, [ parameters ] );\n\n\t\t\t\t/* Return the object (for chaining purposes) */ \n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\t/* Add this function and parameters to the watch selector callstack (if watched) */ \n\n\t\t\taddSelectorCallback ( this, callback, [ parameters ] );\n\n\t\t\t/* Return all elements, after applying the callback */ \n\n\t\t\treturn this.each\n\t\t\t(\n\t\t\t\tfunction ( )\n\t\t\t\t{\n\t\t\t\t\tcallback.apply ( $( this ), [ parameters ] );\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: returnEachObject\n\t\t *\n\t\t *\tApply the callback for each element in this, and buffer return codes. Used for methods that return data.\n\t\t *\n\t\t *\tParameters:\n\t\t *\n\t\t *\tthis Array of elements to iterate through.\n\t\t *\n\t\t *\tcallback Function to call for each element found.\n\t\t *\n\t\t *\tparameters Callback function parameters (array).\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tArray of return codes.\n\t\t *\n\t\t **/ \n\n\t\tvar returnEachObject = function ( callback, parameters )\n\t\t{\n\t\t\tif ( this.href != null )\n\t\t\t{\n\t\t\t\treturn callback.apply ( this, [ parameters ] );\n\t\t\t}\n\n\t\t\tvar result = [ ];\n\n\t\t\t/* Build and return an array of each elements callback results */ \n\n\t\t\tthis.each\n\t\t\t(\n\t\t\t\tfunction ( )\n\t\t\t\t{\n\t\t\t\t\tresult.push ( callback.apply ( $( this ), [ parameters ] ) );\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn result;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: dispatchGetSetHelper\n\t\t *\n\t\t *\tDispatch to get or set helper functions depending on the arguments supplied.\n\t\t *\n\t\t *\tIf no user arguments are supplied, perform the get, ortherwise perform the set with the user arguments.\n\t\t *\n\t\t *\tParameters:\n\t\t *\n\t\t *\tgetHelper - Get URL data callback.\n\t\t *\n\t\t *\tsetHelper - Set URL data callback.\n\t\t *\n\t\t *\thelperArguments - User arguments supplied to the public interface.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tget/setHelper() return code.\n\t\t *\n\t\t **/ \n\n\t\tvar dispatchGetSetHelper = function ( getHelper, setHelper, helperArguments )\n\t\t{\n\t\t\tif ( helperArguments.length == 0 )\n\t\t\t{\n\t\t\t\treturn getHelper.apply ( this )\n\t\t\t}\n\t\t\t\n\t\t\treturn setHelper.apply ( this, helperArguments )\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tFunction: methodDispatcher\n\t\t *\n\t\t *\tMain method dispatcher for the public interface.\n\t\t *\n\t\t *\tParameters: method\n\t\t *\n\t\t *\tmethod - The method to perform.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tArray of method handler results (either elements for set/filter methods, or strings/objects for get methods).\n\t\t *\n\t\t */ \n\n\t\tvar methodDispatcher = function ( method )\n\t\t{\n\t\t\t/* Is the method name valid */ \n\n\t\t\tif ( methods [ method ] != null )\n\t\t\t{\n\t\t\t\t/* Dispatch to the method handler */ \n\n\t\t\t\treturn methods [ method ].apply ( this, Array.prototype.slice.call ( arguments, 1 ) );\n\t\t\t}\n\t\t\telse if ( typeof method == \"object\" || method == null )\n\t\t\t{\n\t\t\t\t/* No method, or an object was supplied, initialise the element(s) */ \n\n\t\t\t\treturn methods.initialise.apply ( this, Array.prototype.slice.call ( arguments, 1 ) );\n\t\t\t}\n\n\t\t\t/* Invalid method/parameters */ \n\n\t\t\treturn this;\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tSection: URI parser interface.\n\t\t *\n\t\t *\tAll URI parsing is handled through this interface.\n\t\t *\n\t\t *\tThis section contains all parser interfaces utilised by the public parser interface.\n\t\t *\n\t\t *\tToDo: Extend this interface with the current URL segment parsing logic, and implement a more comprehensive URI parser set.\n\t\t *\n\t\t *\tSee http://en.wikipedia.org/wiki/URI_scheme for an overview of URIs.\n\t\t *\n\t\t **/ \n\n\t\tvar uri =\n\t\t{\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tAll URI object to string methods.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\ttoString :\n\t\t\t{\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: uri.toString.http\n\t\t\t\t *\n\t\t\t\t *\tConverts a URI object with an \"http\" scheme to a string.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"http\" : function ( )\n\t\t\t\t{\n\t\t\t\t\treturn objectToUrl ( this );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: uri.toString.mailto\n\t\t\t\t *\n\t\t\t\t *\tConverts a URI object with a \"mailto:\" scheme to a string.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"mailto\" : function ( )\n\t\t\t\t{\n\t\t\t\t\t/* Blank invalid fields */ \n\n\t\t\t\t\tthis.password = \"\";\n\t\t\t\t\tthis.path = \"\";\n\t\t\t\t\tthis.port = \"\";\n\n\t\t\t\t\treturn objectToUrl ( this );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: uri.toString.javascript\n\t\t\t\t *\n\t\t\t\t *\tConverts a URI object with a \"javascript:\" scheme to a string.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"javascript\" : function ( )\n\t\t\t\t{\n\t\t\t\t\treturn \"javascript:\" + this.javascript;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: uri.toString.generic\n\t\t\t\t *\n\t\t\t\t *\tConverts an generic URI object to a string.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"generic\" : function ( )\n\t\t\t\t{\n\t\t\t\t\treturn this.scheme + this.url;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tAll URI string parsers.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\tparsers :\n\t\t\t{\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: uri.parsers.http\n\t\t\t\t *\n\t\t\t\t *\tParse a URI with a \"http://\" scheme into a URI object.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"http\" : function ( url )\n\t\t\t\t{\n\t\t\t\t\treturn $.extend ( urlToObject ( url ), { toString : uri.toString.http } );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: uri.parsers.mailto\n\t\t\t\t *\n\t\t\t\t *\tParse a URI with a \"mailto:\" scheme into a URI object.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"mailto\" : function ( url )\n\t\t\t\t{\n\n\t\t\t\t\treturn $.extend ( urlToObject ( url.substring ( 7 ) ), { scheme : \"mailto:\", toString : uri.toString.mailto } );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: uri.parsers.javascript\n\t\t\t\t *\n\t\t\t\t *\tParse a URI with a \"javascript:\" scheme into a URI object.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"javascript\" : function ( url )\n\t\t\t\t{\n\t\t\t\t\treturn $.extend ( urlToObject ( document.location.href ), { javascript : url.substring ( 11 ), toString : uri.toString.javascript } );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: uri.parsers.generic\n\t\t\t\t *\n\t\t\t\t *\tParses any URI (URIs with a scheme seperator of \"://\" are parsed as \"http://\", everything else is treated as unknown..\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"generic\" : function ( scheme, url )\n\t\t\t\t{\n\t\t\t\t\t/* Was a \"//\" specified in the scheme? */ \n\n\t\t\t\t\tif ( url.substring ( 0, 2 ) == \"//\" )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Parse as HTTP URL */ \n\n\t\t\t\t\t\treturn $.extend ( urlToObject ( url.substring ( 2 ) ), { scheme : scheme + \"://\", toString : uri.toString.http } );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Unknown, store the schem (for filtering purposes), and simply append the remainder of the URI */ \n\n\t\t\t\t\treturn { scheme : scheme + \":\", url : url, toString : uri.toString.generic };\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: uri.parse\n\t\t\t *\n\t\t\t *\tParse a URI string based on scheme.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\tparse : function ( uri )\n\t\t\t{\n\t\t\t\t/* Only parse strings */ \n\n\t\t\t\tif ( typeof uri != \"string\" )\n\t\t\t\t{\n\t\t\t\t\t/* URI object? */ \n\n\t\t\t\t\treturn uri;\n\t\t\t\t}\n\n\t\t\t\t/* Try to determine the scheme */ \n\n\t\t\t\tvar pos = uri.indexOf ( \":\" );\n\n\t\t\t\t/* Was a scheme seperator found? */ \n\n\t\t\t\tif ( pos != -1 )\n\t\t\t\t{\n\t\t\t\t\t/* Get the scheme name (from the start of the URI, until the first \":\" character)*/ \n\n\t\t\t\t\tvar scheme = uri.substring ( 0, pos ).toLowerCase ( );\n\n\t\t\t\t\t/* Is a handler present for this scheme? */ \n\n\t\t\t\t\tif ( this.parsers [ scheme ] != null )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Parse the URI with a specific parser */ \n\n\t\t\t\t\t\treturn this.parsers [ scheme ] ( uri );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Try to parse the URI generically */ \n\n\t\t\t\t\treturn this.parsers.generic ( scheme, uri.substring ( pos + 1 ) );\n\t\t\t\t}\n\n\t\t\t\t/* Parse the URI with the HTTP parser, for now... */ \n\n\t\t\t\treturn this.parsers.http ( uri );\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tSection: Helper interface.\n\t\t *\n\t\t *\tAll private helper methods.\n\t\t *\n\t\t *\tThis section contains all get/set and filter methods utilised by the public interface.\n\t\t *\n\t\t **/ \n\n\t\tvar helpers =\n\t\t{\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getUrl\n\t\t\t *\n\t\t\t *\tReturn the elements URL (stored under its \"data-href\", and/or \"href\"/\"src\" attribute).\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getUrl\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ getHref, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setUrl\n\t\t\t *\n\t\t\t *\tSet the elements URL (stored under it's \"data-href\", and/or \"href\"/\"src\" attribute). Note: This does not change document.location.href for the $(document) element!\n\t\t\t *\n\t\t\t*/ \n\n\t\t\t\"setUrl\" : function ( url )\n\t\t\t{\n\t\t\t\tsetHref.apply ( this, [ url ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: parseUrl\n\t\t\t *\n\t\t\t *\tReturn the URL object for the elements \"data-href\" attribute value.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"parseUrl\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return uri.parse ( getHref.apply ( this ) ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getFragment\n\t\t\t *\n\t\t\t *\tGet the fragment object from the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to retrieve the fragment object from.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tThe fragment object. Call .toString() on the object to convert it to a string value.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getFragment\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return getFragmentString ( getHref.apply ( this ) ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setFragment\n\t\t\t *\n\t\t\t *\tSet the fragment string for the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to set the fragment string on.\n\t\t\t *\n\t\t\t *\tfragment - The new fragment string/object.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tArray of elements that were changed.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"setFragment\" : function ( fragment )\n\t\t\t{\n\t\t\t\tif ( fragment [ 0 ] != \"#\" )\n\t\t\t\t{\n\t\t\t\t\tfragment = \"#\" + fragment;\n\t\t\t\t}\n\n\t\t\t\treturn returnEachElement.apply ( this, [ updateHrefShim, [ \"fragment\", fragment ] ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getQuery\n\t\t\t *\n\t\t\t *\tGet the query object from the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to retrieve the query object from.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tThe query object. Call .toString() on the object to convert it to a string value.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getQuery\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return $.extend ( getQueryObject ( getHref.apply ( this ) ), { toString : queryObjectToString } ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setQuery\n\t\t\t *\n\t\t\t *\tSet the query string for the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to set the query object on.\n\t\t\t *\n\t\t\t *\tquery - The new query string represented as an object.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tArray of elements that were changed.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"setQuery\" : function ( query )\n\t\t\t{\n\t\t\t\treturn returnEachElement.apply ( this, [ updateQuery, query ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getPath\n\t\t\t *\n\t\t\t *\tGet the path object from the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to retrieve the path object from.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tThe path object. Call .toString() on the object to convert it to a string value.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getPath\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return $.extend ( getPathObject ( getHref.apply ( this ) ), { toString : pathObjectToString } ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setPath\n\t\t\t *\n\t\t\t *\tSet the path string for the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to set the path string on.\n\t\t\t *\n\t\t\t *\tpath - The new path string/object.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tArray of elements that were changed.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"setPath\" : function ( path )\n\t\t\t{\n\t\t\t\treturn returnEachElement.apply ( this, [ updatePath, path ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getPort\n\t\t\t *\n\t\t\t *\tGet the port string from the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to retrieve the port string from.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tThe port string.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getPort\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return getPortString ( getHref.apply ( this ) ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setPort\n\t\t\t *\n\t\t\t *\tSet the port string for the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to set the port string on.\n\t\t\t *\n\t\t\t *\tport - The new port string.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tArray of elements that were changed.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"setPort\" : function ( port )\n\t\t\t{\n\t\t\t\treturn returnEachElement.apply ( this, [ updateHrefShim, [ \"port\", port ] ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getHost\n\t\t\t *\n\t\t\t *\tGet the host string from the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to retrieve the host string from.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tThe host string.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getHost\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return getHostString ( getHref.apply ( this ) ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setHost\n\t\t\t *\n\t\t\t *\tSet the host string for the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to set the host string on.\n\t\t\t *\n\t\t\t *\thost - The new host string.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tArray of elements that were changed.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"setHost\" : function ( host )\n\t\t\t{\n\t\t\t\treturn returnEachElement.apply ( this, [ updateHrefShim, [ \"host\", host ] ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getPassword\n\t\t\t *\n\t\t\t *\tGet the password string from the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to retrieve the password string from.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tThe password string.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getPassword\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return getPasswordString ( getHref.apply ( this ) ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setPassword\n\t\t\t *\n\t\t\t *\tSet the password string for the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to set the password string on.\n\t\t\t *\n\t\t\t *\tpassword - The new password string.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tArray of elements that were changed.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"setPassword\" : function ( password )\n\t\t\t{\n\t\t\t\treturn returnEachElement.apply ( this, [ updateHrefShim, [ \"password\", password ] ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getUser\n\t\t\t *\n\t\t\t *\tGet the user string from the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to retrieve the user string from.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tThe user string.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getUser\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return getUserString ( getHref.apply ( this ) ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setUser\n\t\t\t *\n\t\t\t *\tSet the user string for the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to set the user string on.\n\t\t\t *\n\t\t\t *\tuser - The new user string.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tArray of elements that were changed.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"setUser\" : function ( user )\n\t\t\t{\n\t\t\t\treturn returnEachElement.apply ( this, [ updateHrefShim, [ \"user\", user ] ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: getScheme\n\t\t\t *\n\t\t\t *\tGet the scheme string from the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to retrieve the scheme string from.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tThe scheme string.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"getScheme\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachObject.apply ( this, [ function ( ) { return getSchemeString ( getHref.apply ( this ) ); }, null ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: setScheme\n\t\t\t *\n\t\t\t *\tSet the scheme string for the elements URL.\n\t\t\t *\n\t\t\t *\tParameters: \n\t\t\t *\n\t\t\t *\tthis - The element to set the scheme string on.\n\t\t\t *\n\t\t\t *\tscheme - The new scheme string.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tArray of elements that were changed.\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"setScheme\" : function ( scheme )\n\t\t\t{\n\t\t\t\treturn returnEachElement.apply ( this, [ updateHrefShim, [ \"scheme\", scheme ] ] );\n\t\t\t},\n\n\t\t\t\"filters\" :\n\t\t\t{\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: = (equals)\n\t\t\t\t *\n\t\t\t\t *\tTest if the actual value is equal to the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The actual and user values are equal.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The actual and user values are not equal.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"=\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue == userValue )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: != (not equals)\n\t\t\t\t *\n\t\t\t\t *\tTest if the actual value is equal to the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The actual and user values are not equal.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The actual and user values are equal.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"!=\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue != userValue )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: < (less than)\n\t\t\t\t *\n\t\t\t\t *\tTest if the actual value is less than the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The actual value is less than the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The actual value is greater than or equal to the user supplied value.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"<\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue < userValue )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: > (greater than)\n\t\t\t\t *\n\t\t\t\t *\tTest if the actualValue is greater than the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The actual value is greater than the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The actual value is less than or equal to the user supplied value.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\">\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue > userValue )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: <= (less than or equal to)\n\t\t\t\t *\n\t\t\t\t *\tTest if the actual value is less than or equal to the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The actual value is less than or equal to the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The actual value is greater than the user supplied value.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"<=\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue <= userValue )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: >= (greater than or equal to)\n\t\t\t\t *\n\t\t\t\t *\tTest if the actual value is greater than or equal to the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The actual value is greater than or equal to the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The actual value is less than the user supplied value.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\">=\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue >= userValue )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: *= (contains)\n\t\t\t\t *\n\t\t\t\t *\tTest if the actual value contains the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The actual value contains the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The actual value does not contain the user supplied value.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"*=\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue.indexOf ( userValue ) != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: ^= (starts with)\n\t\t\t\t *\n\t\t\t\t *\tTest if the start of the actual value matches the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The start of the actual value matches the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The start of the actual value does not match the user supplied value.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"^=\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue.length >= userValue.length )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( actualValue.substring ( 0, userValue.length ) == userValue )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: $= (ends with)\n\t\t\t\t *\n\t\t\t\t *\tTest if the end of the actual value is the same as the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - User supplied value.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The end of the actual value matches the user supplied value.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The end of the actual value does not match the user supplied value.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"$=\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\tif ( actualValue.length >= userValue.length )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( actualValue.substring ( actualValue.length - userValue.length ) == userValue )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t *\n\t\t\t\t *\tFunction: regex (regular expression)\n\t\t\t\t *\n\t\t\t\t *\tTest if the actual value matches the user supplied regular expression.\n\t\t\t\t *\n\t\t\t\t *\tParameters:\n\t\t\t\t *\n\t\t\t\t *\tactualValue - Actual value.\n\t\t\t\t *\n\t\t\t\t *\tuserValue - Regular expression to apply.\n\t\t\t\t *\n\t\t\t\t *\tReturns:\n\t\t\t\t *\n\t\t\t\t *\ttrue - The regular expression matches.\n\t\t\t\t *\n\t\t\t\t *\tfalse - The regular expression does not match.\n\t\t\t\t *\n\t\t\t\t **/ \n\n\t\t\t\t\"regex\" : function ( actualValue, userValue )\n\t\t\t\t{\n\t\t\t\t\treturn actualValue.match ( userValue );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tSection: Public interface.\n\t\t *\n\t\t *\tAll public methods exposed via the JQuery URL parser plugin interface.\n\t\t *\n\t\t **/ \n\n\t\tvar methods = \n\t\t{\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: url\n\t\t\t *\n\t\t\t *\tGet/Set the href string for the given element(s).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\turl - If present, specifies the new URL object/string to set. Otherwise the function will get the URL.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a URL was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of element URLs.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse the document.location.href URL\n\t\t\t *\t$(document).jurlp(\"url\");\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags\n\t\t\t *\t$(\"a\").jurlp(\"url\");\n\t\t\t *\n\t\t\t *\t// Update the working URL for the document\n\t\t\t *\t$(document).jurlp(\"url\", \"http://www.google.com\");\n\t\t\t *\n\t\t\t *\t// Replace all anchor tags with the google URL!\n\t\t\t *\t$(\"a\").jurlp(\"url\", \"http://www.google.com\");\n\t\t\t *\n\t\t\t *\t// Output the documents URL object\n\t\t\t *\tconsole.log($(document).jurlp(\"url\"));\n\t\t\t *\n\t\t\t *\t// Output the documents URL string\n\t\t\t *\tconsole.log($(document).jurlp(\"url\").toString());\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"url\" : function ( url )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.parseUrl, helpers.setUrl, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: fragment\n\t\t\t *\n\t\t\t *\tGet/Set the fragment segment of the URL for the given element(s).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tfragment - If present, specifies the new fragment string to set. Otherwise the function will get the fragment string from each elements URL.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a fragment string was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of URL fragments from each element.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse the document.location.href URL for the fragment string\n\t\t\t *\t$(document).jurlp(\"fragment\");\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags and retrieve their fragment strings\n\t\t\t *\t$(\"a\").jurlp(\"fragment\");\n\t\t\t *\n\t\t\t *\t// Set a new fragment for the document\n\t\t\t *\t$(document).jurlp(\"fragment\", \"elementid\");\n\t\t\t *\n\t\t\t *\t// Replace the fragment string in all anchor tags with the new element ID\n\t\t\t *\t$(\"a\").jurlp(\"fragment\", \"elementid\");\n\t\t\t *\n\t\t\t *\t// Output the documents URL fragment\n\t\t\t *\tconsole.log($(document).jurlp(\"fragment\"));\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"fragment\" : function ( fragment )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.getFragment, helpers.setFragment, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: query\n\t\t\t *\n\t\t\t *\tGet/Set the query segment of the URL for the given element(s).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tquery - If present, specifies the new query object to set. Otherwise the function will get the query object from each elements URL.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a query object was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of URL query objects from each element. Each returned query object can be converted to a string by calling its toString() method.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse the document.location.href URL for the query object\n\t\t\t *\t$(document).jurlp(\"query\");\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags and retrieve their query object\n\t\t\t *\t$(\"a\").jurlp(\"query\");\n\t\t\t *\n\t\t\t *\t// Set/update the \"new\" parameter in the query string for the document\n\t\t\t *\t$(document).jurlp(\"query\", {\"new\":\"parameter\"});\n\t\t\t *\n\t\t\t *\t// Remove the query string for the document\n\t\t\t *\t$(document).jurlp(\"query\", {});\n\t\t\t *\n\t\t\t *\t// Update the query string in all anchor tags with the new query object.\n\t\t\t *\t$(\"a\").jurlp(\"query\", {\"new\":\"parameter\"});\n\t\t\t *\n\t\t\t *\t// Remove the query string in all anchor tags.\n\t\t\t *\t$(\"a\").jurlp(\"query\", {});\n\t\t\t *\n\t\t\t *\t// Output the documents URL query object\n\t\t\t *\tconsole.log($(document).jurlp(\"query\"));\n\t\t\t *\n\t\t\t *\t// Output the documents URL query string\n\t\t\t *\tconsole.log($(document).jurlp(\"query\").toString());\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"query\" : function ( query )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.getQuery, helpers.setQuery, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: path\n\t\t\t *\n\t\t\t *\tGet/Set the path segment of the URL for the given element(s).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tpath - If present, specifies the new path to set. Otherwise the function will get the path object from each elements URL.\n\t\t\t *\n\t\t\t *\tA quick guide to paths:\n\t\t\t *\n\t\t\t *\t- Leading slashes (i.e. \"/index.html\") set the full path.\n\t\t\t *\n\t\t\t *\t- No leading slash (or a \"./\") will append to the existing path.\n\t\t\t *\n\t\t\t *\t- You can use \"../\" to remove elements from the existing path, or the path string you supply (which makes concatinating an existing file path and new path easy, as specifying a leading \"../\" in the new path will remove the file name segment of the existing path).\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a path was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of URL path objects from each element. Each returned path object can be converted to a string by calling its toString() method.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse the document.location.href URL for the path object\n\t\t\t *\t$(document).jurlp(\"path\");\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags and retrieve their path object\n\t\t\t *\t$(\"a\").jurlp(\"path\");\n\t\t\t *\n\t\t\t *\t// Set a new path for the document\n\t\t\t *\t$(document).jurlp(\"path\", \"/index.html\");\n\t\t\t *\n\t\t\t *\t// Append a path to the document URLs path\n\t\t\t *\t$(document).jurlp(\"path\", \"./file.name\");\n\t\t\t *\n\t\t\t *\t// Append a path to the document URLs path, which removes 2 existing path\n\t\t\t *\t// elements before appending the new path \n\t\t\t *\t$(document).jurlp(\"path\", \"../../folder/file.name\");\n\t\t\t *\n\t\t\t *\t// Update the file name segment of the path in all anchor tags \n\t\t\t *\t// with the new file name.\n\t\t\t *\t$(\"a\").jurlp(\"path\", \"../file.name\");\n\t\t\t *\n\t\t\t *\t// Remove the path in all anchor tags.\n\t\t\t *\t$(\"a\").jurlp(\"path\", \"/\");\n\t\t\t *\n\t\t\t *\t// Output the documents URL path object\n\t\t\t *\tconsole.log($(document).jurlp(\"path\"));\n\t\t\t *\n\t\t\t *\t// Output the documents URL path string\n\t\t\t *\tconsole.log($(document).jurlp(\"path\").toString());\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"path\" : function ( path )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.getPath, helpers.setPath, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: port\n\t\t\t *\n\t\t\t *\tGet/Set the port segment of the URL for the given element(s).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tport - If present, specifies the new port to set. Otherwise the function will get the port string from each elements URL.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a port was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of port strings from each elements URL.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse the document.location.href URL for the port\n\t\t\t *\t$(document).jurlp(\"port\");\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags and retrieve their port\n\t\t\t *\t$(\"a\").jurlp(\"port\");\n\t\t\t *\n\t\t\t *\t// Set a new port for the document\n\t\t\t *\t$(document).jurlp(\"port\", \"8080\");\n\t\t\t *\n\t\t\t *\t// Replace the port in all anchor tags with the new port number\n\t\t\t *\t$(\"a\").jurlp(\"port\", \"8080\");\n\t\t\t *\n\t\t\t *\t// Output the documents URL port\n\t\t\t *\tconsole.log($(document).jurlp(\"port\"));\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"port\" : function ( port )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.getPort, helpers.setPort, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: host\n\t\t\t *\n\t\t\t *\tGet/Set the host segment of the URL for the given element(s).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\thost - If present, specifies the new host name to set. Otherwise the function will get the host name string from each elements URL.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a host name was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of host name strings from each elements URL.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse the document.location.href URL for the host name\n\t\t\t *\t$(document).jurlp(\"host\");\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags and retrieve their host name\n\t\t\t *\t$(\"a\").jurlp(\"host\");\n\t\t\t *\n\t\t\t *\t// Set a new host name for the document\n\t\t\t *\t$(document).jurlp(\"host\", \"www.example.com\");\n\t\t\t *\n\t\t\t *\t// Replace the host name in all anchor tags with the new host name\n\t\t\t *\t$(\"a\").jurlp(\"host\", \"www.example.com\");\n\t\t\t *\n\t\t\t *\t// Output the documents URL host name\n\t\t\t *\tconsole.log($(document).jurlp(\"host\"));\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"host\" : function ( host )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.getHost, helpers.setHost, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: password\n\t\t\t *\n\t\t\t *\tGet/Set the password segment of the URL for the given element(s).\n\t\t\t *\n\t\t\t *\tNote! A password cannot be set on a URL unless a user name has been set first (see <user>).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tpassword - If present, specifies the new password to set. Otherwise the function will get the password string from each elements URL.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a password was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of password strings from each elements URL.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags and retrieve their password\n\t\t\t *\t$(\"a\").jurlp(\"password\");\n\t\t\t *\n\t\t\t *\t// Replace the password in all anchor tags with the new password string\n\t\t\t *\t$(\"a\").jurlp(\"password\", \"newpassword\");\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"password\" : function ( password )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.getPassword, helpers.setPassword, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: user\n\t\t\t *\n\t\t\t *\tGet/Set the user segment of the URL for the given element(s).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tuser - If present, specifies the new username to set. Otherwise the function will get the username string from each elements URL.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a username was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of username strings from each elements URL.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags and retrieve their username\n\t\t\t *\t$(\"a\").jurlp(\"user\");\n\t\t\t *\n\t\t\t *\t// Replace the username in all anchor tags with the new username string\n\t\t\t *\t$(\"a\").jurlp(\"username\", \"newusername\");\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"user\" : function ( user )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.getUser, helpers.setUser, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: scheme\n\t\t\t *\n\t\t\t *\tGet/Set the scheme segment of the URL for the given element(s).\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tscheme - If present, specifies the new scheme. Otherwise the function will get the scheme string from each elements URL.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tIf a scheme string was specified, then this function returns the array of modified elements for chaining purposes, otherwise it returns an array of scheme strings from each elements URL.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Parse the document.location.href URL for the scheme\n\t\t\t *\t$(document).jurlp(\"scheme\");\n\t\t\t *\n\t\t\t *\t// Parse all URLs in anchor tags and retrieve their scheme\n\t\t\t *\t$(\"a\").jurlp(\"scheme\");\n\t\t\t *\n\t\t\t *\t// Set a new scheme name for the document\n\t\t\t *\t$(document).jurlp(\"scheme\", \"https://\");\n\t\t\t *\n\t\t\t *\t// Replace the scheme in all anchor tags href attributes\n\t\t\t *\t$(\"a\").jurlp(\"scheme\", \"https://\");\n\t\t\t *\n\t\t\t *\t// Output the documents URL host name\n\t\t\t *\tconsole.log($(document).jurlp(\"scheme\"));\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"scheme\" : function ( scheme )\n\t\t\t{\n\t\t\t\treturn dispatchGetSetHelper.apply ( this, [ helpers.getScheme, helpers.setScheme, arguments ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: initialise\n\t\t\t *\n\t\t\t *\tInitialise the parser for the given element(s). HTML anchor elements or the HTML document element need not be explicitly initialised.\n\t\t\t *\t\n\t\t\t *\tElements are initialised as follows;\n\t\t\t *\n\t\t\t *\t$(document) - Initialise the \"data-href\" attribute for the document with the value of \"document.location.href\". The \"data-href\" attribute will be modified instead of \"document.location.href\" when modifying this element. See <Parsing document.location.href>.\n\t\t\t *\n\t\t\t *\tElements with \"href\"/\"src\" attributes - An attribute named \"data-original-href\" or \"data-original-src\" is created to store a copy of the elements original \"href\"/\"src\" attribute at the time of initialisation. See <Parsing elements with an �href� or �src� attribute>.\n\t\t\t *\n\t\t\t *\tAll other elements - Parses the element HTML for URLs, wraps any URLs found in an anchor tag, and returns all anchor elements.\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\t\n\t\t\t *\tArray of initialised elements (minus the parent container element).\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Not necessary\n\t\t\t *\t$(document).jurlp();\n\t\t\t *\n\t\t\t *\t// Not necessary\n\t\t\t *\t$(\"a\").jurlp();\n\t\t\t *\n\t\t\t *\t// Parse the HTML for URLs, and convert all URLs found in the\n\t\t\t *\t// text to anchors tags, and return the anchor elements.\n\t\t\t *\t$(\"<div>www.example.com</div>\").jurlp();\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"initialise\" : function ( )\n\t\t\t{\n\t\t\t\tvar me = this;\n\n\t\t\t\t/* Attempt to initialise the element as a text field. */ \n\n\t\t\t\tvar elements = [ ];\n\n\t\t\t\telements = initialiseElementText.apply ( $( this ) );\n\n\t\t\t\tif ( elements != null )\n\t\t\t\t{\n\t\t\t\t\t/* Initialise and return all created anchor elements, and remove the parent element from the array */ \n\n\t\t\t\t\treturn returnEachElement.apply ( this.filter ( function ( ) { return $( this ).get ( 0 ) != $( me ).get ( 0 ); } ).add ( elements ), [ initialiseElement ] );\n\t\t\t\t}\n\n\t\t\t\t/* Initialise the element directly */ \n\n\t\t\t\treturn returnEachElement.apply ( me, [ initialiseElement ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: restore\n\t\t\t *\n\t\t\t *\tRemoves any parser data associated with the element(s), and sets the href attribute to its original value.\n\t\t\t *\n\t\t\t *\t$(document) - Removes the \"data-href\" attribute.\n\t\t\t *\n\t\t\t *\tElements with \"href\"/\"src\" - Restores the \"href\"/\"src\" attribute to the \"data-original-href/src\" attribute value, and removes any other added attributes.\n\t\t\t *\n\t\t\t *\tAll other elements - Currently there is no way to restore an elements HTML which has been converted by the parser, so consider saving it first if needed!\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tArray of elements which were restored for chaining purposes.\n\t\t\t *\n\t\t\t * \tExamples:\n\t\t\t * \n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Restore the working URL for the document.\n\t\t\t *\t$(document).jurlp(\"restore\");\n\t\t\t *\n\t\t\t *\t// Restore the URL for all anchor elements.\n\t\t\t *\t$(\"a\").jurlp(\"restore\");\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"restore\" : function ( )\n\t\t\t{\n\t\t\t\treturn returnEachElement.apply ( this, [ restoreElement ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: goto\n\t\t\t *\n\t\t\t *\tSet document.location.href to the supplied elements \"href\", \"src\" or \"data-href\" attribute value.\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Goto the documents URL.\n\t\t\t *\t$(document).jurlp(\"goto\");\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"goto\" : function ( )\n\t\t\t{\n\t\t\t\tdocument.location.href = getHref.apply ( this );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: proxy\n\t\t\t *\n\t\t\t *\tProxy the URL. The elements URL will be replaced with the proxy URL, and the original URL will be encapsulated under the query string using the parameter name specified.\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - See <this parameter>.\n\t\t\t *\n\t\t\t *\turl - The proxy URL.\n\t\t\t *\n\t\t\t *\tparameter - The name of the query string parameter to encapsulate the original URL in.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tArray of modified elements for chaining purposes.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Proxy all URLs in anchor tags to www.example.com\n\t\t\t *\t// URL becomes \"http://www.example.com/?url=<original URL>\"\n\t\t\t *\t$(\"a\").jurlp(\"proxy\", \"http://www.example.com\", \"url\");\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"proxy\" : function ( url, parameter )\n\t\t\t{\n\t\t\t\tvar elementUrl = getHref.apply ( this );\n\t\t\t\tvar query = { };\n\n\t\t\t\tsetHref.apply ( this, [ objectToUrl ( getUrlObject ( url ) ) ] );\n\n\t\t\t\tquery [ parameter ] = elementUrl;\n\n\t\t\t\thelpers.setQuery.apply ( this, [ query ] );\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tfunction: watch\n\t\t\t *\n\t\t\t *\tAutomatically apply all modifications to new elements added to the DOM that match the selector for the supplied elements. This allows URL filters/modifications that have been applied to existing elements to be propogated to new elements if the page content is being modified (i.e. inserting new anchor tags via AJAX).\n\t\t\t *\n\t\t\t *\tOverview:\n\t\t\t *\n\t\t\t *\tWatch will monitor the selector of the supplied elements via a DOM node listener to detect when new elements are inserted. For each new element that is inserted, any prior filters or modifications made to URLs with the same selector will be applied, and the watcher will be alerted via a callback.\n\t\t\t *\n\t\t\t *\tNote! It is not possible to call watch more than once for the same selector. To do this, try naming the selector differently, i.e. instead of \"a\", use \"a:not(uniqueid)\", where \"uniqueid\" is a nice lengthy descriptive name!\n\t\t\t *\n\t\t\t *\tTo stop watching for updates on a selecter, use <unwatch>.\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - Array of elements to obtain the selector from. See <this parameter>.\n\t\t\t *\n\t\t\t *\tcallback - Function to call when elements are found, which is supplied two arguments, the new element that was inserted into the DOM, and the selector that triggered the watch.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tArray of unmodified elements for chaining purposes.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Add a watch on the first anchor element, and if the host name is \n\t\t\t *\t// \"www.example.com\", set the URL query string to \"found=example\".\n\t\t\t *\t// The \"filter\" and \"query\" calls will also be applied to all new elements that \n\t\t\t *\t// watch discovers!..\n\t\t\t *\t$(\"a:eq(0)\").jurlp(\"watch\", function(element, selector){\n\t\t\t *\t\t// If we get here, the first anchor element has changed to a URL containing \n\t\t\t *\t\t// \"www.example.com\" and now contains \"found=example\" in the query string.\n\t\t\t *\t\t// Dump the URL object to prove it!\n\t\t\t *\t\tconsole.log($(element).jurlp(\"url\"));\n\t\t\t *\t}).jurlp(\"filter\", \"host\", \"=\", \"www.example.com\")\n\t\t\t *\t  .jurlp(\"query\",{\"found\":\"example\"});\n\t\t\t *\n\t\t\t *\t//\tPrepend a new anchor tag to the page. This will trigger the watch on the \n\t\t\t *\t//\t\"a:eq(0)\" selector, which will apply all prior calls to this selector, \n\t\t\t *\t//\tso in this instance:\n\t\t\t *\t//\t- First perform the filter host, to ensure the host name is \"www.example.com\".\n\t\t\t *\t//\t- If the host name matches, update the URL query string with \"found=example\").\n\t\t\t *\t// If the host name does not match, then the query string will not be set.\n\t\t\t *\n\t\t\t *\t$(\"body\").prepend ( \"<a href='http://www.example.com/'></a>\" );\n\t\t\t *\n\t\t\t *\t// Stop watching for updates on the \"a:eq(0)\" selector. \n\t\t\t *\t// The \"a:eq(0)\" selector can now be watched on again.\n\t\t\t *\t$(\"a:eq(0)\").jurlp(\"unwatch\");\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t *\t- Watching the \"same selector\":\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// As an arbitrary example, we want to modify the query string on all existing \n\t\t\t *\t// facebook/twitter URLs, and then watch the \"a\" selector for all new \n\t\t\t *\t// facebook/twitter URLs that appear, and apply the new query string to those too:\n\t\t\t *\n\t\t\t *\t// THIS WILL NOT WORK!: \n\t\t\t *\t$(\"a\").jurlp(\"watch\").\n\t\t\t *\t      .jurlp(\"filter\", \"host\", \"=\", \"www.facebook.com\").\n\t\t\t *\t      .jurlp(\"query\",{\"found\":\"facebook\"});\n\t\t\t *\n\t\t\t *\t// This call will fail, as the \"a\" selector is now watched.\n\t\t\t *\t$(\"a\").jurlp(\"watch\").\n\t\t\t *\t      .jurlp(\"filter\", \"host\", \"=\", \"www.twitter.com\")\n\t\t\t *\t      .jurlp(\"query\",{\"found\":\"twitter\"});\n\t\t\t *\n\t\t\t *\t// THIS WILL WORK!: \n\t\t\t *\t$(\"a:not(facebook)\").jurlp(\"watch\").\n\t\t\t *\t                    .jurlp(\"filter\", \"host\", \"=\", \"www.facebook.com\")\n\t\t\t *\t                    .jurlp(\"query\",{\"found\":\"facebook\"});\n\t\t\t *\n\t\t\t *\t$(\"a:not(twitter)\").jurlp(\"watch\")\n\t\t\t *\t                   .jurlp(\"filter\", \"host\", \"=\", \"www.twitter.com\")\n\t\t\t *\t                   .jurlp(\"query\",{\"found\":\"twitter\"});\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"watch\" : function ( callback )\n\t\t\t{\n\t\t\t\t/* Get the current selector */ \n\n\t\t\t\tvar selector = this.selector;\n\n\t\t\t\t/* Has this selector been initialised? */ \n\n\t\t\t\tif ( selectorCallStack [ currentSelector ] == null )\n\t\t\t\t{\n\t\t\t\t\t/* Initialise the selector callstack */ \n\n\t\t\t\t\tselectorCallStack [ currentSelector ] = [ ];\n\n\t\t\t\t\t/* Monitor the DOM for new nodes being inserted */ \n\n\t\t\t\t\t$( document ).bind\n\t\t\t\t\t(\n\t\t\t\t\t\t\"DOMNodeInserted\",\n\t\t\t\t\t\tfunction DOMListener ( event )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Has the selector been unwatched? */ \n\n\t\t\t\t\t\t\tif ( selectorCallStack [ selector ] == null )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* Remove the DOM listener for the specific selector */ \n\n\t\t\t\t\t\t\t\t$( document ).unbind ( \"DOMNodeInserted\", DOMListener );\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Does this element belong to the current selector? */ \n\n\t\t\t\t\t\t\tvar target = $( event.target ).filter ( selector );\n\n\t\t\t\t\t\t\tif ( target.get ( 0 ) == null )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* Or is it a child */ \n\n\t\t\t\t\t\t\t\ttarget = $( event.target ).find ( selector );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Ensure we have a target to modify, and that we are allowed to watch it (the \".jurlp-no-watch\" class is present on elements created in initialiseElementText()). */ \n\n\t\t\t\t\t\t\tif ( target.length > 0 && target.is ( \".jurlp-no-watch\" ) == false )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar filtered = false;\n\n\t\t\t\t\t\t\t\t/* Mark the element as being watched */ \n\n\t\t\t\t\t\t\t\ttarget.data ( \"is-watched\", true );\n\n\t\t\t\t\t\t\t\t/* Apply the selector callstack for this element */ \n\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = selectorCallStack [ selector ].length; i < l; i++ )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t/* Run the selector callback to update the element */ \n\n\t\t\t\t\t\t\t\t\tvar output = selectorCallStack [ selector ] [ i ] [ 0 ].apply ( target, selectorCallStack [ selector ] [ i ] [ 1 ] );\n\n\t\t\t\t\t\t\t\t\t/* Has the element been filtered out? */ \n\n\t\t\t\t\t\t\t\t\tif ( output != null && output.length == 0 )\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t/* This element has been filtered, perform no further modifications */\n\n\t\t\t\t\t\t\t\t\t\tfiltered = true;\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* Was the element not filtered out, and a user callback specified? */ \n\n\t\t\t\t\t\t\t\tif ( filtered == false && typeof callback == \"function\" )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t/* Call the user callback for each element found in the watch */ \n\n\t\t\t\t\t\t\t\t\ttarget.each ( function ( ){ callback ( $(this), selector ) } );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: unwatch\n\t\t\t *\n\t\t\t *\tRemoves a watch previously created with <watch>, and prevents modifications being made to new elemenets of the same selector. This will also clear the list of modifications for the selector, and the selector is free to use in a sebsequent call to <watch>.\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - Array of elements to obtain the selector from.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tArray of unmodified elements for chaining purposes.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Create a watch on the \"a\" selector\n\t\t\t *\t$(\"a\").jurlp(\"watch\");\n\t\t\t *\n\t\t\t *\t// Remove the watch on the \"a\" selector\n\t\t\t *\t$(\"a\").jurlp(\"unwatch\");\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/\n\n\t\t\t\"unwatch\" : function ( )\n\t\t\t{\n\t\t\t\tselectorCallStack [ this.selector ] = null;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: filter\n\t\t\t *\n\t\t\t *\tFilters elements by URL or URL segment.\n\t\t\t *\n\t\t\t *\tParameters:\n\t\t\t *\n\t\t\t *\tthis - Array of elements to filter. See <this parameter>.\n\t\t\t *\n\t\t\t *\tsegment - The URL segment to filter on (either \"scheme\", \"host\", \"port\", \"path\", \"query\" or \"fragment\"), or \"url\" to filter on the full URL. See <URL overview> for more information.\n\t\t\t *\n\t\t\t *\toperator - The type of filtering to apply (either \"!=\", \"$=\", \"*=\", \"<\", \"<=\", \"=\", \">\", \">=\" or \"^=\"). See <Operators> for more information.\n\t\t\t *\n\t\t\t *\tvalue - The value of the item to filter on.\n\t\t\t *\n\t\t\t *\tReturns:\n\t\t\t *\n\t\t\t *\tFiltered element array for chaining purposes.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Get the URL object for all anchors that match\n\t\t\t *\t// the document URLs host name.\n\t\t\t *\t$(\"a\").jurlp(\"filter\", \"host\", \"=\", $(document).jurlp(\"host\"))\n\t\t\t *\t      .jurlp(\"url\");\n\t\t\t *\n\t\t\t *\t// Get the URL object for all anchors that match \n\t\t\t *\t// the document URLs host, and has a path ending in \".php\".\n\t\t\t *\t$(\"a\").jurlp(\"filter\", \"host\", \"=\", $(document).jurlp(\"host\"))\n\t\t\t *\t      .jurlp(\"filter\", \"path\", \"$=\", \".php\")\n\t\t\t *\t      .jurlp(\"url\");\n\t\t\t *\n\t\t\t *\t// Get the URL object for all anchors whose query \n\t\t\t *\t// string matches the regular expression\n\t\t\t *\t$(\"a\").jurlp(\"filter\", \"query\", \"regex\", /(\\?)/).jurlp(\"url\");\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"filter\" : function ( segment, operator, value )\n\t\t\t{\n\t\t\t\t/* Get an arbitrary URL object */ \n\n\t\t\t\tvar url = uri.parse ( getHref.apply ( this ) );\n\n\t\t\t\t/* Ensure operator is valid */\n\n\t\t\t\tif ( operator == \"==\" )\n\t\t\t\t{\n\t\t\t\t\toperator = \"=\";\n\t\t\t\t}\n\n\t\t\t\t/* Ensure that the segment is valid, and that a filter method exists */ \n\n\t\t\t\tif ( ( segment == \"url\" || url [ segment ] != null ) && helpers.filters [ operator ] != null )\n\t\t\t\t{\n\t\t\t\t\t/* Add the filter to the selectors callstack if watched */ \n\n\t\t\t\t\taddSelectorCallback ( this, methods.filter, [ segment, operator, value ] );\n\n\t\t\t\t\t/* Filter each element */ \n\n\t\t\t\t\treturn this.filter\n\t\t\t\t\t(\n\t\t\t\t\t\tfunction ( )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Get the current elements href */\n\n\t\t\t\t\t\t\tvar url = getHref.apply ( $( this ) );\n\n\t\t\t\t\t\t\tvar actualValue = \"\";\n\n\t\t\t\t\t\t\t/* Get the segment value */ \n\n\t\t\t\t\t\t\tif ( segment != \"url\" )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* Use a segment of the URL */ \n\n\t\t\t\t\t\t\t\tactualValue = uri.parse ( url ) [ segment ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* Use the full URL */ \n\n\t\t\t\t\t\t\t\tactualValue = url;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If we are testing port numbers, then convert the actual and user port string to an integer */ \n\n\t\t\t\t\t\t\tif ( segment == \"port\" )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tactualValue = parseInt ( actualValue, 10 );\n\n\t\t\t\t\t\t\t\tvalue = parseInt ( value, 10 );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* Perform the filter check */ \n\n\t\t\t\t\t\t\treturn helpers.filters [ operator ].apply ( $( this ), [ actualValue, value ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t *\n\t\t\t *\tFunction: interface\n\t\t\t *\n\t\t\t *\tGet the available methods for the parser interface.\n\t\t\t *\n\t\t\t *\tReturns: \n\t\t\t *\n\t\t\t *\tArray of interface methods.\n\t\t\t *\n\t\t\t *\tExamples:\n\t\t\t *\n\t\t\t *\t(start code)\n\t\t\t *\n\t\t\t *\t// Return all methods exposed by the URL parser interface.\n\t\t\t *\t$.fn.jurlp ( \"interface\" );\n\t\t\t *\n\t\t\t *\t(end code)\n\t\t\t *\n\t\t\t **/ \n\n\t\t\t\"interface\" : function ( )\n\t\t\t{\n\t\t\t\treturn methods;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\tSection: JQuery plugin interface.\n\t\t *\n\t\t *\tFunction: $.fn.jurlp\n\t\t *\n\t\t *\tPublic interface/method dispatcher for the JQuery URL parser.\n\t\t *\n\t\t *\tSee <Public interface> for more information on the available methods.\n\t\t *\n\t\t *\tSee <initialise> for more specific information on how elements are initialised by the parser.\n\t\t *\n\t\t *\tParameters:\n\t\t *\n\t\t *\tthis - Element(s) to process. See <this parameter>.\n\t\t *\n\t\t *\tmethod - See <Public interface> for an overview of available methods and arguments.\n\t\t *\n\t\t *\targuments - Method arguments.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tEither an array of elements for chaining purposes, or array of specific values, depending on the method called.\n\t\t *\n\t\t **/ \n\n\t\t$.fn.jurlp = function ( method )\n\t\t{\n\t\t\t/* If the current selector isn't part of a filter... */ \n\n\t\t\tif ( this.selector.indexOf ( \".filter\" ) == -1 )\n\t\t\t{\n\t\t\t\t/* Set the global current selector */ \n\n\t\t\t\tcurrentSelector = this.selector;\n\t\t\t}\n\n\t\t\t/* Ensure all elements are initialised with a \"data-href\". */ \n\n\t\t\treturnEachElement.apply ( this, [ initialiseElement ] );\n\n\t\t\t/* Dispatch to the relevant method */ \n\n\t\t\treturn methodDispatcher.apply ( this, arguments );\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t *\n\t\t *\tFunction: $.jurlp\n\t\t *\n\t\t *\tReturns an interface for directly parsing, manipulating and monitoring the supplied URL.\n\t\t *\n\t\t *\tParameters:\n\t\t *\n\t\t *\turl - The URL string to provide a URL parser interface for. Defaults to document.location.href if no URL is supplied.\n\t\t *\n\t\t *\tReturns:\n\t\t *\n\t\t *\tThe URL parser interface for the given URL.\n\t\t *\n\t\t *\tMembers:\n\t\t *\n\t\t *\thref - The URL string.\n\t\t *\n\t\t *\tMethods:\n\t\t *\n\t\t *\turl - See <url>.\n\t\t *\n\t\t *\tscheme - See <scheme>.\n\t\t *\n\t\t *\tuser - See <user>.\n\t\t *\n\t\t *\tpassword - See <password>.\n\t\t *\n\t\t *\thost - See <host>.\n\t\t *\n\t\t *\tport - See <port>.\n\t\t *\n\t\t *\tpath - See <path>.\n\t\t *\n\t\t *\tquery - See <query>.\n\t\t *\n\t\t *\tfragment - See <fragment>.\n\t\t *\n\t\t *\tproxy - See <proxy>.\n\t\t *\n\t\t *\tgoto - See <goto>.\n\t\t *\n\t\t *\twatch - Sets a watch for all \"href\" and \"src\" attributes containing the URLs hostname (selector is \"[href*=\"host\"],[src*=\"host\"]\" where host is this.host()), and returns all elements of the same selector for chaining purposes. See <watch> for more information.\n\t\t *\n\t\t *\tunwatch - Removes a watch created for the current URLs hostname. See <unwatch>.\n\t\t *\n\t\t *\tExamples:\n\t\t *\n\t\t *\tSee <Parsing URL strings directly>.\n\t\t *\n\t\t **/\n\n\t\t$.jurlp = function ( url )\n\t\t{\n\t\t\t/* Create an object for manipulating the url, or document.location.href if null. */ \n\n\t\t\treturn {\n\t\t\t\thref : url || document.location.href,\n\t\t\t\turl : methods.url,\n\t\t\t\tscheme : methods.scheme,\n\t\t\t\tuser : methods.user,\n\t\t\t\tpassword : methods.password,\n\t\t\t\thost : methods.host,\n\t\t\t\tport : methods.port,\n\t\t\t\tpath : methods.path,\n\t\t\t\tquery : methods.query,\n\t\t\t\tfragment : methods.fragment,\n\t\t\t\tproxy : methods.proxy,\n\t\t\t\t\"goto\" : methods [ \"goto\" ],\n\t\t\t\twatch : function ( callback )\n\t\t\t\t{\n\t\t\t\t\t/* Get the current host name */ \n\n\t\t\t\t\tvar host = this.host ( );\n\n\t\t\t\t\t/* Set a watch on the href or src selectors */ \n\n\t\t\t\t\treturn $( \"[href*=\\\"\" + host + \"\\\"],[src*=\\\"\" + host + \"\\\"]\" ).jurlp ( \"watch\", callback );\n\t\t\t\t},\n\t\t\t\tunwatch : function ( )\n\t\t\t\t{\n\t\t\t\t\t/* Get the current host name */ \n\n\t\t\t\t\tvar host = this.host ( );\n\n\t\t\t\t\t/* Set a watch on the href or src selectors */ \n\n\t\t\t\t\treturn $( \"[href*=\\\"\" + host + \"\\\"],[src*=\\\"\" + host + \"\\\"]\" ).jurlp ( \"unwatch\" );\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n) ( jQuery );\n","/*\n *\tjQuery elevateZoom 3.0.8\n *\tDemo's and documentation:\n *\twww.elevateweb.co.uk/image-zoom\n *\n *\tCopyright (c) 2012 Andrew Eades\n *\twww.elevateweb.co.uk\n *\n *\tDual licensed under the GPL and MIT licenses.\n *\thttp://en.wikipedia.org/wiki/MIT_License\n *\thttp://en.wikipedia.org/wiki/GNU_General_Public_License\n *\n\n/*\n *\tjQuery elevateZoom 3.0.3\n *\tDemo's and documentation:\n *\twww.elevateweb.co.uk/image-zoom\n *\n *\tCopyright (c) 2012 Andrew Eades\n *\twww.elevateweb.co.uk\n *\n *\tDual licensed under the GPL and MIT licenses.\n *\thttp://en.wikipedia.org/wiki/MIT_License\n *\thttp://en.wikipedia.org/wiki/GNU_General_Public_License\n */\n\n\nif (typeof Object.create !== 'function') {\n    Object.create = function (obj) {\n        function F() { };\n        F.prototype = obj;\n        return new F();\n    };\n}\n\n(function ($, window, document, undefined) {\n    var ElevateZoom = {\n        init: function (options, elem) {\n            var self = this;\n\n            self.elem = elem;\n            self.$elem = $(elem);\n\n            self.options = $.extend({}, $.fn.elevateZoom.options, options);\n\n            if (self.options.imageSrc) {\n                self.imageSrc = self.options.imageSrc;\n            } else if (self.$elem.data(\"zoom-image\")) {\n                self.imageSrc = self.$elem.data(\"zoom-image\");\n            } else {\n                self.imageSrc = self.$elem.attr(\"src\");\n            }\n\n            //TINT OVERRIDE SETTINGS\n            if (self.options.tint) {\n                self.options.lensColour = \"none\", //colour of the lens background\n                    self.options.lensOpacity = \"1\" //opacity of the lens\n            }\n            //INNER OVERRIDE SETTINGS\n            if (self.options.zoomType == \"inner\") { self.options.showLens = false; }\n\n\n            //Remove alt on hover\n\n            self.$elem.parent().removeAttr('title').removeAttr('alt');\n\n            self.zoomImage = self.imageSrc;\n\n            self.refresh(1);\n\n\n\n            //Create the image swap from the gallery \n            $('#' + self.options.gallery + ' a').click(function (e) {\n\n                //Set a class on the currently active gallery image\n                if (self.options.galleryActiveClass) {\n                    $('#' + self.options.gallery + ' a').removeClass(self.options.galleryActiveClass);\n                    $(this).addClass(self.options.galleryActiveClass);\n                }\n                //stop any link on the a tag from working\n                e.preventDefault();\n\n                //call the swap image function            \n                if ($(this).data(\"zoom-image\")) { self.zoomImagePre = $(this).data(\"zoom-image\") }\n                else { self.zoomImagePre = $(this).data(\"image\"); }\n                self.swaptheimage($(this).data(\"image\"), self.zoomImagePre);\n                return false;\n            });\n\n        },\n\n        refresh: function (length) {\n            var self = this;\n\n            setTimeout(function () {\n                self.fetch(self.imageSrc);\n\n            }, length || self.options.refresh);\n        },\n\n        fetch: function (imgsrc) {\n            //get the image\n            var self = this;\n            var newImg = new Image();\n            newImg.onload = function () {\n                //set the large image dimensions - used to calculte ratio's\n                self.largeWidth = newImg.width;\n                self.largeHeight = newImg.height;\n                //once image is loaded start the calls\n                self.startZoom();\n                self.currentImage = self.imageSrc;\n                //let caller know image has been loaded\n                self.options.onZoomedImageLoaded(self.$elem);\n            }\n            newImg.src = imgsrc; // this must be done AFTER setting onload\n\n            return;\n\n        },\n\n        startZoom: function () {\n            var self = this;\n            //get dimensions of the non zoomed image\n            self.nzWidth = self.$elem.width();\n            self.nzHeight = self.$elem.height();\n\n            //activated elements\n            self.isWindowActive = false;\n            self.isLensActive = false;\n            self.isTintActive = false;\n            self.overWindow = false;\n\n            //CrossFade Wrappe\n            if (self.options.imageCrossfade) {\n                self.zoomWrap = self.$elem.wrap('<div style=\"height:' + self.nzHeight + 'px;width:' + self.nzWidth + 'px;\" class=\"zoomWrapper\" />');\n                self.$elem.css('position', 'absolute');\n            }\n\n            self.zoomLock = 1;\n            self.scrollingLock = false;\n            self.changeBgSize = false;\n            self.currentZoomLevel = self.options.zoomLevel;\n\n\n            //get offset of the non zoomed image\n            self.nzOffset = self.$elem.offset();\n            //calculate the width ratio of the large/small image\n            self.widthRatio = (self.largeWidth / self.currentZoomLevel) / self.nzWidth;\n            self.heightRatio = (self.largeHeight / self.currentZoomLevel) / self.nzHeight;\n\n\n            //if window zoom        \n            if (self.options.zoomType == \"window\") {\n                self.zoomWindowStyle = \"overflow: hidden;\"\n                    + \"background-position: 0px 0px;text-align:center;\"\n                    + \"background-color: \" + String(self.options.zoomWindowBgColour)\n                    + \";width: \" + String(self.options.zoomWindowWidth) + \"px;\"\n                    + \"height: \" + String(self.options.zoomWindowHeight)\n                    + \"px;float: left;\"\n                    + \"background-size: \" + self.largeWidth / self.currentZoomLevel + \"px \" + self.largeHeight / self.currentZoomLevel + \"px;\"\n                    + \"display: none;z-index:100;\"\n                    + \"border: \" + String(self.options.borderSize)\n                    + \"px solid \" + self.options.borderColour\n                    + \";background-repeat: no-repeat;\"\n                    + \"position: absolute;\";\n            }\n\n\n            //if inner  zoom    \n            if (self.options.zoomType == \"inner\") {\n                //has a border been put on the image? Lets cater for this\n\n                var borderWidth = self.$elem.css(\"border-left-width\");\n\n                self.zoomWindowStyle = \"overflow: hidden;\"\n                    + \"margin-left: \" + String(borderWidth) + \";\"\n                    + \"margin-top: \" + String(borderWidth) + \";\"\n                    + \"background-position: 0px 0px;\"\n                    + \"width: \" + String(self.nzWidth) + \"px;\"\n                    + \"height: \" + String(self.nzHeight) + \"px;\"\n                    + \"px;float: left;\"\n                    + \"display: none;\"\n                    + \"cursor:\" + (self.options.cursor) + \";\"\n                    + \"px solid \" + self.options.borderColour\n                    + \";background-repeat: no-repeat;\"\n                    + \"position: absolute;\";\n            }\n\n\n\n            //lens style for window zoom\n            if (self.options.zoomType == \"window\") {\n\n\n                // adjust images less than the window height\n\n                if (self.nzHeight < self.options.zoomWindowWidth / self.widthRatio) {\n                    lensHeight = self.nzHeight;\n                }\n                else {\n                    lensHeight = String((self.options.zoomWindowHeight / self.heightRatio))\n                }\n                if (self.largeWidth < self.options.zoomWindowWidth) {\n                    lensWidth = self.nzWidth;\n                }\n                else {\n                    lensWidth = (self.options.zoomWindowWidth / self.widthRatio);\n                }\n\n\n                self.lensStyle = \"background-position: 0px 0px;width: \" + String((self.options.zoomWindowWidth) / self.widthRatio) + \"px;height: \" + String((self.options.zoomWindowHeight) / self.heightRatio)\n                    + \"px;float: right;display: none;\"\n                    + \"overflow: hidden;\"\n                    + \"z-index: 999;\"\n                    + \"-webkit-transform: translateZ(0);\"\n                    + \"opacity:\" + (self.options.lensOpacity) + \";filter: alpha(opacity = \" + (self.options.lensOpacity * 100) + \"); zoom:1;\"\n                    + \"width:\" + lensWidth + \"px;\"\n                    + \"height:\" + lensHeight + \"px;\"\n                    + \"background-color:\" + (self.options.lensColour) + \";\"\n                    + \"cursor:\" + (self.options.cursor) + \";\"\n                    + \"border: \" + (self.options.lensBorderSize) + \"px\" +\n                    \" solid \" + (self.options.lensBorderColour) + \";background-repeat: no-repeat;position: absolute;\";\n            }\n\n\n            //tint style\n            self.tintStyle = \"display: block;\"\n                + \"position: absolute;\"\n                + \"background-color: \" + self.options.tintColour + \";\"\n                + \"filter:alpha(opacity=0);\"\n                + \"opacity: 0;\"\n                + \"width: \" + self.nzWidth + \"px;\"\n                + \"height: \" + self.nzHeight + \"px;\"\n\n                ;\n\n            //lens style for lens zoom with optional round for modern browsers\n            self.lensRound = '';\n\n            if (self.options.zoomType == \"lens\") {\n\n                self.lensStyle = \"background-position: 0px 0px;\"\n                    + \"float: left;display: none;\"\n                    + \"border: \" + String(self.options.borderSize) + \"px solid \" + self.options.borderColour + \";\"\n                    + \"width:\" + String(self.options.lensSize) + \"px;\"\n                    + \"height:\" + String(self.options.lensSize) + \"px;\"\n                    + \"background-repeat: no-repeat;position: absolute;\";\n\n\n            }\n\n\n            //does not round in all browsers\n            if (self.options.lensShape == \"round\") {\n                self.lensRound = \"border-top-left-radius: \" + String(self.options.lensSize / 2 + self.options.borderSize) + \"px;\"\n                    + \"border-top-right-radius: \" + String(self.options.lensSize / 2 + self.options.borderSize) + \"px;\"\n                    + \"border-bottom-left-radius: \" + String(self.options.lensSize / 2 + self.options.borderSize) + \"px;\"\n                    + \"border-bottom-right-radius: \" + String(self.options.lensSize / 2 + self.options.borderSize) + \"px;\";\n\n            }\n\n            //create the div's                                                + \"\"\n            //self.zoomContainer = $('<div/>').addClass('zoomContainer').css({\"position\":\"relative\", \"height\":self.nzHeight, \"width\":self.nzWidth});\n\n            self.zoomContainer = $('<div class=\"zoomContainer\" style=\"-webkit-transform: translateZ(0);position:fixed;left:' + self.nzOffset.left + 'px;top:' + self.nzOffset.top + 'px;height:' + self.nzHeight + 'px;width:' + self.nzWidth + 'px;\"></div>');\n            //$('body').append(self.zoomContainer);\n            self.$elem.after(self.zoomContainer);\n\n\n            //this will add overflow hidden and contrain the lens on lens mode       \n            if (self.options.containLensZoom && self.options.zoomType == \"lens\") {\n                self.zoomContainer.css(\"overflow\", \"hidden\");\n            }\n            if (self.options.zoomType != \"inner\") {\n                self.zoomLens = $(\"<div class='zoomLens' style='\" + self.lensStyle + self.lensRound + \"'>&nbsp;</div>\")\n                    .appendTo(self.zoomContainer)\n                    .click(function () {\n                        self.$elem.trigger('click');\n                    });\n\n\n                if (self.options.tint) {\n                    self.tintContainer = $('<div/>').addClass('tintContainer');\n                    self.zoomTint = $(\"<div class='zoomTint' style='\" + self.tintStyle + \"'></div>\");\n\n\n                    self.zoomLens.wrap(self.tintContainer);\n\n\n                    self.zoomTintcss = self.zoomLens.after(self.zoomTint);\n\n                    //if tint enabled - set an image to show over the tint\n\n                    self.zoomTintImage = $('<img style=\"position: absolute; left: 0px; top: 0px; max-width: none; width: ' + self.nzWidth + 'px; height: ' + self.nzHeight + 'px;\" src=\"' + self.imageSrc + '\">')\n                        .appendTo(self.zoomLens)\n                        .click(function () {\n\n                            self.$elem.trigger('click');\n                        });\n\n                }\n\n            }\n\n\n\n\n\n\n\n            //create zoom window \n            if (isNaN(self.options.zoomWindowPosition)) {\n                self.zoomWindow = $(\"<div style='z-index:999;left:\" + (self.windowOffsetLeft) + \"px;top:\" + (self.windowOffsetTop) + \"px;\" + self.zoomWindowStyle + \"' class='zoomWindow'>&nbsp;</div>\")\n                    .appendTo('body')\n                    .click(function () {\n                        self.$elem.trigger('click');\n                    });\n            } else {\n                self.zoomWindow = $(\"<div style='z-index:999;left:\" + (self.windowOffsetLeft) + \"px;top:\" + (self.windowOffsetTop) + \"px;\" + self.zoomWindowStyle + \"' class='zoomWindow'>&nbsp;</div>\")\n                    .appendTo(self.zoomContainer)\n                    .click(function () {\n                        self.$elem.trigger('click');\n                    });\n            }\n            self.zoomWindowContainer = $('<div/>').addClass('zoomWindowContainer').css(\"width\", self.options.zoomWindowWidth);\n            self.zoomWindow.wrap(self.zoomWindowContainer);\n\n\n            //  self.captionStyle = \"text-align: left;background-color: black;color: white;font-weight: bold;padding: 10px;font-family: sans-serif;font-size: 11px\";                                                                                                                                                                                                                                          \n            // self.zoomCaption = $('<div class=\"elevatezoom-caption\" style=\"'+self.captionStyle+'display: block; width: 280px;\">INSERT ALT TAG</div>').appendTo(self.zoomWindow.parent());\n\n            if (self.options.zoomType == \"lens\") {\n                self.zoomLens.css({ backgroundImage: \"url('\" + self.imageSrc + \"')\" });\n            }\n            if (self.options.zoomType == \"window\") {\n                self.zoomWindow.css({ backgroundImage: \"url('\" + self.imageSrc + \"')\" });\n            }\n            if (self.options.zoomType == \"inner\") {\n                self.zoomWindow.css({ backgroundImage: \"url('\" + self.imageSrc + \"')\" });\n            }\n            /*-------------------END THE ZOOM WINDOW AND LENS----------------------------------*/\n            //touch events\n            self.$elem.bind('touchmove', function (e) {\n                e.preventDefault();\n                var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\n                self.setPosition(touch);\n\n            });\n            self.zoomContainer.bind('touchmove', function (e) {\n                if (self.options.zoomType == \"inner\") {\n                    self.showHideWindow(\"show\");\n\n                }\n                e.preventDefault();\n                var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\n                self.setPosition(touch);\n\n            });\n            self.zoomContainer.bind('touchend', function (e) {\n                self.showHideWindow(\"hide\");\n                if (self.options.showLens) { self.showHideLens(\"hide\"); }\n                if (self.options.tint && self.options.zoomType != \"inner\") { self.showHideTint(\"hide\"); }\n            });\n\n            self.$elem.bind('touchend', function (e) {\n                self.showHideWindow(\"hide\");\n                if (self.options.showLens) { self.showHideLens(\"hide\"); }\n                if (self.options.tint && self.options.zoomType != \"inner\") { self.showHideTint(\"hide\"); }\n            });\n            if (self.options.showLens) {\n                self.zoomLens.bind('touchmove', function (e) {\n\n                    e.preventDefault();\n                    var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\n                    self.setPosition(touch);\n                });\n\n\n                self.zoomLens.bind('touchend', function (e) {\n                    self.showHideWindow(\"hide\");\n                    if (self.options.showLens) { self.showHideLens(\"hide\"); }\n                    if (self.options.tint && self.options.zoomType != \"inner\") { self.showHideTint(\"hide\"); }\n                });\n            }\n            //Needed to work in IE\n            self.$elem.bind('mousemove', function (e) {\n                if (self.overWindow == false) { self.setElements(\"show\"); }\n                //make sure on orientation change the setposition is not fired\n                if (self.lastX !== e.clientX || self.lastY !== e.clientY) {\n                    self.setPosition(e);\n                    self.currentLoc = e;\n                }\n                self.lastX = e.clientX;\n                self.lastY = e.clientY;\n\n            });\n\n            self.zoomContainer.bind('mousemove', function (e) {\n\n                if (self.overWindow == false) { self.setElements(\"show\"); }\n\n                //make sure on orientation change the setposition is not fired \n                if (self.lastX !== e.clientX || self.lastY !== e.clientY) {\n                    self.setPosition(e);\n                    self.currentLoc = e;\n                }\n                self.lastX = e.clientX;\n                self.lastY = e.clientY;\n            });\n            if (self.options.zoomType != \"inner\") {\n                self.zoomLens.bind('mousemove', function (e) {\n                    //make sure on orientation change the setposition is not fired\n                    if (self.lastX !== e.clientX || self.lastY !== e.clientY) {\n                        self.setPosition(e);\n                        self.currentLoc = e;\n                    }\n                    self.lastX = e.clientX;\n                    self.lastY = e.clientY;\n                });\n            }\n            if (self.options.tint && self.options.zoomType != \"inner\") {\n                self.zoomTint.bind('mousemove', function (e) {\n                    //make sure on orientation change the setposition is not fired\n                    if (self.lastX !== e.clientX || self.lastY !== e.clientY) {\n                        self.setPosition(e);\n                        self.currentLoc = e;\n                    }\n                    self.lastX = e.clientX;\n                    self.lastY = e.clientY;\n                });\n\n            }\n            if (self.options.zoomType == \"inner\") {\n                self.zoomWindow.bind('mousemove', function (e) {\n                    //self.overWindow = true;\n                    //make sure on orientation change the setposition is not fired\n                    if (self.lastX !== e.clientX || self.lastY !== e.clientY) {\n                        self.setPosition(e);\n                        self.currentLoc = e;\n                    }\n                    self.lastX = e.clientX;\n                    self.lastY = e.clientY;\n                });\n\n            }\n\n\n            //  lensFadeOut: 500,  zoomTintFadeIn\n            self.zoomContainer.add(self.$elem).mouseenter(function () {\n\n                if (self.overWindow == false) { self.setElements(\"show\"); }\n\n\n            }).mouseleave(function () {\n                if (!self.scrollLock) {\n                    self.setElements(\"hide\");\n                    self.options.onDestroy(self.$elem);\n                }\n            });\n            //end ove image\n\n\n\n\n\n            if (self.options.zoomType != \"inner\") {\n                self.zoomWindow.mouseenter(function () {\n                    self.overWindow = true;\n                    self.setElements(\"hide\");\n                }).mouseleave(function () {\n\n                    self.overWindow = false;\n                });\n            }\n            //end ove image\n\n\n\n            //\t\t\t\tvar delta = parseInt(e.originalEvent.wheelDelta || -e.originalEvent.detail);\n\n            //      $(this).empty();    \n            //    return false;\n\n            //fix for initial zoom setting\n            if (self.options.zoomLevel != 1) {\n                //\tself.changeZoomLevel(self.currentZoomLevel);\n            }\n            //set the min zoomlevel\n            if (self.options.minZoomLevel) {\n                self.minZoomLevel = self.options.minZoomLevel;\n            }\n            else {\n                self.minZoomLevel = self.options.scrollZoomIncrement * 2;\n            }\n\n\n            if (self.options.scrollZoom) {\n\n\n                self.zoomContainer.add(self.$elem).bind('mousewheel DOMMouseScroll MozMousePixelScroll', function (e) {\n\n\n                    //\t\t\t\t\t\tin IE there is issue with firing of mouseleave - So check whether still scrolling\n                    //\t\t\t\t\t\tand on mouseleave check if scrolllock          \n                    self.scrollLock = true;\n                    clearTimeout($.data(this, 'timer'));\n                    $.data(this, 'timer', setTimeout(function () {\n                        self.scrollLock = false;\n                        //do something\n                    }, 250));\n\n                    var theEvent = e.originalEvent.wheelDelta || e.originalEvent.detail * -1\n\n\n                    //this.scrollTop += ( delta < 0 ? 1 : -1 ) * 30;\n                    //   e.preventDefault();\n\n\n                    e.stopImmediatePropagation();\n                    e.stopPropagation();\n                    e.preventDefault();\n\n\n                    if (theEvent / 120 > 0) {\n                        //scrolling up\n                        if (self.currentZoomLevel >= self.minZoomLevel) {\n                            self.changeZoomLevel(self.currentZoomLevel - self.options.scrollZoomIncrement);\n                        }\n\n                    }\n                    else {\n                        //scrolling down\n\n\n                        if (self.options.maxZoomLevel) {\n                            if (self.currentZoomLevel <= self.options.maxZoomLevel) {\n                                self.changeZoomLevel(parseFloat(self.currentZoomLevel) + self.options.scrollZoomIncrement);\n                            }\n                        }\n                        else {\n                            //andy \n\n                            self.changeZoomLevel(parseFloat(self.currentZoomLevel) + self.options.scrollZoomIncrement);\n                        }\n\n                    }\n                    return false;\n                });\n            }\n\n\n        },\n        setElements: function (type) {\n            var self = this;\n            if (!self.options.zoomEnabled) { return false; }\n            if (type == \"show\") {\n                if (self.isWindowSet) {\n                    if (self.options.zoomType == \"inner\") { self.showHideWindow(\"show\"); }\n                    if (self.options.zoomType == \"window\") { self.showHideWindow(\"show\"); }\n                    if (self.options.showLens) { self.showHideLens(\"show\"); }\n                    if (self.options.tint && self.options.zoomType != \"inner\") {\n                        self.showHideTint(\"show\");\n                    }\n                }\n            }\n\n            if (type == \"hide\") {\n                if (self.options.zoomType == \"window\") { self.showHideWindow(\"hide\"); }\n                if (!self.options.tint) { self.showHideWindow(\"hide\"); }\n                if (self.options.showLens) { self.showHideLens(\"hide\"); }\n                if (self.options.tint) { self.showHideTint(\"hide\"); }\n            }\n        },\n        setPosition: function (e) {\n\n            var self = this;\n\n            if (!self.options.zoomEnabled) { return false; }\n\n            //recaclc offset each time in case the image moves\n            //this can be caused by other on page elements\n            self.nzHeight = self.$elem.height();\n            self.nzWidth = self.$elem.width();\n            self.nzOffset = self.$elem.offset();\n\n            if (self.options.tint && self.options.zoomType != \"inner\") {\n                self.zoomTint.css({ top: 0 });\n                self.zoomTint.css({ left: 0 });\n            }\n            //set responsive       \n            //will checking if the image needs changing before running this code work faster?\n            if (self.options.responsive && !self.options.scrollZoom) {\n                if (self.options.showLens) {\n                    if (self.nzHeight < self.options.zoomWindowWidth / self.widthRatio) {\n                        lensHeight = self.nzHeight;\n                    }\n                    else {\n                        lensHeight = String((self.options.zoomWindowHeight / self.heightRatio))\n                    }\n                    if (self.largeWidth < self.options.zoomWindowWidth) {\n                        lensWidth = self.nzWidth;\n                    }\n                    else {\n                        lensWidth = (self.options.zoomWindowWidth / self.widthRatio);\n                    }\n                    self.widthRatio = self.largeWidth / self.nzWidth;\n                    self.heightRatio = self.largeHeight / self.nzHeight;\n                    if (self.options.zoomType != \"lens\") {\n\n\n                        //possibly dont need to keep recalcalculating\n                        //if the lens is heigher than the image, then set lens size to image size\n                        if (self.nzHeight < self.options.zoomWindowWidth / self.widthRatio) {\n                            lensHeight = self.nzHeight;\n\n                        }\n                        else {\n                            lensHeight = String((self.options.zoomWindowHeight / self.heightRatio))\n                        }\n\n                        if (self.nzWidth < self.options.zoomWindowHeight / self.heightRatio) {\n                            lensWidth = self.nzWidth;\n                        }\n                        else {\n                            lensWidth = String((self.options.zoomWindowWidth / self.widthRatio));\n                        }\n\n                        self.zoomLens.css('width', lensWidth);\n                        self.zoomLens.css('height', lensHeight);\n\n                        if (self.options.tint) {\n                            self.zoomTintImage.css('width', self.nzWidth);\n                            self.zoomTintImage.css('height', self.nzHeight);\n                        }\n\n                    }\n                    if (self.options.zoomType == \"lens\") {\n\n                        self.zoomLens.css({ width: String(self.options.lensSize) + 'px', height: String(self.options.lensSize) + 'px' })\n\n\n                    }\n                    //end responsive image change\n                }\n            }\n\n            //container fix\n            self.zoomContainer.css({ top: self.nzOffset.top });\n            self.zoomContainer.css({ left: self.nzOffset.left });\n            self.mouseLeft = parseInt(e.pageX - self.nzOffset.left);\n            self.mouseTop = parseInt(e.pageY - self.nzOffset.top);\n            //calculate the Location of the Lens\n\n            //calculate the bound regions - but only if zoom window\n            if (self.options.zoomType == \"window\") {\n                self.Etoppos = (self.mouseTop < (self.zoomLens.height() / 2));\n                self.Eboppos = (self.mouseTop > self.nzHeight - (self.zoomLens.height() / 2) - (self.options.lensBorderSize * 2));\n                self.Eloppos = (self.mouseLeft < 0 + ((self.zoomLens.width() / 2)));\n                self.Eroppos = (self.mouseLeft > (self.nzWidth - (self.zoomLens.width() / 2) - (self.options.lensBorderSize * 2)));\n            }\n            //calculate the bound regions - but only for inner zoom\n            if (self.options.zoomType == \"inner\") {\n                self.Etoppos = (self.mouseTop < ((self.nzHeight / 2) / self.heightRatio));\n                self.Eboppos = (self.mouseTop > (self.nzHeight - ((self.nzHeight / 2) / self.heightRatio)));\n                self.Eloppos = (self.mouseLeft < 0 + (((self.nzWidth / 2) / self.widthRatio)));\n                self.Eroppos = (self.mouseLeft > (self.nzWidth - (self.nzWidth / 2) / self.widthRatio - (self.options.lensBorderSize * 2)));\n            }\n\n            // if the mouse position of the slider is one of the outerbounds, then hide  window and lens\n            if (self.mouseLeft < 0 || self.mouseTop < 0 || self.mouseLeft > self.nzWidth || self.mouseTop > self.nzHeight) {\n                self.setElements(\"hide\");\n                return;\n            }\n            //else continue with operations\n            else {\n\n\n                //lens options\n                if (self.options.showLens) {\n                    //\t\tself.showHideLens(\"show\");\n                    //set background position of lens\n                    self.lensLeftPos = String(Math.floor(self.mouseLeft - self.zoomLens.width() / 2));\n                    self.lensTopPos = String(Math.floor(self.mouseTop - self.zoomLens.height() / 2));\n\n\n                }\n                //adjust the background position if the mouse is in one of the outer regions \n\n                //Top region\n                if (self.Etoppos) {\n                    self.lensTopPos = 0;\n                }\n                //Left Region\n                if (self.Eloppos) {\n                    self.windowLeftPos = 0;\n                    self.lensLeftPos = 0;\n                    self.tintpos = 0;\n                }\n                //Set bottom and right region for window mode\n                if (self.options.zoomType == \"window\") {\n                    if (self.Eboppos) {\n                        self.lensTopPos = Math.max((self.nzHeight) - self.zoomLens.height() - (self.options.lensBorderSize * 2), 0);\n                    }\n                    if (self.Eroppos) {\n                        self.lensLeftPos = (self.nzWidth - (self.zoomLens.width()) - (self.options.lensBorderSize * 2));\n                    }\n                }\n                //Set bottom and right region for inner mode\n                if (self.options.zoomType == \"inner\") {\n                    if (self.Eboppos) {\n                        self.lensTopPos = Math.max(((self.nzHeight) - (self.options.lensBorderSize * 2)), 0);\n                    }\n                    if (self.Eroppos) {\n                        self.lensLeftPos = (self.nzWidth - (self.nzWidth) - (self.options.lensBorderSize * 2));\n                    }\n\n                }\n                //if lens zoom\n                if (self.options.zoomType == \"lens\") {\n                    self.windowLeftPos = String(((e.pageX - self.nzOffset.left) * self.widthRatio - self.zoomLens.width() / 2) * (-1));\n                    self.windowTopPos = String(((e.pageY - self.nzOffset.top) * self.heightRatio - self.zoomLens.height() / 2) * (-1));\n\n                    self.zoomLens.css({ backgroundPosition: self.windowLeftPos + 'px ' + self.windowTopPos + 'px' });\n\n                    if (self.changeBgSize) {\n\n                        if (self.nzHeight > self.nzWidth) {\n                            if (self.options.zoomType == \"lens\") {\n                                self.zoomLens.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                            }\n\n                            self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                        }\n                        else {\n                            if (self.options.zoomType == \"lens\") {\n                                self.zoomLens.css({ \"background-size\": self.largeWidth / self.newvaluewidth + 'px ' + self.largeHeight / self.newvaluewidth + 'px' });\n                            }\n                            self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvaluewidth + 'px ' + self.largeHeight / self.newvaluewidth + 'px' });\n                        }\n                        self.changeBgSize = false;\n                    }\n\n                    self.setWindowPostition(e);\n                }\n                //if tint zoom   \n                if (self.options.tint && self.options.zoomType != \"inner\") {\n                    self.setTintPosition(e);\n\n                }\n                //set the css background position \n                if (self.options.zoomType == \"window\") {\n                    self.setWindowPostition(e);\n                }\n                if (self.options.zoomType == \"inner\") {\n                    self.setWindowPostition(e);\n                }\n                if (self.options.showLens) {\n\n                    if (self.fullwidth && self.options.zoomType != \"lens\") {\n                        self.lensLeftPos = 0;\n\n                    }\n                    self.zoomLens.css({ left: self.lensLeftPos + 'px', top: self.lensTopPos + 'px' })\n                }\n\n            } //end else\n\n\n\n        },\n        showHideWindow: function (change) {\n            var self = this;\n            if (change == \"show\") {\n                if (!self.isWindowActive) {\n                    if (self.options.zoomWindowFadeIn) {\n                        self.zoomWindow.stop(true, true, false).fadeIn(self.options.zoomWindowFadeIn);\n                    }\n                    else { self.zoomWindow.show(); }\n                    self.isWindowActive = true;\n                }\n            }\n            if (change == \"hide\") {\n                if (self.isWindowActive) {\n                    if (self.options.zoomWindowFadeOut) {\n                        self.zoomWindow.stop(true, true).fadeOut(self.options.zoomWindowFadeOut, function () {\n                            if (self.loop) {\n                                //stop moving the zoom window when zoom window is faded out\n                                clearInterval(self.loop);\n                                self.loop = false;\n                            }\n                        });\n                    }\n                    else { self.zoomWindow.hide(); }\n                    self.isWindowActive = false;\n                }\n            }\n        },\n        showHideLens: function (change) {\n            var self = this;\n            if (change == \"show\") {\n                if (!self.isLensActive) {\n                    if (self.options.lensFadeIn) {\n                        self.zoomLens.stop(true, true, false).fadeIn(self.options.lensFadeIn);\n                    }\n                    else { self.zoomLens.show(); }\n                    self.isLensActive = true;\n                }\n            }\n            if (change == \"hide\") {\n                if (self.isLensActive) {\n                    if (self.options.lensFadeOut) {\n                        self.zoomLens.stop(true, true).fadeOut(self.options.lensFadeOut);\n                    }\n                    else { self.zoomLens.hide(); }\n                    self.isLensActive = false;\n                }\n            }\n        },\n        showHideTint: function (change) {\n            var self = this;\n            if (change == \"show\") {\n                if (!self.isTintActive) {\n\n                    if (self.options.zoomTintFadeIn) {\n                        self.zoomTint.css({ opacity: self.options.tintOpacity }).animate().stop(true, true).fadeIn(\"slow\");\n                    }\n                    else {\n                        self.zoomTint.css({ opacity: self.options.tintOpacity }).animate();\n                        self.zoomTint.show();\n\n\n                    }\n                    self.isTintActive = true;\n                }\n            }\n            if (change == \"hide\") {\n                if (self.isTintActive) {\n\n                    if (self.options.zoomTintFadeOut) {\n                        self.zoomTint.stop(true, true).fadeOut(self.options.zoomTintFadeOut);\n                    }\n                    else { self.zoomTint.hide(); }\n                    self.isTintActive = false;\n                }\n            }\n        },\n        setLensPostition: function (e) {\n\n\n        },\n        setWindowPostition: function (e) {\n            //return obj.slice( 0, count );\n            var self = this;\n\n            if (!isNaN(self.options.zoomWindowPosition)) {\n\n                switch (self.options.zoomWindowPosition) {\n                    case 1: //done         \n                        self.windowOffsetTop = (self.options.zoomWindowOffety);//DONE - 1\n                        self.windowOffsetLeft = (+self.nzWidth); //DONE 1, 2, 3, 4, 16\n                        break;\n                    case 2:\n                        if (self.options.zoomWindowHeight > self.nzHeight) { //positive margin\n\n                            self.windowOffsetTop = ((self.options.zoomWindowHeight / 2) - (self.nzHeight / 2)) * (-1);\n                            self.windowOffsetLeft = (self.nzWidth); //DONE 1, 2, 3, 4, 16\n                        }\n                        else { //negative margin\n\n                        }\n                        break;\n                    case 3: //done        \n                        self.windowOffsetTop = (self.nzHeight - self.zoomWindow.height() - (self.options.borderSize * 2)); //DONE 3,9\n                        self.windowOffsetLeft = (self.nzWidth); //DONE 1, 2, 3, 4, 16\n                        break;\n                    case 4: //done  \n                        self.windowOffsetTop = (self.nzHeight); //DONE - 4,5,6,7,8\n                        self.windowOffsetLeft = (self.nzWidth); //DONE 1, 2, 3, 4, 16\n                        break;\n                    case 5: //done  \n                        self.windowOffsetTop = (self.nzHeight); //DONE - 4,5,6,7,8\n                        self.windowOffsetLeft = (self.nzWidth - self.zoomWindow.width() - (self.options.borderSize * 2)); //DONE - 5,15\n                        break;\n                    case 6:\n                        if (self.options.zoomWindowHeight > self.nzHeight) { //positive margin\n                            self.windowOffsetTop = (self.nzHeight);  //DONE - 4,5,6,7,8\n\n                            self.windowOffsetLeft = ((self.options.zoomWindowWidth / 2) - (self.nzWidth / 2) + (self.options.borderSize * 2)) * (-1);\n                        }\n                        else { //negative margin\n\n                        }\n\n\n                        break;\n                    case 7: //done  \n                        self.windowOffsetTop = (self.nzHeight);  //DONE - 4,5,6,7,8\n                        self.windowOffsetLeft = 0; //DONE 7, 13\n                        break;\n                    case 8: //done  \n                        self.windowOffsetTop = (self.nzHeight); //DONE - 4,5,6,7,8\n                        self.windowOffsetLeft = (self.zoomWindow.width() + (self.options.borderSize * 2)) * (-1);  //DONE 8,9,10,11,12\n                        break;\n                    case 9:  //done  \n                        self.windowOffsetTop = (self.nzHeight - self.zoomWindow.height() - (self.options.borderSize * 2)); //DONE 3,9\n                        self.windowOffsetLeft = (self.zoomWindow.width() + (self.options.borderSize * 2)) * (-1);  //DONE 8,9,10,11,12\n                        break;\n                    case 10:\n                        if (self.options.zoomWindowHeight > self.nzHeight) { //positive margin\n\n                            self.windowOffsetTop = ((self.options.zoomWindowHeight / 2) - (self.nzHeight / 2)) * (-1);\n                            self.windowOffsetLeft = (self.zoomWindow.width() + (self.options.borderSize * 2)) * (-1);  //DONE 8,9,10,11,12\n                        }\n                        else { //negative margin\n\n                        }\n                        break;\n                    case 11:\n                        self.windowOffsetTop = (self.options.zoomWindowOffety);\n                        self.windowOffsetLeft = (self.zoomWindow.width() + (self.options.borderSize * 2)) * (-1);  //DONE 8,9,10,11,12\n                        break;\n                    case 12: //done  \n                        self.windowOffsetTop = (self.zoomWindow.height() + (self.options.borderSize * 2)) * (-1); //DONE 12,13,14,15,16\n                        self.windowOffsetLeft = (self.zoomWindow.width() + (self.options.borderSize * 2)) * (-1);  //DONE 8,9,10,11,12\n                        break;\n                    case 13: //done  \n                        self.windowOffsetTop = (self.zoomWindow.height() + (self.options.borderSize * 2)) * (-1); //DONE 12,13,14,15,16\n                        self.windowOffsetLeft = (0); //DONE 7, 13\n                        break;\n                    case 14:\n                        if (self.options.zoomWindowHeight > self.nzHeight) { //positive margin\n                            self.windowOffsetTop = (self.zoomWindow.height() + (self.options.borderSize * 2)) * (-1); //DONE 12,13,14,15,16\n\n                            self.windowOffsetLeft = ((self.options.zoomWindowWidth / 2) - (self.nzWidth / 2) + (self.options.borderSize * 2)) * (-1);\n                        }\n                        else { //negative margin\n\n                        }\n\n                        break;\n                    case 15://done   \n                        self.windowOffsetTop = (self.zoomWindow.height() + (self.options.borderSize * 2)) * (-1); //DONE 12,13,14,15,16\n                        self.windowOffsetLeft = (self.nzWidth - self.zoomWindow.width() - (self.options.borderSize * 2)); //DONE - 5,15\n                        break;\n                    case 16:  //done  \n                        self.windowOffsetTop = (self.zoomWindow.height() + (self.options.borderSize * 2)) * (-1); //DONE 12,13,14,15,16\n                        self.windowOffsetLeft = (self.nzWidth); //DONE 1, 2, 3, 4, 16\n                        break;\n                    default: //done  \n                        self.windowOffsetTop = (self.options.zoomWindowOffety);//DONE - 1\n                        self.windowOffsetLeft = (self.nzWidth); //DONE 1, 2, 3, 4, 16\n                }\n            } //end isNAN\n            else {\n                //WE CAN POSITION IN A CLASS - ASSUME THAT ANY STRING PASSED IS\n                self.externalContainer = $('#' + self.options.zoomWindowPosition);\n                self.externalContainerWidth = self.externalContainer.width();\n                self.externalContainerHeight = self.externalContainer.height();\n                self.externalContainerOffset = self.externalContainer.offset();\n\n                self.windowOffsetTop = self.externalContainerOffset.top;//DONE - 1\n                self.windowOffsetLeft = self.externalContainerOffset.left; //DONE 1, 2, 3, 4, 16\n\n            }\n            self.isWindowSet = true;\n            self.windowOffsetTop = self.windowOffsetTop + self.options.zoomWindowOffety;\n            self.windowOffsetLeft = self.windowOffsetLeft + self.options.zoomWindowOffetx;\n\n            self.zoomWindow.css({ top: self.windowOffsetTop });\n            self.zoomWindow.css({ left: self.windowOffsetLeft });\n\n            if (self.options.zoomType == \"inner\") {\n                self.zoomWindow.css({ top: 0 });\n                self.zoomWindow.css({ left: 0 });\n\n            }\n\n\n            self.windowLeftPos = String(((e.pageX - self.nzOffset.left) * self.widthRatio - self.zoomWindow.width() / 2) * (-1));\n            self.windowTopPos = String(((e.pageY - self.nzOffset.top) * self.heightRatio - self.zoomWindow.height() / 2) * (-1));\n            if (self.Etoppos) { self.windowTopPos = 0; }\n            if (self.Eloppos) { self.windowLeftPos = 0; }\n            if (self.Eboppos) { self.windowTopPos = (self.largeHeight / self.currentZoomLevel - self.zoomWindow.height()) * (-1); }\n            if (self.Eroppos) { self.windowLeftPos = ((self.largeWidth / self.currentZoomLevel - self.zoomWindow.width()) * (-1)); }\n\n            //stops micro movements\n            if (self.fullheight) {\n                self.windowTopPos = 0;\n\n            }\n            if (self.fullwidth) {\n                self.windowLeftPos = 0;\n\n            }\n            //set the css background position \n\n\n            if (self.options.zoomType == \"window\" || self.options.zoomType == \"inner\") {\n\n                if (self.zoomLock == 1) {\n                    //overrides for images not zoomable\n                    if (self.widthRatio <= 1) {\n\n                        self.windowLeftPos = 0;\n                    }\n                    if (self.heightRatio <= 1) {\n                        self.windowTopPos = 0;\n                    }\n                }\n                // adjust images less than the window height\n\n                if (self.options.zoomType == \"window\") {\n                    if (self.largeHeight < self.options.zoomWindowHeight) {\n\n                        self.windowTopPos = 0;\n                    }\n                    if (self.largeWidth < self.options.zoomWindowWidth) {\n                        self.windowLeftPos = 0;\n                    }\n                }\n\n                //set the zoomwindow background position\n                if (self.options.easing) {\n\n                    //     if(self.changeZoom){\n                    //           clearInterval(self.loop);\n                    //           self.changeZoom = false;\n                    //           self.loop = false;\n\n                    //            }\n                    //set the pos to 0 if not set\n                    if (!self.xp) { self.xp = 0; }\n                    if (!self.yp) { self.yp = 0; }\n                    //if loop not already started, then run it \n                    if (!self.loop) {\n                        self.loop = setInterval(function () {\n                            //using zeno's paradox    \n\n                            self.xp += (self.windowLeftPos - self.xp) / self.options.easingAmount;\n                            self.yp += (self.windowTopPos - self.yp) / self.options.easingAmount;\n                            if (self.scrollingLock) {\n\n\n                                clearInterval(self.loop);\n                                self.xp = self.windowLeftPos;\n                                self.yp = self.windowTopPos\n\n                                self.xp = ((e.pageX - self.nzOffset.left) * self.widthRatio - self.zoomWindow.width() / 2) * (-1);\n                                self.yp = (((e.pageY - self.nzOffset.top) * self.heightRatio - self.zoomWindow.height() / 2) * (-1));\n\n                                if (self.changeBgSize) {\n                                    if (self.nzHeight > self.nzWidth) {\n                                        if (self.options.zoomType == \"lens\") {\n                                            self.zoomLens.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                                        }\n                                        self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                                    }\n                                    else {\n                                        if (self.options.zoomType != \"lens\") {\n                                            self.zoomLens.css({ \"background-size\": self.largeWidth / self.newvaluewidth + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                                        }\n                                        self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvaluewidth + 'px ' + self.largeHeight / self.newvaluewidth + 'px' });\n\n                                    }\n\n                                    /*\n         if(!self.bgxp){self.bgxp = self.largeWidth/self.newvalue;}\n                    if(!self.bgyp){self.bgyp = self.largeHeight/self.newvalue ;}  \n             if (!self.bgloop){   \n                  self.bgloop = setInterval(function(){   \n\n             self.bgxp += (self.largeWidth/self.newvalue  - self.bgxp) / self.options.easingAmount; \n                            self.bgyp += (self.largeHeight/self.newvalue  - self.bgyp) / self.options.easingAmount;\n\n       self.zoomWindow.css({ \"background-size\": self.bgxp + 'px ' + self.bgyp + 'px' });\n\n\n              }, 16);\n\n             }\n                                     */\n                                    self.changeBgSize = false;\n                                }\n\n                                self.zoomWindow.css({ backgroundPosition: self.windowLeftPos + 'px ' + self.windowTopPos + 'px' });\n                                self.scrollingLock = false;\n                                self.loop = false;\n\n                            }\n                            else if (Math.round(Math.abs(self.xp - self.windowLeftPos) + Math.abs(self.yp - self.windowTopPos)) < 1) {\n                                //stops micro movements\n                                clearInterval(self.loop);\n                                self.zoomWindow.css({ backgroundPosition: self.windowLeftPos + 'px ' + self.windowTopPos + 'px' });\n                                self.loop = false;\n                            }\n                            else {\n                                if (self.changeBgSize) {\n                                    if (self.nzHeight > self.nzWidth) {\n                                        if (self.options.zoomType == \"lens\") {\n                                            self.zoomLens.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                                        }\n                                        self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                                    }\n                                    else {\n                                        if (self.options.zoomType != \"lens\") {\n                                            self.zoomLens.css({ \"background-size\": self.largeWidth / self.newvaluewidth + 'px ' + self.largeHeight / self.newvaluewidth + 'px' });\n                                        }\n                                        self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvaluewidth + 'px ' + self.largeHeight / self.newvaluewidth + 'px' });\n                                    }\n                                    self.changeBgSize = false;\n                                }\n\n                                self.zoomWindow.css({ backgroundPosition: self.xp + 'px ' + self.yp + 'px' });\n                            }\n                        }, 16);\n                    }\n                }\n                else {\n                    if (self.changeBgSize) {\n                        if (self.nzHeight > self.nzWidth) {\n                            if (self.options.zoomType == \"lens\") {\n                                self.zoomLens.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                            }\n\n                            self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                        }\n                        else {\n                            if (self.options.zoomType == \"lens\") {\n                                self.zoomLens.css({ \"background-size\": self.largeWidth / self.newvaluewidth + 'px ' + self.largeHeight / self.newvaluewidth + 'px' });\n                            }\n                            if ((self.largeHeight / self.newvaluewidth) < self.options.zoomWindowHeight) {\n\n                                self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvaluewidth + 'px ' + self.largeHeight / self.newvaluewidth + 'px' });\n                            }\n                            else {\n\n                                self.zoomWindow.css({ \"background-size\": self.largeWidth / self.newvalueheight + 'px ' + self.largeHeight / self.newvalueheight + 'px' });\n                            }\n\n                        }\n                        self.changeBgSize = false;\n                    }\n\n                    self.zoomWindow.css({ backgroundPosition: self.windowLeftPos + 'px ' + self.windowTopPos + 'px' });\n                }\n            }\n        },\n        setTintPosition: function (e) {\n            var self = this;\n            self.nzOffset = self.$elem.offset();\n            self.tintpos = String(((e.pageX - self.nzOffset.left) - (self.zoomLens.width() / 2)) * (-1));\n            self.tintposy = String(((e.pageY - self.nzOffset.top) - self.zoomLens.height() / 2) * (-1));\n            if (self.Etoppos) {\n                self.tintposy = 0;\n            }\n            if (self.Eloppos) {\n                self.tintpos = 0;\n            }\n            if (self.Eboppos) {\n                self.tintposy = (self.nzHeight - self.zoomLens.height() - (self.options.lensBorderSize * 2)) * (-1);\n            }\n            if (self.Eroppos) {\n                self.tintpos = ((self.nzWidth - self.zoomLens.width() - (self.options.lensBorderSize * 2)) * (-1));\n            }\n            if (self.options.tint) {\n                //stops micro movements\n                if (self.fullheight) {\n                    self.tintposy = 0;\n\n                }\n                if (self.fullwidth) {\n                    self.tintpos = 0;\n\n                }\n                self.zoomTintImage.css({ 'left': self.tintpos + 'px' });\n                self.zoomTintImage.css({ 'top': self.tintposy + 'px' });\n            }\n        },\n\n        swaptheimage: function (smallimage, largeimage) {\n            var self = this;\n            var newImg = new Image();\n\n            if (self.options.loadingIcon) {\n                self.spinner = $('<div style=\"background: url(\\'' + self.options.loadingIcon + '\\') no-repeat center;height:' + self.nzHeight + 'px;width:' + self.nzWidth + 'px;z-index: 2000;position: absolute; background-position: center center;\"></div>');\n                self.$elem.after(self.spinner);\n            }\n\n            self.options.onImageSwap(self.$elem);\n\n            newImg.onload = function () {\n                self.largeWidth = newImg.width;\n                self.largeHeight = newImg.height;\n                self.zoomImage = largeimage;\n                self.zoomWindow.css({ \"background-size\": self.largeWidth + 'px ' + self.largeHeight + 'px' });\n                self.swapAction(smallimage, largeimage);\n                return;\n            }\n            newImg.src = largeimage; // this must be done AFTER setting onload\n\n        },\n        swapAction: function (smallimage, largeimage) {\n\n\n            var self = this;\n\n            var newImg2 = new Image();\n            newImg2.onload = function () {\n                //re-calculate values\n                self.nzHeight = newImg2.height;\n                self.nzWidth = newImg2.width;\n                self.options.onImageSwapComplete(self.$elem);\n\n                self.doneCallback();\n                return;\n            }\n            newImg2.src = smallimage;\n\n            //reset the zoomlevel to that initially set in options\n            self.currentZoomLevel = self.options.zoomLevel;\n            self.options.maxZoomLevel = false;\n\n            //swaps the main image\n            //self.$elem.attr(\"src\",smallimage);\n            //swaps the zoom image     \n            if (self.options.zoomType == \"lens\") {\n                self.zoomLens.css({ backgroundImage: \"url('\" + largeimage + \"')\" });\n            }\n            if (self.options.zoomType == \"window\") {\n                self.zoomWindow.css({ backgroundImage: \"url('\" + largeimage + \"')\" });\n            }\n            if (self.options.zoomType == \"inner\") {\n                self.zoomWindow.css({ backgroundImage: \"url('\" + largeimage + \"')\" });\n            }\n\n\n\n            self.currentImage = largeimage;\n\n            if (self.options.imageCrossfade) {\n                var oldImg = self.$elem;\n                var newImg = oldImg.clone();\n                self.$elem.attr(\"src\", smallimage)\n                self.$elem.after(newImg);\n                newImg.stop(true).fadeOut(self.options.imageCrossfade, function () {\n                    $(this).remove();\n                });\n\n                //       \t\t\t\tif(self.options.zoomType == \"inner\"){\n                //remove any attributes on the cloned image so we can resize later\n                self.$elem.width(\"auto\").removeAttr(\"width\");\n                self.$elem.height(\"auto\").removeAttr(\"height\");\n                //   }\n\n                oldImg.fadeIn(self.options.imageCrossfade);\n\n                if (self.options.tint && self.options.zoomType != \"inner\") {\n\n                    var oldImgTint = self.zoomTintImage;\n                    var newImgTint = oldImgTint.clone();\n                    self.zoomTintImage.attr(\"src\", largeimage)\n                    self.zoomTintImage.after(newImgTint);\n                    newImgTint.stop(true).fadeOut(self.options.imageCrossfade, function () {\n                        $(this).remove();\n                    });\n\n\n\n                    oldImgTint.fadeIn(self.options.imageCrossfade);\n\n\n                    //self.zoomTintImage.attr(\"width\",elem.data(\"image\"));\n\n                    //resize the tint window\n                    self.zoomTint.css({ height: self.$elem.height() });\n                    self.zoomTint.css({ width: self.$elem.width() });\n                }\n\n                self.zoomContainer.css(\"height\", self.$elem.height());\n                self.zoomContainer.css(\"width\", self.$elem.width());\n\n                if (self.options.zoomType == \"inner\") {\n                    if (!self.options.constrainType) {\n                        self.zoomWrap.parent().css(\"height\", self.$elem.height());\n                        self.zoomWrap.parent().css(\"width\", self.$elem.width());\n\n                        self.zoomWindow.css(\"height\", self.$elem.height());\n                        self.zoomWindow.css(\"width\", self.$elem.width());\n                    }\n                }\n\n                if (self.options.imageCrossfade) {\n                    self.zoomWrap.css(\"height\", self.$elem.height());\n                    self.zoomWrap.css(\"width\", self.$elem.width());\n                }\n            }\n            else {\n                self.$elem.attr(\"src\", smallimage);\n                if (self.options.tint) {\n                    self.zoomTintImage.attr(\"src\", largeimage);\n                    //self.zoomTintImage.attr(\"width\",elem.data(\"image\"));\n                    self.zoomTintImage.attr(\"height\", self.$elem.height());\n                    //self.zoomTintImage.attr('src') = elem.data(\"image\");\n                    self.zoomTintImage.css({ height: self.$elem.height() });\n                    self.zoomTint.css({ height: self.$elem.height() });\n\n                }\n                self.zoomContainer.css(\"height\", self.$elem.height());\n                self.zoomContainer.css(\"width\", self.$elem.width());\n\n                if (self.options.imageCrossfade) {\n                    self.zoomWrap.css(\"height\", self.$elem.height());\n                    self.zoomWrap.css(\"width\", self.$elem.width());\n                }\n            }\n            if (self.options.constrainType) {\n\n                //This will contrain the image proportions\n                if (self.options.constrainType == \"height\") {\n\n                    self.zoomContainer.css(\"height\", self.options.constrainSize);\n                    self.zoomContainer.css(\"width\", \"auto\");\n\n                    if (self.options.imageCrossfade) {\n                        self.zoomWrap.css(\"height\", self.options.constrainSize);\n                        self.zoomWrap.css(\"width\", \"auto\");\n                        self.constwidth = self.zoomWrap.width();\n\n\n                    }\n                    else {\n                        self.$elem.css(\"height\", self.options.constrainSize);\n                        self.$elem.css(\"width\", \"auto\");\n                        self.constwidth = self.$elem.width();\n                    }\n\n                    if (self.options.zoomType == \"inner\") {\n\n                        self.zoomWrap.parent().css(\"height\", self.options.constrainSize);\n                        self.zoomWrap.parent().css(\"width\", self.constwidth);\n                        self.zoomWindow.css(\"height\", self.options.constrainSize);\n                        self.zoomWindow.css(\"width\", self.constwidth);\n                    }\n                    if (self.options.tint) {\n                        self.tintContainer.css(\"height\", self.options.constrainSize);\n                        self.tintContainer.css(\"width\", self.constwidth);\n                        self.zoomTint.css(\"height\", self.options.constrainSize);\n                        self.zoomTint.css(\"width\", self.constwidth);\n                        self.zoomTintImage.css(\"height\", self.options.constrainSize);\n                        self.zoomTintImage.css(\"width\", self.constwidth);\n                    }\n\n                }\n                if (self.options.constrainType == \"width\") {\n                    self.zoomContainer.css(\"height\", \"auto\");\n                    self.zoomContainer.css(\"width\", self.options.constrainSize);\n\n                    if (self.options.imageCrossfade) {\n                        self.zoomWrap.css(\"height\", \"auto\");\n                        self.zoomWrap.css(\"width\", self.options.constrainSize);\n                        self.constheight = self.zoomWrap.height();\n                    }\n                    else {\n                        self.$elem.css(\"height\", \"auto\");\n                        self.$elem.css(\"width\", self.options.constrainSize);\n                        self.constheight = self.$elem.height();\n                    }\n                    if (self.options.zoomType == \"inner\") {\n                        self.zoomWrap.parent().css(\"height\", self.constheight);\n                        self.zoomWrap.parent().css(\"width\", self.options.constrainSize);\n                        self.zoomWindow.css(\"height\", self.constheight);\n                        self.zoomWindow.css(\"width\", self.options.constrainSize);\n                    }\n                    if (self.options.tint) {\n                        self.tintContainer.css(\"height\", self.constheight);\n                        self.tintContainer.css(\"width\", self.options.constrainSize);\n                        self.zoomTint.css(\"height\", self.constheight);\n                        self.zoomTint.css(\"width\", self.options.constrainSize);\n                        self.zoomTintImage.css(\"height\", self.constheight);\n                        self.zoomTintImage.css(\"width\", self.options.constrainSize);\n                    }\n\n                }\n\n\n            }\n\n        },\n        doneCallback: function () {\n\n            var self = this;\n            if (self.options.loadingIcon) {\n                self.spinner.hide();\n            }\n\n            self.nzOffset = self.$elem.offset();\n            self.nzWidth = self.$elem.width();\n            self.nzHeight = self.$elem.height();\n\n            // reset the zoomlevel back to default\n            self.currentZoomLevel = self.options.zoomLevel;\n\n            //ratio of the large to small image\n            self.widthRatio = self.largeWidth / self.nzWidth;\n            self.heightRatio = self.largeHeight / self.nzHeight;\n\n            //NEED TO ADD THE LENS SIZE FOR ROUND\n            // adjust images less than the window height\n            if (self.options.zoomType == \"window\") {\n\n                if (self.nzHeight < self.options.zoomWindowWidth / self.widthRatio) {\n                    lensHeight = self.nzHeight;\n\n                }\n                else {\n                    lensHeight = String((self.options.zoomWindowHeight / self.heightRatio))\n                }\n\n                if (self.options.zoomWindowWidth < self.options.zoomWindowWidth) {\n                    lensWidth = self.nzWidth;\n                }\n                else {\n                    lensWidth = (self.options.zoomWindowWidth / self.widthRatio);\n                }\n\n\n                if (self.zoomLens) {\n\n                    self.zoomLens.css('width', lensWidth);\n                    self.zoomLens.css('height', lensHeight);\n\n\n                }\n            }\n        },\n        getCurrentImage: function () {\n            var self = this;\n            return self.zoomImage;\n        },\n        getGalleryList: function () {\n            var self = this;\n            //loop through the gallery options and set them in list for fancybox\n            self.gallerylist = [];\n            if (self.options.gallery) {\n\n\n                $('#' + self.options.gallery + ' a').each(function () {\n\n                    var img_src = '';\n                    if ($(this).data(\"zoom-image\")) {\n                        img_src = $(this).data(\"zoom-image\");\n                    }\n                    else if ($(this).data(\"image\")) {\n                        img_src = $(this).data(\"image\");\n                    }\n                    //put the current image at the start\n                    if (img_src == self.zoomImage) {\n                        self.gallerylist.unshift({\n                            href: '' + img_src + '',\n                            title: $(this).find('img').attr(\"title\")\n                        });\n                    }\n                    else {\n                        self.gallerylist.push({\n                            href: '' + img_src + '',\n                            title: $(this).find('img').attr(\"title\")\n                        });\n                    }\n\n\n                });\n            }\n            //if no gallery - return current image\n            else {\n                self.gallerylist.push({\n                    href: '' + self.zoomImage + '',\n                    title: $(this).find('img').attr(\"title\")\n                });\n            }\n            return self.gallerylist;\n\n        },\n        changeZoomLevel: function (value) {\n            var self = this;\n\n            //flag a zoom, so can adjust the easing during setPosition     \n            self.scrollingLock = true;\n\n            //round to two decimal places\n            self.newvalue = parseFloat(value).toFixed(2);\n            newvalue = parseFloat(value).toFixed(2);\n\n\n\n\n            //maxwidth & Maxheight of the image\n            maxheightnewvalue = self.largeHeight / ((self.options.zoomWindowHeight / self.nzHeight) * self.nzHeight);\n            maxwidthtnewvalue = self.largeWidth / ((self.options.zoomWindowWidth / self.nzWidth) * self.nzWidth);\n\n\n\n\n            //calculate new heightratio\n            if (self.options.zoomType != \"inner\") {\n                if (maxheightnewvalue <= newvalue) {\n                    self.heightRatio = (self.largeHeight / maxheightnewvalue) / self.nzHeight;\n                    self.newvalueheight = maxheightnewvalue;\n                    self.fullheight = true;\n\n                }\n                else {\n                    self.heightRatio = (self.largeHeight / newvalue) / self.nzHeight;\n                    self.newvalueheight = newvalue;\n                    self.fullheight = false;\n\n                }\n\n\n                //\t\t\t\t\tcalculate new width ratio\n\n                if (maxwidthtnewvalue <= newvalue) {\n                    self.widthRatio = (self.largeWidth / maxwidthtnewvalue) / self.nzWidth;\n                    self.newvaluewidth = maxwidthtnewvalue;\n                    self.fullwidth = true;\n\n                }\n                else {\n                    self.widthRatio = (self.largeWidth / newvalue) / self.nzWidth;\n                    self.newvaluewidth = newvalue;\n                    self.fullwidth = false;\n\n                }\n                if (self.options.zoomType == \"lens\") {\n                    if (maxheightnewvalue <= newvalue) {\n                        self.fullwidth = true;\n                        self.newvaluewidth = maxheightnewvalue;\n\n                    } else {\n                        self.widthRatio = (self.largeWidth / newvalue) / self.nzWidth;\n                        self.newvaluewidth = newvalue;\n\n                        self.fullwidth = false;\n                    }\n                }\n            }\n\n\n\n            if (self.options.zoomType == \"inner\") {\n                maxheightnewvalue = parseFloat(self.largeHeight / self.nzHeight).toFixed(2);\n                maxwidthtnewvalue = parseFloat(self.largeWidth / self.nzWidth).toFixed(2);\n                if (newvalue > maxheightnewvalue) {\n                    newvalue = maxheightnewvalue;\n                }\n                if (newvalue > maxwidthtnewvalue) {\n                    newvalue = maxwidthtnewvalue;\n                }\n\n\n                if (maxheightnewvalue <= newvalue) {\n\n\n                    self.heightRatio = (self.largeHeight / newvalue) / self.nzHeight;\n                    if (newvalue > maxheightnewvalue) {\n                        self.newvalueheight = maxheightnewvalue;\n                    } else {\n                        self.newvalueheight = newvalue;\n                    }\n                    self.fullheight = true;\n\n\n                }\n                else {\n\n\n\n                    self.heightRatio = (self.largeHeight / newvalue) / self.nzHeight;\n\n                    if (newvalue > maxheightnewvalue) {\n\n                        self.newvalueheight = maxheightnewvalue;\n                    } else {\n                        self.newvalueheight = newvalue;\n                    }\n                    self.fullheight = false;\n                }\n\n\n\n\n                if (maxwidthtnewvalue <= newvalue) {\n\n                    self.widthRatio = (self.largeWidth / newvalue) / self.nzWidth;\n                    if (newvalue > maxwidthtnewvalue) {\n\n                        self.newvaluewidth = maxwidthtnewvalue;\n                    } else {\n                        self.newvaluewidth = newvalue;\n                    }\n\n                    self.fullwidth = true;\n\n\n                }\n                else {\n\n                    self.widthRatio = (self.largeWidth / newvalue) / self.nzWidth;\n                    self.newvaluewidth = newvalue;\n                    self.fullwidth = false;\n                }\n\n\n            } //end inner\n            scrcontinue = false;\n\n            if (self.options.zoomType == \"inner\") {\n\n                if (self.nzWidth >= self.nzHeight) {\n                    if (self.newvaluewidth <= maxwidthtnewvalue) {\n                        scrcontinue = true;\n                    }\n                    else {\n\n                        scrcontinue = false;\n                        self.fullheight = true;\n                        self.fullwidth = true;\n                    }\n                }\n                if (self.nzHeight > self.nzWidth) {\n                    if (self.newvaluewidth <= maxwidthtnewvalue) {\n                        scrcontinue = true;\n                    }\n                    else {\n                        scrcontinue = false;\n\n                        self.fullheight = true;\n                        self.fullwidth = true;\n                    }\n                }\n            }\n\n            if (self.options.zoomType != \"inner\") {\n                scrcontinue = true;\n            }\n\n            if (scrcontinue) {\n\n\n\n                self.zoomLock = 0;\n                self.changeZoom = true;\n\n                //if lens height is less than image height\n\n\n                if (((self.options.zoomWindowHeight) / self.heightRatio) <= self.nzHeight) {\n\n\n                    self.currentZoomLevel = self.newvalueheight;\n                    if (self.options.zoomType != \"lens\" && self.options.zoomType != \"inner\") {\n                        self.changeBgSize = true;\n\n                        self.zoomLens.css({ height: String((self.options.zoomWindowHeight) / self.heightRatio) + 'px' })\n                    }\n                    if (self.options.zoomType == \"lens\" || self.options.zoomType == \"inner\") {\n                        self.changeBgSize = true;\n                    }\n\n\n                }\n\n\n\n\n                if ((self.options.zoomWindowWidth / self.widthRatio) <= self.nzWidth) {\n\n\n\n                    if (self.options.zoomType != \"inner\") {\n                        if (self.newvaluewidth > self.newvalueheight) {\n                            self.currentZoomLevel = self.newvaluewidth;\n\n                        }\n                    }\n\n                    if (self.options.zoomType != \"lens\" && self.options.zoomType != \"inner\") {\n                        self.changeBgSize = true;\n\n                        self.zoomLens.css({ width: String((self.options.zoomWindowWidth) / self.widthRatio) + 'px' })\n                    }\n                    if (self.options.zoomType == \"lens\" || self.options.zoomType == \"inner\") {\n                        self.changeBgSize = true;\n                    }\n\n                }\n                if (self.options.zoomType == \"inner\") {\n                    self.changeBgSize = true;\n\n                    if (self.nzWidth > self.nzHeight) {\n                        self.currentZoomLevel = self.newvaluewidth;\n                    }\n                    if (self.nzHeight > self.nzWidth) {\n                        self.currentZoomLevel = self.newvaluewidth;\n                    }\n                }\n\n            }      //under\n\n            //sets the boundry change, called in setWindowPos\n            self.setPosition(self.currentLoc);\n            //\n        },\n        closeAll: function () {\n            if (self.zoomWindow) { self.zoomWindow.hide(); }\n            if (self.zoomLens) { self.zoomLens.hide(); }\n            if (self.zoomTint) { self.zoomTint.hide(); }\n        },\n        changeState: function (value) {\n            var self = this;\n            if (value == 'enable') { self.options.zoomEnabled = true; }\n            if (value == 'disable') { self.options.zoomEnabled = false; }\n\n        }\n\n    };\n\n    $.fn.elevateZoom = function (options) {\n        return this.each(function () {\n            var elevate = Object.create(ElevateZoom);\n\n            elevate.init(options, this);\n\n            $.data(this, 'elevateZoom', elevate);\n\n        });\n    };\n\n    $.fn.elevateZoom.options = {\n        imageSrc: null,\n        zoomActivation: \"hover\", // Can also be click (PLACEHOLDER FOR NEXT VERSION)\n        zoomEnabled: true, //false disables zoomwindow from showing\n        preloading: 1, //by default, load all the images, if 0, then only load images after activated (PLACEHOLDER FOR NEXT VERSION)\n        zoomLevel: 1, //default zoom level of image\n        scrollZoom: false, //allow zoom on mousewheel, true to activate\n        scrollZoomIncrement: 0.1,  //steps of the scrollzoom\n        minZoomLevel: false,\n        maxZoomLevel: false,\n        easing: false,\n        easingAmount: 12,\n        lensSize: 200,\n        zoomWindowWidth: 400,\n        zoomWindowHeight: 400,\n        zoomWindowOffetx: 0,\n        zoomWindowOffety: 0,\n        zoomWindowPosition: 1,\n        zoomWindowBgColour: \"#fff\",\n        lensFadeIn: false,\n        lensFadeOut: false,\n        debug: false,\n        zoomWindowFadeIn: false,\n        zoomWindowFadeOut: false,\n        zoomWindowAlwaysShow: false,\n        zoomTintFadeIn: false,\n        zoomTintFadeOut: false,\n        borderSize: 4,\n        showLens: true,\n        borderColour: \"#888\",\n        lensBorderSize: 1,\n        lensBorderColour: \"#000\",\n        lensShape: \"square\", //can be \"round\"\n        zoomType: \"window\", //window is default,  also \"lens\" available -\n        containLensZoom: false,\n        lensColour: \"white\", //colour of the lens background\n        lensOpacity: 0.4, //opacity of the lens\n        lenszoom: false,\n        tint: false, //enable the tinting\n        tintColour: \"#333\", //default tint color, can be anything, red, #ccc, rgb(0,0,0)\n        tintOpacity: 0.4, //opacity of the tint\n        gallery: false,\n        galleryActiveClass: \"zoomGalleryActive\",\n        imageCrossfade: false,\n        constrainType: false,  //width or height\n        constrainSize: false,  //in pixels the dimensions you want to constrain on\n        loadingIcon: false, //http://www.example.com/spinner.gif\n        cursor: \"default\", // user should set to what they want the cursor as, if they have set a click function\n        responsive: true,\n        onComplete: $.noop,\n        onDestroy: function () { },\n        onZoomedImageLoaded: function () { },\n        onImageSwap: $.noop,\n        onImageSwapComplete: $.noop\n    };\n\n})(jQuery, window, document);","// jquery.daterangepicker.js\n// author : Chunlong Liu\n// license : MIT\n// www.jszen.com\n\n(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['jquery', 'moment'], factory);\n    } else if (typeof exports === 'object' && typeof module !== 'undefined') {\n        // CommonJS. Register as a module\n        module.exports = factory(require('jquery'), require('moment'));\n    } else {\n        // Browser globals\n        factory(jQuery, moment);\n    }\n}(function($, moment) {\n    'use strict';\n    $.dateRangePickerLanguages = {\n        \"default\": //default language: English\n        {\n            \"selected\": \"Selected:\",\n            \"day\": \"Day\",\n            \"days\": \"Days\",\n            \"apply\": \"Close\",\n            \"week-1\": \"mo\",\n            \"week-2\": \"tu\",\n            \"week-3\": \"we\",\n            \"week-4\": \"th\",\n            \"week-5\": \"fr\",\n            \"week-6\": \"sa\",\n            \"week-7\": \"su\",\n            \"week-number\": \"W\",\n            \"month-name\": [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"],\n            \"shortcuts\": \"Shortcuts\",\n            \"custom-values\": \"Custom Values\",\n            \"past\": \"Past\",\n            \"following\": \"Following\",\n            \"previous\": \"Previous\",\n            \"prev-week\": \"Week\",\n            \"prev-month\": \"Month\",\n            \"prev-year\": \"Year\",\n            \"next\": \"Next\",\n            \"next-week\": \"Week\",\n            \"next-month\": \"Month\",\n            \"next-year\": \"Year\",\n            \"less-than\": \"Date range should not be more than %d days\",\n            \"more-than\": \"Date range should not be less than %d days\",\n            \"default-more\": \"Please select a date range longer than %d days\",\n            \"default-single\": \"Please select a date\",\n            \"default-less\": \"Please select a date range less than %d days\",\n            \"default-range\": \"Please select a date range between %d and %d days\",\n            \"default-default\": \"Please select a date range\",\n            \"time\": \"Time\",\n            \"hour\": \"Hour\",\n            \"minute\": \"Minute\"\n        },\n        \"de\": {\n            \"selected\": \"Auswahl:\",\n            \"day\": \"Tag\",\n            \"days\": \"Tage\",\n            \"apply\": \"Schließen\",\n            \"week-1\": \"mo\",\n            \"week-2\": \"di\",\n            \"week-3\": \"mi\",\n            \"week-4\": \"do\",\n            \"week-5\": \"fr\",\n            \"week-6\": \"sa\",\n            \"week-7\": \"so\",\n            \"month-name\": [\"januar\", \"februar\", \"märz\", \"april\", \"mai\", \"juni\", \"juli\", \"august\", \"september\", \"oktober\", \"november\", \"dezember\"],\n            \"shortcuts\": \"Schnellwahl\",\n            \"past\": \"Vorherige\",\n            \"following\": \"Folgende\",\n            \"previous\": \"Vorherige\",\n            \"prev-week\": \"Woche\",\n            \"prev-month\": \"Monat\",\n            \"prev-year\": \"Jahr\",\n            \"next\": \"Nächste\",\n            \"next-week\": \"Woche\",\n            \"next-month\": \"Monat\",\n            \"next-year\": \"Jahr\",\n            \"less-than\": \"Datumsbereich darf nicht größer sein als %d Tage\",\n            \"more-than\": \"Datumsbereich darf nicht kleiner sein als %d Tage\",\n            \"default-more\": \"Bitte mindestens %d Tage auswählen\",\n            \"default-single\": \"Bitte ein Datum auswählen\",\n            \"default-less\": \"Bitte weniger als %d Tage auswählen\",\n            \"default-range\": \"Bitte einen Datumsbereich zwischen %d und %d Tagen auswählen\",\n            \"default-default\": \"Bitte ein Start- und Enddatum auswählen\",\n            \"Time\": \"Zeit\",\n            \"hour\": \"Stunde\",\n            \"minute\": \"Minute\"\n        },\n        \"es\": {\n            \"selected\": \"Seleccionado:\",\n            \"day\": \"Día\",\n            \"days\": \"Días\",\n            \"apply\": \"Cerrar\",\n            \"week-1\": \"lu\",\n            \"week-2\": \"ma\",\n            \"week-3\": \"mi\",\n            \"week-4\": \"ju\",\n            \"week-5\": \"vi\",\n            \"week-6\": \"sa\",\n            \"week-7\": \"do\",\n            \"month-name\": [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n            \"shortcuts\": \"Accesos directos\",\n            \"past\": \"Pasado\",\n            \"following\": \"Siguiente\",\n            \"previous\": \"Anterior\",\n            \"prev-week\": \"Semana\",\n            \"prev-month\": \"Mes\",\n            \"prev-year\": \"Año\",\n            \"next\": \"Siguiente\",\n            \"next-week\": \"Semana\",\n            \"next-month\": \"Mes\",\n            \"next-year\": \"Año\",\n            \"less-than\": \"El rango no debería ser mayor de %d días\",\n            \"more-than\": \"El rango no debería ser menor de %d días\",\n            \"default-more\": \"Por favor selecciona un rango mayor a %d días\",\n            \"default-single\": \"Por favor selecciona un día\",\n            \"default-less\": \"Por favor selecciona un rango menor a %d días\",\n            \"default-range\": \"Por favor selecciona un rango entre %d y %d días\",\n            \"default-default\": \"Por favor selecciona un rango de fechas.\"\n        },\n        \"fr\": {\n            \"selected\": \"Sélection:\",\n            \"day\": \"Jour\",\n            \"days\": \"Jours\",\n            \"apply\": \"Fermer\",\n            \"week-1\": \"lu\",\n            \"week-2\": \"ma\",\n            \"week-3\": \"me\",\n            \"week-4\": \"je\",\n            \"week-5\": \"ve\",\n            \"week-6\": \"sa\",\n            \"week-7\": \"di\",\n            \"month-name\": [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n            \"shortcuts\": \"Raccourcis\",\n            \"past\": \"Passé\",\n            \"following\": \"Suivant\",\n            \"previous\": \"Précédent\",\n            \"prev-week\": \"Semaine\",\n            \"prev-month\": \"Mois\",\n            \"prev-year\": \"Année\",\n            \"next\": \"Suivant\",\n            \"next-week\": \"Semaine\",\n            \"next-month\": \"Mois\",\n            \"next-year\": \"Année\",\n            \"less-than\": \"L'intervalle ne doit pas être supérieure à %d jours\",\n            \"more-than\": \"L'intervalle ne doit pas être inférieure à %d jours\",\n            \"default-more\": \"Merci de choisir une intervalle supérieure à %d jours\",\n            \"default-single\": \"Merci de choisir une date\",\n            \"default-less\": \"Merci de choisir une intervalle inférieure %d jours\",\n            \"default-range\": \"Merci de choisir une intervalle comprise entre %d et %d jours\",\n            \"default-default\": \"Merci de choisir une date\"\n        },\n        \"pt\": //Portuguese (European)\n        {\n            \"selected\": \"Selecionado:\",\n            \"day\": \"Dia\",\n            \"days\": \"Dias\",\n            \"apply\": \"Fechar\",\n            \"week-1\": \"seg\",\n            \"week-2\": \"ter\",\n            \"week-3\": \"qua\",\n            \"week-4\": \"qui\",\n            \"week-5\": \"sex\",\n            \"week-6\": \"sab\",\n            \"week-7\": \"dom\",\n            \"week-number\": \"N\",\n            \"month-name\": [\"janeiro\", \"fevereiro\", \"março\", \"abril\", \"maio\", \"junho\", \"julho\", \"agosto\", \"setembro\", \"outubro\", \"novembro\", \"dezembro\"],\n            \"shortcuts\": \"Atalhos\",\n            \"custom-values\": \"Valores Personalizados\",\n            \"past\": \"Passado\",\n            \"following\": \"Seguinte\",\n            \"previous\": \"Anterior\",\n            \"prev-week\": \"Semana\",\n            \"prev-month\": \"Mês\",\n            \"prev-year\": \"Ano\",\n            \"next\": \"Próximo\",\n            \"next-week\": \"Próxima Semana\",\n            \"next-month\": \"Próximo Mês\",\n            \"next-year\": \"Próximo Ano\",\n            \"less-than\": \"O período selecionado não deve ser maior que %d dias\",\n            \"more-than\": \"O período selecionado não deve ser menor que %d dias\",\n            \"default-more\": \"Selecione um período superior a %d dias\",\n            \"default-single\": \"Selecione uma data\",\n            \"default-less\": \"Selecione um período inferior a %d dias\",\n            \"default-range\": \"Selecione um período de %d a %d dias\",\n            \"default-default\": \"Selecione um período\",\n            \"time\": \"Tempo\",\n            \"hour\": \"Hora\",\n            \"minute\": \"Minuto\"\n        }\n    };\n\n    $.fn.dateRangePicker = function (opt) {\n        if (!opt) opt = {};\n        opt = $.extend(true, {\n            autoClose: false,\n            format: 'YYYY-MM-DD',\n            separator: ' - ',\n            language: 'auto',\n            startOfWeek: 'sunday', // or monday\n            getValue: function() {\n                return $(this).val();\n            },\n            setValue: function(s) {\n                if (!$(this).attr('readonly') && !$(this).is(':disabled') && s != $(this).val()) {\n                    $(this).val(s);\n                }\n            },\n            startDate: false,\n            endDate: false,\n            time: {\n                enabled: false\n            },\n            minDays: 0,\n            maxDays: 0,\n            customShortcuts: [],\n            inline: false,\n            container: 'body',\n            alwaysOpen: false,\n            singleDate: false,\n            lookBehind: false,\n            batchMode: false,\n            highlightToday: false,\n            duration: 200,\n            stickyMonths: false,\n            dayDivAttrs: [],\n            dayTdAttrs: [],\n            selectForward: false,\n            selectBackward: false,\n            applyBtnClass: '',\n            singleMonth: 'auto',\n            hoveringTooltip: function(days, startTime, hoveringTime) {\n                return days > 1 ? days + ' ' + translate('days') : '';\n            },\n            showTopbar: true,\n            swapTime: false,\n            showWeekNumbers: false,\n            getWeekNumber: function(date) //date will be the first day of a week\n            {\n                return moment(date).format('w');\n            },\n            customOpenAnimation: null,\n            customCloseAnimation: null,\n            customArrowPrevSymbol: null,\n            customArrowNextSymbol: null\n        }, opt);\n\n        opt.start = false;\n        opt.end = false;\n\n        opt.startWeek = false;\n\n        //detect a touch device\n        opt.isTouchDevice = 'ontouchstart' in window || navigator.msMaxTouchPoints;\n\n        //if it is a touch device, hide hovering tooltip\n        if (opt.isTouchDevice) opt.hoveringTooltip = false;\n\n        //show one month on mobile devices\n        if (opt.singleMonth == 'auto') opt.singleMonth = $(window).width() < 480;\n        if (opt.singleMonth) opt.stickyMonths = false;\n\n        if (!opt.showTopbar) opt.autoClose = true;\n\n        if (opt.startDate && typeof opt.startDate == 'string') opt.startDate = moment(opt.startDate, opt.format).toDate();\n        if (opt.endDate && typeof opt.endDate == 'string') opt.endDate = moment(opt.endDate, opt.format).toDate();\n\n        var languages = getLanguages();\n        var box;\n        var initiated = false;\n        var self = this;\n        var selfDom = $(self).get(0);\n        var domChangeTimer;\n\n        $(this).unbind('.datepicker').bind('click.datepicker', function(evt) {\n            var isOpen = box.is(':visible');\n            if (!isOpen) open(opt.duration);\n        }).bind('change.datepicker', function(evt) {\n            checkAndSetDefaultValue();\n        }).bind('keyup.datepicker', function() {\n            try {\n                clearTimeout(domChangeTimer);\n            } catch (e) {}\n            domChangeTimer = setTimeout(function() {\n                checkAndSetDefaultValue();\n            }, 2000);\n        });\n\n        init_datepicker.call(this);\n\n        if (opt.alwaysOpen) {\n            open(0);\n        }\n\n        // expose some api\n        $(this).data('dateRangePicker', {\n            setStart: function (d1, silent) {\n                if (typeof d1 == 'string') {\n                    d1 = moment(d1, opt.format).toDate();\n                }\n\n                opt.end = false;\n                setSingleDate(d1, silent);\n\n                return this;\n            },\n            setEnd: function(d2, silent) {\n                var start = new Date();\n                start.setTime(opt.start);\n                if (typeof d2 == 'string') {\n                    d2 = moment(d2, opt.format).toDate();\n                }\n                setDateRange(start, d2, silent);\n                return this;\n            },\n            setDateRange: function(d1, d2, silent) {\n                if (typeof d1 == 'string' && typeof d2 == 'string') {\n                    d1 = moment(d1, opt.format).toDate();\n                    d2 = moment(d2, opt.format).toDate();\n                }\n                setDateRange(d1, d2, silent);\n            },\n            clear: clearSelection,\n            close: closeDatePicker,\n            open: open,\n            redraw: redrawDatePicker,\n            getDatePicker: getDatePicker,\n            resetMonthsView: resetMonthsView,\n            destroy: function() {\n                $(self).unbind('.datepicker');\n                $(self).data('dateRangePicker', '');\n                $(self).data('date-picker-opened', null);\n                box.remove();\n                $(window).unbind('resize.datepicker', calcPosition);\n                $(document).unbind('click.datepicker', closeDatePicker);\n            }\n        });\n\n        $(window).bind('resize.datepicker', calcPosition);\n\n        return this;\n\n        function IsOwnDatePickerClicked(evt, selfObj) {\n            return (selfObj.contains(evt.target) || evt.target == selfObj || (selfObj.childNodes != undefined && $.inArray(evt.target, selfObj.childNodes) >= 0));\n        }\n\n        function init_datepicker() {\n            var self = this;\n\n            if ($(this).data('date-picker-opened')) {\n                closeDatePicker();\n                return;\n            }\n            $(this).data('date-picker-opened', true);\n\n\n            box = createDom().hide();\n            box.append('<div class=\"date-range-length-tip\"></div>');\n\n            $(opt.container).append(box);\n\n            if (!opt.inline) {\n                calcPosition();\n            } else {\n                box.addClass('inline-wrapper');\n            }\n\n            if (opt.alwaysOpen) {\n                box.find('.apply-btn').hide();\n            }\n\n            var defaultTime = getDefaultTime();\n            resetMonthsView(defaultTime);\n\n            if (opt.time.enabled) {\n                if ((opt.startDate && opt.endDate) || (opt.start && opt.end)) {\n                    showTime(moment(opt.start || opt.startDate).toDate(), 'time1');\n                    showTime(moment(opt.end || opt.endDate).toDate(), 'time2');\n                } else {\n                    var defaultEndTime = opt.defaultEndTime ? opt.defaultEndTime : defaultTime;\n                    showTime(defaultTime, 'time1');\n                    showTime(defaultEndTime, 'time2');\n                }\n            }\n\n            //showSelectedInfo();\n\n\n            var defaultTopText = '';\n            if (opt.singleDate)\n                defaultTopText = translate('default-single');\n            else if (opt.minDays && opt.maxDays)\n                defaultTopText = translate('default-range');\n            else if (opt.minDays)\n                defaultTopText = translate('default-more');\n            else if (opt.maxDays)\n                defaultTopText = translate('default-less');\n            else\n                defaultTopText = translate('default-default');\n\n            box.find('.default-top').html(defaultTopText.replace(/\\%d/, opt.minDays).replace(/\\%d/, opt.maxDays));\n            if (opt.singleMonth) {\n                box.addClass('single-month');\n            } else {\n                box.addClass('two-months');\n            }\n\n            setTimeout(function() {\n                updateCalendarWidth();\n                initiated = true;\n            }, 0);\n\n            box.click(function(evt) {\n                evt.stopPropagation();\n            });\n\n            //if user click other place of the webpage, close date range picker window\n            $(document).bind('click.datepicker', function(evt) {\n                if (!IsOwnDatePickerClicked(evt, self[0])) {\n                    if (box.is(':visible')) closeDatePicker();\n                }\n            });\n\n            box.find('.next').click(function () {\n                $(self).trigger('datepicker-next-month-clicked');\n                if (!opt.stickyMonths)\n                    gotoNextMonth(this);\n                else\n                    gotoNextMonth_stickily(this);\n                $(self).trigger('datepicker-next-month-finish-clicked');\n            });\n\n            function gotoNextMonth(self) {\n                var isMonth2 = $(self).parents('table').hasClass('month2');\n                var month = isMonth2 ? opt.month2 : opt.month1;\n                month = nextMonth(month);\n                if (!opt.singleMonth && !opt.singleDate && !isMonth2 && compare_month(month, opt.month2) >= 0 || isMonthOutOfBounds(month)) return;\n                showMonth(month, isMonth2 ? 'month2' : 'month1');\n                showGap();\n            }\n\n            function gotoNextMonth_stickily(self) {\n                var nextMonth1 = nextMonth(opt.month1);\n                var nextMonth2 = nextMonth(opt.month2);\n                if (isMonthOutOfBounds(nextMonth2)) return;\n                if (!opt.singleDate && compare_month(nextMonth1, nextMonth2) >= 0) return;\n                showMonth(nextMonth1, 'month1');\n                showMonth(nextMonth2, 'month2');\n                showSelectedDays();\n            }\n\n\n            box.find('.prev').click(function () {\n                $(self).trigger('datepicker-prev-month-clicked');\n                if (!opt.stickyMonths)\n                    gotoPrevMonth(this);\n                else\n                    gotoPrevMonth_stickily(this);\n                $(self).trigger('datepicker-prev-month-finish-clicked');\n            });\n\n            function gotoPrevMonth(self) {\n                var isMonth2 = $(self).parents('table').hasClass('month2');\n                var month = isMonth2 ? opt.month2 : opt.month1;\n                month = prevMonth(month);\n                if (isMonth2 && compare_month(month, opt.month1) <= 0 || isMonthOutOfBounds(month)) return;\n                showMonth(month, isMonth2 ? 'month2' : 'month1');\n                showGap();\n            }\n\n            function gotoPrevMonth_stickily(self) {\n                var prevMonth1 = prevMonth(opt.month1);\n                var prevMonth2 = prevMonth(opt.month2);\n                if (isMonthOutOfBounds(prevMonth1)) return;\n                if (!opt.singleDate && compare_month(prevMonth2, prevMonth1) <= 0) return;\n                showMonth(prevMonth2, 'month2');\n                showMonth(prevMonth1, 'month1');\n                showSelectedDays();\n            }\n\n            box.attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .bind('selectstart', function(e) {\n                    e.preventDefault();\n                    return false;\n                });\n\n            box.find('.apply-btn').click(function() {\n                closeDatePicker();\n                var dateRange = getDateString(new Date(opt.start)) + opt.separator + getDateString(new Date(opt.end));\n                $(self).trigger('datepicker-apply', {\n                    'value': dateRange,\n                    'date1': new Date(opt.start),\n                    'date2': new Date(opt.end)\n                });\n            });\n\n            box.find('[custom]').click(function() {\n                var valueName = $(this).attr('custom');\n                opt.start = false;\n                opt.end = false;\n                box.find('.day.checked').removeClass('checked');\n                opt.setValue.call(selfDom, valueName);\n                checkSelectionValid();\n                showSelectedInfo(true);\n                showSelectedDays();\n                if (opt.autoClose) closeDatePicker();\n            });\n\n            box.find('[shortcut]').click(function() {\n                var shortcut = $(this).attr('shortcut');\n                var end = new Date(),\n                    start = false;\n                var dir;\n                if (shortcut.indexOf('day') != -1) {\n                    var day = parseInt(shortcut.split(',', 2)[1], 10);\n                    start = new Date(new Date().getTime() + 86400000 * day);\n                    end = new Date(end.getTime() + 86400000 * (day > 0 ? 1 : -1));\n                } else if (shortcut.indexOf('week') != -1) {\n                    dir = shortcut.indexOf('prev,') != -1 ? -1 : 1;\n                    var stopDay;\n                    if (dir == 1)\n                        stopDay = opt.startOfWeek == 'monday' ? 1 : 0;\n                    else\n                        stopDay = opt.startOfWeek == 'monday' ? 0 : 6;\n\n                    end = new Date(end.getTime() - 86400000);\n                    while (end.getDay() != stopDay) end = new Date(end.getTime() + dir * 86400000);\n                    start = new Date(end.getTime() + dir * 86400000 * 6);\n                } else if (shortcut.indexOf('month') != -1) {\n                    dir = shortcut.indexOf('prev,') != -1 ? -1 : 1;\n                    if (dir == 1)\n                        start = nextMonth(end);\n                    else\n                        start = prevMonth(end);\n                    start.setDate(1);\n                    end = nextMonth(start);\n                    end.setDate(1);\n                    end = new Date(end.getTime() - 86400000);\n                } else if (shortcut.indexOf('year') != -1) {\n                    dir = shortcut.indexOf('prev,') != -1 ? -1 : 1;\n                    start = new Date();\n                    start.setFullYear(end.getFullYear() + dir);\n                    start.setMonth(0);\n                    start.setDate(1);\n                    end.setFullYear(end.getFullYear() + dir);\n                    end.setMonth(11);\n                    end.setDate(31);\n                } else if (shortcut == 'custom') {\n                    var name = $(this).html();\n                    if (opt.customShortcuts && opt.customShortcuts.length > 0) {\n                        for (var i = 0; i < opt.customShortcuts.length; i++) {\n                            var sh = opt.customShortcuts[i];\n                            if (sh.name == name) {\n                                var data = [];\n                                // try\n                                // {\n                                data = sh['dates'].call();\n                                //}catch(e){}\n                                if (data && data.length == 2) {\n                                    start = data[0];\n                                    end = data[1];\n                                }\n\n                                // if only one date is specified then just move calendars there\n                                // move calendars to show this date's month and next months\n                                if (data && data.length == 1) {\n                                    var movetodate = data[0];\n                                    showMonth(movetodate, 'month1');\n                                    showMonth(nextMonth(movetodate), 'month2');\n                                    showGap();\n                                }\n\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (start && end) {\n                    setDateRange(start, end);\n                    checkSelectionValid();\n                }\n            });\n\n            box.find('.time1 input[type=range]').bind('change touchmove', function(e) {\n                var target = e.target,\n                    hour = target.name == 'hour' ? $(target).val().replace(/^(\\d{1})$/, '0$1') : undefined,\n                    min = target.name == 'minute' ? $(target).val().replace(/^(\\d{1})$/, '0$1') : undefined;\n                setTime('time1', hour, min);\n            });\n\n            box.find('.time2 input[type=range]').bind('change touchmove', function(e) {\n                var target = e.target,\n                    hour = target.name == 'hour' ? $(target).val().replace(/^(\\d{1})$/, '0$1') : undefined,\n                    min = target.name == 'minute' ? $(target).val().replace(/^(\\d{1})$/, '0$1') : undefined;\n                setTime('time2', hour, min);\n            });\n\n        }\n\n\n        function calcPosition() {\n            if (!opt.inline) {\n                var offset = $(self).offset();\n                if ($(opt.container).css('position') == 'relative') {\n                    var containerOffset = $(opt.container).offset();\n                    box.css({\n                        top: offset.top - containerOffset.top + $(self).outerHeight() + 4,\n                        left: offset.left - containerOffset.left\n                    });\n                } else {\n                    if (offset.left < 460) //left to right\n                    {\n                        box.css({\n                            top: offset.top + $(self).outerHeight() + parseInt($('body').css('border-top') || 0, 10),\n                            left: offset.left\n                        });\n                    } else {\n                        box.css({\n                            top: offset.top + $(self).outerHeight() + parseInt($('body').css('border-top') || 0, 10),\n                            left: offset.left + $(self).width() - box.width() - 16\n                        });\n                    }\n                }\n            }\n        }\n\n        // Return the date picker wrapper element\n        function getDatePicker() {\n            return box;\n        }\n\n        function open(animationTime) {\n            calcPosition();\n            redrawDatePicker();\n            checkAndSetDefaultValue();\n            if (opt.customOpenAnimation) {\n                opt.customOpenAnimation.call(box.get(0), function() {\n                    $(self).trigger('datepicker-opened', {\n                        relatedTarget: box\n                    });\n                });\n            } else {\n                box.slideDown(animationTime, function() {\n                    $(self).trigger('datepicker-opened', {\n                        relatedTarget: box\n                    });\n                });\n            }\n            $(self).trigger('datepicker-open', {\n                relatedTarget: box\n            });\n            showGap();\n            updateCalendarWidth();\n        }\n\n        function checkAndSetDefaultValue() {\n            var __default_string = opt.getValue.call(selfDom);\n            var defaults = __default_string ? __default_string.split(opt.separator) : '';\n\n            if (defaults && ((defaults.length == 1 && opt.singleDate) || defaults.length >= 2)) {\n                var ___format = opt.format;\n                if (___format.match(/Do/)) {\n\n                    ___format = ___format.replace(/Do/, 'D');\n                    defaults[0] = defaults[0].replace(/(\\d+)(th|nd|st)/, '$1');\n                    if (defaults.length >= 2) {\n                        defaults[1] = defaults[1].replace(/(\\d+)(th|nd|st)/, '$1');\n                    }\n                }\n                // set initiated  to avoid triggerring datepicker-change event\n                initiated = false;\n                if (defaults.length >= 2) {\n                    setDateRange(getValidValue(defaults[0], ___format, moment.locale(opt.language)), getValidValue(defaults[1], ___format, moment.locale(opt.language)));\n                } else if (defaults.length == 1 && opt.singleDate) {\n                    setSingleDate(getValidValue(defaults[0], ___format, moment.locale(opt.language)));\n                }\n\n                initiated = true;\n            }\n        }\n\n        function getValidValue(date, format, locale) {\n            if (moment(date, format, locale).isValid()) {\n                return moment(date, format, locale).toDate();\n            } else {\n                return moment().toDate();\n            }\n        }\n\n        function updateCalendarWidth() {\n            var gapMargin = box.find('.gap').css('margin-left');\n            if (gapMargin) gapMargin = parseInt(gapMargin);\n            var w1 = box.find('.month1').width();\n            var w2 = box.find('.gap').width() + (gapMargin ? gapMargin * 2 : 0);\n            var w3 = box.find('.month2').width();\n            box.find('.month-wrapper').width(w1 + w2 + w3 + (opt.singleMonth ? 0 : 77));\n        }\n\n        function renderTime(name, date) {\n            box.find('.' + name + ' input[type=range].hour-range').val(moment(date).hours());\n            box.find('.' + name + ' input[type=range].minute-range').val(moment(date).minutes());\n            setTime(name, moment(date).format('HH'), moment(date).format('mm'));\n        }\n\n        function changeTime(name, date) {\n            opt[name] = parseInt(\n                moment(parseInt(date))\n                .startOf('day')\n                .add(moment(opt[name + 'Time']).format('HH'), 'h')\n                .add(moment(opt[name + 'Time']).format('mm'), 'm').valueOf()\n            );\n        }\n\n        function swapTime() {\n            renderTime('time1', opt.start);\n            renderTime('time2', opt.end);\n        }\n\n        function setTime(name, hour, minute) {\n            hour && (box.find('.' + name + ' .hour-val').text(hour));\n            minute && (box.find('.' + name + ' .minute-val').text(minute));\n            switch (name) {\n                case 'time1':\n                    if (opt.start) {\n                        setRange('start', moment(opt.start));\n                    }\n                    setRange('startTime', moment(opt.startTime || moment().valueOf()));\n                    break;\n                case 'time2':\n                    if (opt.end) {\n                        setRange('end', moment(opt.end));\n                    }\n                    setRange('endTime', moment(opt.endTime || moment().valueOf()));\n                    break;\n            }\n\n            function setRange(name, timePoint) {\n                var h = timePoint.format('HH'),\n                    m = timePoint.format('mm');\n                opt[name] = timePoint\n                    .startOf('day')\n                    .add(hour || h, 'h')\n                    .add(minute || m, 'm')\n                    .valueOf();\n            }\n            checkSelectionValid();\n            showSelectedInfo();\n            showSelectedDays();\n        }\n\n        function clearSelection() {\n            opt.start = false;\n            opt.end = false;\n            box.find('.day.checked').removeClass('checked');\n            box.find('.day.last-date-selected').removeClass('last-date-selected');\n            box.find('.day.first-date-selected').removeClass('first-date-selected');\n            opt.setValue.call(selfDom, '');\n            checkSelectionValid();\n            showSelectedInfo();\n            showSelectedDays();\n        }\n\n        function handleStart(time) {\n            var r = time;\n            if (opt.batchMode === 'week-range') {\n                if (opt.startOfWeek === 'monday') {\n                    r = moment(parseInt(time)).startOf('isoweek').valueOf();\n                } else {\n                    r = moment(parseInt(time)).startOf('week').valueOf();\n                }\n            } else if (opt.batchMode === 'month-range') {\n                r = moment(parseInt(time)).startOf('month').valueOf();\n            }\n            return r;\n        }\n\n        function handleEnd(time) {\n            var r = time;\n            if (opt.batchMode === 'week-range') {\n                if (opt.startOfWeek === 'monday') {\n                    r = moment(parseInt(time)).endOf('isoweek').valueOf();\n                } else {\n                    r = moment(parseInt(time)).endOf('week').valueOf();\n                }\n            } else if (opt.batchMode === 'month-range') {\n                r = moment(parseInt(time)).endOf('month').valueOf();\n            }\n            return r;\n        }\n\n\n        function dayClicked(day) {\n            if (day.hasClass('invalid')) return;\n            var time = day.attr('time');\n            day.addClass('checked');\n            if (opt.singleDate) {\n                opt.start = time;\n                opt.end = false;\n            } else if (opt.batchMode === 'week') {\n                if (opt.startOfWeek === 'monday') {\n                    opt.start = moment(parseInt(time)).startOf('isoweek').valueOf();\n                    opt.end = moment(parseInt(time)).endOf('isoweek').valueOf();\n                } else {\n                    opt.end = moment(parseInt(time)).endOf('week').valueOf();\n                    opt.start = moment(parseInt(time)).startOf('week').valueOf();\n                }\n            } else if (opt.batchMode === 'workweek') {\n                opt.start = moment(parseInt(time)).day(1).valueOf();\n                opt.end = moment(parseInt(time)).day(5).valueOf();\n            } else if (opt.batchMode === 'weekend') {\n                opt.start = moment(parseInt(time)).day(6).valueOf();\n                opt.end = moment(parseInt(time)).day(7).valueOf();\n            } else if (opt.batchMode === 'month') {\n                opt.start = moment(parseInt(time)).startOf('month').valueOf();\n                opt.end = moment(parseInt(time)).endOf('month').valueOf();\n            } else if ((opt.start && opt.end) || (!opt.start && !opt.end)) {\n                opt.start = handleStart(time);\n                opt.end = false;\n            } else if (opt.start) {\n                opt.end = handleEnd(time);\n                if (opt.time.enabled) {\n                    changeTime('end', opt.end);\n                }\n            }\n\n            //Update time in case it is enabled and timestamps are available\n            if (opt.time.enabled) {\n                if (opt.start) {\n                    changeTime('start', opt.start);\n                }\n                if (opt.end) {\n                    changeTime('end', opt.end);\n                }\n            }\n\n            //In case the start is after the end, swap the timestamps\n            if (!opt.singleDate && opt.start && opt.end && opt.start > opt.end) {\n                var tmp = opt.end;\n                opt.end = handleEnd(opt.start);\n                opt.start = handleStart(tmp);\n                if (opt.time.enabled && opt.swapTime) {\n                    swapTime();\n                }\n            }\n\n            opt.start = parseInt(opt.start);\n            opt.end = parseInt(opt.end);\n\n            clearHovering();\n            if (opt.start && !opt.end) {\n                $(self).trigger('datepicker-first-date-selected', {\n                    'date1': new Date(opt.start)\n                });\n                dayHovering(day);\n            }\n            updateSelectableRange(time);\n\n            checkSelectionValid();\n            showSelectedInfo();\n            showSelectedDays();\n            autoclose();\n        }\n\n\n        function weekNumberClicked(weekNumberDom) {\n            var thisTime = parseInt(weekNumberDom.attr('data-start-time'), 10);\n            var date1, date2;\n            if (!opt.startWeek) {\n                opt.startWeek = thisTime;\n                weekNumberDom.addClass('week-number-selected');\n                date1 = new Date(thisTime);\n                opt.start = moment(date1).day(opt.startOfWeek == 'monday' ? 1 : 0).valueOf();\n                opt.end = moment(date1).day(opt.startOfWeek == 'monday' ? 7 : 6).valueOf();\n            } else {\n                box.find('.week-number-selected').removeClass('week-number-selected');\n                date1 = new Date(thisTime < opt.startWeek ? thisTime : opt.startWeek);\n                date2 = new Date(thisTime < opt.startWeek ? opt.startWeek : thisTime);\n                opt.startWeek = false;\n                opt.start = moment(date1).day(opt.startOfWeek == 'monday' ? 1 : 0).valueOf();\n                opt.end = moment(date2).day(opt.startOfWeek == 'monday' ? 7 : 6).valueOf();\n            }\n            updateSelectableRange();\n            checkSelectionValid();\n            showSelectedInfo();\n            showSelectedDays();\n            autoclose();\n        }\n\n        function isValidTime(time) {\n            time = parseInt(time, 10);\n            if (opt.startDate && compare_day(time, opt.startDate) < 0) return false;\n            if (opt.endDate && compare_day(time, opt.endDate) > 0) return false;\n\n            if (opt.start && !opt.end && !opt.singleDate) {\n                //check maxDays and minDays setting\n                if (opt.maxDays > 0 && countDays(time, opt.start) > opt.maxDays) return false;\n                if (opt.minDays > 0 && countDays(time, opt.start) < opt.minDays) return false;\n\n                //check selectForward and selectBackward\n                if (opt.selectForward && time < opt.start) return false;\n                if (opt.selectBackward && time > opt.start) return false;\n\n                //check disabled days\n                if (opt.beforeShowDay && typeof opt.beforeShowDay == 'function') {\n                    var valid = true;\n                    var timeTmp = time;\n                    while (countDays(timeTmp, opt.start) > 1) {\n                        var arr = opt.beforeShowDay(new Date(timeTmp));\n                        if (!arr[0]) {\n                            valid = false;\n                            break;\n                        }\n                        if (Math.abs(timeTmp - opt.start) < 86400000) break;\n                        if (timeTmp > opt.start) timeTmp -= 86400000;\n                        if (timeTmp < opt.start) timeTmp += 86400000;\n                    }\n                    if (!valid) return false;\n                }\n            }\n            return true;\n        }\n\n\n        function updateSelectableRange() {\n            box.find('.day.invalid.tmp').removeClass('tmp invalid').addClass('valid');\n            if (opt.start && !opt.end) {\n                box.find('.day.toMonth.valid').each(function() {\n                    var time = parseInt($(this).attr('time'), 10);\n                    if (!isValidTime(time))\n                        $(this).addClass('invalid tmp').removeClass('valid');\n                    else\n                        $(this).addClass('valid tmp').removeClass('invalid');\n                });\n            }\n\n            return true;\n        }\n\n\n        function dayHovering(day) {\n            var hoverTime = parseInt(day.attr('time'));\n            var tooltip = '';\n\n            if (day.hasClass('has-tooltip') && day.attr('data-tooltip')) {\n                tooltip = '<span style=\"white-space:nowrap\">' + day.attr('data-tooltip') + '</span>';\n            } else if (!day.hasClass('invalid')) {\n                if (opt.singleDate) {\n                    box.find('.day.hovering').removeClass('hovering');\n                    day.addClass('hovering');\n                } else {\n                    box.find('.day').each(function() {\n                        var time = parseInt($(this).attr('time')),\n                            start = opt.start,\n                            end = opt.end;\n\n                        if (time == hoverTime) {\n                            $(this).addClass('hovering');\n                        } else {\n                            $(this).removeClass('hovering');\n                        }\n\n                        if (\n                            (opt.start && !opt.end) &&\n                            (\n                                (opt.start < time && hoverTime >= time) ||\n                                (opt.start > time && hoverTime <= time)\n                            )\n                        ) {\n                            $(this).addClass('hovering');\n                        } else {\n                            $(this).removeClass('hovering');\n                        }\n                    });\n\n                    if (opt.start && !opt.end) {\n                        var days = countDays(hoverTime, opt.start);\n                        if (opt.hoveringTooltip) {\n                            if (typeof opt.hoveringTooltip == 'function') {\n                                tooltip = opt.hoveringTooltip(days, opt.start, hoverTime);\n                            } else if (opt.hoveringTooltip === true && days > 1) {\n                                tooltip = days + ' ' + translate('days');\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (tooltip) {\n                var posDay = day.offset();\n                var posBox = box.offset();\n\n                var _left = posDay.left - posBox.left;\n                var _top = posDay.top - posBox.top;\n                _left += day.width() / 2;\n\n\n                var $tip = box.find('.date-range-length-tip');\n                var w = $tip.css({\n                    'visibility': 'hidden',\n                    'display': 'none'\n                }).html(tooltip).width();\n                var h = $tip.height();\n                _left -= w / 2;\n                _top -= h;\n                setTimeout(function() {\n                    $tip.css({\n                        left: _left,\n                        top: _top,\n                        display: 'block',\n                        'visibility': 'visible'\n                    });\n                }, 10);\n            } else {\n                box.find('.date-range-length-tip').hide();\n            }\n        }\n\n        function clearHovering() {\n            box.find('.day.hovering').removeClass('hovering');\n            box.find('.date-range-length-tip').hide();\n        }\n\n        function autoclose() {\n            if (opt.singleDate === true) {\n                if (initiated && opt.start) {\n                    if (opt.autoClose) closeDatePicker();\n                }\n            } else {\n                if (initiated && opt.start && opt.end) {\n                    if (opt.autoClose) closeDatePicker();\n                }\n            }\n        }\n\n        function checkSelectionValid() {\n            var days = Math.ceil((opt.end - opt.start) / 86400000) + 1;\n            if (opt.singleDate) { // Validate if only start is there\n                if (opt.start && !opt.end)\n                    box.find('.drp_top-bar').removeClass('error').addClass('normal');\n                else\n                    box.find('.drp_top-bar').removeClass('error').removeClass('normal');\n            } else if (opt.maxDays && days > opt.maxDays) {\n                opt.start = false;\n                opt.end = false;\n                box.find('.day').removeClass('checked');\n                box.find('.drp_top-bar').removeClass('normal').addClass('error').find('.error-top').html(translate('less-than').replace('%d', opt.maxDays));\n            } else if (opt.minDays && days < opt.minDays) {\n                opt.start = false;\n                opt.end = false;\n                box.find('.day').removeClass('checked');\n                box.find('.drp_top-bar').removeClass('normal').addClass('error').find('.error-top').html(translate('more-than').replace('%d', opt.minDays));\n            } else {\n                if (opt.start || opt.end)\n                    box.find('.drp_top-bar').removeClass('error').addClass('normal');\n                else\n                    box.find('.drp_top-bar').removeClass('error').removeClass('normal');\n            }\n\n            if ((opt.singleDate && opt.start && !opt.end) || (!opt.singleDate && opt.start && opt.end)) {\n                box.find('.apply-btn').removeClass('disabled');\n            } else {\n                box.find('.apply-btn').addClass('disabled');\n            }\n\n            if (opt.batchMode) {\n                if (\n                    (opt.start && opt.startDate && compare_day(opt.start, opt.startDate) < 0) ||\n                    (opt.end && opt.endDate && compare_day(opt.end, opt.endDate) > 0)\n                ) {\n                    opt.start = false;\n                    opt.end = false;\n                    box.find('.day').removeClass('checked');\n                }\n            }\n        }\n\n        function showSelectedInfo(forceValid, silent) {\n            box.find('.start-day').html('...');\n            box.find('.end-day').html('...');\n            box.find('.selected-days').hide();\n            if (opt.start) {\n                box.find('.start-day').html(getDateString(new Date(parseInt(opt.start))));\n            }\n            if (opt.end) {\n                box.find('.end-day').html(getDateString(new Date(parseInt(opt.end))));\n            }\n            var dateRange;\n            if (opt.start && opt.singleDate) {\n                box.find('.apply-btn').removeClass('disabled');\n                dateRange = getDateString(new Date(opt.start));\n                opt.setValue.call(selfDom, dateRange, getDateString(new Date(opt.start)), getDateString(new Date(opt.end)));\n\n                if (initiated && !silent) {\n                    $(self).trigger('datepicker-change', {\n                        'value': dateRange,\n                        'date1': new Date(opt.start)\n                    });\n                }\n            } else if (opt.start && opt.end) {\n                box.find('.selected-days').show().find('.selected-days-num').html(countDays(opt.end, opt.start));\n                box.find('.apply-btn').removeClass('disabled');\n                dateRange = getDateString(new Date(opt.start)) + opt.separator + getDateString(new Date(opt.end));\n                opt.setValue.call(selfDom, dateRange, getDateString(new Date(opt.start)), getDateString(new Date(opt.end)));\n                if (initiated && !silent) {\n                    $(self).trigger('datepicker-change', {\n                        'value': dateRange,\n                        'date1': new Date(opt.start),\n                        'date2': new Date(opt.end)\n                    });\n                }\n            } else if (forceValid) {\n                box.find('.apply-btn').removeClass('disabled');\n            } else {\n                box.find('.apply-btn').addClass('disabled');\n            }\n        }\n\n        function countDays(start, end) {\n            return Math.abs(daysFrom1970(start) - daysFrom1970(end)) + 1;\n        }\n\n        function setDateRange(date1, date2, silent) {\n            if (date1.getTime() > date2.getTime()) {\n                var tmp = date2;\n                date2 = date1;\n                date1 = tmp;\n                tmp = null;\n            }\n            var valid = true;\n            if (opt.startDate && compare_day(date1, opt.startDate) < 0) valid = false;\n            if (opt.endDate && compare_day(date2, opt.endDate) > 0) valid = false;\n            if (!valid) {\n                showMonth(opt.startDate, 'month1');\n                showMonth(nextMonth(opt.startDate), 'month2');\n                showGap();\n                return;\n            }\n\n            opt.start = date1.getTime();\n            opt.end = date2.getTime();\n\n            if (opt.time.enabled) {\n                renderTime('time1', date1);\n                renderTime('time2', date2);\n            }\n\n            if (opt.stickyMonths || (compare_day(date1, date2) > 0 && compare_month(date1, date2) === 0)) {\n                if (opt.lookBehind) {\n                    date1 = prevMonth(date2);\n                } else {\n                    date2 = nextMonth(date1);\n                }\n            }\n\n            if (opt.stickyMonths && opt.endDate !== false && compare_month(date2, opt.endDate) > 0) {\n                date1 = prevMonth(date1);\n                date2 = prevMonth(date2);\n            }\n\n            if (!opt.stickyMonths) {\n                if (compare_month(date1, date2) === 0) {\n                    if (opt.lookBehind) {\n                        date1 = prevMonth(date2);\n                    } else {\n                        date2 = nextMonth(date1);\n                    }\n                }\n            }\n\n            showMonth(date1, 'month1');\n            showMonth(date2, 'month2');\n            showGap();\n            checkSelectionValid();\n            showSelectedInfo(false, silent);\n            autoclose();\n        }\n\n        function setSingleDate(date1, silent) {\n\n            var valid = true;\n            if (opt.startDate && compare_day(date1, opt.startDate) < 0) valid = false;\n            if (opt.endDate && compare_day(date1, opt.endDate) > 0) valid = false;\n            if (!valid) {\n                showMonth(opt.startDate, 'month1');\n                return;\n            }\n\n            opt.start = date1.getTime();\n\n\n            if (opt.time.enabled) {\n                renderTime('time1', date1);\n\n            }\n            showMonth(date1, 'month1');\n            if (opt.singleMonth !== true) {\n                var date2 = nextMonth(date1);\n                showMonth(date2, 'month2');\n            }\n            showGap();\n            showSelectedInfo(false, silent);\n            autoclose();\n        }\n\n        function showSelectedDays() {\n            if (!opt.start && !opt.end) return;\n            box.find('.day').each(function() {\n                var time = parseInt($(this).attr('time')),\n                    start = opt.start,\n                    end = opt.end;\n                if (opt.time.enabled) {\n                    time = moment(time).startOf('day').valueOf();\n                    start = moment(start || moment().valueOf()).startOf('day').valueOf();\n                    end = moment(end || moment().valueOf()).startOf('day').valueOf();\n                }\n                if (\n                    (opt.start && opt.end && end >= time && start <= time) ||\n                    (opt.start && !opt.end && moment(start).format('YYYY-MM-DD') == moment(time).format('YYYY-MM-DD'))\n                ) {\n                    $(this).addClass('checked');\n                } else {\n                    $(this).removeClass('checked');\n                }\n\n                //add first-date-selected class name to the first date selected\n                if (opt.start && moment(start).format('YYYY-MM-DD') == moment(time).format('YYYY-MM-DD')) {\n                    $(this).addClass('first-date-selected');\n                } else {\n                    $(this).removeClass('first-date-selected');\n                }\n                //add last-date-selected\n                if (opt.end && moment(end).format('YYYY-MM-DD') == moment(time).format('YYYY-MM-DD')) {\n                    $(this).addClass('last-date-selected');\n                } else {\n                    $(this).removeClass('last-date-selected');\n                }\n            });\n\n            box.find('.week-number').each(function() {\n                if ($(this).attr('data-start-time') == opt.startWeek) {\n                    $(this).addClass('week-number-selected');\n                }\n            });\n        }\n\n        function showMonth(date, month) {\n            date = moment(date).toDate();\n            var monthName = nameMonth(date.getMonth());\n            box.find('.' + month + ' .month-name').html(monthName + ' ' + date.getFullYear());\n            box.find('.' + month + ' tbody').html(createMonthHTML(date));\n            opt[month] = date;\n            updateSelectableRange();\n            bindDayEvents();\n        }\n\n        function bindDayEvents() {\n            box.find('.day').unbind(\"click\").click(function(evt) {\n                dayClicked($(this));\n            });\n\n            box.find('.day').unbind(\"mouseenter\").mouseenter(function(evt) {\n                dayHovering($(this));\n            });\n\n            box.find('.day').unbind(\"mouseleave\").mouseleave(function(evt) {\n                box.find('.date-range-length-tip').hide();\n                if (opt.singleDate) {\n                    clearHovering();\n                }\n            });\n\n            box.find('.week-number').unbind(\"click\").click(function(evt) {\n                weekNumberClicked($(this));\n            });\n        }\n\n        function showTime(date, name) {\n            box.find('.' + name).append(getTimeHTML());\n            renderTime(name, date);\n        }\n\n        function nameMonth(m) {\n            return translate('month-name')[m];\n        }\n\n        function getDateString(d) {\n            return moment(d).format(opt.format);\n        }\n\n        function showGap() {\n            showSelectedDays();\n            var m1 = parseInt(moment(opt.month1).format('YYYYMM'));\n            var m2 = parseInt(moment(opt.month2).format('YYYYMM'));\n            var p = Math.abs(m1 - m2);\n            var shouldShow = (p > 1 && p != 89);\n            if (shouldShow) {\n                box.addClass('has-gap').removeClass('no-gap').find('.gap').css('visibility', 'visible');\n            } else {\n                box.removeClass('has-gap').addClass('no-gap').find('.gap').css('visibility', 'hidden');\n            }\n            var h1 = box.find('table.month1').height();\n            var h2 = box.find('table.month2').height();\n\n            if (Math.max(h1, h2) === 0) {\n                box.find('.gap').height(100);\n            } else {\n                box.find('.gap').height(Math.max(h1, h2) + 10);\n            }\n        }\n\n        function closeDatePicker() {\n            if (opt.alwaysOpen) return;\n\n            var afterAnim = function() {\n                $(self).data('date-picker-opened', false);\n                $(self).trigger('datepicker-closed', {\n                    relatedTarget: box\n                });\n            };\n            if (opt.customCloseAnimation) {\n                opt.customCloseAnimation.call(box.get(0), afterAnim);\n            } else {\n                $(box).slideUp(opt.duration, afterAnim);\n            }\n            $(self).trigger('datepicker-close', {\n                relatedTarget: box\n            });\n        }\n\n        function redrawDatePicker() {\n            showMonth(opt.month1, 'month1');\n            showMonth(opt.month2, 'month2');\n        }\n\n        function compare_month(m1, m2) {\n            var p = parseInt(moment(m1).format('YYYYMM')) - parseInt(moment(m2).format('YYYYMM'));\n            if (p > 0) return 1;\n            if (p === 0) return 0;\n            return -1;\n        }\n\n        function compare_day(m1, m2) {\n            var p = parseInt(moment(m1).format('YYYYMMDD')) - parseInt(moment(m2).format('YYYYMMDD'));\n            if (p > 0) return 1;\n            if (p === 0) return 0;\n            return -1;\n        }\n\n        function nextMonth(month) {\n            return moment(month).add(1, 'months').toDate();\n        }\n\n        function prevMonth(month) {\n            return moment(month).add(-1, 'months').toDate();\n        }\n\n        function getTimeHTML() {\n            return '<div>' +\n                '<span>' + translate('Time') + ': <span class=\"hour-val\">00</span>:<span class=\"minute-val\">00</span></span>' +\n                '</div>' +\n                '<div class=\"hour\">' +\n                '<label>' + translate('Hour') + ': <input type=\"range\" class=\"hour-range\" name=\"hour\" min=\"0\" max=\"23\"></label>' +\n                '</div>' +\n                '<div class=\"minute\">' +\n                '<label>' + translate('Minute') + ': <input type=\"range\" class=\"minute-range\" name=\"minute\" min=\"0\" max=\"59\"></label>' +\n                '</div>';\n        }\n\n        function createDom() {\n            var html = '<div class=\"date-picker-wrapper';\n            if (opt.extraClass) html += ' ' + opt.extraClass + ' ';\n            if (opt.singleDate) html += ' single-date ';\n            html += '\">';\n\n            var _colspan = opt.showWeekNumbers ? 6 : 5;\n\n            var arrowPrev = '<i class=\"icon-left-open-mini\"></i>';\n            if (opt.customArrowPrevSymbol) arrowPrev = opt.customArrowPrevSymbol;\n\n            var arrowNext = '<i class=\"icon-right-open-mini\"></i>';\n            if (opt.customArrowNextSymbol) arrowNext = opt.customArrowNextSymbol;\n\n            html += '<div class=\"month-wrapper\">' +\n                '   <table class=\"month1\" cellspacing=\"0\" border=\"0\" cellpadding=\"0\">' +\n                '       <thead>' +\n                '           <tr class=\"caption\">' +\n                '               <th style=\"width:27px;\">' +\n                '                   <div class=\"prev\">' +\n                arrowPrev +\n                '                   </div>' +\n                '               </th>' +\n                '               <th colspan=\"' + _colspan + '\" class=\"month-name\">' +\n                '               </th>' +\n                '               <th style=\"width:27px;\">' +\n                (opt.singleDate || !opt.stickyMonths ? '<div class=\"next\">' + arrowNext + '</div>' : '') +\n                '               </th>' +\n                '           </tr>' +\n                '           <tr class=\"week-name\">' + getWeekHead() +\n                '       </thead>' +\n                '       <tbody></tbody>' +\n                '   </table>';\n\n            if (hasMonth2()) {\n                html += '<div class=\"gap\"></div>' +\n                    '<table class=\"month2\" cellspacing=\"0\" border=\"0\" cellpadding=\"0\">' +\n                    '   <thead>' +\n                    '   <tr class=\"caption\">' +\n                    '       <th style=\"width:27px;\">' +\n                    (!opt.stickyMonths ? '<div class=\"prev\">' + arrowPrev + '</div>' : '') +\n                    '       </th>' +\n                    '       <th colspan=\"' + _colspan + '\" class=\"month-name\">' +\n                    '       </th>' +\n                    '       <th style=\"width:27px;\">' +\n                    '           <div class=\"next\">' + arrowNext + '</div>' +\n                    '       </th>' +\n                    '   </tr>' +\n                    '   <tr class=\"week-name\">' + getWeekHead() +\n                    '   </thead>' +\n                    '   <tbody></tbody>' +\n                    '</table>';\n\n            }\n\n            html += '<div style=\"clear:both;height:0;font-size:0;\"></div>' +\n                '<div class=\"time\">' +\n                '<div class=\"time1\"></div>';\n            if (!opt.singleDate) {\n                html += '<div class=\"time2\"></div>';\n            }\n            html += '</div>' +\n                '<div style=\"clear:both;height:0;font-size:0;\"></div>' +\n                '</div></div>';\n\n            return $(html);\n        }\n\n        function getApplyBtnClass() {\n            var klass = '';\n            if (opt.autoClose === true) {\n                klass += ' hide';\n            }\n            if (opt.applyBtnClass !== '') {\n                klass += ' ' + opt.applyBtnClass;\n            }\n            return klass;\n        }\n\n        function getWeekHead() {\n            var prepend = opt.showWeekNumbers ? '<th>' + translate('week-number') + '</th>' : '';\n            if (opt.startOfWeek == 'monday') {\n                return prepend + '<th>' + translate('week-1') + '</th>' +\n                    '<th>' + translate('week-2') + '</th>' +\n                    '<th>' + translate('week-3') + '</th>' +\n                    '<th>' + translate('week-4') + '</th>' +\n                    '<th>' + translate('week-5') + '</th>' +\n                    '<th>' + translate('week-6') + '</th>' +\n                    '<th>' + translate('week-7') + '</th>';\n            } else {\n                return prepend + '<th>' + translate('week-7') + '</th>' +\n                    '<th>' + translate('week-1') + '</th>' +\n                    '<th>' + translate('week-2') + '</th>' +\n                    '<th>' + translate('week-3') + '</th>' +\n                    '<th>' + translate('week-4') + '</th>' +\n                    '<th>' + translate('week-5') + '</th>' +\n                    '<th>' + translate('week-6') + '</th>';\n            }\n        }\n\n        function isMonthOutOfBounds(month) {\n            month = moment(month);\n            if (opt.startDate && month.endOf('month').isBefore(opt.startDate)) {\n                return true;\n            }\n            if (opt.endDate && month.startOf('month').isAfter(opt.endDate)) {\n                return true;\n            }\n            return false;\n        }\n\n        function hasMonth2() {\n            return (!opt.singleMonth);\n        }\n\n        function attributesCallbacks(initialObject, callbacksArray, today) {\n            var resultObject = $.extend(true, {}, initialObject);\n\n            $.each(callbacksArray, function(cbAttrIndex, cbAttr) {\n                var addAttributes = cbAttr(today);\n                for (var attr in addAttributes) {\n                    if (resultObject.hasOwnProperty(attr)) {\n                        resultObject[attr] += addAttributes[attr];\n                    } else {\n                        resultObject[attr] = addAttributes[attr];\n                    }\n                }\n            });\n\n            var attrString = '';\n\n            for (var attr in resultObject) {\n                if (resultObject.hasOwnProperty(attr)) {\n                    attrString += attr + '=\"' + resultObject[attr] + '\" ';\n                }\n            }\n\n            return attrString;\n        }\n\n        function daysFrom1970(t) {\n            return Math.floor(toLocalTimestamp(t) / 86400000);\n        }\n\n        function toLocalTimestamp(t) {\n            if (moment.isMoment(t)) t = t.toDate().getTime();\n            if (typeof t == 'object' && t.getTime) t = t.getTime();\n            if (typeof t == 'string' && !t.match(/\\d{13}/)) t = moment(t, opt.format).toDate().getTime();\n            t = parseInt(t, 10) - new Date().getTimezoneOffset() * 60 * 1000;\n            return t;\n        }\n\n        function createMonthHTML(d) {\n            var days = [];\n            d.setDate(1);\n            var lastMonth = new Date(d.getTime() - 86400000);\n            var now = new Date();\n\n            var dayOfWeek = d.getDay();\n            if ((dayOfWeek === 0) && (opt.startOfWeek === 'monday')) {\n                // add one week\n                dayOfWeek = 7;\n            }\n            var today, valid;\n\n            if (dayOfWeek > 0) {\n                for (var i = dayOfWeek; i > 0; i--) {\n                    var day = new Date(d.getTime() - 86400000 * i);\n                    valid = isValidTime(day.getTime());\n                    if (opt.startDate && compare_day(day, opt.startDate) < 0) valid = false;\n                    if (opt.endDate && compare_day(day, opt.endDate) > 0) valid = false;\n                    days.push({\n                        date: day,\n                        type: 'lastMonth',\n                        day: day.getDate(),\n                        time: day.getTime(),\n                        valid: valid\n                    });\n                }\n            }\n            var toMonth = d.getMonth();\n            for (var i = 0; i < 40; i++) {\n                today = moment(d).add(i, 'days').toDate();\n                valid = isValidTime(today.getTime());\n                if (opt.startDate && compare_day(today, opt.startDate) < 0) valid = false;\n                if (opt.endDate && compare_day(today, opt.endDate) > 0) valid = false;\n                days.push({\n                    date: today,\n                    type: today.getMonth() == toMonth ? 'toMonth' : 'nextMonth',\n                    day: today.getDate(),\n                    time: today.getTime(),\n                    valid: valid\n                });\n            }\n            var html = [];\n            for (var week = 0; week < 6; week++) {\n                if (days[week * 7].type == 'nextMonth') break;\n                html.push('<tr>');\n\n                for (var day = 0; day < 7; day++) {\n                    var _day = (opt.startOfWeek == 'monday') ? day + 1 : day;\n                    today = days[week * 7 + _day];\n                    var highlightToday = moment(today.time).format('L') == moment(now).format('L');\n                    today.extraClass = '';\n                    today.tooltip = '';\n                    if (today.valid && opt.beforeShowDay && typeof opt.beforeShowDay == 'function') {\n                        var _r = opt.beforeShowDay(moment(today.time).toDate());\n                        today.valid = _r[0];\n                        today.extraClass = _r[1] || '';\n                        today.tooltip = _r[2] || '';\n                        if (today.tooltip !== '') today.extraClass += ' has-tooltip ';\n                    }\n\n                    var todayDivAttr = {\n                        time: today.time,\n                        'data-tooltip': today.tooltip,\n                        'class': 'day ' + today.type + ' ' + today.extraClass + ' ' + (today.valid ? 'valid' : 'invalid') + ' ' + (highlightToday && opt.highlightToday ? 'real-today' : '')\n                    };\n\n                    if (day === 0 && opt.showWeekNumbers) {\n                        html.push('<td><div class=\"week-number\" data-start-time=\"' + today.time + '\">' + opt.getWeekNumber(today.date) + '</div></td>');\n                    }\n\n                    html.push('<td ' + attributesCallbacks({}, opt.dayTdAttrs, today) + '><div ' + attributesCallbacks(todayDivAttr, opt.dayDivAttrs, today) + '>' + showDayHTML(today.time, today.day) + '</div></td>');\n                }\n                html.push('</tr>');\n            }\n            return html.join('');\n        }\n\n        function showDayHTML(time, date) {\n            if (opt.showDateFilter && typeof opt.showDateFilter == 'function') return opt.showDateFilter(time, date);\n            return date;\n        }\n\n        function getLanguages() {\n            if (opt.language == 'auto') {\n                var language = navigator.language ? navigator.language : navigator.browserLanguage;\n                if (!language) {\n                    return $.dateRangePickerLanguages['default'];\n                }\n                language = language.toLowerCase();\n                if(language in $.dateRangePickerLanguages){\n                    return $.dateRangePickerLanguages[language];\n                }\n\n                return $.dateRangePickerLanguages['default'];\n            } else if (opt.language && opt.language in $.dateRangePickerLanguages) {\n                return $.dateRangePickerLanguages[opt.language];\n            } else {\n                return $.dateRangePickerLanguages['default'];\n            }\n        }\n\n        /**\n         * Translate language string, try both the provided translation key, as the lower case version\n         */\n        function translate(translationKey) {\n            var translationKeyLowerCase = translationKey.toLowerCase();\n            var result = (translationKey in languages) ? languages[translationKey] : (translationKeyLowerCase in languages) ? languages[translationKeyLowerCase] : null;\n            var defaultLanguage = $.dateRangePickerLanguages['default'];\n            if (result == null) result = (translationKey in defaultLanguage) ? defaultLanguage[translationKey] : (translationKeyLowerCase in defaultLanguage) ? defaultLanguage[translationKeyLowerCase] : '';\n\n            return result;\n        }\n\n        function getDefaultTime() {\n            var defaultTime = opt.defaultTime ? opt.defaultTime : new Date();\n\n            if (opt.lookBehind) {\n                if (opt.startDate && compare_month(defaultTime, opt.startDate) < 0) defaultTime = nextMonth(moment(opt.startDate).toDate());\n                if (opt.endDate && compare_month(defaultTime, opt.endDate) > 0) defaultTime = moment(opt.endDate).toDate();\n            } else {\n                if (opt.startDate && compare_month(defaultTime, opt.startDate) < 0) defaultTime = moment(opt.startDate).toDate();\n                if (opt.endDate && compare_month(nextMonth(defaultTime), opt.endDate) > 0) defaultTime = prevMonth(moment(opt.endDate).toDate());\n            }\n\n            if (opt.singleDate) {\n                if (opt.startDate && compare_month(defaultTime, opt.startDate) < 0) defaultTime = moment(opt.startDate).toDate();\n                if (opt.endDate && compare_month(defaultTime, opt.endDate) > 0) defaultTime = moment(opt.endDate).toDate();\n            }\n\n            return defaultTime;\n        }\n\n        function resetMonthsView(time) {\n            if (!time) {\n                time = getDefaultTime();\n            }\n\n            if (opt.lookBehind) {\n                showMonth(prevMonth(time), 'month1');\n                showMonth(time, 'month2');\n            } else {\n                showMonth(time, 'month1');\n                showMonth(nextMonth(time), 'month2');\n            }\n\n            if (opt.singleDate) {\n                showMonth(time, 'month1');\n            }\n\n            showSelectedDays();\n            showGap();\n        }\n\n    };\n}));","/**\n * @license AngularJS v1.6.6\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\nvar ELEMENT_NODE = 1;\nvar COMMENT_NODE = 8;\n\nvar ADD_CLASS_SUFFIX = '-add';\nvar REMOVE_CLASS_SUFFIX = '-remove';\nvar EVENT_CLASS_PREFIX = 'ng-';\nvar ACTIVE_CLASS_SUFFIX = '-active';\nvar PREPARE_CLASS_SUFFIX = '-prepare';\n\nvar NG_ANIMATE_CLASSNAME = 'ng-animate';\nvar NG_ANIMATE_CHILDREN_DATA = '$$ngAnimateChildren';\n\n// Detect proper transitionend/animationend event names.\nvar CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;\n\n// If unprefixed events are not supported but webkit-prefixed are, use the latter.\n// Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.\n// Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`\n// but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.\n// Register both events in case `window.onanimationend` is not supported because of that,\n// do the same for `transitionend` as Safari is likely to exhibit similar behavior.\n// Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit\n// therefore there is no reason to test anymore for other vendor prefixes:\n// http://caniuse.com/#search=transition\nif ((window.ontransitionend === undefined) && (window.onwebkittransitionend !== undefined)) {\n  CSS_PREFIX = '-webkit-';\n  TRANSITION_PROP = 'WebkitTransition';\n  TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';\n} else {\n  TRANSITION_PROP = 'transition';\n  TRANSITIONEND_EVENT = 'transitionend';\n}\n\nif ((window.onanimationend === undefined) && (window.onwebkitanimationend !== undefined)) {\n  CSS_PREFIX = '-webkit-';\n  ANIMATION_PROP = 'WebkitAnimation';\n  ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';\n} else {\n  ANIMATION_PROP = 'animation';\n  ANIMATIONEND_EVENT = 'animationend';\n}\n\nvar DURATION_KEY = 'Duration';\nvar PROPERTY_KEY = 'Property';\nvar DELAY_KEY = 'Delay';\nvar TIMING_KEY = 'TimingFunction';\nvar ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';\nvar ANIMATION_PLAYSTATE_KEY = 'PlayState';\nvar SAFE_FAST_FORWARD_DURATION_VALUE = 9999;\n\nvar ANIMATION_DELAY_PROP = ANIMATION_PROP + DELAY_KEY;\nvar ANIMATION_DURATION_PROP = ANIMATION_PROP + DURATION_KEY;\nvar TRANSITION_DELAY_PROP = TRANSITION_PROP + DELAY_KEY;\nvar TRANSITION_DURATION_PROP = TRANSITION_PROP + DURATION_KEY;\n\nvar ngMinErr = angular.$$minErr('ng');\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw ngMinErr('areq', 'Argument \\'{0}\\' is {1}', (name || '?'), (reason || 'required'));\n  }\n  return arg;\n}\n\nfunction mergeClasses(a,b) {\n  if (!a && !b) return '';\n  if (!a) return b;\n  if (!b) return a;\n  if (isArray(a)) a = a.join(' ');\n  if (isArray(b)) b = b.join(' ');\n  return a + ' ' + b;\n}\n\nfunction packageStyles(options) {\n  var styles = {};\n  if (options && (options.to || options.from)) {\n    styles.to = options.to;\n    styles.from = options.from;\n  }\n  return styles;\n}\n\nfunction pendClasses(classes, fix, isPrefix) {\n  var className = '';\n  classes = isArray(classes)\n      ? classes\n      : classes && isString(classes) && classes.length\n          ? classes.split(/\\s+/)\n          : [];\n  forEach(classes, function(klass, i) {\n    if (klass && klass.length > 0) {\n      className += (i > 0) ? ' ' : '';\n      className += isPrefix ? fix + klass\n                            : klass + fix;\n    }\n  });\n  return className;\n}\n\nfunction removeFromArray(arr, val) {\n  var index = arr.indexOf(val);\n  if (val >= 0) {\n    arr.splice(index, 1);\n  }\n}\n\nfunction stripCommentsFromElement(element) {\n  if (element instanceof jqLite) {\n    switch (element.length) {\n      case 0:\n        return element;\n\n      case 1:\n        // there is no point of stripping anything if the element\n        // is the only element within the jqLite wrapper.\n        // (it's important that we retain the element instance.)\n        if (element[0].nodeType === ELEMENT_NODE) {\n          return element;\n        }\n        break;\n\n      default:\n        return jqLite(extractElementNode(element));\n    }\n  }\n\n  if (element.nodeType === ELEMENT_NODE) {\n    return jqLite(element);\n  }\n}\n\nfunction extractElementNode(element) {\n  if (!element[0]) return element;\n  for (var i = 0; i < element.length; i++) {\n    var elm = element[i];\n    if (elm.nodeType === ELEMENT_NODE) {\n      return elm;\n    }\n  }\n}\n\nfunction $$addClass($$jqLite, element, className) {\n  forEach(element, function(elm) {\n    $$jqLite.addClass(elm, className);\n  });\n}\n\nfunction $$removeClass($$jqLite, element, className) {\n  forEach(element, function(elm) {\n    $$jqLite.removeClass(elm, className);\n  });\n}\n\nfunction applyAnimationClassesFactory($$jqLite) {\n  return function(element, options) {\n    if (options.addClass) {\n      $$addClass($$jqLite, element, options.addClass);\n      options.addClass = null;\n    }\n    if (options.removeClass) {\n      $$removeClass($$jqLite, element, options.removeClass);\n      options.removeClass = null;\n    }\n  };\n}\n\nfunction prepareAnimationOptions(options) {\n  options = options || {};\n  if (!options.$$prepared) {\n    var domOperation = options.domOperation || noop;\n    options.domOperation = function() {\n      options.$$domOperationFired = true;\n      domOperation();\n      domOperation = noop;\n    };\n    options.$$prepared = true;\n  }\n  return options;\n}\n\nfunction applyAnimationStyles(element, options) {\n  applyAnimationFromStyles(element, options);\n  applyAnimationToStyles(element, options);\n}\n\nfunction applyAnimationFromStyles(element, options) {\n  if (options.from) {\n    element.css(options.from);\n    options.from = null;\n  }\n}\n\nfunction applyAnimationToStyles(element, options) {\n  if (options.to) {\n    element.css(options.to);\n    options.to = null;\n  }\n}\n\nfunction mergeAnimationDetails(element, oldAnimation, newAnimation) {\n  var target = oldAnimation.options || {};\n  var newOptions = newAnimation.options || {};\n\n  var toAdd = (target.addClass || '') + ' ' + (newOptions.addClass || '');\n  var toRemove = (target.removeClass || '') + ' ' + (newOptions.removeClass || '');\n  var classes = resolveElementClasses(element.attr('class'), toAdd, toRemove);\n\n  if (newOptions.preparationClasses) {\n    target.preparationClasses = concatWithSpace(newOptions.preparationClasses, target.preparationClasses);\n    delete newOptions.preparationClasses;\n  }\n\n  // noop is basically when there is no callback; otherwise something has been set\n  var realDomOperation = target.domOperation !== noop ? target.domOperation : null;\n\n  extend(target, newOptions);\n\n  // TODO(matsko or sreeramu): proper fix is to maintain all animation callback in array and call at last,but now only leave has the callback so no issue with this.\n  if (realDomOperation) {\n    target.domOperation = realDomOperation;\n  }\n\n  if (classes.addClass) {\n    target.addClass = classes.addClass;\n  } else {\n    target.addClass = null;\n  }\n\n  if (classes.removeClass) {\n    target.removeClass = classes.removeClass;\n  } else {\n    target.removeClass = null;\n  }\n\n  oldAnimation.addClass = target.addClass;\n  oldAnimation.removeClass = target.removeClass;\n\n  return target;\n}\n\nfunction resolveElementClasses(existing, toAdd, toRemove) {\n  var ADD_CLASS = 1;\n  var REMOVE_CLASS = -1;\n\n  var flags = {};\n  existing = splitClassesToLookup(existing);\n\n  toAdd = splitClassesToLookup(toAdd);\n  forEach(toAdd, function(value, key) {\n    flags[key] = ADD_CLASS;\n  });\n\n  toRemove = splitClassesToLookup(toRemove);\n  forEach(toRemove, function(value, key) {\n    flags[key] = flags[key] === ADD_CLASS ? null : REMOVE_CLASS;\n  });\n\n  var classes = {\n    addClass: '',\n    removeClass: ''\n  };\n\n  forEach(flags, function(val, klass) {\n    var prop, allow;\n    if (val === ADD_CLASS) {\n      prop = 'addClass';\n      allow = !existing[klass] || existing[klass + REMOVE_CLASS_SUFFIX];\n    } else if (val === REMOVE_CLASS) {\n      prop = 'removeClass';\n      allow = existing[klass] || existing[klass + ADD_CLASS_SUFFIX];\n    }\n    if (allow) {\n      if (classes[prop].length) {\n        classes[prop] += ' ';\n      }\n      classes[prop] += klass;\n    }\n  });\n\n  function splitClassesToLookup(classes) {\n    if (isString(classes)) {\n      classes = classes.split(' ');\n    }\n\n    var obj = {};\n    forEach(classes, function(klass) {\n      // sometimes the split leaves empty string values\n      // incase extra spaces were applied to the options\n      if (klass.length) {\n        obj[klass] = true;\n      }\n    });\n    return obj;\n  }\n\n  return classes;\n}\n\nfunction getDomNode(element) {\n  return (element instanceof jqLite) ? element[0] : element;\n}\n\nfunction applyGeneratedPreparationClasses(element, event, options) {\n  var classes = '';\n  if (event) {\n    classes = pendClasses(event, EVENT_CLASS_PREFIX, true);\n  }\n  if (options.addClass) {\n    classes = concatWithSpace(classes, pendClasses(options.addClass, ADD_CLASS_SUFFIX));\n  }\n  if (options.removeClass) {\n    classes = concatWithSpace(classes, pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX));\n  }\n  if (classes.length) {\n    options.preparationClasses = classes;\n    element.addClass(classes);\n  }\n}\n\nfunction clearGeneratedClasses(element, options) {\n  if (options.preparationClasses) {\n    element.removeClass(options.preparationClasses);\n    options.preparationClasses = null;\n  }\n  if (options.activeClasses) {\n    element.removeClass(options.activeClasses);\n    options.activeClasses = null;\n  }\n}\n\nfunction blockTransitions(node, duration) {\n  // we use a negative delay value since it performs blocking\n  // yet it doesn't kill any existing transitions running on the\n  // same element which makes this safe for class-based animations\n  var value = duration ? '-' + duration + 's' : '';\n  applyInlineStyle(node, [TRANSITION_DELAY_PROP, value]);\n  return [TRANSITION_DELAY_PROP, value];\n}\n\nfunction blockKeyframeAnimations(node, applyBlock) {\n  var value = applyBlock ? 'paused' : '';\n  var key = ANIMATION_PROP + ANIMATION_PLAYSTATE_KEY;\n  applyInlineStyle(node, [key, value]);\n  return [key, value];\n}\n\nfunction applyInlineStyle(node, styleTuple) {\n  var prop = styleTuple[0];\n  var value = styleTuple[1];\n  node.style[prop] = value;\n}\n\nfunction concatWithSpace(a,b) {\n  if (!a) return b;\n  if (!b) return a;\n  return a + ' ' + b;\n}\n\nvar $$rAFSchedulerFactory = ['$$rAF', function($$rAF) {\n  var queue, cancelFn;\n\n  function scheduler(tasks) {\n    // we make a copy since RAFScheduler mutates the state\n    // of the passed in array variable and this would be difficult\n    // to track down on the outside code\n    queue = queue.concat(tasks);\n    nextTick();\n  }\n\n  queue = scheduler.queue = [];\n\n  /* waitUntilQuiet does two things:\n   * 1. It will run the FINAL `fn` value only when an uncanceled RAF has passed through\n   * 2. It will delay the next wave of tasks from running until the quiet `fn` has run.\n   *\n   * The motivation here is that animation code can request more time from the scheduler\n   * before the next wave runs. This allows for certain DOM properties such as classes to\n   * be resolved in time for the next animation to run.\n   */\n  scheduler.waitUntilQuiet = function(fn) {\n    if (cancelFn) cancelFn();\n\n    cancelFn = $$rAF(function() {\n      cancelFn = null;\n      fn();\n      nextTick();\n    });\n  };\n\n  return scheduler;\n\n  function nextTick() {\n    if (!queue.length) return;\n\n    var items = queue.shift();\n    for (var i = 0; i < items.length; i++) {\n      items[i]();\n    }\n\n    if (!cancelFn) {\n      $$rAF(function() {\n        if (!cancelFn) nextTick();\n      });\n    }\n  }\n}];\n\n/**\n * @ngdoc directive\n * @name ngAnimateChildren\n * @restrict AE\n * @element ANY\n *\n * @description\n *\n * ngAnimateChildren allows you to specify that children of this element should animate even if any\n * of the children's parents are currently animating. By default, when an element has an active `enter`, `leave`, or `move`\n * (structural) animation, child elements that also have an active structural animation are not animated.\n *\n * Note that even if `ngAnimateChildren` is set, no child animations will run when the parent element is removed from the DOM (`leave` animation).\n *\n *\n * @param {string} ngAnimateChildren If the value is empty, `true` or `on`,\n *     then child animations are allowed. If the value is `false`, child animations are not allowed.\n *\n * @example\n * <example module=\"ngAnimateChildren\" name=\"ngAnimateChildren\" deps=\"angular-animate.js\" animations=\"true\">\n     <file name=\"index.html\">\n       <div ng-controller=\"MainController as main\">\n         <label>Show container? <input type=\"checkbox\" ng-model=\"main.enterElement\" /></label>\n         <label>Animate children? <input type=\"checkbox\" ng-model=\"main.animateChildren\" /></label>\n         <hr>\n         <div ng-animate-children=\"{{main.animateChildren}}\">\n           <div ng-if=\"main.enterElement\" class=\"container\">\n             List of items:\n             <div ng-repeat=\"item in [0, 1, 2, 3]\" class=\"item\">Item {{item}}</div>\n           </div>\n         </div>\n       </div>\n     </file>\n     <file name=\"animations.css\">\n\n      .container.ng-enter,\n      .container.ng-leave {\n        transition: all ease 1.5s;\n      }\n\n      .container.ng-enter,\n      .container.ng-leave-active {\n        opacity: 0;\n      }\n\n      .container.ng-leave,\n      .container.ng-enter-active {\n        opacity: 1;\n      }\n\n      .item {\n        background: firebrick;\n        color: #FFF;\n        margin-bottom: 10px;\n      }\n\n      .item.ng-enter,\n      .item.ng-leave {\n        transition: transform 1.5s ease;\n      }\n\n      .item.ng-enter {\n        transform: translateX(50px);\n      }\n\n      .item.ng-enter-active {\n        transform: translateX(0);\n      }\n    </file>\n    <file name=\"script.js\">\n      angular.module('ngAnimateChildren', ['ngAnimate'])\n        .controller('MainController', function MainController() {\n          this.animateChildren = false;\n          this.enterElement = false;\n        });\n    </file>\n  </example>\n */\nvar $$AnimateChildrenDirective = ['$interpolate', function($interpolate) {\n  return {\n    link: function(scope, element, attrs) {\n      var val = attrs.ngAnimateChildren;\n      if (isString(val) && val.length === 0) { //empty attribute\n        element.data(NG_ANIMATE_CHILDREN_DATA, true);\n      } else {\n        // Interpolate and set the value, so that it is available to\n        // animations that run right after compilation\n        setData($interpolate(val)(scope));\n        attrs.$observe('ngAnimateChildren', setData);\n      }\n\n      function setData(value) {\n        value = value === 'on' || value === 'true';\n        element.data(NG_ANIMATE_CHILDREN_DATA, value);\n      }\n    }\n  };\n}];\n\n/* exported $AnimateCssProvider */\n\nvar ANIMATE_TIMER_KEY = '$$animateCss';\n\n/**\n * @ngdoc service\n * @name $animateCss\n * @kind object\n *\n * @description\n * The `$animateCss` service is a useful utility to trigger customized CSS-based transitions/keyframes\n * from a JavaScript-based animation or directly from a directive. The purpose of `$animateCss` is NOT\n * to side-step how `$animate` and ngAnimate work, but the goal is to allow pre-existing animations or\n * directives to create more complex animations that can be purely driven using CSS code.\n *\n * Note that only browsers that support CSS transitions and/or keyframe animations are capable of\n * rendering animations triggered via `$animateCss` (bad news for IE9 and lower).\n *\n * ## Usage\n * Once again, `$animateCss` is designed to be used inside of a registered JavaScript animation that\n * is powered by ngAnimate. It is possible to use `$animateCss` directly inside of a directive, however,\n * any automatic control over cancelling animations and/or preventing animations from being run on\n * child elements will not be handled by Angular. For this to work as expected, please use `$animate` to\n * trigger the animation and then setup a JavaScript animation that injects `$animateCss` to trigger\n * the CSS animation.\n *\n * The example below shows how we can create a folding animation on an element using `ng-if`:\n *\n * ```html\n * <!-- notice the `fold-animation` CSS class -->\n * <div ng-if=\"onOff\" class=\"fold-animation\">\n *   This element will go BOOM\n * </div>\n * <button ng-click=\"onOff=true\">Fold In</button>\n * ```\n *\n * Now we create the **JavaScript animation** that will trigger the CSS transition:\n *\n * ```js\n * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element, doneFn) {\n *       var height = element[0].offsetHeight;\n *       return $animateCss(element, {\n *         from: { height:'0px' },\n *         to: { height:height + 'px' },\n *         duration: 1 // one second\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * ## More Advanced Uses\n *\n * `$animateCss` is the underlying code that ngAnimate uses to power **CSS-based animations** behind the scenes. Therefore CSS hooks\n * like `.ng-EVENT`, `.ng-EVENT-active`, `.ng-EVENT-stagger` are all features that can be triggered using `$animateCss` via JavaScript code.\n *\n * This also means that just about any combination of adding classes, removing classes, setting styles, dynamically setting a keyframe animation,\n * applying a hardcoded duration or delay value, changing the animation easing or applying a stagger animation are all options that work with\n * `$animateCss`. The service itself is smart enough to figure out the combination of options and examine the element styling properties in order\n * to provide a working animation that will run in CSS.\n *\n * The example below showcases a more advanced version of the `.fold-animation` from the example above:\n *\n * ```js\n * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element, doneFn) {\n *       var height = element[0].offsetHeight;\n *       return $animateCss(element, {\n *         addClass: 'red large-text pulse-twice',\n *         easing: 'ease-out',\n *         from: { height:'0px' },\n *         to: { height:height + 'px' },\n *         duration: 1 // one second\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * Since we're adding/removing CSS classes then the CSS transition will also pick those up:\n *\n * ```css\n * /&#42; since a hardcoded duration value of 1 was provided in the JavaScript animation code,\n * the CSS classes below will be transitioned despite them being defined as regular CSS classes &#42;/\n * .red { background:red; }\n * .large-text { font-size:20px; }\n *\n * /&#42; we can also use a keyframe animation and $animateCss will make it work alongside the transition &#42;/\n * .pulse-twice {\n *   animation: 0.5s pulse linear 2;\n *   -webkit-animation: 0.5s pulse linear 2;\n * }\n *\n * @keyframes pulse {\n *   from { transform: scale(0.5); }\n *   to { transform: scale(1.5); }\n * }\n *\n * @-webkit-keyframes pulse {\n *   from { -webkit-transform: scale(0.5); }\n *   to { -webkit-transform: scale(1.5); }\n * }\n * ```\n *\n * Given this complex combination of CSS classes, styles and options, `$animateCss` will figure everything out and make the animation happen.\n *\n * ## How the Options are handled\n *\n * `$animateCss` is very versatile and intelligent when it comes to figuring out what configurations to apply to the element to ensure the animation\n * works with the options provided. Say for example we were adding a class that contained a keyframe value and we wanted to also animate some inline\n * styles using the `from` and `to` properties.\n *\n * ```js\n * var animator = $animateCss(element, {\n *   from: { background:'red' },\n *   to: { background:'blue' }\n * });\n * animator.start();\n * ```\n *\n * ```css\n * .rotating-animation {\n *   animation:0.5s rotate linear;\n *   -webkit-animation:0.5s rotate linear;\n * }\n *\n * @keyframes rotate {\n *   from { transform: rotate(0deg); }\n *   to { transform: rotate(360deg); }\n * }\n *\n * @-webkit-keyframes rotate {\n *   from { -webkit-transform: rotate(0deg); }\n *   to { -webkit-transform: rotate(360deg); }\n * }\n * ```\n *\n * The missing pieces here are that we do not have a transition set (within the CSS code nor within the `$animateCss` options) and the duration of the animation is\n * going to be detected from what the keyframe styles on the CSS class are. In this event, `$animateCss` will automatically create an inline transition\n * style matching the duration detected from the keyframe style (which is present in the CSS class that is being added) and then prepare both the transition\n * and keyframe animations to run in parallel on the element. Then when the animation is underway the provided `from` and `to` CSS styles will be applied\n * and spread across the transition and keyframe animation.\n *\n * ## What is returned\n *\n * `$animateCss` works in two stages: a preparation phase and an animation phase. Therefore when `$animateCss` is first called it will NOT actually\n * start the animation. All that is going on here is that the element is being prepared for the animation (which means that the generated CSS classes are\n * added and removed on the element). Once `$animateCss` is called it will return an object with the following properties:\n *\n * ```js\n * var animator = $animateCss(element, { ... });\n * ```\n *\n * Now what do the contents of our `animator` variable look like:\n *\n * ```js\n * {\n *   // starts the animation\n *   start: Function,\n *\n *   // ends (aborts) the animation\n *   end: Function\n * }\n * ```\n *\n * To actually start the animation we need to run `animation.start()` which will then return a promise that we can hook into to detect when the animation ends.\n * If we choose not to run the animation then we MUST run `animation.end()` to perform a cleanup on the element (since some CSS classes and styles may have been\n * applied to the element during the preparation phase). Note that all other properties such as duration, delay, transitions and keyframes are just properties\n * and that changing them will not reconfigure the parameters of the animation.\n *\n * ### runner.done() vs runner.then()\n * It is documented that `animation.start()` will return a promise object and this is true, however, there is also an additional method available on the\n * runner called `.done(callbackFn)`. The done method works the same as `.finally(callbackFn)`, however, it does **not trigger a digest to occur**.\n * Therefore, for performance reasons, it's always best to use `runner.done(callback)` instead of `runner.then()`, `runner.catch()` or `runner.finally()`\n * unless you really need a digest to kick off afterwards.\n *\n * Keep in mind that, to make this easier, ngAnimate has tweaked the JS animations API to recognize when a runner instance is returned from $animateCss\n * (so there is no need to call `runner.done(doneFn)` inside of your JavaScript animation code).\n * Check the {@link ngAnimate.$animateCss#usage animation code above} to see how this works.\n *\n * @param {DOMElement} element the element that will be animated\n * @param {object} options the animation-related options that will be applied during the animation\n *\n * * `event` - The DOM event (e.g. enter, leave, move). When used, a generated CSS class of `ng-EVENT` and `ng-EVENT-active` will be applied\n * to the element during the animation. Multiple events can be provided when spaces are used as a separator. (Note that this will not perform any DOM operation.)\n * * `structural` - Indicates that the `ng-` prefix will be added to the event class. Setting to `false` or omitting will turn `ng-EVENT` and\n * `ng-EVENT-active` in `EVENT` and `EVENT-active`. Unused if `event` is omitted.\n * * `easing` - The CSS easing value that will be applied to the transition or keyframe animation (or both).\n * * `transitionStyle` - The raw CSS transition style that will be used (e.g. `1s linear all`).\n * * `keyframeStyle` - The raw CSS keyframe animation style that will be used (e.g. `1s my_animation linear`).\n * * `from` - The starting CSS styles (a key/value object) that will be applied at the start of the animation.\n * * `to` - The ending CSS styles (a key/value object) that will be applied across the animation via a CSS transition.\n * * `addClass` - A space separated list of CSS classes that will be added to the element and spread across the animation.\n * * `removeClass` - A space separated list of CSS classes that will be removed from the element and spread across the animation.\n * * `duration` - A number value representing the total duration of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `0`\n * is provided then the animation will be skipped entirely.\n * * `delay` - A number value representing the total delay of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `true` is\n * used then whatever delay value is detected from the CSS classes will be mirrored on the elements styles (e.g. by setting delay true then the style value\n * of the element will be `transition-delay: DETECTED_VALUE`). Using `true` is useful when you want the CSS classes and inline styles to all share the same\n * CSS delay value.\n * * `stagger` - A numeric time value representing the delay between successively animated elements\n * ({@link ngAnimate#css-staggering-animations Click here to learn how CSS-based staggering works in ngAnimate.})\n * * `staggerIndex` - The numeric index representing the stagger item (e.g. a value of 5 is equal to the sixth item in the stagger; therefore when a\n *   `stagger` option value of `0.1` is used then there will be a stagger delay of `600ms`)\n * * `applyClassesEarly` - Whether or not the classes being added or removed will be used when detecting the animation. This is set by `$animate` when enter/leave/move animations are fired to ensure that the CSS classes are resolved in time. (Note that this will prevent any transitions from occurring on the classes being added and removed.)\n * * `cleanupStyles` - Whether or not the provided `from` and `to` styles will be removed once\n *    the animation is closed. This is useful for when the styles are used purely for the sake of\n *    the animation and do not have a lasting visual effect on the element (e.g. a collapse and open animation).\n *    By default this value is set to `false`.\n *\n * @return {object} an object with start and end methods and details about the animation.\n *\n * * `start` - The method to start the animation. This will return a `Promise` when called.\n * * `end` - This method will cancel the animation and remove all applied CSS classes and styles.\n */\nvar ONE_SECOND = 1000;\n\nvar ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\nvar CLOSING_TIME_BUFFER = 1.5;\n\nvar DETECT_CSS_PROPERTIES = {\n  transitionDuration:      TRANSITION_DURATION_PROP,\n  transitionDelay:         TRANSITION_DELAY_PROP,\n  transitionProperty:      TRANSITION_PROP + PROPERTY_KEY,\n  animationDuration:       ANIMATION_DURATION_PROP,\n  animationDelay:          ANIMATION_DELAY_PROP,\n  animationIterationCount: ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY\n};\n\nvar DETECT_STAGGER_CSS_PROPERTIES = {\n  transitionDuration:      TRANSITION_DURATION_PROP,\n  transitionDelay:         TRANSITION_DELAY_PROP,\n  animationDuration:       ANIMATION_DURATION_PROP,\n  animationDelay:          ANIMATION_DELAY_PROP\n};\n\nfunction getCssKeyframeDurationStyle(duration) {\n  return [ANIMATION_DURATION_PROP, duration + 's'];\n}\n\nfunction getCssDelayStyle(delay, isKeyframeAnimation) {\n  var prop = isKeyframeAnimation ? ANIMATION_DELAY_PROP : TRANSITION_DELAY_PROP;\n  return [prop, delay + 's'];\n}\n\nfunction computeCssStyles($window, element, properties) {\n  var styles = Object.create(null);\n  var detectedStyles = $window.getComputedStyle(element) || {};\n  forEach(properties, function(formalStyleName, actualStyleName) {\n    var val = detectedStyles[formalStyleName];\n    if (val) {\n      var c = val.charAt(0);\n\n      // only numerical-based values have a negative sign or digit as the first value\n      if (c === '-' || c === '+' || c >= 0) {\n        val = parseMaxTime(val);\n      }\n\n      // by setting this to null in the event that the delay is not set or is set directly as 0\n      // then we can still allow for negative values to be used later on and not mistake this\n      // value for being greater than any other negative value.\n      if (val === 0) {\n        val = null;\n      }\n      styles[actualStyleName] = val;\n    }\n  });\n\n  return styles;\n}\n\nfunction parseMaxTime(str) {\n  var maxValue = 0;\n  var values = str.split(/\\s*,\\s*/);\n  forEach(values, function(value) {\n    // it's always safe to consider only second values and omit `ms` values since\n    // getComputedStyle will always handle the conversion for us\n    if (value.charAt(value.length - 1) === 's') {\n      value = value.substring(0, value.length - 1);\n    }\n    value = parseFloat(value) || 0;\n    maxValue = maxValue ? Math.max(value, maxValue) : value;\n  });\n  return maxValue;\n}\n\nfunction truthyTimingValue(val) {\n  return val === 0 || val != null;\n}\n\nfunction getCssTransitionDurationStyle(duration, applyOnlyDuration) {\n  var style = TRANSITION_PROP;\n  var value = duration + 's';\n  if (applyOnlyDuration) {\n    style += DURATION_KEY;\n  } else {\n    value += ' linear all';\n  }\n  return [style, value];\n}\n\nfunction createLocalCacheLookup() {\n  var cache = Object.create(null);\n  return {\n    flush: function() {\n      cache = Object.create(null);\n    },\n\n    count: function(key) {\n      var entry = cache[key];\n      return entry ? entry.total : 0;\n    },\n\n    get: function(key) {\n      var entry = cache[key];\n      return entry && entry.value;\n    },\n\n    put: function(key, value) {\n      if (!cache[key]) {\n        cache[key] = { total: 1, value: value };\n      } else {\n        cache[key].total++;\n      }\n    }\n  };\n}\n\n// we do not reassign an already present style value since\n// if we detect the style property value again we may be\n// detecting styles that were added via the `from` styles.\n// We make use of `isDefined` here since an empty string\n// or null value (which is what getPropertyValue will return\n// for a non-existing style) will still be marked as a valid\n// value for the style (a falsy value implies that the style\n// is to be removed at the end of the animation). If we had a simple\n// \"OR\" statement then it would not be enough to catch that.\nfunction registerRestorableStyles(backup, node, properties) {\n  forEach(properties, function(prop) {\n    backup[prop] = isDefined(backup[prop])\n        ? backup[prop]\n        : node.style.getPropertyValue(prop);\n  });\n}\n\nvar $AnimateCssProvider = ['$animateProvider', /** @this */ function($animateProvider) {\n  var gcsLookup = createLocalCacheLookup();\n  var gcsStaggerLookup = createLocalCacheLookup();\n\n  this.$get = ['$window', '$$jqLite', '$$AnimateRunner', '$timeout',\n               '$$forceReflow', '$sniffer', '$$rAFScheduler', '$$animateQueue',\n       function($window,   $$jqLite,   $$AnimateRunner,   $timeout,\n                $$forceReflow,   $sniffer,   $$rAFScheduler, $$animateQueue) {\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    var parentCounter = 0;\n    function gcsHashFn(node, extraClasses) {\n      var KEY = '$$ngAnimateParentKey';\n      var parentNode = node.parentNode;\n      var parentID = parentNode[KEY] || (parentNode[KEY] = ++parentCounter);\n      return parentID + '-' + node.getAttribute('class') + '-' + extraClasses;\n    }\n\n    function computeCachedCssStyles(node, className, cacheKey, properties) {\n      var timings = gcsLookup.get(cacheKey);\n\n      if (!timings) {\n        timings = computeCssStyles($window, node, properties);\n        if (timings.animationIterationCount === 'infinite') {\n          timings.animationIterationCount = 1;\n        }\n      }\n\n      // we keep putting this in multiple times even though the value and the cacheKey are the same\n      // because we're keeping an internal tally of how many duplicate animations are detected.\n      gcsLookup.put(cacheKey, timings);\n      return timings;\n    }\n\n    function computeCachedCssStaggerStyles(node, className, cacheKey, properties) {\n      var stagger;\n\n      // if we have one or more existing matches of matching elements\n      // containing the same parent + CSS styles (which is how cacheKey works)\n      // then staggering is possible\n      if (gcsLookup.count(cacheKey) > 0) {\n        stagger = gcsStaggerLookup.get(cacheKey);\n\n        if (!stagger) {\n          var staggerClassName = pendClasses(className, '-stagger');\n\n          $$jqLite.addClass(node, staggerClassName);\n\n          stagger = computeCssStyles($window, node, properties);\n\n          // force the conversion of a null value to zero incase not set\n          stagger.animationDuration = Math.max(stagger.animationDuration, 0);\n          stagger.transitionDuration = Math.max(stagger.transitionDuration, 0);\n\n          $$jqLite.removeClass(node, staggerClassName);\n\n          gcsStaggerLookup.put(cacheKey, stagger);\n        }\n      }\n\n      return stagger || {};\n    }\n\n    var rafWaitQueue = [];\n    function waitUntilQuiet(callback) {\n      rafWaitQueue.push(callback);\n      $$rAFScheduler.waitUntilQuiet(function() {\n        gcsLookup.flush();\n        gcsStaggerLookup.flush();\n\n        // DO NOT REMOVE THIS LINE OR REFACTOR OUT THE `pageWidth` variable.\n        // PLEASE EXAMINE THE `$$forceReflow` service to understand why.\n        var pageWidth = $$forceReflow();\n\n        // we use a for loop to ensure that if the queue is changed\n        // during this looping then it will consider new requests\n        for (var i = 0; i < rafWaitQueue.length; i++) {\n          rafWaitQueue[i](pageWidth);\n        }\n        rafWaitQueue.length = 0;\n      });\n    }\n\n    function computeTimings(node, className, cacheKey) {\n      var timings = computeCachedCssStyles(node, className, cacheKey, DETECT_CSS_PROPERTIES);\n      var aD = timings.animationDelay;\n      var tD = timings.transitionDelay;\n      timings.maxDelay = aD && tD\n          ? Math.max(aD, tD)\n          : (aD || tD);\n      timings.maxDuration = Math.max(\n          timings.animationDuration * timings.animationIterationCount,\n          timings.transitionDuration);\n\n      return timings;\n    }\n\n    return function init(element, initialOptions) {\n      // all of the animation functions should create\n      // a copy of the options data, however, if a\n      // parent service has already created a copy then\n      // we should stick to using that\n      var options = initialOptions || {};\n      if (!options.$$prepared) {\n        options = prepareAnimationOptions(copy(options));\n      }\n\n      var restoreStyles = {};\n      var node = getDomNode(element);\n      if (!node\n          || !node.parentNode\n          || !$$animateQueue.enabled()) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var temporaryStyles = [];\n      var classes = element.attr('class');\n      var styles = packageStyles(options);\n      var animationClosed;\n      var animationPaused;\n      var animationCompleted;\n      var runner;\n      var runnerHost;\n      var maxDelay;\n      var maxDelayTime;\n      var maxDuration;\n      var maxDurationTime;\n      var startTime;\n      var events = [];\n\n      if (options.duration === 0 || (!$sniffer.animations && !$sniffer.transitions)) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var method = options.event && isArray(options.event)\n            ? options.event.join(' ')\n            : options.event;\n\n      var isStructural = method && options.structural;\n      var structuralClassName = '';\n      var addRemoveClassName = '';\n\n      if (isStructural) {\n        structuralClassName = pendClasses(method, EVENT_CLASS_PREFIX, true);\n      } else if (method) {\n        structuralClassName = method;\n      }\n\n      if (options.addClass) {\n        addRemoveClassName += pendClasses(options.addClass, ADD_CLASS_SUFFIX);\n      }\n\n      if (options.removeClass) {\n        if (addRemoveClassName.length) {\n          addRemoveClassName += ' ';\n        }\n        addRemoveClassName += pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX);\n      }\n\n      // there may be a situation where a structural animation is combined together\n      // with CSS classes that need to resolve before the animation is computed.\n      // However this means that there is no explicit CSS code to block the animation\n      // from happening (by setting 0s none in the class name). If this is the case\n      // we need to apply the classes before the first rAF so we know to continue if\n      // there actually is a detected transition or keyframe animation\n      if (options.applyClassesEarly && addRemoveClassName.length) {\n        applyAnimationClasses(element, options);\n      }\n\n      var preparationClasses = [structuralClassName, addRemoveClassName].join(' ').trim();\n      var fullClassName = classes + ' ' + preparationClasses;\n      var activeClasses = pendClasses(preparationClasses, ACTIVE_CLASS_SUFFIX);\n      var hasToStyles = styles.to && Object.keys(styles.to).length > 0;\n      var containsKeyframeAnimation = (options.keyframeStyle || '').length > 0;\n\n      // there is no way we can trigger an animation if no styles and\n      // no classes are being applied which would then trigger a transition,\n      // unless there a is raw keyframe value that is applied to the element.\n      if (!containsKeyframeAnimation\n           && !hasToStyles\n           && !preparationClasses) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var cacheKey, stagger;\n      if (options.stagger > 0) {\n        var staggerVal = parseFloat(options.stagger);\n        stagger = {\n          transitionDelay: staggerVal,\n          animationDelay: staggerVal,\n          transitionDuration: 0,\n          animationDuration: 0\n        };\n      } else {\n        cacheKey = gcsHashFn(node, fullClassName);\n        stagger = computeCachedCssStaggerStyles(node, preparationClasses, cacheKey, DETECT_STAGGER_CSS_PROPERTIES);\n      }\n\n      if (!options.$$skipPreparationClasses) {\n        $$jqLite.addClass(element, preparationClasses);\n      }\n\n      var applyOnlyDuration;\n\n      if (options.transitionStyle) {\n        var transitionStyle = [TRANSITION_PROP, options.transitionStyle];\n        applyInlineStyle(node, transitionStyle);\n        temporaryStyles.push(transitionStyle);\n      }\n\n      if (options.duration >= 0) {\n        applyOnlyDuration = node.style[TRANSITION_PROP].length > 0;\n        var durationStyle = getCssTransitionDurationStyle(options.duration, applyOnlyDuration);\n\n        // we set the duration so that it will be picked up by getComputedStyle later\n        applyInlineStyle(node, durationStyle);\n        temporaryStyles.push(durationStyle);\n      }\n\n      if (options.keyframeStyle) {\n        var keyframeStyle = [ANIMATION_PROP, options.keyframeStyle];\n        applyInlineStyle(node, keyframeStyle);\n        temporaryStyles.push(keyframeStyle);\n      }\n\n      var itemIndex = stagger\n          ? options.staggerIndex >= 0\n              ? options.staggerIndex\n              : gcsLookup.count(cacheKey)\n          : 0;\n\n      var isFirst = itemIndex === 0;\n\n      // this is a pre-emptive way of forcing the setup classes to be added and applied INSTANTLY\n      // without causing any combination of transitions to kick in. By adding a negative delay value\n      // it forces the setup class' transition to end immediately. We later then remove the negative\n      // transition delay to allow for the transition to naturally do it's thing. The beauty here is\n      // that if there is no transition defined then nothing will happen and this will also allow\n      // other transitions to be stacked on top of each other without any chopping them out.\n      if (isFirst && !options.skipBlocking) {\n        blockTransitions(node, SAFE_FAST_FORWARD_DURATION_VALUE);\n      }\n\n      var timings = computeTimings(node, fullClassName, cacheKey);\n      var relativeDelay = timings.maxDelay;\n      maxDelay = Math.max(relativeDelay, 0);\n      maxDuration = timings.maxDuration;\n\n      var flags = {};\n      flags.hasTransitions          = timings.transitionDuration > 0;\n      flags.hasAnimations           = timings.animationDuration > 0;\n      flags.hasTransitionAll        = flags.hasTransitions && timings.transitionProperty === 'all';\n      flags.applyTransitionDuration = hasToStyles && (\n                                        (flags.hasTransitions && !flags.hasTransitionAll)\n                                         || (flags.hasAnimations && !flags.hasTransitions));\n      flags.applyAnimationDuration  = options.duration && flags.hasAnimations;\n      flags.applyTransitionDelay    = truthyTimingValue(options.delay) && (flags.applyTransitionDuration || flags.hasTransitions);\n      flags.applyAnimationDelay     = truthyTimingValue(options.delay) && flags.hasAnimations;\n      flags.recalculateTimingStyles = addRemoveClassName.length > 0;\n\n      if (flags.applyTransitionDuration || flags.applyAnimationDuration) {\n        maxDuration = options.duration ? parseFloat(options.duration) : maxDuration;\n\n        if (flags.applyTransitionDuration) {\n          flags.hasTransitions = true;\n          timings.transitionDuration = maxDuration;\n          applyOnlyDuration = node.style[TRANSITION_PROP + PROPERTY_KEY].length > 0;\n          temporaryStyles.push(getCssTransitionDurationStyle(maxDuration, applyOnlyDuration));\n        }\n\n        if (flags.applyAnimationDuration) {\n          flags.hasAnimations = true;\n          timings.animationDuration = maxDuration;\n          temporaryStyles.push(getCssKeyframeDurationStyle(maxDuration));\n        }\n      }\n\n      if (maxDuration === 0 && !flags.recalculateTimingStyles) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      if (options.delay != null) {\n        var delayStyle;\n        if (typeof options.delay !== 'boolean') {\n          delayStyle = parseFloat(options.delay);\n          // number in options.delay means we have to recalculate the delay for the closing timeout\n          maxDelay = Math.max(delayStyle, 0);\n        }\n\n        if (flags.applyTransitionDelay) {\n          temporaryStyles.push(getCssDelayStyle(delayStyle));\n        }\n\n        if (flags.applyAnimationDelay) {\n          temporaryStyles.push(getCssDelayStyle(delayStyle, true));\n        }\n      }\n\n      // we need to recalculate the delay value since we used a pre-emptive negative\n      // delay value and the delay value is required for the final event checking. This\n      // property will ensure that this will happen after the RAF phase has passed.\n      if (options.duration == null && timings.transitionDuration > 0) {\n        flags.recalculateTimingStyles = flags.recalculateTimingStyles || isFirst;\n      }\n\n      maxDelayTime = maxDelay * ONE_SECOND;\n      maxDurationTime = maxDuration * ONE_SECOND;\n      if (!options.skipBlocking) {\n        flags.blockTransition = timings.transitionDuration > 0;\n        flags.blockKeyframeAnimation = timings.animationDuration > 0 &&\n                                       stagger.animationDelay > 0 &&\n                                       stagger.animationDuration === 0;\n      }\n\n      if (options.from) {\n        if (options.cleanupStyles) {\n          registerRestorableStyles(restoreStyles, node, Object.keys(options.from));\n        }\n        applyAnimationFromStyles(element, options);\n      }\n\n      if (flags.blockTransition || flags.blockKeyframeAnimation) {\n        applyBlocking(maxDuration);\n      } else if (!options.skipBlocking) {\n        blockTransitions(node, false);\n      }\n\n      // TODO(matsko): for 1.5 change this code to have an animator object for better debugging\n      return {\n        $$willAnimate: true,\n        end: endFn,\n        start: function() {\n          if (animationClosed) return;\n\n          runnerHost = {\n            end: endFn,\n            cancel: cancelFn,\n            resume: null, //this will be set during the start() phase\n            pause: null\n          };\n\n          runner = new $$AnimateRunner(runnerHost);\n\n          waitUntilQuiet(start);\n\n          // we don't have access to pause/resume the animation\n          // since it hasn't run yet. AnimateRunner will therefore\n          // set noop functions for resume and pause and they will\n          // later be overridden once the animation is triggered\n          return runner;\n        }\n      };\n\n      function endFn() {\n        close();\n      }\n\n      function cancelFn() {\n        close(true);\n      }\n\n      function close(rejected) {\n        // if the promise has been called already then we shouldn't close\n        // the animation again\n        if (animationClosed || (animationCompleted && animationPaused)) return;\n        animationClosed = true;\n        animationPaused = false;\n\n        if (!options.$$skipPreparationClasses) {\n          $$jqLite.removeClass(element, preparationClasses);\n        }\n        $$jqLite.removeClass(element, activeClasses);\n\n        blockKeyframeAnimations(node, false);\n        blockTransitions(node, false);\n\n        forEach(temporaryStyles, function(entry) {\n          // There is only one way to remove inline style properties entirely from elements.\n          // By using `removeProperty` this works, but we need to convert camel-cased CSS\n          // styles down to hyphenated values.\n          node.style[entry[0]] = '';\n        });\n\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n\n        if (Object.keys(restoreStyles).length) {\n          forEach(restoreStyles, function(value, prop) {\n            if (value) {\n              node.style.setProperty(prop, value);\n            } else {\n              node.style.removeProperty(prop);\n            }\n          });\n        }\n\n        // the reason why we have this option is to allow a synchronous closing callback\n        // that is fired as SOON as the animation ends (when the CSS is removed) or if\n        // the animation never takes off at all. A good example is a leave animation since\n        // the element must be removed just after the animation is over or else the element\n        // will appear on screen for one animation frame causing an overbearing flicker.\n        if (options.onDone) {\n          options.onDone();\n        }\n\n        if (events && events.length) {\n          // Remove the transitionend / animationend listener(s)\n          element.off(events.join(' '), onAnimationProgress);\n        }\n\n        //Cancel the fallback closing timeout and remove the timer data\n        var animationTimerData = element.data(ANIMATE_TIMER_KEY);\n        if (animationTimerData) {\n          $timeout.cancel(animationTimerData[0].timer);\n          element.removeData(ANIMATE_TIMER_KEY);\n        }\n\n        // if the preparation function fails then the promise is not setup\n        if (runner) {\n          runner.complete(!rejected);\n        }\n      }\n\n      function applyBlocking(duration) {\n        if (flags.blockTransition) {\n          blockTransitions(node, duration);\n        }\n\n        if (flags.blockKeyframeAnimation) {\n          blockKeyframeAnimations(node, !!duration);\n        }\n      }\n\n      function closeAndReturnNoopAnimator() {\n        runner = new $$AnimateRunner({\n          end: endFn,\n          cancel: cancelFn\n        });\n\n        // should flush the cache animation\n        waitUntilQuiet(noop);\n        close();\n\n        return {\n          $$willAnimate: false,\n          start: function() {\n            return runner;\n          },\n          end: endFn\n        };\n      }\n\n      function onAnimationProgress(event) {\n        event.stopPropagation();\n        var ev = event.originalEvent || event;\n\n        // we now always use `Date.now()` due to the recent changes with\n        // event.timeStamp in Firefox, Webkit and Chrome (see #13494 for more info)\n        var timeStamp = ev.$manualTimeStamp || Date.now();\n\n        /* Firefox (or possibly just Gecko) likes to not round values up\n         * when a ms measurement is used for the animation */\n        var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));\n\n        /* $manualTimeStamp is a mocked timeStamp value which is set\n         * within browserTrigger(). This is only here so that tests can\n         * mock animations properly. Real events fallback to event.timeStamp,\n         * or, if they don't, then a timeStamp is automatically created for them.\n         * We're checking to see if the timeStamp surpasses the expected delay,\n         * but we're using elapsedTime instead of the timeStamp on the 2nd\n         * pre-condition since animationPauseds sometimes close off early */\n        if (Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {\n          // we set this flag to ensure that if the transition is paused then, when resumed,\n          // the animation will automatically close itself since transitions cannot be paused.\n          animationCompleted = true;\n          close();\n        }\n      }\n\n      function start() {\n        if (animationClosed) return;\n        if (!node.parentNode) {\n          close();\n          return;\n        }\n\n        // even though we only pause keyframe animations here the pause flag\n        // will still happen when transitions are used. Only the transition will\n        // not be paused since that is not possible. If the animation ends when\n        // paused then it will not complete until unpaused or cancelled.\n        var playPause = function(playAnimation) {\n          if (!animationCompleted) {\n            animationPaused = !playAnimation;\n            if (timings.animationDuration) {\n              var value = blockKeyframeAnimations(node, animationPaused);\n              if (animationPaused) {\n                temporaryStyles.push(value);\n              } else {\n                removeFromArray(temporaryStyles, value);\n              }\n            }\n          } else if (animationPaused && playAnimation) {\n            animationPaused = false;\n            close();\n          }\n        };\n\n        // checking the stagger duration prevents an accidentally cascade of the CSS delay style\n        // being inherited from the parent. If the transition duration is zero then we can safely\n        // rely that the delay value is an intentional stagger delay style.\n        var maxStagger = itemIndex > 0\n                         && ((timings.transitionDuration && stagger.transitionDuration === 0) ||\n                            (timings.animationDuration && stagger.animationDuration === 0))\n                         && Math.max(stagger.animationDelay, stagger.transitionDelay);\n        if (maxStagger) {\n          $timeout(triggerAnimationStart,\n                   Math.floor(maxStagger * itemIndex * ONE_SECOND),\n                   false);\n        } else {\n          triggerAnimationStart();\n        }\n\n        // this will decorate the existing promise runner with pause/resume methods\n        runnerHost.resume = function() {\n          playPause(true);\n        };\n\n        runnerHost.pause = function() {\n          playPause(false);\n        };\n\n        function triggerAnimationStart() {\n          // just incase a stagger animation kicks in when the animation\n          // itself was cancelled entirely\n          if (animationClosed) return;\n\n          applyBlocking(false);\n\n          forEach(temporaryStyles, function(entry) {\n            var key = entry[0];\n            var value = entry[1];\n            node.style[key] = value;\n          });\n\n          applyAnimationClasses(element, options);\n          $$jqLite.addClass(element, activeClasses);\n\n          if (flags.recalculateTimingStyles) {\n            fullClassName = node.getAttribute('class') + ' ' + preparationClasses;\n            cacheKey = gcsHashFn(node, fullClassName);\n\n            timings = computeTimings(node, fullClassName, cacheKey);\n            relativeDelay = timings.maxDelay;\n            maxDelay = Math.max(relativeDelay, 0);\n            maxDuration = timings.maxDuration;\n\n            if (maxDuration === 0) {\n              close();\n              return;\n            }\n\n            flags.hasTransitions = timings.transitionDuration > 0;\n            flags.hasAnimations = timings.animationDuration > 0;\n          }\n\n          if (flags.applyAnimationDelay) {\n            relativeDelay = typeof options.delay !== 'boolean' && truthyTimingValue(options.delay)\n                  ? parseFloat(options.delay)\n                  : relativeDelay;\n\n            maxDelay = Math.max(relativeDelay, 0);\n            timings.animationDelay = relativeDelay;\n            delayStyle = getCssDelayStyle(relativeDelay, true);\n            temporaryStyles.push(delayStyle);\n            node.style[delayStyle[0]] = delayStyle[1];\n          }\n\n          maxDelayTime = maxDelay * ONE_SECOND;\n          maxDurationTime = maxDuration * ONE_SECOND;\n\n          if (options.easing) {\n            var easeProp, easeVal = options.easing;\n            if (flags.hasTransitions) {\n              easeProp = TRANSITION_PROP + TIMING_KEY;\n              temporaryStyles.push([easeProp, easeVal]);\n              node.style[easeProp] = easeVal;\n            }\n            if (flags.hasAnimations) {\n              easeProp = ANIMATION_PROP + TIMING_KEY;\n              temporaryStyles.push([easeProp, easeVal]);\n              node.style[easeProp] = easeVal;\n            }\n          }\n\n          if (timings.transitionDuration) {\n            events.push(TRANSITIONEND_EVENT);\n          }\n\n          if (timings.animationDuration) {\n            events.push(ANIMATIONEND_EVENT);\n          }\n\n          startTime = Date.now();\n          var timerTime = maxDelayTime + CLOSING_TIME_BUFFER * maxDurationTime;\n          var endTime = startTime + timerTime;\n\n          var animationsData = element.data(ANIMATE_TIMER_KEY) || [];\n          var setupFallbackTimer = true;\n          if (animationsData.length) {\n            var currentTimerData = animationsData[0];\n            setupFallbackTimer = endTime > currentTimerData.expectedEndTime;\n            if (setupFallbackTimer) {\n              $timeout.cancel(currentTimerData.timer);\n            } else {\n              animationsData.push(close);\n            }\n          }\n\n          if (setupFallbackTimer) {\n            var timer = $timeout(onAnimationExpired, timerTime, false);\n            animationsData[0] = {\n              timer: timer,\n              expectedEndTime: endTime\n            };\n            animationsData.push(close);\n            element.data(ANIMATE_TIMER_KEY, animationsData);\n          }\n\n          if (events.length) {\n            element.on(events.join(' '), onAnimationProgress);\n          }\n\n          if (options.to) {\n            if (options.cleanupStyles) {\n              registerRestorableStyles(restoreStyles, node, Object.keys(options.to));\n            }\n            applyAnimationToStyles(element, options);\n          }\n        }\n\n        function onAnimationExpired() {\n          var animationsData = element.data(ANIMATE_TIMER_KEY);\n\n          // this will be false in the event that the element was\n          // removed from the DOM (via a leave animation or something\n          // similar)\n          if (animationsData) {\n            for (var i = 1; i < animationsData.length; i++) {\n              animationsData[i]();\n            }\n            element.removeData(ANIMATE_TIMER_KEY);\n          }\n        }\n      }\n    };\n  }];\n}];\n\nvar $$AnimateCssDriverProvider = ['$$animationProvider', /** @this */ function($$animationProvider) {\n  $$animationProvider.drivers.push('$$animateCssDriver');\n\n  var NG_ANIMATE_SHIM_CLASS_NAME = 'ng-animate-shim';\n  var NG_ANIMATE_ANCHOR_CLASS_NAME = 'ng-anchor';\n\n  var NG_OUT_ANCHOR_CLASS_NAME = 'ng-anchor-out';\n  var NG_IN_ANCHOR_CLASS_NAME = 'ng-anchor-in';\n\n  function isDocumentFragment(node) {\n    return node.parentNode && node.parentNode.nodeType === 11;\n  }\n\n  this.$get = ['$animateCss', '$rootScope', '$$AnimateRunner', '$rootElement', '$sniffer', '$$jqLite', '$document',\n       function($animateCss,   $rootScope,   $$AnimateRunner,   $rootElement,   $sniffer,   $$jqLite,   $document) {\n\n    // only browsers that support these properties can render animations\n    if (!$sniffer.animations && !$sniffer.transitions) return noop;\n\n    var bodyNode = $document[0].body;\n    var rootNode = getDomNode($rootElement);\n\n    var rootBodyElement = jqLite(\n      // this is to avoid using something that exists outside of the body\n      // we also special case the doc fragment case because our unit test code\n      // appends the $rootElement to the body after the app has been bootstrapped\n      isDocumentFragment(rootNode) || bodyNode.contains(rootNode) ? rootNode : bodyNode\n    );\n\n    return function initDriverFn(animationDetails) {\n      return animationDetails.from && animationDetails.to\n          ? prepareFromToAnchorAnimation(animationDetails.from,\n                                         animationDetails.to,\n                                         animationDetails.classes,\n                                         animationDetails.anchors)\n          : prepareRegularAnimation(animationDetails);\n    };\n\n    function filterCssClasses(classes) {\n      //remove all the `ng-` stuff\n      return classes.replace(/\\bng-\\S+\\b/g, '');\n    }\n\n    function getUniqueValues(a, b) {\n      if (isString(a)) a = a.split(' ');\n      if (isString(b)) b = b.split(' ');\n      return a.filter(function(val) {\n        return b.indexOf(val) === -1;\n      }).join(' ');\n    }\n\n    function prepareAnchoredAnimation(classes, outAnchor, inAnchor) {\n      var clone = jqLite(getDomNode(outAnchor).cloneNode(true));\n      var startingClasses = filterCssClasses(getClassVal(clone));\n\n      outAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);\n      inAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);\n\n      clone.addClass(NG_ANIMATE_ANCHOR_CLASS_NAME);\n\n      rootBodyElement.append(clone);\n\n      var animatorIn, animatorOut = prepareOutAnimation();\n\n      // the user may not end up using the `out` animation and\n      // only making use of the `in` animation or vice-versa.\n      // In either case we should allow this and not assume the\n      // animation is over unless both animations are not used.\n      if (!animatorOut) {\n        animatorIn = prepareInAnimation();\n        if (!animatorIn) {\n          return end();\n        }\n      }\n\n      var startingAnimator = animatorOut || animatorIn;\n\n      return {\n        start: function() {\n          var runner;\n\n          var currentAnimation = startingAnimator.start();\n          currentAnimation.done(function() {\n            currentAnimation = null;\n            if (!animatorIn) {\n              animatorIn = prepareInAnimation();\n              if (animatorIn) {\n                currentAnimation = animatorIn.start();\n                currentAnimation.done(function() {\n                  currentAnimation = null;\n                  end();\n                  runner.complete();\n                });\n                return currentAnimation;\n              }\n            }\n            // in the event that there is no `in` animation\n            end();\n            runner.complete();\n          });\n\n          runner = new $$AnimateRunner({\n            end: endFn,\n            cancel: endFn\n          });\n\n          return runner;\n\n          function endFn() {\n            if (currentAnimation) {\n              currentAnimation.end();\n            }\n          }\n        }\n      };\n\n      function calculateAnchorStyles(anchor) {\n        var styles = {};\n\n        var coords = getDomNode(anchor).getBoundingClientRect();\n\n        // we iterate directly since safari messes up and doesn't return\n        // all the keys for the coords object when iterated\n        forEach(['width','height','top','left'], function(key) {\n          var value = coords[key];\n          switch (key) {\n            case 'top':\n              value += bodyNode.scrollTop;\n              break;\n            case 'left':\n              value += bodyNode.scrollLeft;\n              break;\n          }\n          styles[key] = Math.floor(value) + 'px';\n        });\n        return styles;\n      }\n\n      function prepareOutAnimation() {\n        var animator = $animateCss(clone, {\n          addClass: NG_OUT_ANCHOR_CLASS_NAME,\n          delay: true,\n          from: calculateAnchorStyles(outAnchor)\n        });\n\n        // read the comment within `prepareRegularAnimation` to understand\n        // why this check is necessary\n        return animator.$$willAnimate ? animator : null;\n      }\n\n      function getClassVal(element) {\n        return element.attr('class') || '';\n      }\n\n      function prepareInAnimation() {\n        var endingClasses = filterCssClasses(getClassVal(inAnchor));\n        var toAdd = getUniqueValues(endingClasses, startingClasses);\n        var toRemove = getUniqueValues(startingClasses, endingClasses);\n\n        var animator = $animateCss(clone, {\n          to: calculateAnchorStyles(inAnchor),\n          addClass: NG_IN_ANCHOR_CLASS_NAME + ' ' + toAdd,\n          removeClass: NG_OUT_ANCHOR_CLASS_NAME + ' ' + toRemove,\n          delay: true\n        });\n\n        // read the comment within `prepareRegularAnimation` to understand\n        // why this check is necessary\n        return animator.$$willAnimate ? animator : null;\n      }\n\n      function end() {\n        clone.remove();\n        outAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);\n        inAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);\n      }\n    }\n\n    function prepareFromToAnchorAnimation(from, to, classes, anchors) {\n      var fromAnimation = prepareRegularAnimation(from, noop);\n      var toAnimation = prepareRegularAnimation(to, noop);\n\n      var anchorAnimations = [];\n      forEach(anchors, function(anchor) {\n        var outElement = anchor['out'];\n        var inElement = anchor['in'];\n        var animator = prepareAnchoredAnimation(classes, outElement, inElement);\n        if (animator) {\n          anchorAnimations.push(animator);\n        }\n      });\n\n      // no point in doing anything when there are no elements to animate\n      if (!fromAnimation && !toAnimation && anchorAnimations.length === 0) return;\n\n      return {\n        start: function() {\n          var animationRunners = [];\n\n          if (fromAnimation) {\n            animationRunners.push(fromAnimation.start());\n          }\n\n          if (toAnimation) {\n            animationRunners.push(toAnimation.start());\n          }\n\n          forEach(anchorAnimations, function(animation) {\n            animationRunners.push(animation.start());\n          });\n\n          var runner = new $$AnimateRunner({\n            end: endFn,\n            cancel: endFn // CSS-driven animations cannot be cancelled, only ended\n          });\n\n          $$AnimateRunner.all(animationRunners, function(status) {\n            runner.complete(status);\n          });\n\n          return runner;\n\n          function endFn() {\n            forEach(animationRunners, function(runner) {\n              runner.end();\n            });\n          }\n        }\n      };\n    }\n\n    function prepareRegularAnimation(animationDetails) {\n      var element = animationDetails.element;\n      var options = animationDetails.options || {};\n\n      if (animationDetails.structural) {\n        options.event = animationDetails.event;\n        options.structural = true;\n        options.applyClassesEarly = true;\n\n        // we special case the leave animation since we want to ensure that\n        // the element is removed as soon as the animation is over. Otherwise\n        // a flicker might appear or the element may not be removed at all\n        if (animationDetails.event === 'leave') {\n          options.onDone = options.domOperation;\n        }\n      }\n\n      // We assign the preparationClasses as the actual animation event since\n      // the internals of $animateCss will just suffix the event token values\n      // with `-active` to trigger the animation.\n      if (options.preparationClasses) {\n        options.event = concatWithSpace(options.event, options.preparationClasses);\n      }\n\n      var animator = $animateCss(element, options);\n\n      // the driver lookup code inside of $$animation attempts to spawn a\n      // driver one by one until a driver returns a.$$willAnimate animator object.\n      // $animateCss will always return an object, however, it will pass in\n      // a flag as a hint as to whether an animation was detected or not\n      return animator.$$willAnimate ? animator : null;\n    }\n  }];\n}];\n\n// TODO(matsko): use caching here to speed things up for detection\n// TODO(matsko): add documentation\n//  by the time...\n\nvar $$AnimateJsProvider = ['$animateProvider', /** @this */ function($animateProvider) {\n  this.$get = ['$injector', '$$AnimateRunner', '$$jqLite',\n       function($injector,   $$AnimateRunner,   $$jqLite) {\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n         // $animateJs(element, 'enter');\n    return function(element, event, classes, options) {\n      var animationClosed = false;\n\n      // the `classes` argument is optional and if it is not used\n      // then the classes will be resolved from the element's className\n      // property as well as options.addClass/options.removeClass.\n      if (arguments.length === 3 && isObject(classes)) {\n        options = classes;\n        classes = null;\n      }\n\n      options = prepareAnimationOptions(options);\n      if (!classes) {\n        classes = element.attr('class') || '';\n        if (options.addClass) {\n          classes += ' ' + options.addClass;\n        }\n        if (options.removeClass) {\n          classes += ' ' + options.removeClass;\n        }\n      }\n\n      var classesToAdd = options.addClass;\n      var classesToRemove = options.removeClass;\n\n      // the lookupAnimations function returns a series of animation objects that are\n      // matched up with one or more of the CSS classes. These animation objects are\n      // defined via the module.animation factory function. If nothing is detected then\n      // we don't return anything which then makes $animation query the next driver.\n      var animations = lookupAnimations(classes);\n      var before, after;\n      if (animations.length) {\n        var afterFn, beforeFn;\n        if (event === 'leave') {\n          beforeFn = 'leave';\n          afterFn = 'afterLeave'; // TODO(matsko): get rid of this\n        } else {\n          beforeFn = 'before' + event.charAt(0).toUpperCase() + event.substr(1);\n          afterFn = event;\n        }\n\n        if (event !== 'enter' && event !== 'move') {\n          before = packageAnimations(element, event, options, animations, beforeFn);\n        }\n        after  = packageAnimations(element, event, options, animations, afterFn);\n      }\n\n      // no matching animations\n      if (!before && !after) return;\n\n      function applyOptions() {\n        options.domOperation();\n        applyAnimationClasses(element, options);\n      }\n\n      function close() {\n        animationClosed = true;\n        applyOptions();\n        applyAnimationStyles(element, options);\n      }\n\n      var runner;\n\n      return {\n        $$willAnimate: true,\n        end: function() {\n          if (runner) {\n            runner.end();\n          } else {\n            close();\n            runner = new $$AnimateRunner();\n            runner.complete(true);\n          }\n          return runner;\n        },\n        start: function() {\n          if (runner) {\n            return runner;\n          }\n\n          runner = new $$AnimateRunner();\n          var closeActiveAnimations;\n          var chain = [];\n\n          if (before) {\n            chain.push(function(fn) {\n              closeActiveAnimations = before(fn);\n            });\n          }\n\n          if (chain.length) {\n            chain.push(function(fn) {\n              applyOptions();\n              fn(true);\n            });\n          } else {\n            applyOptions();\n          }\n\n          if (after) {\n            chain.push(function(fn) {\n              closeActiveAnimations = after(fn);\n            });\n          }\n\n          runner.setHost({\n            end: function() {\n              endAnimations();\n            },\n            cancel: function() {\n              endAnimations(true);\n            }\n          });\n\n          $$AnimateRunner.chain(chain, onComplete);\n          return runner;\n\n          function onComplete(success) {\n            close(success);\n            runner.complete(success);\n          }\n\n          function endAnimations(cancelled) {\n            if (!animationClosed) {\n              (closeActiveAnimations || noop)(cancelled);\n              onComplete(cancelled);\n            }\n          }\n        }\n      };\n\n      function executeAnimationFn(fn, element, event, options, onDone) {\n        var args;\n        switch (event) {\n          case 'animate':\n            args = [element, options.from, options.to, onDone];\n            break;\n\n          case 'setClass':\n            args = [element, classesToAdd, classesToRemove, onDone];\n            break;\n\n          case 'addClass':\n            args = [element, classesToAdd, onDone];\n            break;\n\n          case 'removeClass':\n            args = [element, classesToRemove, onDone];\n            break;\n\n          default:\n            args = [element, onDone];\n            break;\n        }\n\n        args.push(options);\n\n        var value = fn.apply(fn, args);\n        if (value) {\n          if (isFunction(value.start)) {\n            value = value.start();\n          }\n\n          if (value instanceof $$AnimateRunner) {\n            value.done(onDone);\n          } else if (isFunction(value)) {\n            // optional onEnd / onCancel callback\n            return value;\n          }\n        }\n\n        return noop;\n      }\n\n      function groupEventedAnimations(element, event, options, animations, fnName) {\n        var operations = [];\n        forEach(animations, function(ani) {\n          var animation = ani[fnName];\n          if (!animation) return;\n\n          // note that all of these animations will run in parallel\n          operations.push(function() {\n            var runner;\n            var endProgressCb;\n\n            var resolved = false;\n            var onAnimationComplete = function(rejected) {\n              if (!resolved) {\n                resolved = true;\n                (endProgressCb || noop)(rejected);\n                runner.complete(!rejected);\n              }\n            };\n\n            runner = new $$AnimateRunner({\n              end: function() {\n                onAnimationComplete();\n              },\n              cancel: function() {\n                onAnimationComplete(true);\n              }\n            });\n\n            endProgressCb = executeAnimationFn(animation, element, event, options, function(result) {\n              var cancelled = result === false;\n              onAnimationComplete(cancelled);\n            });\n\n            return runner;\n          });\n        });\n\n        return operations;\n      }\n\n      function packageAnimations(element, event, options, animations, fnName) {\n        var operations = groupEventedAnimations(element, event, options, animations, fnName);\n        if (operations.length === 0) {\n          var a, b;\n          if (fnName === 'beforeSetClass') {\n            a = groupEventedAnimations(element, 'removeClass', options, animations, 'beforeRemoveClass');\n            b = groupEventedAnimations(element, 'addClass', options, animations, 'beforeAddClass');\n          } else if (fnName === 'setClass') {\n            a = groupEventedAnimations(element, 'removeClass', options, animations, 'removeClass');\n            b = groupEventedAnimations(element, 'addClass', options, animations, 'addClass');\n          }\n\n          if (a) {\n            operations = operations.concat(a);\n          }\n          if (b) {\n            operations = operations.concat(b);\n          }\n        }\n\n        if (operations.length === 0) return;\n\n        // TODO(matsko): add documentation\n        return function startAnimation(callback) {\n          var runners = [];\n          if (operations.length) {\n            forEach(operations, function(animateFn) {\n              runners.push(animateFn());\n            });\n          }\n\n          if (runners.length) {\n            $$AnimateRunner.all(runners, callback);\n          }  else {\n            callback();\n          }\n\n          return function endFn(reject) {\n            forEach(runners, function(runner) {\n              if (reject) {\n                runner.cancel();\n              } else {\n                runner.end();\n              }\n            });\n          };\n        };\n      }\n    };\n\n    function lookupAnimations(classes) {\n      classes = isArray(classes) ? classes : classes.split(' ');\n      var matches = [], flagMap = {};\n      for (var i = 0; i < classes.length; i++) {\n        var klass = classes[i],\n            animationFactory = $animateProvider.$$registeredAnimations[klass];\n        if (animationFactory && !flagMap[klass]) {\n          matches.push($injector.get(animationFactory));\n          flagMap[klass] = true;\n        }\n      }\n      return matches;\n    }\n  }];\n}];\n\nvar $$AnimateJsDriverProvider = ['$$animationProvider', /** @this */ function($$animationProvider) {\n  $$animationProvider.drivers.push('$$animateJsDriver');\n  this.$get = ['$$animateJs', '$$AnimateRunner', function($$animateJs, $$AnimateRunner) {\n    return function initDriverFn(animationDetails) {\n      if (animationDetails.from && animationDetails.to) {\n        var fromAnimation = prepareAnimation(animationDetails.from);\n        var toAnimation = prepareAnimation(animationDetails.to);\n        if (!fromAnimation && !toAnimation) return;\n\n        return {\n          start: function() {\n            var animationRunners = [];\n\n            if (fromAnimation) {\n              animationRunners.push(fromAnimation.start());\n            }\n\n            if (toAnimation) {\n              animationRunners.push(toAnimation.start());\n            }\n\n            $$AnimateRunner.all(animationRunners, done);\n\n            var runner = new $$AnimateRunner({\n              end: endFnFactory(),\n              cancel: endFnFactory()\n            });\n\n            return runner;\n\n            function endFnFactory() {\n              return function() {\n                forEach(animationRunners, function(runner) {\n                  // at this point we cannot cancel animations for groups just yet. 1.5+\n                  runner.end();\n                });\n              };\n            }\n\n            function done(status) {\n              runner.complete(status);\n            }\n          }\n        };\n      } else {\n        return prepareAnimation(animationDetails);\n      }\n    };\n\n    function prepareAnimation(animationDetails) {\n      // TODO(matsko): make sure to check for grouped animations and delegate down to normal animations\n      var element = animationDetails.element;\n      var event = animationDetails.event;\n      var options = animationDetails.options;\n      var classes = animationDetails.classes;\n      return $$animateJs(element, event, classes, options);\n    }\n  }];\n}];\n\nvar NG_ANIMATE_ATTR_NAME = 'data-ng-animate';\nvar NG_ANIMATE_PIN_DATA = '$ngAnimatePin';\nvar $$AnimateQueueProvider = ['$animateProvider', /** @this */ function($animateProvider) {\n  var PRE_DIGEST_STATE = 1;\n  var RUNNING_STATE = 2;\n  var ONE_SPACE = ' ';\n\n  var rules = this.rules = {\n    skip: [],\n    cancel: [],\n    join: []\n  };\n\n  function makeTruthyCssClassMap(classString) {\n    if (!classString) {\n      return null;\n    }\n\n    var keys = classString.split(ONE_SPACE);\n    var map = Object.create(null);\n\n    forEach(keys, function(key) {\n      map[key] = true;\n    });\n    return map;\n  }\n\n  function hasMatchingClasses(newClassString, currentClassString) {\n    if (newClassString && currentClassString) {\n      var currentClassMap = makeTruthyCssClassMap(currentClassString);\n      return newClassString.split(ONE_SPACE).some(function(className) {\n        return currentClassMap[className];\n      });\n    }\n  }\n\n  function isAllowed(ruleType, currentAnimation, previousAnimation) {\n    return rules[ruleType].some(function(fn) {\n      return fn(currentAnimation, previousAnimation);\n    });\n  }\n\n  function hasAnimationClasses(animation, and) {\n    var a = (animation.addClass || '').length > 0;\n    var b = (animation.removeClass || '').length > 0;\n    return and ? a && b : a || b;\n  }\n\n  rules.join.push(function(newAnimation, currentAnimation) {\n    // if the new animation is class-based then we can just tack that on\n    return !newAnimation.structural && hasAnimationClasses(newAnimation);\n  });\n\n  rules.skip.push(function(newAnimation, currentAnimation) {\n    // there is no need to animate anything if no classes are being added and\n    // there is no structural animation that will be triggered\n    return !newAnimation.structural && !hasAnimationClasses(newAnimation);\n  });\n\n  rules.skip.push(function(newAnimation, currentAnimation) {\n    // why should we trigger a new structural animation if the element will\n    // be removed from the DOM anyway?\n    return currentAnimation.event === 'leave' && newAnimation.structural;\n  });\n\n  rules.skip.push(function(newAnimation, currentAnimation) {\n    // if there is an ongoing current animation then don't even bother running the class-based animation\n    return currentAnimation.structural && currentAnimation.state === RUNNING_STATE && !newAnimation.structural;\n  });\n\n  rules.cancel.push(function(newAnimation, currentAnimation) {\n    // there can never be two structural animations running at the same time\n    return currentAnimation.structural && newAnimation.structural;\n  });\n\n  rules.cancel.push(function(newAnimation, currentAnimation) {\n    // if the previous animation is already running, but the new animation will\n    // be triggered, but the new animation is structural\n    return currentAnimation.state === RUNNING_STATE && newAnimation.structural;\n  });\n\n  rules.cancel.push(function(newAnimation, currentAnimation) {\n    // cancel the animation if classes added / removed in both animation cancel each other out,\n    // but only if the current animation isn't structural\n\n    if (currentAnimation.structural) return false;\n\n    var nA = newAnimation.addClass;\n    var nR = newAnimation.removeClass;\n    var cA = currentAnimation.addClass;\n    var cR = currentAnimation.removeClass;\n\n    // early detection to save the global CPU shortage :)\n    if ((isUndefined(nA) && isUndefined(nR)) || (isUndefined(cA) && isUndefined(cR))) {\n      return false;\n    }\n\n    return hasMatchingClasses(nA, cR) || hasMatchingClasses(nR, cA);\n  });\n\n  this.$get = ['$$rAF', '$rootScope', '$rootElement', '$document', '$$Map',\n               '$$animation', '$$AnimateRunner', '$templateRequest', '$$jqLite', '$$forceReflow',\n               '$$isDocumentHidden',\n       function($$rAF,   $rootScope,   $rootElement,   $document,   $$Map,\n                $$animation,   $$AnimateRunner,   $templateRequest,   $$jqLite,   $$forceReflow,\n                $$isDocumentHidden) {\n\n    var activeAnimationsLookup = new $$Map();\n    var disabledElementsLookup = new $$Map();\n    var animationsEnabled = null;\n\n    function postDigestTaskFactory() {\n      var postDigestCalled = false;\n      return function(fn) {\n        // we only issue a call to postDigest before\n        // it has first passed. This prevents any callbacks\n        // from not firing once the animation has completed\n        // since it will be out of the digest cycle.\n        if (postDigestCalled) {\n          fn();\n        } else {\n          $rootScope.$$postDigest(function() {\n            postDigestCalled = true;\n            fn();\n          });\n        }\n      };\n    }\n\n    // Wait until all directive and route-related templates are downloaded and\n    // compiled. The $templateRequest.totalPendingRequests variable keeps track of\n    // all of the remote templates being currently downloaded. If there are no\n    // templates currently downloading then the watcher will still fire anyway.\n    var deregisterWatch = $rootScope.$watch(\n      function() { return $templateRequest.totalPendingRequests === 0; },\n      function(isEmpty) {\n        if (!isEmpty) return;\n        deregisterWatch();\n\n        // Now that all templates have been downloaded, $animate will wait until\n        // the post digest queue is empty before enabling animations. By having two\n        // calls to $postDigest calls we can ensure that the flag is enabled at the\n        // very end of the post digest queue. Since all of the animations in $animate\n        // use $postDigest, it's important that the code below executes at the end.\n        // This basically means that the page is fully downloaded and compiled before\n        // any animations are triggered.\n        $rootScope.$$postDigest(function() {\n          $rootScope.$$postDigest(function() {\n            // we check for null directly in the event that the application already called\n            // .enabled() with whatever arguments that it provided it with\n            if (animationsEnabled === null) {\n              animationsEnabled = true;\n            }\n          });\n        });\n      }\n    );\n\n    var callbackRegistry = Object.create(null);\n\n    // remember that the `customFilter`/`classNameFilter` are set during the\n    // provider/config stage therefore we can optimize here and setup helper functions\n    var customFilter = $animateProvider.customFilter();\n    var classNameFilter = $animateProvider.classNameFilter();\n    var returnTrue = function() { return true; };\n\n    var isAnimatableByFilter = customFilter || returnTrue;\n    var isAnimatableClassName = !classNameFilter ? returnTrue : function(node, options) {\n      var className = [node.getAttribute('class'), options.addClass, options.removeClass].join(' ');\n      return classNameFilter.test(className);\n    };\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    function normalizeAnimationDetails(element, animation) {\n      return mergeAnimationDetails(element, animation, {});\n    }\n\n    // IE9-11 has no method \"contains\" in SVG element and in Node.prototype. Bug #10259.\n    var contains = window.Node.prototype.contains || /** @this */ function(arg) {\n      // eslint-disable-next-line no-bitwise\n      return this === arg || !!(this.compareDocumentPosition(arg) & 16);\n    };\n\n    function findCallbacks(targetParentNode, targetNode, event) {\n      var matches = [];\n      var entries = callbackRegistry[event];\n      if (entries) {\n        forEach(entries, function(entry) {\n          if (contains.call(entry.node, targetNode)) {\n            matches.push(entry.callback);\n          } else if (event === 'leave' && contains.call(entry.node, targetParentNode)) {\n            matches.push(entry.callback);\n          }\n        });\n      }\n\n      return matches;\n    }\n\n    function filterFromRegistry(list, matchContainer, matchCallback) {\n      var containerNode = extractElementNode(matchContainer);\n      return list.filter(function(entry) {\n        var isMatch = entry.node === containerNode &&\n                        (!matchCallback || entry.callback === matchCallback);\n        return !isMatch;\n      });\n    }\n\n    function cleanupEventListeners(phase, node) {\n      if (phase === 'close' && !node.parentNode) {\n        // If the element is not attached to a parentNode, it has been removed by\n        // the domOperation, and we can safely remove the event callbacks\n        $animate.off(node);\n      }\n    }\n\n    var $animate = {\n      on: function(event, container, callback) {\n        var node = extractElementNode(container);\n        callbackRegistry[event] = callbackRegistry[event] || [];\n        callbackRegistry[event].push({\n          node: node,\n          callback: callback\n        });\n\n        // Remove the callback when the element is removed from the DOM\n        jqLite(container).on('$destroy', function() {\n          var animationDetails = activeAnimationsLookup.get(node);\n\n          if (!animationDetails) {\n            // If there's an animation ongoing, the callback calling code will remove\n            // the event listeners. If we'd remove here, the callbacks would be removed\n            // before the animation ends\n            $animate.off(event, container, callback);\n          }\n        });\n      },\n\n      off: function(event, container, callback) {\n        if (arguments.length === 1 && !isString(arguments[0])) {\n          container = arguments[0];\n          for (var eventType in callbackRegistry) {\n            callbackRegistry[eventType] = filterFromRegistry(callbackRegistry[eventType], container);\n          }\n\n          return;\n        }\n\n        var entries = callbackRegistry[event];\n        if (!entries) return;\n\n        callbackRegistry[event] = arguments.length === 1\n            ? null\n            : filterFromRegistry(entries, container, callback);\n      },\n\n      pin: function(element, parentElement) {\n        assertArg(isElement(element), 'element', 'not an element');\n        assertArg(isElement(parentElement), 'parentElement', 'not an element');\n        element.data(NG_ANIMATE_PIN_DATA, parentElement);\n      },\n\n      push: function(element, event, options, domOperation) {\n        options = options || {};\n        options.domOperation = domOperation;\n        return queueAnimation(element, event, options);\n      },\n\n      // this method has four signatures:\n      //  () - global getter\n      //  (bool) - global setter\n      //  (element) - element getter\n      //  (element, bool) - element setter<F37>\n      enabled: function(element, bool) {\n        var argCount = arguments.length;\n\n        if (argCount === 0) {\n          // () - Global getter\n          bool = !!animationsEnabled;\n        } else {\n          var hasElement = isElement(element);\n\n          if (!hasElement) {\n            // (bool) - Global setter\n            bool = animationsEnabled = !!element;\n          } else {\n            var node = getDomNode(element);\n\n            if (argCount === 1) {\n              // (element) - Element getter\n              bool = !disabledElementsLookup.get(node);\n            } else {\n              // (element, bool) - Element setter\n              disabledElementsLookup.set(node, !bool);\n            }\n          }\n        }\n\n        return bool;\n      }\n    };\n\n    return $animate;\n\n    function queueAnimation(originalElement, event, initialOptions) {\n      // we always make a copy of the options since\n      // there should never be any side effects on\n      // the input data when running `$animateCss`.\n      var options = copy(initialOptions);\n\n      var element = stripCommentsFromElement(originalElement);\n      var node = getDomNode(element);\n      var parentNode = node && node.parentNode;\n\n      options = prepareAnimationOptions(options);\n\n      // we create a fake runner with a working promise.\n      // These methods will become available after the digest has passed\n      var runner = new $$AnimateRunner();\n\n      // this is used to trigger callbacks in postDigest mode\n      var runInNextPostDigestOrNow = postDigestTaskFactory();\n\n      if (isArray(options.addClass)) {\n        options.addClass = options.addClass.join(' ');\n      }\n\n      if (options.addClass && !isString(options.addClass)) {\n        options.addClass = null;\n      }\n\n      if (isArray(options.removeClass)) {\n        options.removeClass = options.removeClass.join(' ');\n      }\n\n      if (options.removeClass && !isString(options.removeClass)) {\n        options.removeClass = null;\n      }\n\n      if (options.from && !isObject(options.from)) {\n        options.from = null;\n      }\n\n      if (options.to && !isObject(options.to)) {\n        options.to = null;\n      }\n\n      // If animations are hard-disabled for the whole application there is no need to continue.\n      // There are also situations where a directive issues an animation for a jqLite wrapper that\n      // contains only comment nodes. In this case, there is no way we can perform an animation.\n      if (!animationsEnabled ||\n          !node ||\n          !isAnimatableByFilter(node, event, initialOptions) ||\n          !isAnimatableClassName(node, options)) {\n        close();\n        return runner;\n      }\n\n      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;\n\n      var documentHidden = $$isDocumentHidden();\n\n      // This is a hard disable of all animations the element itself, therefore  there is no need to\n      // continue further past this point if not enabled\n      // Animations are also disabled if the document is currently hidden (page is not visible\n      // to the user), because browsers slow down or do not flush calls to requestAnimationFrame\n      var skipAnimations = documentHidden || disabledElementsLookup.get(node);\n      var existingAnimation = (!skipAnimations && activeAnimationsLookup.get(node)) || {};\n      var hasExistingAnimation = !!existingAnimation.state;\n\n      // there is no point in traversing the same collection of parent ancestors if a followup\n      // animation will be run on the same element that already did all that checking work\n      if (!skipAnimations && (!hasExistingAnimation || existingAnimation.state !== PRE_DIGEST_STATE)) {\n        skipAnimations = !areAnimationsAllowed(node, parentNode, event);\n      }\n\n      if (skipAnimations) {\n        // Callbacks should fire even if the document is hidden (regression fix for issue #14120)\n        if (documentHidden) notifyProgress(runner, event, 'start');\n        close();\n        if (documentHidden) notifyProgress(runner, event, 'close');\n        return runner;\n      }\n\n      if (isStructural) {\n        closeChildAnimations(node);\n      }\n\n      var newAnimation = {\n        structural: isStructural,\n        element: element,\n        event: event,\n        addClass: options.addClass,\n        removeClass: options.removeClass,\n        close: close,\n        options: options,\n        runner: runner\n      };\n\n      if (hasExistingAnimation) {\n        var skipAnimationFlag = isAllowed('skip', newAnimation, existingAnimation);\n        if (skipAnimationFlag) {\n          if (existingAnimation.state === RUNNING_STATE) {\n            close();\n            return runner;\n          } else {\n            mergeAnimationDetails(element, existingAnimation, newAnimation);\n            return existingAnimation.runner;\n          }\n        }\n        var cancelAnimationFlag = isAllowed('cancel', newAnimation, existingAnimation);\n        if (cancelAnimationFlag) {\n          if (existingAnimation.state === RUNNING_STATE) {\n            // this will end the animation right away and it is safe\n            // to do so since the animation is already running and the\n            // runner callback code will run in async\n            existingAnimation.runner.end();\n          } else if (existingAnimation.structural) {\n            // this means that the animation is queued into a digest, but\n            // hasn't started yet. Therefore it is safe to run the close\n            // method which will call the runner methods in async.\n            existingAnimation.close();\n          } else {\n            // this will merge the new animation options into existing animation options\n            mergeAnimationDetails(element, existingAnimation, newAnimation);\n\n            return existingAnimation.runner;\n          }\n        } else {\n          // a joined animation means that this animation will take over the existing one\n          // so an example would involve a leave animation taking over an enter. Then when\n          // the postDigest kicks in the enter will be ignored.\n          var joinAnimationFlag = isAllowed('join', newAnimation, existingAnimation);\n          if (joinAnimationFlag) {\n            if (existingAnimation.state === RUNNING_STATE) {\n              normalizeAnimationDetails(element, newAnimation);\n            } else {\n              applyGeneratedPreparationClasses(element, isStructural ? event : null, options);\n\n              event = newAnimation.event = existingAnimation.event;\n              options = mergeAnimationDetails(element, existingAnimation, newAnimation);\n\n              //we return the same runner since only the option values of this animation will\n              //be fed into the `existingAnimation`.\n              return existingAnimation.runner;\n            }\n          }\n        }\n      } else {\n        // normalization in this case means that it removes redundant CSS classes that\n        // already exist (addClass) or do not exist (removeClass) on the element\n        normalizeAnimationDetails(element, newAnimation);\n      }\n\n      // when the options are merged and cleaned up we may end up not having to do\n      // an animation at all, therefore we should check this before issuing a post\n      // digest callback. Structural animations will always run no matter what.\n      var isValidAnimation = newAnimation.structural;\n      if (!isValidAnimation) {\n        // animate (from/to) can be quickly checked first, otherwise we check if any classes are present\n        isValidAnimation = (newAnimation.event === 'animate' && Object.keys(newAnimation.options.to || {}).length > 0)\n                            || hasAnimationClasses(newAnimation);\n      }\n\n      if (!isValidAnimation) {\n        close();\n        clearElementAnimationState(node);\n        return runner;\n      }\n\n      // the counter keeps track of cancelled animations\n      var counter = (existingAnimation.counter || 0) + 1;\n      newAnimation.counter = counter;\n\n      markElementAnimationState(node, PRE_DIGEST_STATE, newAnimation);\n\n      $rootScope.$$postDigest(function() {\n        // It is possible that the DOM nodes inside `originalElement` have been replaced. This can\n        // happen if the animated element is a transcluded clone and also has a `templateUrl`\n        // directive on it. Therefore, we must recreate `element` in order to interact with the\n        // actual DOM nodes.\n        // Note: We still need to use the old `node` for certain things, such as looking up in\n        //       HashMaps where it was used as the key.\n\n        element = stripCommentsFromElement(originalElement);\n\n        var animationDetails = activeAnimationsLookup.get(node);\n        var animationCancelled = !animationDetails;\n        animationDetails = animationDetails || {};\n\n        // if addClass/removeClass is called before something like enter then the\n        // registered parent element may not be present. The code below will ensure\n        // that a final value for parent element is obtained\n        var parentElement = element.parent() || [];\n\n        // animate/structural/class-based animations all have requirements. Otherwise there\n        // is no point in performing an animation. The parent node must also be set.\n        var isValidAnimation = parentElement.length > 0\n                                && (animationDetails.event === 'animate'\n                                    || animationDetails.structural\n                                    || hasAnimationClasses(animationDetails));\n\n        // this means that the previous animation was cancelled\n        // even if the follow-up animation is the same event\n        if (animationCancelled || animationDetails.counter !== counter || !isValidAnimation) {\n          // if another animation did not take over then we need\n          // to make sure that the domOperation and options are\n          // handled accordingly\n          if (animationCancelled) {\n            applyAnimationClasses(element, options);\n            applyAnimationStyles(element, options);\n          }\n\n          // if the event changed from something like enter to leave then we do\n          // it, otherwise if it's the same then the end result will be the same too\n          if (animationCancelled || (isStructural && animationDetails.event !== event)) {\n            options.domOperation();\n            runner.end();\n          }\n\n          // in the event that the element animation was not cancelled or a follow-up animation\n          // isn't allowed to animate from here then we need to clear the state of the element\n          // so that any future animations won't read the expired animation data.\n          if (!isValidAnimation) {\n            clearElementAnimationState(node);\n          }\n\n          return;\n        }\n\n        // this combined multiple class to addClass / removeClass into a setClass event\n        // so long as a structural event did not take over the animation\n        event = !animationDetails.structural && hasAnimationClasses(animationDetails, true)\n            ? 'setClass'\n            : animationDetails.event;\n\n        markElementAnimationState(node, RUNNING_STATE);\n        var realRunner = $$animation(element, event, animationDetails.options);\n\n        // this will update the runner's flow-control events based on\n        // the `realRunner` object.\n        runner.setHost(realRunner);\n        notifyProgress(runner, event, 'start', {});\n\n        realRunner.done(function(status) {\n          close(!status);\n          var animationDetails = activeAnimationsLookup.get(node);\n          if (animationDetails && animationDetails.counter === counter) {\n            clearElementAnimationState(node);\n          }\n          notifyProgress(runner, event, 'close', {});\n        });\n      });\n\n      return runner;\n\n      function notifyProgress(runner, event, phase, data) {\n        runInNextPostDigestOrNow(function() {\n          var callbacks = findCallbacks(parentNode, node, event);\n          if (callbacks.length) {\n            // do not optimize this call here to RAF because\n            // we don't know how heavy the callback code here will\n            // be and if this code is buffered then this can\n            // lead to a performance regression.\n            $$rAF(function() {\n              forEach(callbacks, function(callback) {\n                callback(element, phase, data);\n              });\n              cleanupEventListeners(phase, node);\n            });\n          } else {\n            cleanupEventListeners(phase, node);\n          }\n        });\n        runner.progress(event, phase, data);\n      }\n\n      function close(reject) {\n        clearGeneratedClasses(element, options);\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n        options.domOperation();\n        runner.complete(!reject);\n      }\n    }\n\n    function closeChildAnimations(node) {\n      var children = node.querySelectorAll('[' + NG_ANIMATE_ATTR_NAME + ']');\n      forEach(children, function(child) {\n        var state = parseInt(child.getAttribute(NG_ANIMATE_ATTR_NAME), 10);\n        var animationDetails = activeAnimationsLookup.get(child);\n        if (animationDetails) {\n          switch (state) {\n            case RUNNING_STATE:\n              animationDetails.runner.end();\n              /* falls through */\n            case PRE_DIGEST_STATE:\n              activeAnimationsLookup.delete(child);\n              break;\n          }\n        }\n      });\n    }\n\n    function clearElementAnimationState(node) {\n      node.removeAttribute(NG_ANIMATE_ATTR_NAME);\n      activeAnimationsLookup.delete(node);\n    }\n\n    /**\n     * This fn returns false if any of the following is true:\n     * a) animations on any parent element are disabled, and animations on the element aren't explicitly allowed\n     * b) a parent element has an ongoing structural animation, and animateChildren is false\n     * c) the element is not a child of the body\n     * d) the element is not a child of the $rootElement\n     */\n    function areAnimationsAllowed(node, parentNode, event) {\n      var bodyNode = $document[0].body;\n      var rootNode = getDomNode($rootElement);\n\n      var bodyNodeDetected = (node === bodyNode) || node.nodeName === 'HTML';\n      var rootNodeDetected = (node === rootNode);\n      var parentAnimationDetected = false;\n      var elementDisabled = disabledElementsLookup.get(node);\n      var animateChildren;\n\n      var parentHost = jqLite.data(node, NG_ANIMATE_PIN_DATA);\n      if (parentHost) {\n        parentNode = getDomNode(parentHost);\n      }\n\n      while (parentNode) {\n        if (!rootNodeDetected) {\n          // angular doesn't want to attempt to animate elements outside of the application\n          // therefore we need to ensure that the rootElement is an ancestor of the current element\n          rootNodeDetected = (parentNode === rootNode);\n        }\n\n        if (parentNode.nodeType !== ELEMENT_NODE) {\n          // no point in inspecting the #document element\n          break;\n        }\n\n        var details = activeAnimationsLookup.get(parentNode) || {};\n        // either an enter, leave or move animation will commence\n        // therefore we can't allow any animations to take place\n        // but if a parent animation is class-based then that's ok\n        if (!parentAnimationDetected) {\n          var parentNodeDisabled = disabledElementsLookup.get(parentNode);\n\n          if (parentNodeDisabled === true && elementDisabled !== false) {\n            // disable animations if the user hasn't explicitly enabled animations on the\n            // current element\n            elementDisabled = true;\n            // element is disabled via parent element, no need to check anything else\n            break;\n          } else if (parentNodeDisabled === false) {\n            elementDisabled = false;\n          }\n          parentAnimationDetected = details.structural;\n        }\n\n        if (isUndefined(animateChildren) || animateChildren === true) {\n          var value = jqLite.data(parentNode, NG_ANIMATE_CHILDREN_DATA);\n          if (isDefined(value)) {\n            animateChildren = value;\n          }\n        }\n\n        // there is no need to continue traversing at this point\n        if (parentAnimationDetected && animateChildren === false) break;\n\n        if (!bodyNodeDetected) {\n          // we also need to ensure that the element is or will be a part of the body element\n          // otherwise it is pointless to even issue an animation to be rendered\n          bodyNodeDetected = (parentNode === bodyNode);\n        }\n\n        if (bodyNodeDetected && rootNodeDetected) {\n          // If both body and root have been found, any other checks are pointless,\n          // as no animation data should live outside the application\n          break;\n        }\n\n        if (!rootNodeDetected) {\n          // If `rootNode` is not detected, check if `parentNode` is pinned to another element\n          parentHost = jqLite.data(parentNode, NG_ANIMATE_PIN_DATA);\n          if (parentHost) {\n            // The pin target element becomes the next parent element\n            parentNode = getDomNode(parentHost);\n            continue;\n          }\n        }\n\n        parentNode = parentNode.parentNode;\n      }\n\n      var allowAnimation = (!parentAnimationDetected || animateChildren) && elementDisabled !== true;\n      return allowAnimation && rootNodeDetected && bodyNodeDetected;\n    }\n\n    function markElementAnimationState(node, state, details) {\n      details = details || {};\n      details.state = state;\n\n      node.setAttribute(NG_ANIMATE_ATTR_NAME, state);\n\n      var oldValue = activeAnimationsLookup.get(node);\n      var newValue = oldValue\n          ? extend(oldValue, details)\n          : details;\n      activeAnimationsLookup.set(node, newValue);\n    }\n  }];\n}];\n\n/* exported $$AnimationProvider */\n\nvar $$AnimationProvider = ['$animateProvider', /** @this */ function($animateProvider) {\n  var NG_ANIMATE_REF_ATTR = 'ng-animate-ref';\n\n  var drivers = this.drivers = [];\n\n  var RUNNER_STORAGE_KEY = '$$animationRunner';\n\n  function setRunner(element, runner) {\n    element.data(RUNNER_STORAGE_KEY, runner);\n  }\n\n  function removeRunner(element) {\n    element.removeData(RUNNER_STORAGE_KEY);\n  }\n\n  function getRunner(element) {\n    return element.data(RUNNER_STORAGE_KEY);\n  }\n\n  this.$get = ['$$jqLite', '$rootScope', '$injector', '$$AnimateRunner', '$$Map', '$$rAFScheduler',\n       function($$jqLite,   $rootScope,   $injector,   $$AnimateRunner,   $$Map,   $$rAFScheduler) {\n\n    var animationQueue = [];\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    function sortAnimations(animations) {\n      var tree = { children: [] };\n      var i, lookup = new $$Map();\n\n      // this is done first beforehand so that the map\n      // is filled with a list of the elements that will be animated\n      for (i = 0; i < animations.length; i++) {\n        var animation = animations[i];\n        lookup.set(animation.domNode, animations[i] = {\n          domNode: animation.domNode,\n          fn: animation.fn,\n          children: []\n        });\n      }\n\n      for (i = 0; i < animations.length; i++) {\n        processNode(animations[i]);\n      }\n\n      return flatten(tree);\n\n      function processNode(entry) {\n        if (entry.processed) return entry;\n        entry.processed = true;\n\n        var elementNode = entry.domNode;\n        var parentNode = elementNode.parentNode;\n        lookup.set(elementNode, entry);\n\n        var parentEntry;\n        while (parentNode) {\n          parentEntry = lookup.get(parentNode);\n          if (parentEntry) {\n            if (!parentEntry.processed) {\n              parentEntry = processNode(parentEntry);\n            }\n            break;\n          }\n          parentNode = parentNode.parentNode;\n        }\n\n        (parentEntry || tree).children.push(entry);\n        return entry;\n      }\n\n      function flatten(tree) {\n        var result = [];\n        var queue = [];\n        var i;\n\n        for (i = 0; i < tree.children.length; i++) {\n          queue.push(tree.children[i]);\n        }\n\n        var remainingLevelEntries = queue.length;\n        var nextLevelEntries = 0;\n        var row = [];\n\n        for (i = 0; i < queue.length; i++) {\n          var entry = queue[i];\n          if (remainingLevelEntries <= 0) {\n            remainingLevelEntries = nextLevelEntries;\n            nextLevelEntries = 0;\n            result.push(row);\n            row = [];\n          }\n          row.push(entry.fn);\n          entry.children.forEach(function(childEntry) {\n            nextLevelEntries++;\n            queue.push(childEntry);\n          });\n          remainingLevelEntries--;\n        }\n\n        if (row.length) {\n          result.push(row);\n        }\n\n        return result;\n      }\n    }\n\n    // TODO(matsko): document the signature in a better way\n    return function(element, event, options) {\n      options = prepareAnimationOptions(options);\n      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;\n\n      // there is no animation at the current moment, however\n      // these runner methods will get later updated with the\n      // methods leading into the driver's end/cancel methods\n      // for now they just stop the animation from starting\n      var runner = new $$AnimateRunner({\n        end: function() { close(); },\n        cancel: function() { close(true); }\n      });\n\n      if (!drivers.length) {\n        close();\n        return runner;\n      }\n\n      setRunner(element, runner);\n\n      var classes = mergeClasses(element.attr('class'), mergeClasses(options.addClass, options.removeClass));\n      var tempClasses = options.tempClasses;\n      if (tempClasses) {\n        classes += ' ' + tempClasses;\n        options.tempClasses = null;\n      }\n\n      var prepareClassName;\n      if (isStructural) {\n        prepareClassName = 'ng-' + event + PREPARE_CLASS_SUFFIX;\n        $$jqLite.addClass(element, prepareClassName);\n      }\n\n      animationQueue.push({\n        // this data is used by the postDigest code and passed into\n        // the driver step function\n        element: element,\n        classes: classes,\n        event: event,\n        structural: isStructural,\n        options: options,\n        beforeStart: beforeStart,\n        close: close\n      });\n\n      element.on('$destroy', handleDestroyedElement);\n\n      // we only want there to be one function called within the post digest\n      // block. This way we can group animations for all the animations that\n      // were apart of the same postDigest flush call.\n      if (animationQueue.length > 1) return runner;\n\n      $rootScope.$$postDigest(function() {\n        var animations = [];\n        forEach(animationQueue, function(entry) {\n          // the element was destroyed early on which removed the runner\n          // form its storage. This means we can't animate this element\n          // at all and it already has been closed due to destruction.\n          if (getRunner(entry.element)) {\n            animations.push(entry);\n          } else {\n            entry.close();\n          }\n        });\n\n        // now any future animations will be in another postDigest\n        animationQueue.length = 0;\n\n        var groupedAnimations = groupAnimations(animations);\n        var toBeSortedAnimations = [];\n\n        forEach(groupedAnimations, function(animationEntry) {\n          toBeSortedAnimations.push({\n            domNode: getDomNode(animationEntry.from ? animationEntry.from.element : animationEntry.element),\n            fn: function triggerAnimationStart() {\n              // it's important that we apply the `ng-animate` CSS class and the\n              // temporary classes before we do any driver invoking since these\n              // CSS classes may be required for proper CSS detection.\n              animationEntry.beforeStart();\n\n              var startAnimationFn, closeFn = animationEntry.close;\n\n              // in the event that the element was removed before the digest runs or\n              // during the RAF sequencing then we should not trigger the animation.\n              var targetElement = animationEntry.anchors\n                  ? (animationEntry.from.element || animationEntry.to.element)\n                  : animationEntry.element;\n\n              if (getRunner(targetElement)) {\n                var operation = invokeFirstDriver(animationEntry);\n                if (operation) {\n                  startAnimationFn = operation.start;\n                }\n              }\n\n              if (!startAnimationFn) {\n                closeFn();\n              } else {\n                var animationRunner = startAnimationFn();\n                animationRunner.done(function(status) {\n                  closeFn(!status);\n                });\n                updateAnimationRunners(animationEntry, animationRunner);\n              }\n            }\n          });\n        });\n\n        // we need to sort each of the animations in order of parent to child\n        // relationships. This ensures that the child classes are applied at the\n        // right time.\n        $$rAFScheduler(sortAnimations(toBeSortedAnimations));\n      });\n\n      return runner;\n\n      // TODO(matsko): change to reference nodes\n      function getAnchorNodes(node) {\n        var SELECTOR = '[' + NG_ANIMATE_REF_ATTR + ']';\n        var items = node.hasAttribute(NG_ANIMATE_REF_ATTR)\n              ? [node]\n              : node.querySelectorAll(SELECTOR);\n        var anchors = [];\n        forEach(items, function(node) {\n          var attr = node.getAttribute(NG_ANIMATE_REF_ATTR);\n          if (attr && attr.length) {\n            anchors.push(node);\n          }\n        });\n        return anchors;\n      }\n\n      function groupAnimations(animations) {\n        var preparedAnimations = [];\n        var refLookup = {};\n        forEach(animations, function(animation, index) {\n          var element = animation.element;\n          var node = getDomNode(element);\n          var event = animation.event;\n          var enterOrMove = ['enter', 'move'].indexOf(event) >= 0;\n          var anchorNodes = animation.structural ? getAnchorNodes(node) : [];\n\n          if (anchorNodes.length) {\n            var direction = enterOrMove ? 'to' : 'from';\n\n            forEach(anchorNodes, function(anchor) {\n              var key = anchor.getAttribute(NG_ANIMATE_REF_ATTR);\n              refLookup[key] = refLookup[key] || {};\n              refLookup[key][direction] = {\n                animationID: index,\n                element: jqLite(anchor)\n              };\n            });\n          } else {\n            preparedAnimations.push(animation);\n          }\n        });\n\n        var usedIndicesLookup = {};\n        var anchorGroups = {};\n        forEach(refLookup, function(operations, key) {\n          var from = operations.from;\n          var to = operations.to;\n\n          if (!from || !to) {\n            // only one of these is set therefore we can't have an\n            // anchor animation since all three pieces are required\n            var index = from ? from.animationID : to.animationID;\n            var indexKey = index.toString();\n            if (!usedIndicesLookup[indexKey]) {\n              usedIndicesLookup[indexKey] = true;\n              preparedAnimations.push(animations[index]);\n            }\n            return;\n          }\n\n          var fromAnimation = animations[from.animationID];\n          var toAnimation = animations[to.animationID];\n          var lookupKey = from.animationID.toString();\n          if (!anchorGroups[lookupKey]) {\n            var group = anchorGroups[lookupKey] = {\n              structural: true,\n              beforeStart: function() {\n                fromAnimation.beforeStart();\n                toAnimation.beforeStart();\n              },\n              close: function() {\n                fromAnimation.close();\n                toAnimation.close();\n              },\n              classes: cssClassesIntersection(fromAnimation.classes, toAnimation.classes),\n              from: fromAnimation,\n              to: toAnimation,\n              anchors: [] // TODO(matsko): change to reference nodes\n            };\n\n            // the anchor animations require that the from and to elements both have at least\n            // one shared CSS class which effectively marries the two elements together to use\n            // the same animation driver and to properly sequence the anchor animation.\n            if (group.classes.length) {\n              preparedAnimations.push(group);\n            } else {\n              preparedAnimations.push(fromAnimation);\n              preparedAnimations.push(toAnimation);\n            }\n          }\n\n          anchorGroups[lookupKey].anchors.push({\n            'out': from.element, 'in': to.element\n          });\n        });\n\n        return preparedAnimations;\n      }\n\n      function cssClassesIntersection(a,b) {\n        a = a.split(' ');\n        b = b.split(' ');\n        var matches = [];\n\n        for (var i = 0; i < a.length; i++) {\n          var aa = a[i];\n          if (aa.substring(0,3) === 'ng-') continue;\n\n          for (var j = 0; j < b.length; j++) {\n            if (aa === b[j]) {\n              matches.push(aa);\n              break;\n            }\n          }\n        }\n\n        return matches.join(' ');\n      }\n\n      function invokeFirstDriver(animationDetails) {\n        // we loop in reverse order since the more general drivers (like CSS and JS)\n        // may attempt more elements, but custom drivers are more particular\n        for (var i = drivers.length - 1; i >= 0; i--) {\n          var driverName = drivers[i];\n          var factory = $injector.get(driverName);\n          var driver = factory(animationDetails);\n          if (driver) {\n            return driver;\n          }\n        }\n      }\n\n      function beforeStart() {\n        element.addClass(NG_ANIMATE_CLASSNAME);\n        if (tempClasses) {\n          $$jqLite.addClass(element, tempClasses);\n        }\n        if (prepareClassName) {\n          $$jqLite.removeClass(element, prepareClassName);\n          prepareClassName = null;\n        }\n      }\n\n      function updateAnimationRunners(animation, newRunner) {\n        if (animation.from && animation.to) {\n          update(animation.from.element);\n          update(animation.to.element);\n        } else {\n          update(animation.element);\n        }\n\n        function update(element) {\n          var runner = getRunner(element);\n          if (runner) runner.setHost(newRunner);\n        }\n      }\n\n      function handleDestroyedElement() {\n        var runner = getRunner(element);\n        if (runner && (event !== 'leave' || !options.$$domOperationFired)) {\n          runner.end();\n        }\n      }\n\n      function close(rejected) {\n        element.off('$destroy', handleDestroyedElement);\n        removeRunner(element);\n\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n        options.domOperation();\n\n        if (tempClasses) {\n          $$jqLite.removeClass(element, tempClasses);\n        }\n\n        element.removeClass(NG_ANIMATE_CLASSNAME);\n        runner.complete(!rejected);\n      }\n    };\n  }];\n}];\n\n/**\n * @ngdoc directive\n * @name ngAnimateSwap\n * @restrict A\n * @scope\n *\n * @description\n *\n * ngAnimateSwap is a animation-oriented directive that allows for the container to\n * be removed and entered in whenever the associated expression changes. A\n * common usecase for this directive is a rotating banner or slider component which\n * contains one image being present at a time. When the active image changes\n * then the old image will perform a `leave` animation and the new element\n * will be inserted via an `enter` animation.\n *\n * @animations\n * | Animation                        | Occurs                               |\n * |----------------------------------|--------------------------------------|\n * | {@link ng.$animate#enter enter}  | when the new element is inserted to the DOM  |\n * | {@link ng.$animate#leave leave}  | when the old element is removed from the DOM |\n *\n * @example\n * <example name=\"ngAnimateSwap-directive\" module=\"ngAnimateSwapExample\"\n *          deps=\"angular-animate.js\"\n *          animations=\"true\" fixBase=\"true\">\n *   <file name=\"index.html\">\n *     <div class=\"container\" ng-controller=\"AppCtrl\">\n *       <div ng-animate-swap=\"number\" class=\"cell swap-animation\" ng-class=\"colorClass(number)\">\n *         {{ number }}\n *       </div>\n *     </div>\n *   </file>\n *   <file name=\"script.js\">\n *     angular.module('ngAnimateSwapExample', ['ngAnimate'])\n *       .controller('AppCtrl', ['$scope', '$interval', function($scope, $interval) {\n *         $scope.number = 0;\n *         $interval(function() {\n *           $scope.number++;\n *         }, 1000);\n *\n *         var colors = ['red','blue','green','yellow','orange'];\n *         $scope.colorClass = function(number) {\n *           return colors[number % colors.length];\n *         };\n *       }]);\n *   </file>\n *  <file name=\"animations.css\">\n *  .container {\n *    height:250px;\n *    width:250px;\n *    position:relative;\n *    overflow:hidden;\n *    border:2px solid black;\n *  }\n *  .container .cell {\n *    font-size:150px;\n *    text-align:center;\n *    line-height:250px;\n *    position:absolute;\n *    top:0;\n *    left:0;\n *    right:0;\n *    border-bottom:2px solid black;\n *  }\n *  .swap-animation.ng-enter, .swap-animation.ng-leave {\n *    transition:0.5s linear all;\n *  }\n *  .swap-animation.ng-enter {\n *    top:-250px;\n *  }\n *  .swap-animation.ng-enter-active {\n *    top:0px;\n *  }\n *  .swap-animation.ng-leave {\n *    top:0px;\n *  }\n *  .swap-animation.ng-leave-active {\n *    top:250px;\n *  }\n *  .red { background:red; }\n *  .green { background:green; }\n *  .blue { background:blue; }\n *  .yellow { background:yellow; }\n *  .orange { background:orange; }\n *  </file>\n * </example>\n */\nvar ngAnimateSwapDirective = ['$animate', '$rootScope', function($animate, $rootScope) {\n  return {\n    restrict: 'A',\n    transclude: 'element',\n    terminal: true,\n    priority: 600, // we use 600 here to ensure that the directive is caught before others\n    link: function(scope, $element, attrs, ctrl, $transclude) {\n      var previousElement, previousScope;\n      scope.$watchCollection(attrs.ngAnimateSwap || attrs['for'], function(value) {\n        if (previousElement) {\n          $animate.leave(previousElement);\n        }\n        if (previousScope) {\n          previousScope.$destroy();\n          previousScope = null;\n        }\n        if (value || value === 0) {\n          previousScope = scope.$new();\n          $transclude(previousScope, function(element) {\n            previousElement = element;\n            $animate.enter(element, null, $element);\n          });\n        }\n      });\n    }\n  };\n}];\n\n/**\n * @ngdoc module\n * @name ngAnimate\n * @description\n *\n * The `ngAnimate` module provides support for CSS-based animations (keyframes and transitions) as well as JavaScript-based animations via\n * callback hooks. Animations are not enabled by default, however, by including `ngAnimate` the animation hooks are enabled for an Angular app.\n *\n * <div doc-module-components=\"ngAnimate\"></div>\n *\n * # Usage\n * Simply put, there are two ways to make use of animations when ngAnimate is used: by using **CSS** and **JavaScript**. The former works purely based\n * using CSS (by using matching CSS selectors/styles) and the latter triggers animations that are registered via `module.animation()`. For\n * both CSS and JS animations the sole requirement is to have a matching `CSS class` that exists both in the registered animation and within\n * the HTML element that the animation will be triggered on.\n *\n * ## Directive Support\n * The following directives are \"animation aware\":\n *\n * | Directive                                                                                                | Supported Animations                                                     |\n * |----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------|\n * | {@link ng.directive:ngRepeat#animations ngRepeat}                                                        | enter, leave and move                                                    |\n * | {@link ngRoute.directive:ngView#animations ngView}                                                       | enter and leave                                                          |\n * | {@link ng.directive:ngInclude#animations ngInclude}                                                      | enter and leave                                                          |\n * | {@link ng.directive:ngSwitch#animations ngSwitch}                                                        | enter and leave                                                          |\n * | {@link ng.directive:ngIf#animations ngIf}                                                                | enter and leave                                                          |\n * | {@link ng.directive:ngClass#animations ngClass}                                                          | add and remove (the CSS class(es) present)                               |\n * | {@link ng.directive:ngShow#animations ngShow} & {@link ng.directive:ngHide#animations ngHide}            | add and remove (the ng-hide class value)                                 |\n * | {@link ng.directive:form#animation-hooks form} & {@link ng.directive:ngModel#animation-hooks ngModel}    | add and remove (dirty, pristine, valid, invalid & all other validations) |\n * | {@link module:ngMessages#animations ngMessages}                                                          | add and remove (ng-active & ng-inactive)                                 |\n * | {@link module:ngMessages#animations ngMessage}                                                           | enter and leave                                                          |\n *\n * (More information can be found by visiting each the documentation associated with each directive.)\n *\n * ## CSS-based Animations\n *\n * CSS-based animations with ngAnimate are unique since they require no JavaScript code at all. By using a CSS class that we reference between our HTML\n * and CSS code we can create an animation that will be picked up by Angular when an underlying directive performs an operation.\n *\n * The example below shows how an `enter` animation can be made possible on an element using `ng-if`:\n *\n * ```html\n * <div ng-if=\"bool\" class=\"fade\">\n *    Fade me in out\n * </div>\n * <button ng-click=\"bool=true\">Fade In!</button>\n * <button ng-click=\"bool=false\">Fade Out!</button>\n * ```\n *\n * Notice the CSS class **fade**? We can now create the CSS transition code that references this class:\n *\n * ```css\n * /&#42; The starting CSS styles for the enter animation &#42;/\n * .fade.ng-enter {\n *   transition:0.5s linear all;\n *   opacity:0;\n * }\n *\n * /&#42; The finishing CSS styles for the enter animation &#42;/\n * .fade.ng-enter.ng-enter-active {\n *   opacity:1;\n * }\n * ```\n *\n * The key thing to remember here is that, depending on the animation event (which each of the directives above trigger depending on what's going on) two\n * generated CSS classes will be applied to the element; in the example above we have `.ng-enter` and `.ng-enter-active`. For CSS transitions, the transition\n * code **must** be defined within the starting CSS class (in this case `.ng-enter`). The destination class is what the transition will animate towards.\n *\n * If for example we wanted to create animations for `leave` and `move` (ngRepeat triggers move) then we can do so using the same CSS naming conventions:\n *\n * ```css\n * /&#42; now the element will fade out before it is removed from the DOM &#42;/\n * .fade.ng-leave {\n *   transition:0.5s linear all;\n *   opacity:1;\n * }\n * .fade.ng-leave.ng-leave-active {\n *   opacity:0;\n * }\n * ```\n *\n * We can also make use of **CSS Keyframes** by referencing the keyframe animation within the starting CSS class:\n *\n * ```css\n * /&#42; there is no need to define anything inside of the destination\n * CSS class since the keyframe will take charge of the animation &#42;/\n * .fade.ng-leave {\n *   animation: my_fade_animation 0.5s linear;\n *   -webkit-animation: my_fade_animation 0.5s linear;\n * }\n *\n * @keyframes my_fade_animation {\n *   from { opacity:1; }\n *   to { opacity:0; }\n * }\n *\n * @-webkit-keyframes my_fade_animation {\n *   from { opacity:1; }\n *   to { opacity:0; }\n * }\n * ```\n *\n * Feel free also mix transitions and keyframes together as well as any other CSS classes on the same element.\n *\n * ### CSS Class-based Animations\n *\n * Class-based animations (animations that are triggered via `ngClass`, `ngShow`, `ngHide` and some other directives) have a slightly different\n * naming convention. Class-based animations are basic enough that a standard transition or keyframe can be referenced on the class being added\n * and removed.\n *\n * For example if we wanted to do a CSS animation for `ngHide` then we place an animation on the `.ng-hide` CSS class:\n *\n * ```html\n * <div ng-show=\"bool\" class=\"fade\">\n *   Show and hide me\n * </div>\n * <button ng-click=\"bool=!bool\">Toggle</button>\n *\n * <style>\n * .fade.ng-hide {\n *   transition:0.5s linear all;\n *   opacity:0;\n * }\n * </style>\n * ```\n *\n * All that is going on here with ngShow/ngHide behind the scenes is the `.ng-hide` class is added/removed (when the hidden state is valid). Since\n * ngShow and ngHide are animation aware then we can match up a transition and ngAnimate handles the rest.\n *\n * In addition the addition and removal of the CSS class, ngAnimate also provides two helper methods that we can use to further decorate the animation\n * with CSS styles.\n *\n * ```html\n * <div ng-class=\"{on:onOff}\" class=\"highlight\">\n *   Highlight this box\n * </div>\n * <button ng-click=\"onOff=!onOff\">Toggle</button>\n *\n * <style>\n * .highlight {\n *   transition:0.5s linear all;\n * }\n * .highlight.on-add {\n *   background:white;\n * }\n * .highlight.on {\n *   background:yellow;\n * }\n * .highlight.on-remove {\n *   background:black;\n * }\n * </style>\n * ```\n *\n * We can also make use of CSS keyframes by placing them within the CSS classes.\n *\n *\n * ### CSS Staggering Animations\n * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a\n * curtain-like effect. The ngAnimate module (versions >=1.2) supports staggering animations and the stagger effect can be\n * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for\n * the animation. The style property expected within the stagger class can either be a **transition-delay** or an\n * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).\n *\n * ```css\n * .my-animation.ng-enter {\n *   /&#42; standard transition code &#42;/\n *   transition: 1s linear all;\n *   opacity:0;\n * }\n * .my-animation.ng-enter-stagger {\n *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/\n *   transition-delay: 0.1s;\n *\n *   /&#42; As of 1.4.4, this must always be set: it signals ngAnimate\n *     to not accidentally inherit a delay property from another CSS class &#42;/\n *   transition-duration: 0s;\n *\n *   /&#42; if you are using animations instead of transitions you should configure as follows:\n *     animation-delay: 0.1s;\n *     animation-duration: 0s; &#42;/\n * }\n * .my-animation.ng-enter.ng-enter-active {\n *   /&#42; standard transition styles &#42;/\n *   opacity:1;\n * }\n * ```\n *\n * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations\n * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this\n * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation\n * will also be reset if one or more animation frames have passed since the multiple calls to `$animate` were fired.\n *\n * The following code will issue the **ng-leave-stagger** event on the element provided:\n *\n * ```js\n * var kids = parent.children();\n *\n * $animate.leave(kids[0]); //stagger index=0\n * $animate.leave(kids[1]); //stagger index=1\n * $animate.leave(kids[2]); //stagger index=2\n * $animate.leave(kids[3]); //stagger index=3\n * $animate.leave(kids[4]); //stagger index=4\n *\n * window.requestAnimationFrame(function() {\n *   //stagger has reset itself\n *   $animate.leave(kids[5]); //stagger index=0\n *   $animate.leave(kids[6]); //stagger index=1\n *\n *   $scope.$digest();\n * });\n * ```\n *\n * Stagger animations are currently only supported within CSS-defined animations.\n *\n * ### The `ng-animate` CSS class\n *\n * When ngAnimate is animating an element it will apply the `ng-animate` CSS class to the element for the duration of the animation.\n * This is a temporary CSS class and it will be removed once the animation is over (for both JavaScript and CSS-based animations).\n *\n * Therefore, animations can be applied to an element using this temporary class directly via CSS.\n *\n * ```css\n * .zipper.ng-animate {\n *   transition:0.5s linear all;\n * }\n * .zipper.ng-enter {\n *   opacity:0;\n * }\n * .zipper.ng-enter.ng-enter-active {\n *   opacity:1;\n * }\n * .zipper.ng-leave {\n *   opacity:1;\n * }\n * .zipper.ng-leave.ng-leave-active {\n *   opacity:0;\n * }\n * ```\n *\n * (Note that the `ng-animate` CSS class is reserved and it cannot be applied on an element directly since ngAnimate will always remove\n * the CSS class once an animation has completed.)\n *\n *\n * ### The `ng-[event]-prepare` class\n *\n * This is a special class that can be used to prevent unwanted flickering / flash of content before\n * the actual animation starts. The class is added as soon as an animation is initialized, but removed\n * before the actual animation starts (after waiting for a $digest).\n * It is also only added for *structural* animations (`enter`, `move`, and `leave`).\n *\n * In practice, flickering can appear when nesting elements with structural animations such as `ngIf`\n * into elements that have class-based animations such as `ngClass`.\n *\n * ```html\n * <div ng-class=\"{red: myProp}\">\n *   <div ng-class=\"{blue: myProp}\">\n *     <div class=\"message\" ng-if=\"myProp\"></div>\n *   </div>\n * </div>\n * ```\n *\n * It is possible that during the `enter` animation, the `.message` div will be briefly visible before it starts animating.\n * In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:\n *\n * ```css\n * .message.ng-enter-prepare {\n *   opacity: 0;\n * }\n *\n * ```\n *\n * ## JavaScript-based Animations\n *\n * ngAnimate also allows for animations to be consumed by JavaScript code. The approach is similar to CSS-based animations (where there is a shared\n * CSS class that is referenced in our HTML code) but in addition we need to register the JavaScript animation on the module. By making use of the\n * `module.animation()` module function we can register the animation.\n *\n * Let's see an example of a enter/leave animation using `ngRepeat`:\n *\n * ```html\n * <div ng-repeat=\"item in items\" class=\"slide\">\n *   {{ item }}\n * </div>\n * ```\n *\n * See the **slide** CSS class? Let's use that class to define an animation that we'll structure in our module code by using `module.animation`:\n *\n * ```js\n * myModule.animation('.slide', [function() {\n *   return {\n *     // make note that other events (like addClass/removeClass)\n *     // have different function input parameters\n *     enter: function(element, doneFn) {\n *       jQuery(element).fadeIn(1000, doneFn);\n *\n *       // remember to call doneFn so that angular\n *       // knows that the animation has concluded\n *     },\n *\n *     move: function(element, doneFn) {\n *       jQuery(element).fadeIn(1000, doneFn);\n *     },\n *\n *     leave: function(element, doneFn) {\n *       jQuery(element).fadeOut(1000, doneFn);\n *     }\n *   }\n * }]);\n * ```\n *\n * The nice thing about JS-based animations is that we can inject other services and make use of advanced animation libraries such as\n * greensock.js and velocity.js.\n *\n * If our animation code class-based (meaning that something like `ngClass`, `ngHide` and `ngShow` triggers it) then we can still define\n * our animations inside of the same registered animation, however, the function input arguments are a bit different:\n *\n * ```html\n * <div ng-class=\"color\" class=\"colorful\">\n *   this box is moody\n * </div>\n * <button ng-click=\"color='red'\">Change to red</button>\n * <button ng-click=\"color='blue'\">Change to blue</button>\n * <button ng-click=\"color='green'\">Change to green</button>\n * ```\n *\n * ```js\n * myModule.animation('.colorful', [function() {\n *   return {\n *     addClass: function(element, className, doneFn) {\n *       // do some cool animation and call the doneFn\n *     },\n *     removeClass: function(element, className, doneFn) {\n *       // do some cool animation and call the doneFn\n *     },\n *     setClass: function(element, addedClass, removedClass, doneFn) {\n *       // do some cool animation and call the doneFn\n *     }\n *   }\n * }]);\n * ```\n *\n * ## CSS + JS Animations Together\n *\n * AngularJS 1.4 and higher has taken steps to make the amalgamation of CSS and JS animations more flexible. However, unlike earlier versions of Angular,\n * defining CSS and JS animations to work off of the same CSS class will not work anymore. Therefore the example below will only result in **JS animations taking\n * charge of the animation**:\n *\n * ```html\n * <div ng-if=\"bool\" class=\"slide\">\n *   Slide in and out\n * </div>\n * ```\n *\n * ```js\n * myModule.animation('.slide', [function() {\n *   return {\n *     enter: function(element, doneFn) {\n *       jQuery(element).slideIn(1000, doneFn);\n *     }\n *   }\n * }]);\n * ```\n *\n * ```css\n * .slide.ng-enter {\n *   transition:0.5s linear all;\n *   transform:translateY(-100px);\n * }\n * .slide.ng-enter.ng-enter-active {\n *   transform:translateY(0);\n * }\n * ```\n *\n * Does this mean that CSS and JS animations cannot be used together? Do JS-based animations always have higher priority? We can make up for the\n * lack of CSS animations by using the `$animateCss` service to trigger our own tweaked-out, CSS-based animations directly from\n * our own JS-based animation code:\n *\n * ```js\n * myModule.animation('.slide', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element) {\n*        // this will trigger `.slide.ng-enter` and `.slide.ng-enter-active`.\n *       return $animateCss(element, {\n *         event: 'enter',\n *         structural: true\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * The nice thing here is that we can save bandwidth by sticking to our CSS-based animation code and we don't need to rely on a 3rd-party animation framework.\n *\n * The `$animateCss` service is very powerful since we can feed in all kinds of extra properties that will be evaluated and fed into a CSS transition or\n * keyframe animation. For example if we wanted to animate the height of an element while adding and removing classes then we can do so by providing that\n * data into `$animateCss` directly:\n *\n * ```js\n * myModule.animation('.slide', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element) {\n *       return $animateCss(element, {\n *         event: 'enter',\n *         structural: true,\n *         addClass: 'maroon-setting',\n *         from: { height:0 },\n *         to: { height: 200 }\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * Now we can fill in the rest via our transition CSS code:\n *\n * ```css\n * /&#42; the transition tells ngAnimate to make the animation happen &#42;/\n * .slide.ng-enter { transition:0.5s linear all; }\n *\n * /&#42; this extra CSS class will be absorbed into the transition\n * since the $animateCss code is adding the class &#42;/\n * .maroon-setting { background:red; }\n * ```\n *\n * And `$animateCss` will figure out the rest. Just make sure to have the `done()` callback fire the `doneFn` function to signal when the animation is over.\n *\n * To learn more about what's possible be sure to visit the {@link ngAnimate.$animateCss $animateCss service}.\n *\n * ## Animation Anchoring (via `ng-animate-ref`)\n *\n * ngAnimate in AngularJS 1.4 comes packed with the ability to cross-animate elements between\n * structural areas of an application (like views) by pairing up elements using an attribute\n * called `ng-animate-ref`.\n *\n * Let's say for example we have two views that are managed by `ng-view` and we want to show\n * that there is a relationship between two components situated in within these views. By using the\n * `ng-animate-ref` attribute we can identify that the two components are paired together and we\n * can then attach an animation, which is triggered when the view changes.\n *\n * Say for example we have the following template code:\n *\n * ```html\n * <!-- index.html -->\n * <div ng-view class=\"view-animation\">\n * </div>\n *\n * <!-- home.html -->\n * <a href=\"#/banner-page\">\n *   <img src=\"./banner.jpg\" class=\"banner\" ng-animate-ref=\"banner\">\n * </a>\n *\n * <!-- banner-page.html -->\n * <img src=\"./banner.jpg\" class=\"banner\" ng-animate-ref=\"banner\">\n * ```\n *\n * Now, when the view changes (once the link is clicked), ngAnimate will examine the\n * HTML contents to see if there is a match reference between any components in the view\n * that is leaving and the view that is entering. It will scan both the view which is being\n * removed (leave) and inserted (enter) to see if there are any paired DOM elements that\n * contain a matching ref value.\n *\n * The two images match since they share the same ref value. ngAnimate will now create a\n * transport element (which is a clone of the first image element) and it will then attempt\n * to animate to the position of the second image element in the next view. For the animation to\n * work a special CSS class called `ng-anchor` will be added to the transported element.\n *\n * We can now attach a transition onto the `.banner.ng-anchor` CSS class and then\n * ngAnimate will handle the entire transition for us as well as the addition and removal of\n * any changes of CSS classes between the elements:\n *\n * ```css\n * .banner.ng-anchor {\n *   /&#42; this animation will last for 1 second since there are\n *          two phases to the animation (an `in` and an `out` phase) &#42;/\n *   transition:0.5s linear all;\n * }\n * ```\n *\n * We also **must** include animations for the views that are being entered and removed\n * (otherwise anchoring wouldn't be possible since the new view would be inserted right away).\n *\n * ```css\n * .view-animation.ng-enter, .view-animation.ng-leave {\n *   transition:0.5s linear all;\n *   position:fixed;\n *   left:0;\n *   top:0;\n *   width:100%;\n * }\n * .view-animation.ng-enter {\n *   transform:translateX(100%);\n * }\n * .view-animation.ng-leave,\n * .view-animation.ng-enter.ng-enter-active {\n *   transform:translateX(0%);\n * }\n * .view-animation.ng-leave.ng-leave-active {\n *   transform:translateX(-100%);\n * }\n * ```\n *\n * Now we can jump back to the anchor animation. When the animation happens, there are two stages that occur:\n * an `out` and an `in` stage. The `out` stage happens first and that is when the element is animated away\n * from its origin. Once that animation is over then the `in` stage occurs which animates the\n * element to its destination. The reason why there are two animations is to give enough time\n * for the enter animation on the new element to be ready.\n *\n * The example above sets up a transition for both the in and out phases, but we can also target the out or\n * in phases directly via `ng-anchor-out` and `ng-anchor-in`.\n *\n * ```css\n * .banner.ng-anchor-out {\n *   transition: 0.5s linear all;\n *\n *   /&#42; the scale will be applied during the out animation,\n *          but will be animated away when the in animation runs &#42;/\n *   transform: scale(1.2);\n * }\n *\n * .banner.ng-anchor-in {\n *   transition: 1s linear all;\n * }\n * ```\n *\n *\n *\n *\n * ### Anchoring Demo\n *\n  <example module=\"anchoringExample\"\n           name=\"anchoringExample\"\n           id=\"anchoringExample\"\n           deps=\"angular-animate.js;angular-route.js\"\n           animations=\"true\">\n    <file name=\"index.html\">\n      <a href=\"#!/\">Home</a>\n      <hr />\n      <div class=\"view-container\">\n        <div ng-view class=\"view\"></div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('anchoringExample', ['ngAnimate', 'ngRoute'])\n        .config(['$routeProvider', function($routeProvider) {\n          $routeProvider.when('/', {\n            templateUrl: 'home.html',\n            controller: 'HomeController as home'\n          });\n          $routeProvider.when('/profile/:id', {\n            templateUrl: 'profile.html',\n            controller: 'ProfileController as profile'\n          });\n        }])\n        .run(['$rootScope', function($rootScope) {\n          $rootScope.records = [\n            { id: 1, title: 'Miss Beulah Roob' },\n            { id: 2, title: 'Trent Morissette' },\n            { id: 3, title: 'Miss Ava Pouros' },\n            { id: 4, title: 'Rod Pouros' },\n            { id: 5, title: 'Abdul Rice' },\n            { id: 6, title: 'Laurie Rutherford Sr.' },\n            { id: 7, title: 'Nakia McLaughlin' },\n            { id: 8, title: 'Jordon Blanda DVM' },\n            { id: 9, title: 'Rhoda Hand' },\n            { id: 10, title: 'Alexandrea Sauer' }\n          ];\n        }])\n        .controller('HomeController', [function() {\n          //empty\n        }])\n        .controller('ProfileController', ['$rootScope', '$routeParams',\n            function ProfileController($rootScope, $routeParams) {\n          var index = parseInt($routeParams.id, 10);\n          var record = $rootScope.records[index - 1];\n\n          this.title = record.title;\n          this.id = record.id;\n        }]);\n    </file>\n    <file name=\"home.html\">\n      <h2>Welcome to the home page</h1>\n      <p>Please click on an element</p>\n      <a class=\"record\"\n         ng-href=\"#!/profile/{{ record.id }}\"\n         ng-animate-ref=\"{{ record.id }}\"\n         ng-repeat=\"record in records\">\n        {{ record.title }}\n      </a>\n    </file>\n    <file name=\"profile.html\">\n      <div class=\"profile record\" ng-animate-ref=\"{{ profile.id }}\">\n        {{ profile.title }}\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .record {\n        display:block;\n        font-size:20px;\n      }\n      .profile {\n        background:black;\n        color:white;\n        font-size:100px;\n      }\n      .view-container {\n        position:relative;\n      }\n      .view-container > .view.ng-animate {\n        position:absolute;\n        top:0;\n        left:0;\n        width:100%;\n        min-height:500px;\n      }\n      .view.ng-enter, .view.ng-leave,\n      .record.ng-anchor {\n        transition:0.5s linear all;\n      }\n      .view.ng-enter {\n        transform:translateX(100%);\n      }\n      .view.ng-enter.ng-enter-active, .view.ng-leave {\n        transform:translateX(0%);\n      }\n      .view.ng-leave.ng-leave-active {\n        transform:translateX(-100%);\n      }\n      .record.ng-anchor-out {\n        background:red;\n      }\n    </file>\n  </example>\n *\n * ### How is the element transported?\n *\n * When an anchor animation occurs, ngAnimate will clone the starting element and position it exactly where the starting\n * element is located on screen via absolute positioning. The cloned element will be placed inside of the root element\n * of the application (where ng-app was defined) and all of the CSS classes of the starting element will be applied. The\n * element will then animate into the `out` and `in` animations and will eventually reach the coordinates and match\n * the dimensions of the destination element. During the entire animation a CSS class of `.ng-animate-shim` will be applied\n * to both the starting and destination elements in order to hide them from being visible (the CSS styling for the class\n * is: `visibility:hidden`). Once the anchor reaches its destination then it will be removed and the destination element\n * will become visible since the shim class will be removed.\n *\n * ### How is the morphing handled?\n *\n * CSS Anchoring relies on transitions and keyframes and the internal code is intelligent enough to figure out\n * what CSS classes differ between the starting element and the destination element. These different CSS classes\n * will be added/removed on the anchor element and a transition will be applied (the transition that is provided\n * in the anchor class). Long story short, ngAnimate will figure out what classes to add and remove which will\n * make the transition of the element as smooth and automatic as possible. Be sure to use simple CSS classes that\n * do not rely on DOM nesting structure so that the anchor element appears the same as the starting element (since\n * the cloned element is placed inside of root element which is likely close to the body element).\n *\n * Note that if the root element is on the `<html>` element then the cloned node will be placed inside of body.\n *\n *\n * ## Using $animate in your directive code\n *\n * So far we've explored how to feed in animations into an Angular application, but how do we trigger animations within our own directives in our application?\n * By injecting the `$animate` service into our directive code, we can trigger structural and class-based hooks which can then be consumed by animations. Let's\n * imagine we have a greeting box that shows and hides itself when the data changes\n *\n * ```html\n * <greeting-box active=\"onOrOff\">Hi there</greeting-box>\n * ```\n *\n * ```js\n * ngModule.directive('greetingBox', ['$animate', function($animate) {\n *   return function(scope, element, attrs) {\n *     attrs.$observe('active', function(value) {\n *       value ? $animate.addClass(element, 'on') : $animate.removeClass(element, 'on');\n *     });\n *   });\n * }]);\n * ```\n *\n * Now the `on` CSS class is added and removed on the greeting box component. Now if we add a CSS class on top of the greeting box element\n * in our HTML code then we can trigger a CSS or JS animation to happen.\n *\n * ```css\n * /&#42; normally we would create a CSS class to reference on the element &#42;/\n * greeting-box.on { transition:0.5s linear all; background:green; color:white; }\n * ```\n *\n * The `$animate` service contains a variety of other methods like `enter`, `leave`, `animate` and `setClass`. To learn more about what's\n * possible be sure to visit the {@link ng.$animate $animate service API page}.\n *\n *\n * ## Callbacks and Promises\n *\n * When `$animate` is called it returns a promise that can be used to capture when the animation has ended. Therefore if we were to trigger\n * an animation (within our directive code) then we can continue performing directive and scope related activities after the animation has\n * ended by chaining onto the returned promise that animation method returns.\n *\n * ```js\n * // somewhere within the depths of the directive\n * $animate.enter(element, parent).then(function() {\n *   //the animation has completed\n * });\n * ```\n *\n * (Note that earlier versions of Angular prior to v1.4 required the promise code to be wrapped using `$scope.$apply(...)`. This is not the case\n * anymore.)\n *\n * In addition to the animation promise, we can also make use of animation-related callbacks within our directives and controller code by registering\n * an event listener using the `$animate` service. Let's say for example that an animation was triggered on our view\n * routing controller to hook into that:\n *\n * ```js\n * ngModule.controller('HomePageController', ['$animate', function($animate) {\n *   $animate.on('enter', ngViewElement, function(element) {\n *     // the animation for this route has completed\n *   }]);\n * }])\n * ```\n *\n * (Note that you will need to trigger a digest within the callback to get angular to notice any scope-related changes.)\n */\n\nvar copy;\nvar extend;\nvar forEach;\nvar isArray;\nvar isDefined;\nvar isElement;\nvar isFunction;\nvar isObject;\nvar isString;\nvar isUndefined;\nvar jqLite;\nvar noop;\n\n/**\n * @ngdoc service\n * @name $animate\n * @kind object\n *\n * @description\n * The ngAnimate `$animate` service documentation is the same for the core `$animate` service.\n *\n * Click here {@link ng.$animate to learn more about animations with `$animate`}.\n */\nangular.module('ngAnimate', [], function initAngularHelpers() {\n  // Access helpers from angular core.\n  // Do it inside a `config` block to ensure `window.angular` is available.\n  noop        = angular.noop;\n  copy        = angular.copy;\n  extend      = angular.extend;\n  jqLite      = angular.element;\n  forEach     = angular.forEach;\n  isArray     = angular.isArray;\n  isString    = angular.isString;\n  isObject    = angular.isObject;\n  isUndefined = angular.isUndefined;\n  isDefined   = angular.isDefined;\n  isFunction  = angular.isFunction;\n  isElement   = angular.isElement;\n})\n  .info({ angularVersion: '1.6.6' })\n  .directive('ngAnimateSwap', ngAnimateSwapDirective)\n\n  .directive('ngAnimateChildren', $$AnimateChildrenDirective)\n  .factory('$$rAFScheduler', $$rAFSchedulerFactory)\n\n  .provider('$$animateQueue', $$AnimateQueueProvider)\n  .provider('$$animation', $$AnimationProvider)\n\n  .provider('$animateCss', $AnimateCssProvider)\n  .provider('$$animateCssDriver', $$AnimateCssDriverProvider)\n\n  .provider('$$animateJs', $$AnimateJsProvider)\n  .provider('$$animateJsDriver', $$AnimateJsDriverProvider);\n\n\n})(window, window.angular);\n","/**\n * @license AngularJS v1.6.6\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/**\n * @ngdoc module\n * @name ngAria\n * @description\n *\n * The `ngAria` module provides support for common\n * [<abbr title=\"Accessible Rich Internet Applications\">ARIA</abbr>](http://www.w3.org/TR/wai-aria/)\n * attributes that convey state or semantic information about the application for users\n * of assistive technologies, such as screen readers.\n *\n * <div doc-module-components=\"ngAria\"></div>\n *\n * ## Usage\n *\n * For ngAria to do its magic, simply include the module `ngAria` as a dependency. The following\n * directives are supported:\n * `ngModel`, `ngChecked`, `ngReadonly`, `ngRequired`, `ngValue`, `ngDisabled`, `ngShow`, `ngHide`, `ngClick`,\n * `ngDblClick`, and `ngMessages`.\n *\n * Below is a more detailed breakdown of the attributes handled by ngAria:\n *\n * | Directive                                   | Supported Attributes                                                                                |\n * |---------------------------------------------|-----------------------------------------------------------------------------------------------------|\n * | {@link ng.directive:ngModel ngModel}        | aria-checked, aria-valuemin, aria-valuemax, aria-valuenow, aria-invalid, aria-required, input roles |\n * | {@link ng.directive:ngDisabled ngDisabled}  | aria-disabled                                                                                       |\n * | {@link ng.directive:ngRequired ngRequired}  | aria-required                                                                                       |\n * | {@link ng.directive:ngChecked ngChecked}    | aria-checked                                                                                        |\n * | {@link ng.directive:ngReadonly ngReadonly}  | aria-readonly                                                                                       |\n * | {@link ng.directive:ngValue ngValue}        | aria-checked                                                                                        |\n * | {@link ng.directive:ngShow ngShow}          | aria-hidden                                                                                         |\n * | {@link ng.directive:ngHide ngHide}          | aria-hidden                                                                                         |\n * | {@link ng.directive:ngDblclick ngDblclick}  | tabindex                                                                                            |\n * | {@link module:ngMessages ngMessages}        | aria-live                                                                                           |\n * | {@link ng.directive:ngClick ngClick}        | tabindex, keydown event, button role                                                                |\n *\n * Find out more information about each directive by reading the\n * {@link guide/accessibility ngAria Developer Guide}.\n *\n * ## Example\n * Using ngDisabled with ngAria:\n * ```html\n * <md-checkbox ng-disabled=\"disabled\">\n * ```\n * Becomes:\n * ```html\n * <md-checkbox ng-disabled=\"disabled\" aria-disabled=\"true\">\n * ```\n *\n * ## Disabling Attributes\n * It's possible to disable individual attributes added by ngAria with the\n * {@link ngAria.$ariaProvider#config config} method. For more details, see the\n * {@link guide/accessibility Developer Guide}.\n */\nvar ngAriaModule = angular.module('ngAria', ['ng']).\n                        info({ angularVersion: '1.6.6' }).\n                        provider('$aria', $AriaProvider);\n\n/**\n* Internal Utilities\n*/\nvar nodeBlackList = ['BUTTON', 'A', 'INPUT', 'TEXTAREA', 'SELECT', 'DETAILS', 'SUMMARY'];\n\nvar isNodeOneOf = function(elem, nodeTypeArray) {\n  if (nodeTypeArray.indexOf(elem[0].nodeName) !== -1) {\n    return true;\n  }\n};\n/**\n * @ngdoc provider\n * @name $ariaProvider\n * @this\n *\n * @description\n *\n * Used for configuring the ARIA attributes injected and managed by ngAria.\n *\n * ```js\n * angular.module('myApp', ['ngAria'], function config($ariaProvider) {\n *   $ariaProvider.config({\n *     ariaValue: true,\n *     tabindex: false\n *   });\n * });\n *```\n *\n * ## Dependencies\n * Requires the {@link ngAria} module to be installed.\n *\n */\nfunction $AriaProvider() {\n  var config = {\n    ariaHidden: true,\n    ariaChecked: true,\n    ariaReadonly: true,\n    ariaDisabled: true,\n    ariaRequired: true,\n    ariaInvalid: true,\n    ariaValue: true,\n    tabindex: true,\n    bindKeydown: true,\n    bindRoleForClick: true\n  };\n\n  /**\n   * @ngdoc method\n   * @name $ariaProvider#config\n   *\n   * @param {object} config object to enable/disable specific ARIA attributes\n   *\n   *  - **ariaHidden** – `{boolean}` – Enables/disables aria-hidden tags\n   *  - **ariaChecked** – `{boolean}` – Enables/disables aria-checked tags\n   *  - **ariaReadonly** – `{boolean}` – Enables/disables aria-readonly tags\n   *  - **ariaDisabled** – `{boolean}` – Enables/disables aria-disabled tags\n   *  - **ariaRequired** – `{boolean}` – Enables/disables aria-required tags\n   *  - **ariaInvalid** – `{boolean}` – Enables/disables aria-invalid tags\n   *  - **ariaValue** – `{boolean}` – Enables/disables aria-valuemin, aria-valuemax and\n   *    aria-valuenow tags\n   *  - **tabindex** – `{boolean}` – Enables/disables tabindex tags\n   *  - **bindKeydown** – `{boolean}` – Enables/disables keyboard event binding on non-interactive\n   *    elements (such as `div` or `li`) using ng-click, making them more accessible to users of\n   *    assistive technologies\n   *  - **bindRoleForClick** – `{boolean}` – Adds role=button to non-interactive elements (such as\n   *    `div` or `li`) using ng-click, making them more accessible to users of assistive\n   *    technologies\n   *\n   * @description\n   * Enables/disables various ARIA attributes\n   */\n  this.config = function(newConfig) {\n    config = angular.extend(config, newConfig);\n  };\n\n  function watchExpr(attrName, ariaAttr, nodeBlackList, negate) {\n    return function(scope, elem, attr) {\n      var ariaCamelName = attr.$normalize(ariaAttr);\n      if (config[ariaCamelName] && !isNodeOneOf(elem, nodeBlackList) && !attr[ariaCamelName]) {\n        scope.$watch(attr[attrName], function(boolVal) {\n          // ensure boolean value\n          boolVal = negate ? !boolVal : !!boolVal;\n          elem.attr(ariaAttr, boolVal);\n        });\n      }\n    };\n  }\n  /**\n   * @ngdoc service\n   * @name $aria\n   *\n   * @description\n   * @priority 200\n   *\n   * The $aria service contains helper methods for applying common\n   * [ARIA](http://www.w3.org/TR/wai-aria/) attributes to HTML directives.\n   *\n   * ngAria injects common accessibility attributes that tell assistive technologies when HTML\n   * elements are enabled, selected, hidden, and more. To see how this is performed with ngAria,\n   * let's review a code snippet from ngAria itself:\n   *\n   *```js\n   * ngAriaModule.directive('ngDisabled', ['$aria', function($aria) {\n   *   return $aria.$$watchExpr('ngDisabled', 'aria-disabled', nodeBlackList, false);\n   * }])\n   *```\n   * Shown above, the ngAria module creates a directive with the same signature as the\n   * traditional `ng-disabled` directive. But this ngAria version is dedicated to\n   * solely managing accessibility attributes on custom elements. The internal `$aria` service is\n   * used to watch the boolean attribute `ngDisabled`. If it has not been explicitly set by the\n   * developer, `aria-disabled` is injected as an attribute with its value synchronized to the\n   * value in `ngDisabled`.\n   *\n   * Because ngAria hooks into the `ng-disabled` directive, developers do not have to do\n   * anything to enable this feature. The `aria-disabled` attribute is automatically managed\n   * simply as a silent side-effect of using `ng-disabled` with the ngAria module.\n   *\n   * The full list of directives that interface with ngAria:\n   * * **ngModel**\n   * * **ngChecked**\n   * * **ngReadonly**\n   * * **ngRequired**\n   * * **ngDisabled**\n   * * **ngValue**\n   * * **ngShow**\n   * * **ngHide**\n   * * **ngClick**\n   * * **ngDblclick**\n   * * **ngMessages**\n   *\n   * Read the {@link guide/accessibility ngAria Developer Guide} for a thorough explanation of each\n   * directive.\n   *\n   *\n   * ## Dependencies\n   * Requires the {@link ngAria} module to be installed.\n   */\n  this.$get = function() {\n    return {\n      config: function(key) {\n        return config[key];\n      },\n      $$watchExpr: watchExpr\n    };\n  };\n}\n\n\nngAriaModule.directive('ngShow', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngShow', 'aria-hidden', [], true);\n}])\n.directive('ngHide', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngHide', 'aria-hidden', [], false);\n}])\n.directive('ngValue', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngValue', 'aria-checked', nodeBlackList, false);\n}])\n.directive('ngChecked', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngChecked', 'aria-checked', nodeBlackList, false);\n}])\n.directive('ngReadonly', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngReadonly', 'aria-readonly', nodeBlackList, false);\n}])\n.directive('ngRequired', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngRequired', 'aria-required', nodeBlackList, false);\n}])\n.directive('ngModel', ['$aria', function($aria) {\n\n  function shouldAttachAttr(attr, normalizedAttr, elem, allowBlacklistEls) {\n    return $aria.config(normalizedAttr) && !elem.attr(attr) && (allowBlacklistEls || !isNodeOneOf(elem, nodeBlackList));\n  }\n\n  function shouldAttachRole(role, elem) {\n    // if element does not have role attribute\n    // AND element type is equal to role (if custom element has a type equaling shape) <-- remove?\n    // AND element is not in nodeBlackList\n    return !elem.attr('role') && (elem.attr('type') === role) && !isNodeOneOf(elem, nodeBlackList);\n  }\n\n  function getShape(attr, elem) {\n    var type = attr.type,\n        role = attr.role;\n\n    return ((type || role) === 'checkbox' || role === 'menuitemcheckbox') ? 'checkbox' :\n           ((type || role) === 'radio'    || role === 'menuitemradio') ? 'radio' :\n           (type === 'range'              || role === 'progressbar' || role === 'slider') ? 'range' : '';\n  }\n\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    priority: 200, //Make sure watches are fired after any other directives that affect the ngModel value\n    compile: function(elem, attr) {\n      var shape = getShape(attr, elem);\n\n      return {\n        post: function(scope, elem, attr, ngModel) {\n          var needsTabIndex = shouldAttachAttr('tabindex', 'tabindex', elem, false);\n\n          function ngAriaWatchModelValue() {\n            return ngModel.$modelValue;\n          }\n\n          function getRadioReaction(newVal) {\n            // Strict comparison would cause a BC\n            // eslint-disable-next-line eqeqeq\n            var boolVal = (attr.value == ngModel.$viewValue);\n            elem.attr('aria-checked', boolVal);\n          }\n\n          function getCheckboxReaction() {\n            elem.attr('aria-checked', !ngModel.$isEmpty(ngModel.$viewValue));\n          }\n\n          switch (shape) {\n            case 'radio':\n            case 'checkbox':\n              if (shouldAttachRole(shape, elem)) {\n                elem.attr('role', shape);\n              }\n              if (shouldAttachAttr('aria-checked', 'ariaChecked', elem, false)) {\n                scope.$watch(ngAriaWatchModelValue, shape === 'radio' ?\n                    getRadioReaction : getCheckboxReaction);\n              }\n              if (needsTabIndex) {\n                elem.attr('tabindex', 0);\n              }\n              break;\n            case 'range':\n              if (shouldAttachRole(shape, elem)) {\n                elem.attr('role', 'slider');\n              }\n              if ($aria.config('ariaValue')) {\n                var needsAriaValuemin = !elem.attr('aria-valuemin') &&\n                    (attr.hasOwnProperty('min') || attr.hasOwnProperty('ngMin'));\n                var needsAriaValuemax = !elem.attr('aria-valuemax') &&\n                    (attr.hasOwnProperty('max') || attr.hasOwnProperty('ngMax'));\n                var needsAriaValuenow = !elem.attr('aria-valuenow');\n\n                if (needsAriaValuemin) {\n                  attr.$observe('min', function ngAriaValueMinReaction(newVal) {\n                    elem.attr('aria-valuemin', newVal);\n                  });\n                }\n                if (needsAriaValuemax) {\n                  attr.$observe('max', function ngAriaValueMinReaction(newVal) {\n                    elem.attr('aria-valuemax', newVal);\n                  });\n                }\n                if (needsAriaValuenow) {\n                  scope.$watch(ngAriaWatchModelValue, function ngAriaValueNowReaction(newVal) {\n                    elem.attr('aria-valuenow', newVal);\n                  });\n                }\n              }\n              if (needsTabIndex) {\n                elem.attr('tabindex', 0);\n              }\n              break;\n          }\n\n          if (!attr.hasOwnProperty('ngRequired') && ngModel.$validators.required\n            && shouldAttachAttr('aria-required', 'ariaRequired', elem, false)) {\n            // ngModel.$error.required is undefined on custom controls\n            attr.$observe('required', function() {\n              elem.attr('aria-required', !!attr['required']);\n            });\n          }\n\n          if (shouldAttachAttr('aria-invalid', 'ariaInvalid', elem, true)) {\n            scope.$watch(function ngAriaInvalidWatch() {\n              return ngModel.$invalid;\n            }, function ngAriaInvalidReaction(newVal) {\n              elem.attr('aria-invalid', !!newVal);\n            });\n          }\n        }\n      };\n    }\n  };\n}])\n.directive('ngDisabled', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngDisabled', 'aria-disabled', nodeBlackList, false);\n}])\n.directive('ngMessages', function() {\n  return {\n    restrict: 'A',\n    require: '?ngMessages',\n    link: function(scope, elem, attr, ngMessages) {\n      if (!elem.attr('aria-live')) {\n        elem.attr('aria-live', 'assertive');\n      }\n    }\n  };\n})\n.directive('ngClick',['$aria', '$parse', function($aria, $parse) {\n  return {\n    restrict: 'A',\n    compile: function(elem, attr) {\n      var fn = $parse(attr.ngClick);\n      return function(scope, elem, attr) {\n\n        if (!isNodeOneOf(elem, nodeBlackList)) {\n\n          if ($aria.config('bindRoleForClick') && !elem.attr('role')) {\n            elem.attr('role', 'button');\n          }\n\n          if ($aria.config('tabindex') && !elem.attr('tabindex')) {\n            elem.attr('tabindex', 0);\n          }\n\n          if ($aria.config('bindKeydown') && !attr.ngKeydown && !attr.ngKeypress && !attr.ngKeyup) {\n            elem.on('keydown', function(event) {\n              var keyCode = event.which || event.keyCode;\n              if (keyCode === 32 || keyCode === 13) {\n                scope.$apply(callback);\n              }\n\n              function callback() {\n                fn(scope, { $event: event });\n              }\n            });\n          }\n        }\n      };\n    }\n  };\n}])\n.directive('ngDblclick', ['$aria', function($aria) {\n  return function(scope, elem, attr) {\n    if ($aria.config('tabindex') && !elem.attr('tabindex') && !isNodeOneOf(elem, nodeBlackList)) {\n      elem.attr('tabindex', 0);\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n","/**\n * Bunch of useful filters for angularJS(with no external dependencies!)\n * @version v0.5.14 - 2016-12-06 * @link https://github.com/a8m/angular-filter\n * @author Ariel Mashraki <ariel@mashraki.co.il>\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function ( window, angular, undefined ) {\n/*jshint globalstrict:true*/\n'use strict';\n\nvar isDefined = angular.isDefined,\n    isUndefined = angular.isUndefined,\n    isFunction = angular.isFunction,\n    isString = angular.isString,\n    isNumber = angular.isNumber,\n    isObject = angular.isObject,\n    isArray = angular.isArray,\n    forEach = angular.forEach,\n    extend = angular.extend,\n    copy = angular.copy,\n    equals = angular.equals;\n\n\n/**\n * @description\n * get an object and return array of values\n * @param object\n * @returns {Array}\n */\nfunction toArray(object) {\n  return isArray(object) \n    ? object \n    : Object.keys(object).map(function(key) {\n      return object[key];\n    });\n}\n\n/**\n * @param value\n * @returns {boolean}\n */\nfunction isNull(value) {\n    return value === null;\n}\n\n/**\n * @description\n * return if object contains partial object\n * @param partial{object}\n * @param object{object}\n * @returns {boolean}\n */\nfunction objectContains(partial, object) {\n  var keys = Object.keys(partial);\n\n  return keys.map(function(el) {\n    return (object[el] !== undefined) && (object[el] == partial[el]);\n  }).indexOf(false) == -1;\n\n}\n\n/**\n * @description\n * search for approximate pattern in string\n * @param word\n * @param pattern\n * @returns {*}\n */\nfunction hasApproxPattern(word, pattern) {\n  // cheaper version of indexOf; instead of creating each\n  // iteration new str.\n  function indexOf(word, p, c) {\n    var j = 0;\n    while ((p + j) <= word.length) {\n      if (word.charAt(p + j) == c) return j;\n      j++;\n    }\n    return -1;\n  }\n  var p = 0;\n  for (var i = 0; i <= pattern.length; i++) {\n    var index = indexOf(word, p, pattern.charAt(i));\n    if (index == -1) return false;\n    p += index + 1;\n  }\n  return true\n}\n\n/**\n * @description\n * return the first n element of an array,\n * if expression provided, is returns as long the expression return truthy\n * @param array\n * @param n {number}\n * @param expression {$parse}\n * @return array or single object\n */\nfunction getFirstMatches(array, n, expression) {\n  var count = 0;\n\n  return array.filter(function(elm) {\n    var rest = isDefined(expression) ? (count < n && expression(elm)) : count < n;\n    count = rest ? count+1 : count;\n\n    return rest;\n  });\n}\n/**\n * Polyfill to ECMA6 String.prototype.contains\n */\nif (!String.prototype.contains) {\n  String.prototype.contains = function() {\n    return String.prototype.indexOf.apply(this, arguments) !== -1;\n  };\n}\n\n/**\n * @param num {Number}\n * @param decimal {Number}\n * @returns {Number}\n */\nfunction convertToDecimal(num, decimal){\n  return Math.round(num * Math.pow(10,decimal)) / (Math.pow(10, decimal));\n}\n\n/**\n * @description\n * Get an object, and return an array composed of it's properties names(nested too).\n * @param obj {Object}\n * @param stack {Array}\n * @param parent {String}\n * @returns {Array}\n * @example\n * parseKeys({ a:1, b: { c:2, d: { e: 3 } } }) ==> [\"a\", \"b.c\", \"b.d.e\"]\n */\nfunction deepKeys(obj, stack, parent) {\n  stack = stack || [];\n  var keys = Object.keys(obj);\n\n  keys.forEach(function(el) {\n    //if it's a nested object\n    if(isObject(obj[el]) && !isArray(obj[el])) {\n      //concatenate the new parent if exist\n      var p = parent ? parent + '.' + el : parent;\n      deepKeys(obj[el], stack, p || el);\n    } else {\n      //create and save the key\n      var key = parent ? parent + '.' + el : el;\n      stack.push(key)\n    }\n  });\n  return stack\n}\n\n/**\n * @description\n * Test if given object is a Scope instance\n * @param obj\n * @returns {Boolean}\n */\nfunction isScope(obj) {\n  return obj && obj.$evalAsync && obj.$watch;\n}\n\n/**\n * @ngdoc filter\n * @name a8m.angular\n * @kind function\n *\n * @description\n * reference to angular function\n */\n\nangular.module('a8m.angular', [])\n\n    .filter('isUndefined', function () {\n      return function (input) {\n        return angular.isUndefined(input);\n      }\n    })\n    .filter('isDefined', function() {\n      return function (input) {\n        return angular.isDefined(input);\n      }\n    })\n    .filter('isFunction', function() {\n      return function (input) {\n        return angular.isFunction(input);\n      }\n    })\n    .filter('isString', function() {\n      return function (input) {\n        return angular.isString(input)\n      }\n    })\n    .filter('isNumber', function() {\n      return function (input) {\n        return angular.isNumber(input);\n      }\n    })\n    .filter('isArray', function() {\n      return function (input) {\n        return angular.isArray(input);\n      }\n    })\n    .filter('isObject', function() {\n      return function (input) {\n        return angular.isObject(input);\n      }\n    })\n    .filter('isEqual', function() {\n      return function (o1, o2) {\n        return angular.equals(o1, o2);\n      }\n    });\n\n/**\n * @ngdoc filter\n * @name a8m.conditions\n * @kind function\n *\n * @description\n * reference to math conditions\n */\n angular.module('a8m.conditions', [])\n\n  .filter({\n    isGreaterThan  : isGreaterThanFilter,\n    '>'            : isGreaterThanFilter,\n\n    isGreaterThanOrEqualTo  : isGreaterThanOrEqualToFilter,\n    '>='                    : isGreaterThanOrEqualToFilter,\n\n    isLessThan  : isLessThanFilter,\n    '<'         : isLessThanFilter,\n\n    isLessThanOrEqualTo  : isLessThanOrEqualToFilter,\n    '<='                 : isLessThanOrEqualToFilter,\n\n    isEqualTo  : isEqualToFilter,\n    '=='       : isEqualToFilter,\n\n    isNotEqualTo  : isNotEqualToFilter,\n    '!='          : isNotEqualToFilter,\n\n    isIdenticalTo  : isIdenticalToFilter,\n    '==='          : isIdenticalToFilter,\n\n    isNotIdenticalTo  : isNotIdenticalToFilter,\n    '!=='             : isNotIdenticalToFilter\n  });\n\n  function isGreaterThanFilter() {\n    return function (input, check) {\n      return input > check;\n    };\n  }\n\n  function isGreaterThanOrEqualToFilter() {\n    return function (input, check) {\n      return input >= check;\n    };\n  }\n\n  function isLessThanFilter() {\n    return function (input, check) {\n      return input < check;\n    };\n  }\n\n  function isLessThanOrEqualToFilter() {\n    return function (input, check) {\n      return input <= check;\n    };\n  }\n\n  function isEqualToFilter() {\n    return function (input, check) {\n      return input == check;\n    };\n  }\n\n  function isNotEqualToFilter() {\n    return function (input, check) {\n      return input != check;\n    };\n  }\n\n  function isIdenticalToFilter() {\n    return function (input, check) {\n      return input === check;\n    };\n  }\n\n  function isNotIdenticalToFilter() {\n    return function (input, check) {\n      return input !== check;\n    };\n  }\n/**\n * @ngdoc filter\n * @name isNull\n * @kind function\n *\n * @description\n * checks if value is null or not\n * @return Boolean\n */\nangular.module('a8m.is-null', [])\n    .filter('isNull', function () {\n      return function(input) {\n        return isNull(input);\n      }\n    });\n\n/**\n * @ngdoc filter\n * @name after-where\n * @kind function\n *\n * @description\n * get a collection and properties object, and returns all of the items\n * in the collection after the first that found with the given properties.\n *\n */\nangular.module('a8m.after-where', [])\n    .filter('afterWhere', function() {\n      return function (collection, object) {\n\n        collection = isObject(collection)\n          ? toArray(collection)\n          : collection;\n\n        if(!isArray(collection) || isUndefined(object)) return collection;\n\n        var index = collection.map( function( elm ) {\n          return objectContains(object, elm);\n        }).indexOf( true );\n\n        return collection.slice((index === -1) ? 0 : index);\n      }\n    });\n\n/**\n * @ngdoc filter\n * @name after\n * @kind function\n *\n * @description\n * get a collection and specified count, and returns all of the items\n * in the collection after the specified count.\n *\n */\n\nangular.module('a8m.after', [])\n    .filter('after', function() {\n      return function (collection, count) {\n        collection = isObject(collection)\n          ? toArray(collection)\n          : collection;\n\n        return (isArray(collection))\n          ? collection.slice(count)\n          : collection;\n      }\n    });\n\n/**\n * @ngdoc filter\n * @name before-where\n * @kind function\n *\n * @description\n * get a collection and properties object, and returns all of the items\n * in the collection before the first that found with the given properties.\n */\nangular.module('a8m.before-where', [])\n  .filter('beforeWhere', function() {\n    return function (collection, object) {\n\n      collection = isObject(collection)\n        ? toArray(collection)\n        : collection;\n\n      if(!isArray(collection) || isUndefined(object)) return collection;\n\n      var index = collection.map( function( elm ) {\n        return objectContains(object, elm);\n      }).indexOf( true );\n\n      return collection.slice(0, (index === -1) ? collection.length : ++index);\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name before\n * @kind function\n *\n * @description\n * get a collection and specified count, and returns all of the items\n * in the collection before the specified count.\n */\nangular.module('a8m.before', [])\n    .filter('before', function() {\n      return function (collection, count) {\n        collection = isObject(collection)\n          ? toArray(collection)\n          : collection;\n\n        return (isArray(collection))\n          ? collection.slice(0, (!count) ? count : --count)\n          : collection;\n      }\n    });\n\n/**\n * @ngdoc filter\n * @name chunkBy\n * @kind function\n *\n * @description\n * Collect data into fixed-length chunks or blocks\n */\n\nangular.module('a8m.chunk-by', ['a8m.filter-watcher'])\n    .filter('chunkBy', ['filterWatcher', function (filterWatcher) {\n      return function (array, n, fillVal) {\n\n        return filterWatcher.isMemoized('chunkBy', arguments) ||\n            filterWatcher.memoize('chunkBy', arguments, this,\n                _chunkBy(array, n, fillVal));\n        /**\n         * @description\n         * Get array with size `n` in `val` inside it.\n         * @param n\n         * @param val\n         * @returns {Array}\n         */\n        function fill(n, val) {\n          var ret = [];\n          while (n--) ret[n] = val;\n          return ret;\n        }\n\n        function _chunkBy(array, n, fillVal) {\n          if (!isArray(array)) return array;\n          return array.map(function (el, i, self) {\n            i = i * n;\n            el = self.slice(i, i + n);\n            return !isUndefined(fillVal) && el.length < n\n                ? el.concat(fill(n - el.length, fillVal))\n                : el;\n          }).slice(0, Math.ceil(array.length / n));\n        }\n      }\n    }]);\n\n/**\n * @ngdoc filter\n * @name concat\n * @kind function\n *\n * @description\n * get (array/object, object/array) and return merged collection\n */\nangular.module('a8m.concat', [])\n  .filter('concat', [function () {\n    return function (collection, joined) {\n\n      if (isUndefined(joined)) return collection;\n\n      if (isArray(collection)) {\n        return isObject(joined)\n          ? collection.concat(toArray(joined))\n          : collection.concat(joined);\n      }\n\n      if (isObject(collection)) {\n        var array = toArray(collection);\n        return (isObject(joined))\n          ? array.concat(toArray(joined))\n          : array.concat(joined);\n      }\n      return collection;\n    };\n  }\n]);\n\n/**\n * @ngdoc filter\n * @name contains\n * @kind function\n *\n * @description\n * Checks if given expression is present in one or more object in the collection\n */\nangular.module('a8m.contains', [])\n  .filter({\n    contains: ['$parse', containsFilter],\n    some: ['$parse', containsFilter]\n  });\n\nfunction containsFilter($parse) {\n    return function (collection, expression) {\n\n      collection = isObject(collection) ? toArray(collection) : collection;\n\n      if(!isArray(collection) || isUndefined(expression)) {\n        return false;\n      }\n\n      return collection.some(function(elm) {\n        return ((isString(expression) && isObject(elm)) || isFunction(expression))\n          ? $parse(expression)(elm)\n          : elm === expression;\n      });\n\n    }\n }\n\n/**\n * @ngdoc filter\n * @name countBy\n * @kind function\n *\n * @description\n * Sorts a list into groups and returns a count for the number of objects in each group.\n */\n\nangular.module('a8m.count-by', [])\n\n  .filter('countBy', [ '$parse', function ( $parse ) {\n    return function (collection, property) {\n\n      var result = {},\n        get = $parse(property),\n        prop;\n\n      collection = (isObject(collection)) ? toArray(collection) : collection;\n\n      if(!isArray(collection) || isUndefined(property)) {\n        return collection;\n      }\n\n      collection.forEach( function( elm ) {\n        prop = get(elm);\n\n        if(!result[prop]) {\n          result[prop] = 0;\n        }\n\n        result[prop]++;\n      });\n\n      return result;\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name defaults\n * @kind function\n *\n * @description\n * defaultsFilter allows to specify a default fallback value for properties that resolve to undefined.\n */\nangular.module('a8m.defaults', [])\n  .filter('defaults', ['$parse', function( $parse ) {\n    return function(collection, defaults) {\n\n      collection = isObject(collection) ? toArray(collection) : collection;\n\n      if(!isArray(collection) || !isObject(defaults)) {\n        return collection;\n      }\n\n      var keys = deepKeys(defaults);\n\n      collection.forEach(function(elm) {\n        //loop through all the keys\n        keys.forEach(function(key) {\n          var getter = $parse(key);\n          var setter = getter.assign;\n          //if it's not exist\n          if(isUndefined(getter(elm))) {\n            //get from defaults, and set to the returned object\n            setter(elm, getter(defaults))\n          }\n        });\n      });\n\n      return collection;\n    }\n  }]);\n/**\n * @ngdoc filter\n * @name every\n * @kind function\n *\n * @description\n * Checks if given expression is present in all members in the collection\n *\n */\nangular.module('a8m.every', [])\n  .filter('every', ['$parse', function($parse) {\n    return function (collection, expression) {\n      collection = isObject(collection) ? toArray(collection) : collection;\n\n      if(!isArray(collection) || isUndefined(expression)) {\n        return true;\n      }\n\n      return collection.every( function(elm) {\n        return (isObject(elm) || isFunction(expression))\n          ? $parse(expression)(elm)\n          : elm === expression;\n      });\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name filterBy\n * @kind function\n *\n * @description\n * filter by specific properties, avoid the rest\n */\nangular.module('a8m.filter-by', [])\n  .filter('filterBy', ['$parse', function( $parse ) {\n    return function(collection, properties, search, strict) {\n      var comparator;\n\n      search = (isString(search) || isNumber(search)) ?\n        String(search).toLowerCase() : undefined;\n\n      collection = isObject(collection) ? toArray(collection) : collection;\n\n      if(!isArray(collection) || isUndefined(search)) {\n        return collection;\n      }\n\n      return collection.filter(function(elm) {\n        return properties.some(function(prop) {\n\n          /**\n           * check if there is concatenate properties\n           * example:\n           * object: { first: 'foo', last:'bar' }\n           * filterBy: ['first + last'] => search by full name(i.e 'foo bar')\n           */\n          if(!~prop.indexOf('+')) {\n            comparator = $parse(prop)(elm)\n          } else {\n            var propList = prop.replace(/\\s+/g, '').split('+');\n            comparator = propList\n              .map(function(prop) { return $parse(prop)(elm); })\n              .join(' ');\n          }\n\n          if (!isString(comparator) && !isNumber(comparator)) {\n            return false;\n          }\n\n          comparator = String(comparator).toLowerCase();\n\n          return strict ? comparator === search : comparator.contains(search);\n        });\n      });\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name first\n * @kind function\n *\n * @description\n * Gets the first element or first n elements of an array\n * if callback is provided, is returns as long the callback return truthy\n */\nangular.module('a8m.first', [])\n  .filter('first', ['$parse', function( $parse ) {\n    return function(collection) {\n      var n\n        , getter\n        , args;\n\n      collection = isObject(collection)\n        ? toArray(collection)\n        : collection;\n\n      if(!isArray(collection)) {\n        return collection;\n      }\n\n      args = Array.prototype.slice.call(arguments, 1);\n      n = (isNumber(args[0])) ? args[0] : 1;\n      getter = (!isNumber(args[0]))  ? args[0] : (!isNumber(args[1])) ? args[1] : undefined;\n\n      return (args.length) ? getFirstMatches(collection, n,(getter) ? $parse(getter) : getter) :\n        collection[0];\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name flatten\n * @kind function\n *\n * @description\n * Flattens a nested array (the nesting can be to any depth).\n * If you pass shallow, the array will only be flattened a single level\n */\nangular.module('a8m.flatten', [])\n  .filter('flatten', function () {\n    return function(collection, shallow) {\n\n      shallow = shallow || false;\n      collection = isObject(collection)\n        ? toArray(collection)\n        : collection;\n\n      if(!isArray(collection)) {\n        return collection;\n      }\n\n      return !shallow\n        ? flatten(collection, 0)\n        : [].concat.apply([], collection);\n    }\n  });\n\n/**\n * flatten nested array (the nesting can be to any depth).\n * @param array {Array}\n * @param i {int}\n * @returns {Array}\n * @private\n */\nfunction flatten(array, i) {\n  i = i || 0;\n\n  if(i >= array.length)\n    return array;\n\n  if(isArray(array[i])) {\n    return flatten(array.slice(0,i)\n      .concat(array[i], array.slice(i+1)), i);\n  }\n  return flatten(array, i+1);\n}\n\n/**\n * @ngdoc filter\n * @name fuzzyByKey\n * @kind function\n *\n * @description\n * fuzzy string searching by key\n */\nangular.module('a8m.fuzzy-by', [])\n  .filter('fuzzyBy', ['$parse', function ( $parse ) {\n    return function (collection, property, search, csensitive) {\n\n      var sensitive = csensitive || false,\n        prop, getter;\n\n      collection = isObject(collection) ? toArray(collection) : collection;\n\n      if(!isArray(collection) || isUndefined(property)\n        || isUndefined(search)) {\n        return collection;\n      }\n\n      getter = $parse(property);\n\n      return collection.filter(function(elm) {\n\n        prop = getter(elm);\n        if(!isString(prop)) {\n          return false;\n        }\n\n        prop = (sensitive) ? prop : prop.toLowerCase();\n        search = (sensitive) ? search : search.toLowerCase();\n\n        return hasApproxPattern(prop, search) !== false\n      })\n    }\n\n }]);\n/**\n * @ngdoc filter\n * @name fuzzy\n * @kind function\n *\n * @description\n * fuzzy string searching for array of strings, objects\n */\nangular.module('a8m.fuzzy', [])\n  .filter('fuzzy', function () {\n    return function (collection, search, csensitive) {\n      var sensitive = csensitive || false;\n      collection = isObject(collection) ? toArray(collection) : collection;\n\n      if(!isArray(collection) || isUndefined(search)) {\n        return collection;\n      }\n\n      search = (sensitive) ? search : search.toLowerCase();\n\n      return collection.filter(function(elm) {\n        if(isString(elm)) {\n          elm = (sensitive) ? elm : elm.toLowerCase();\n          return hasApproxPattern(elm, search) !== false\n        }\n        return (isObject(elm)) ? _hasApproximateKey(elm, search) : false;\n      });\n\n      /**\n       * checks if object has key{string} that match\n       * to fuzzy search pattern\n       * @param object\n       * @param search\n       * @returns {boolean}\n       * @private\n       */\n      function _hasApproximateKey(object, search) {\n        var properties = Object.keys(object),\n          prop, flag;\n        return 0 < properties.filter(function (elm) {\n          prop = object[elm];\n\n          //avoid iteration if we found some key that equal[performance]\n          if(flag) return true;\n\n          if (isString(prop)) {\n            prop = (sensitive) ? prop : prop.toLowerCase();\n            return flag = (hasApproxPattern(prop, search) !== false);\n          }\n\n          return false;\n\n        }).length;\n      }\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name groupBy\n * @kind function\n *\n * @description\n * Create an object composed of keys generated from the result of running each element of a collection,\n * each key is an array of the elements.\n */\n\nangular.module('a8m.group-by', [ 'a8m.filter-watcher' ])\n  .filter('groupBy', [ '$parse', 'filterWatcher', function ( $parse, filterWatcher ) {\n    return function (collection, property) {\n\n      if(!isObject(collection) || isUndefined(property)) {\n        return collection;\n      }\n\n      return filterWatcher.isMemoized('groupBy', arguments) ||\n        filterWatcher.memoize('groupBy', arguments, this,\n          _groupBy(collection, $parse(property)));\n\n      /**\n       * groupBy function\n       * @param collection\n       * @param getter\n       * @returns {{}}\n       */\n      function _groupBy(collection, getter) {\n        var result = {};\n        var prop;\n\n        forEach( collection, function( elm ) {\n          prop = getter(elm);\n\n          if(!result[prop]) {\n            result[prop] = [];\n          }\n          result[prop].push(elm);\n        });\n        return result;\n      }\n    }\n }]);\n\n/**\n * @ngdoc filter\n * @name isEmpty\n * @kind function\n *\n * @description\n * get collection or string and return if it empty\n */\nangular.module('a8m.is-empty', [])\n  .filter('isEmpty', function () {\n    return function(collection) {\n      return isObject(collection)\n        ? !toArray(collection).length\n        : !collection.length;\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name join\n * @kind function\n *\n * @description\n * join a collection by a provided delimiter (space by default)\n */\nangular.module('a8m.join', [])\n  .filter('join', function () {\n    return function (input, delimiter) {\n      if (isUndefined(input) || !isArray(input)) {\n        return input;\n      }\n      if (isUndefined(delimiter)) delimiter = ' ';\n\n      return input.join(delimiter);\n    };\n  })\n;\n\n/**\n * @ngdoc filter\n * @name last\n * @kind function\n *\n * @description\n * Gets the last element or last n elements of an array\n * if callback is provided, is returns as long the callback return truthy\n */\nangular.module('a8m.last', [])\n  .filter('last', ['$parse', function( $parse ) {\n    return function(collection) {\n      var n\n        , getter\n        , args\n        //cuz reverse change our src collection\n        //and we don't want side effects\n        , reversed = copy(collection);\n\n      reversed = isObject(reversed)\n        ? toArray(reversed)\n        : reversed;\n\n      if(!isArray(reversed)) {\n        return reversed;\n      }\n\n      args = Array.prototype.slice.call(arguments, 1);\n      n = (isNumber(args[0])) ? args[0] : 1;\n      getter = (!isNumber(args[0]))  ? args[0] : (!isNumber(args[1])) ? args[1] : undefined;\n\n      return (args.length)\n        //send reversed collection as arguments, and reverse it back as result\n        ? getFirstMatches(reversed.reverse(), n,(getter) ? $parse(getter) : getter).reverse()\n        //get the last element\n        : reversed[reversed.length-1];\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name map\n * @kind function\n *\n * @description\n * Returns a new collection of the results of each expression execution.\n */\nangular.module('a8m.map', [])\n  .filter('map', ['$parse', function($parse) {\n    return function (collection, expression) {\n\n      collection = isObject(collection)\n        ? toArray(collection)\n        : collection;\n\n      if(!isArray(collection) || isUndefined(expression)) {\n        return collection;\n      }\n\n      return collection.map(function (elm) {\n        return $parse(expression)(elm);\n      });\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name omit\n * @kind function\n *\n * @description\n * filter collection by expression\n */\n\nangular.module('a8m.omit', [])\n\n  .filter('omit', ['$parse', function($parse) {\n    return function (collection, expression) {\n\n      collection = isObject(collection)\n        ? toArray(collection)\n        : collection;\n\n      if(!isArray(collection) || isUndefined(expression)) {\n        return collection;\n      }\n\n      return collection.filter(function (elm) {\n        return !($parse(expression)(elm));\n      });\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name pick\n * @kind function\n *\n * @description\n * filter collection by expression\n */\n\nangular.module('a8m.pick', [])\n\n  .filter('pick', ['$parse', function($parse) {\n    return function (collection, expression) {\n\n      collection = isObject(collection)\n        ? toArray(collection)\n        : collection;\n\n      if(!isArray(collection) || isUndefined(expression)) {\n        return collection;\n      }\n\n      return collection.filter(function (elm) {\n        return $parse(expression)(elm);\n      });\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name range\n * @kind function\n *\n * @description\n * rangeFilter provides some support for a for loop using numbers\n */\nangular.module('a8m.range', [])\n  .filter('range', function () {\n    return function (input, total, start, increment, cb) {\n      start = start || 0;\n      increment = increment || 1;\n      for (var i = 0; i < parseInt(total); i++) {\n        var j = start + i * increment;\n        input.push(isFunction(cb) ? cb(j) : j);\n      }\n      return input;\n    };\n  });\n/**\n * @ngdoc filter\n * @name removeWith\n * @kind function\n *\n * @description\n * get collection and properties object, and removed elements\n * with this properties\n */\n\nangular.module('a8m.remove-with', [])\n  .filter('removeWith', function() {\n    return function (collection, object) {\n\n      if(isUndefined(object)) {\n        return collection;\n      }\n      collection = isObject(collection)\n        ? toArray(collection)\n        : collection;\n\n      return collection.filter(function (elm) {\n        return !objectContains(object, elm);\n      });\n    }\n  });\n\n\n/**\n * @ngdoc filter\n * @name remove\n * @kind function\n *\n * @description\n * remove specific members from collection\n */\n\nangular.module('a8m.remove', [])\n\n  .filter('remove', function () {\n    return function (collection) {\n      collection = isObject(collection) ? toArray(collection) : collection;\n      var args = Array.prototype.slice.call(arguments, 1);\n\n      if(!isArray(collection)) {\n        return collection;\n      }\n\n      return collection.filter( function( member ) {\n        return !args.some(function(nest) {\n          return equals(nest, member);\n        })\n      });\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name reverse\n * @kind function\n *\n * @description\n * Reverses a string or collection\n */\nangular.module('a8m.reverse', [])\n    .filter('reverse',[ function () {\n      return function (input) {\n        input = isObject(input) ? toArray(input) : input;\n\n        if(isString(input)) {\n          return input.split('').reverse().join('');\n        }\n\n        return isArray(input)\n          ? input.slice().reverse()\n          : input;\n      }\n    }]);\n\n/**\n * @ngdoc filter\n * @name searchField\n * @kind function\n *\n * @description\n * for each member, join several strings field and add them to\n * new field called 'searchField' (use for search filtering)\n */\nangular.module('a8m.search-field', [])\n  .filter('searchField', ['$parse', function ($parse) {\n    return function (collection) {\n\n      var get, field;\n\n      collection = isObject(collection) ? toArray(collection) : collection;\n\n      var args = Array.prototype.slice.call(arguments, 1);\n\n      if(!isArray(collection) || !args.length) {\n        return collection;\n      }\n\n      return collection.map(function(member) {\n\n        field = args.map(function(field) {\n          get = $parse(field);\n          return get(member);\n        }).join(' ');\n\n        return extend(member, { searchField: field });\n      });\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name toArray\n * @kind function\n *\n * @description\n * Convert objects into stable arrays.\n * if addKey set to true,the filter also attaches a new property\n * $key to the value containing the original key that was used in\n * the object we are iterating over to reference the property\n */\nangular.module('a8m.to-array', [])\n  .filter('toArray', function() {\n    return function (collection, addKey) {\n\n      if(!isObject(collection)) {\n        return collection;\n      }\n\n      return !addKey\n        ? toArray(collection)\n        : Object.keys(collection).map(function (key) {\n            return extend(collection[key], { $key: key });\n          });\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name unique/uniq\n * @kind function\n *\n * @description\n * get collection and filter duplicate members\n * if uniqueFilter get a property(nested to) as argument it's\n * filter by this property as unique identifier\n */\n\nangular.module('a8m.unique', [])\n  .filter({\n      unique: ['$parse', uniqFilter],\n      uniq: ['$parse', uniqFilter]\n    });\n\nfunction uniqFilter($parse) {\n    return function (collection, property) {\n\n      collection = isObject(collection) ? toArray(collection) : collection;\n\n      if (!isArray(collection)) {\n        return collection;\n      }\n\n      //store all unique identifiers\n      var uniqueItems = [],\n          get = $parse(property);\n\n      return (isUndefined(property))\n        //if it's kind of primitive array\n        ? collection.filter(function (elm, pos, self) {\n          return self.indexOf(elm) === pos;\n        })\n        //else compare with equals\n        : collection.filter(function (elm) {\n          var prop = get(elm);\n          if(some(uniqueItems, prop)) {\n            return false;\n          }\n          uniqueItems.push(prop);\n          return true;\n      });\n\n      //checked if the unique identifier is already exist\n      function some(array, member) {\n        if(isUndefined(member)) {\n          return false;\n        }\n        return array.some(function(el) {\n          return equals(el, member);\n        });\n      }\n    }\n}\n\n/**\n * @ngdoc filter\n * @name where\n * @kind function\n *\n * @description\n * of each element in a collection to the given properties object,\n * returning an array of all elements that have equivalent property values.\n *\n */\nangular.module('a8m.where', [])\n  .filter('where', function() {\n    return function (collection, object) {\n      if(isUndefined(object)) return collection;\n      collection = isObject(collection)\n        ? toArray(collection)\n        : collection;\n\n      return collection.filter(function (elm) {\n        return objectContains(object, elm);\n      });\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name xor\n * @kind function\n *\n * @description\n * Exclusive or filter by expression\n */\n\nangular.module('a8m.xor', [])\n\n  .filter('xor', ['$parse', function($parse) {\n    return function (col1, col2, expression) {\n\n      expression = expression || false;\n\n      col1 = isObject(col1) ? toArray(col1) : col1;\n      col2 = isObject(col2) ? toArray(col2) : col2;\n\n      if(!isArray(col1) || !isArray(col2)) return col1;\n\n      return col1.concat(col2)\n        .filter(function(elm) {\n          return !(some(elm, col1) && some(elm, col2));\n        });\n\n      function some(el, col) {\n        var getter = $parse(expression);\n        return col.some(function(dElm) {\n          return expression\n            ? equals(getter(dElm), getter(el))\n            : equals(dElm, el);\n        });\n      }\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name abs\n * @kind function\n *\n * @description\n * Will return the absolute value of a number\n */\nangular.module('a8m.math.abs', [])\n  .filter('abs', function () {\n    return function (input) {\n      return Math.abs(input);\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name formatBytes\n * @kind function\n *\n * @description\n * Convert bytes into appropriate display \n * 1024 bytes => 1 KB\n */\nangular.module('a8m.math.byteFmt', [])\n  .filter('byteFmt', function () {\n    var compared = [{str: 'B', val: 1024}];\n    ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'].forEach(function(el, i) {\n      compared.push({str: el, val: compared[i].val * 1024 });\n    });\n    return function (bytes, decimal) {\n      if(isNumber(decimal) && isFinite(decimal) && decimal%1===0 && decimal >= 0 &&\n        isNumber(bytes) && isFinite(bytes)) {\n        var i = 0;\n        while (i < compared.length-1 && bytes >= compared[i].val) i++;\n        bytes /= i > 0 ? compared[i-1].val : 1;\n        return convertToDecimal(bytes, decimal) + ' ' + compared[i].str;\n      }\n      return 'NaN';\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name degrees\n * @kind function\n *\n * @description\n * Convert angle from radians to degrees\n */\nangular.module('a8m.math.degrees', [])\n  .filter('degrees', function () {\n    return function (radians, decimal) {\n      // if decimal is not an integer greater than -1, we cannot do. quit with error \"NaN\"\n      // if degrees is not a real number, we cannot do also. quit with error \"NaN\"\n      if(isNumber(decimal) && isFinite(decimal) && decimal%1===0 && decimal >= 0 &&\n        isNumber(radians) && isFinite(radians)) {\n        var degrees = (radians * 180) / Math.PI;\n        return Math.round(degrees * Math.pow(10,decimal)) / (Math.pow(10,decimal));\n      } else {\n        return 'NaN';\n      }\n    }\n  });\n\n \n \n/**\n * @ngdoc filter\n * @name formatBytes\n * @kind function\n *\n * @description\n * Convert bytes into appropriate display \n * 1024 kilobytes => 1 MB\n */\nangular.module('a8m.math.kbFmt', [])\n  .filter('kbFmt', function () {\n    var compared = [{str: 'KB', val: 1024}];\n    ['MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'].forEach(function(el, i) {\n      compared.push({str: el, val: compared[i].val * 1024 });\n    });\n    return function (bytes, decimal) {\n      if(isNumber(decimal) && isFinite(decimal) && decimal%1===0 && decimal >= 0 &&\n        isNumber(bytes) && isFinite(bytes)) {\n        var i = 0;\n        while (i < compared.length-1 && bytes >= compared[i].val) i++;\n        bytes /= i > 0 ? compared[i-1].val : 1;\n        return convertToDecimal(bytes, decimal) + ' ' + compared[i].str;\n      }\n      return 'NaN';\n    }\n  });\n/**\n * @ngdoc filter\n * @name max\n * @kind function\n *\n * @description\n * Math.max will get an array and return the max value. if an expression\n * is provided, will return max value by expression.\n */\nangular.module('a8m.math.max', [])\n  .filter('max', ['$parse', function ($parse) {\n    return function (input, expression) {\n\n      if(!isArray(input)) {\n        return input;\n      }\n      return isUndefined(expression)\n        ? Math.max.apply(Math, input)\n        : input[indexByMax(input, expression)];\n    };\n\n    /**\n     * @private\n     * @param array\n     * @param exp\n     * @returns {number|*|Number}\n     */\n    function indexByMax(array, exp) {\n      var mappedArray = array.map(function(elm){\n        return $parse(exp)(elm);\n      });\n      return mappedArray.indexOf(Math.max.apply(Math, mappedArray));\n    }\n  }]);\n/**\n * @ngdoc filter\n * @name min\n * @kind function\n *\n * @description\n * Math.min will get an array and return the min value. if an expression\n * is provided, will return min value by expression.\n */\nangular.module('a8m.math.min', [])\n  .filter('min', ['$parse', function ($parse) {\n    return function (input, expression) {\n\n      if(!isArray(input)) {\n        return input;\n      }\n      return isUndefined(expression)\n        ? Math.min.apply(Math, input)\n        : input[indexByMin(input, expression)];\n    };\n\n    /**\n     * @private\n     * @param array\n     * @param exp\n     * @returns {number|*|Number}\n     */\n    function indexByMin(array, exp) {\n      var mappedArray = array.map(function(elm){\n        return $parse(exp)(elm);\n      });\n      return mappedArray.indexOf(Math.min.apply(Math, mappedArray));\n    }\n  }]);\n/**\n * @ngdoc filter\n * @name Percent\n * @kind function\n *\n * @description\n * percentage between two numbers\n */\nangular.module('a8m.math.percent', [])\n  .filter('percent', function () {\n    return function (input, divided, round) {\n\n      var divider = isString(input) ? Number(input) : input;\n      divided = divided || 100;\n      round = round || false;\n\n      if (!isNumber(divider) || isNaN(divider)) return input;\n\n      return round\n        ? Math.round((divider / divided) * 100)\n        : (divider / divided) * 100;\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name toRadians\n * @kind function\n *\n * @description\n * Convert angle from degrees to radians\n */\nangular.module('a8m.math.radians', [])\n  .filter('radians', function() {\n    return function (degrees, decimal) {\n      // if decimal is not an integer greater than -1, we cannot do. quit with error \"NaN\"\n      // if degrees is not a real number, we cannot do also. quit with error \"NaN\"\n      if(isNumber(decimal) && isFinite(decimal) && decimal%1===0 && decimal >= 0 &&\n        isNumber(degrees) && isFinite(degrees)) {\n        var radians = (degrees * 3.14159265359) / 180;\n        return Math.round(radians * Math.pow(10,decimal)) / (Math.pow(10,decimal));\n      }\n      return 'NaN';\n    }\n  });\n\n \n \n/**\n * @ngdoc filter\n * @name Radix\n * @kind function\n *\n * @description\n * converting decimal numbers to different bases(radix)\n */\nangular.module('a8m.math.radix', [])\n  .filter('radix', function () {\n    return function (input, radix) {\n      var RANGE = /^[2-9]$|^[1-2]\\d$|^3[0-6]$/;\n\n      if(!isNumber(input) || !RANGE.test(radix)) {\n        return input;\n      }\n\n      return input.toString(radix).toUpperCase();\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name formatBytes\n * @kind function\n *\n * @description\n * Convert number into abbreviations.\n * i.e: K for one thousand, M for Million, B for billion\n * e.g: number of users:235,221, decimal:1 => 235.2 K\n */\nangular.module('a8m.math.shortFmt', [])\n  .filter('shortFmt', function () {\n    return function (number, decimal) {\n      if(isNumber(decimal) && isFinite(decimal) && decimal%1===0 && decimal >= 0 &&\n        isNumber(number) && isFinite(number)){\n        if(number < 1e3) {\n          return '' + number;  // Coerce to string\n        } else if(number < 1e6) {\n          return convertToDecimal((number / 1e3), decimal) + ' K';\n        } else if(number < 1e9){\n          return convertToDecimal((number / 1e6), decimal) + ' M';\n        } else {\n          return convertToDecimal((number / 1e9), decimal) + ' B';\n        }\n\n      }\n      return 'NaN';\n    }\n  });\n/**\n * @ngdoc filter\n * @name sum\n * @kind function\n *\n * @description\n * Sum up all values within an array\n */\nangular.module('a8m.math.sum', [])\n  .filter('sum', function () {\n    return function (input, initial) {\n      return !isArray(input)\n        ? input\n        : input.reduce(function(prev, curr) {\n          return prev + curr;\n        }, initial || 0);\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name endsWith\n * @kind function\n *\n * @description\n * checks whether string ends with the ends parameter.\n */\nangular.module('a8m.ends-with', [])\n\n  .filter('endsWith', function () {\n    return function (input, ends, csensitive) {\n\n      var sensitive = csensitive || false,\n        position;\n\n      if(!isString(input) || isUndefined(ends)) {\n        return input;\n      }\n\n      input = (sensitive) ? input : input.toLowerCase();\n      position = input.length - ends.length;\n\n      return input.indexOf((sensitive) ? ends : ends.toLowerCase(), position) !== -1;\n    }\n  });\n\n/**\r\n * @ngdoc filter\r\n * @name latinize\r\n * @kind function\r\n *\r\n * @description\r\n * remove accents/diacritics from a string\r\n */\r\nangular.module('a8m.latinize', [])\r\n  .filter('latinize',[ function () {\r\n    var defaultDiacriticsRemovalap = [\r\n      {'base':'A', 'letters':'\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F'},\r\n      {'base':'AA','letters':'\\uA732'},\r\n      {'base':'AE','letters':'\\u00C6\\u01FC\\u01E2'},\r\n      {'base':'AO','letters':'\\uA734'},\r\n      {'base':'AU','letters':'\\uA736'},\r\n      {'base':'AV','letters':'\\uA738\\uA73A'},\r\n      {'base':'AY','letters':'\\uA73C'},\r\n      {'base':'B', 'letters':'\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181'},\r\n      {'base':'C', 'letters':'\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E'},\r\n      {'base':'D', 'letters':'\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779'},\r\n      {'base':'DZ','letters':'\\u01F1\\u01C4'},\r\n      {'base':'Dz','letters':'\\u01F2\\u01C5'},\r\n      {'base':'E', 'letters':'\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E'},\r\n      {'base':'F', 'letters':'\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B'},\r\n      {'base':'G', 'letters':'\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E'},\r\n      {'base':'H', 'letters':'\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D'},\r\n      {'base':'I', 'letters':'\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197'},\r\n      {'base':'J', 'letters':'\\u004A\\u24BF\\uFF2A\\u0134\\u0248'},\r\n      {'base':'K', 'letters':'\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2'},\r\n      {'base':'L', 'letters':'\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780'},\r\n      {'base':'LJ','letters':'\\u01C7'},\r\n      {'base':'Lj','letters':'\\u01C8'},\r\n      {'base':'M', 'letters':'\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C'},\r\n      {'base':'N', 'letters':'\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4'},\r\n      {'base':'NJ','letters':'\\u01CA'},\r\n      {'base':'Nj','letters':'\\u01CB'},\r\n      {'base':'O', 'letters':'\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C'},\r\n      {'base':'OI','letters':'\\u01A2'},\r\n      {'base':'OO','letters':'\\uA74E'},\r\n      {'base':'OU','letters':'\\u0222'},\r\n      {'base':'OE','letters':'\\u008C\\u0152'},\r\n      {'base':'oe','letters':'\\u009C\\u0153'},\r\n      {'base':'P', 'letters':'\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754'},\r\n      {'base':'Q', 'letters':'\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A'},\r\n      {'base':'R', 'letters':'\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782'},\r\n      {'base':'S', 'letters':'\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784'},\r\n      {'base':'T', 'letters':'\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786'},\r\n      {'base':'TZ','letters':'\\uA728'},\r\n      {'base':'U', 'letters':'\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244'},\r\n      {'base':'V', 'letters':'\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245'},\r\n      {'base':'VY','letters':'\\uA760'},\r\n      {'base':'W', 'letters':'\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72'},\r\n      {'base':'X', 'letters':'\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C'},\r\n      {'base':'Y', 'letters':'\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE'},\r\n      {'base':'Z', 'letters':'\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762'},\r\n      {'base':'a', 'letters':'\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250'},\r\n      {'base':'aa','letters':'\\uA733'},\r\n      {'base':'ae','letters':'\\u00E6\\u01FD\\u01E3'},\r\n      {'base':'ao','letters':'\\uA735'},\r\n      {'base':'au','letters':'\\uA737'},\r\n      {'base':'av','letters':'\\uA739\\uA73B'},\r\n      {'base':'ay','letters':'\\uA73D'},\r\n      {'base':'b', 'letters':'\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253'},\r\n      {'base':'c', 'letters':'\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184'},\r\n      {'base':'d', 'letters':'\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A'},\r\n      {'base':'dz','letters':'\\u01F3\\u01C6'},\r\n      {'base':'e', 'letters':'\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD'},\r\n      {'base':'f', 'letters':'\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C'},\r\n      {'base':'g', 'letters':'\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F'},\r\n      {'base':'h', 'letters':'\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265'},\r\n      {'base':'hv','letters':'\\u0195'},\r\n      {'base':'i', 'letters':'\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131'},\r\n      {'base':'j', 'letters':'\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249'},\r\n      {'base':'k', 'letters':'\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3'},\r\n      {'base':'l', 'letters':'\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747'},\r\n      {'base':'lj','letters':'\\u01C9'},\r\n      {'base':'m', 'letters':'\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F'},\r\n      {'base':'n', 'letters':'\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5'},\r\n      {'base':'nj','letters':'\\u01CC'},\r\n      {'base':'o', 'letters':'\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275'},\r\n      {'base':'oi','letters':'\\u01A3'},\r\n      {'base':'ou','letters':'\\u0223'},\r\n      {'base':'oo','letters':'\\uA74F'},\r\n      {'base':'p','letters':'\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755'},\r\n      {'base':'q','letters':'\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759'},\r\n      {'base':'r','letters':'\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783'},\r\n      {'base':'s','letters':'\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B'},\r\n      {'base':'t','letters':'\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787'},\r\n      {'base':'tz','letters':'\\uA729'},\r\n      {'base':'u','letters': '\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289'},\r\n      {'base':'v','letters':'\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C'},\r\n      {'base':'vy','letters':'\\uA761'},\r\n      {'base':'w','letters':'\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73'},\r\n      {'base':'x','letters':'\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D'},\r\n      {'base':'y','letters':'\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF'},\r\n      {'base':'z','letters':'\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763'}\r\n    ];\r\n\r\n    var diacriticsMap = {};\r\n    for (var i = 0; i < defaultDiacriticsRemovalap.length; i++) {\r\n      var letters = defaultDiacriticsRemovalap[i].letters.split(\"\");\r\n      for (var j = 0; j < letters.length ; j++){\r\n        diacriticsMap[letters[j]] = defaultDiacriticsRemovalap[i].base;\r\n      }\r\n    }\r\n\r\n    // \"what?\" version ... http://jsperf.com/diacritics/12\r\n    function removeDiacritics (str) {\r\n      return str.replace(/[^\\u0000-\\u007E]/g, function(a){\r\n        return diacriticsMap[a] || a;\r\n      });\r\n    }\r\n\r\n    return function (input) {\r\n\r\n      return isString(input)\r\n        ? removeDiacritics(input)\r\n        : input;\r\n    }\r\n  }]);\r\n\n/**\n * @ngdoc filter\n * @name ltrim\n * @kind function\n *\n * @description\n * Left trim. Similar to trimFilter, but only for left side.\n */\nangular.module('a8m.ltrim', [])\n  .filter('ltrim', function () {\n    return function(input, chars) {\n\n      var trim = chars || '\\\\s';\n\n      return isString(input)\n        ? input.replace(new RegExp('^' + trim + '+'), '')\n        : input;\n    }\n  });\n\n/**\r\n * @ngdoc filter\r\n * @name match\r\n * @kind function\r\n *\r\n * @description\r\n * Return the matched pattern in a string.\r\n */\r\nangular.module('a8m.match', [])\r\n  .filter('match', function () {\r\n    return function (input, pattern, flag) {\r\n\r\n      var reg = new RegExp(pattern, flag);\r\n\r\n      return isString(input)\r\n        ? input.match(reg)\r\n        : null;\r\n    }\r\n  });\r\n\n/**\n * @ngdoc filter\n * @name repeat\n * @kind function\n *\n * @description\n * Repeats a string n times\n */\nangular.module('a8m.repeat', [])\n  .filter('repeat',[ function () {\n    return function (input, n, separator) {\n\n      var times = ~~n;\n\n      if(!isString(input)) {\n        return input;\n      }\n\n      return !times\n        ? input\n        : strRepeat(input, --n, separator || '');\n    }\n  }]);\n\n/**\n * Repeats a string n times with given separator\n * @param str string to repeat\n * @param n number of times\n * @param sep separator\n * @returns {*}\n */\nfunction strRepeat(str, n, sep) {\n  if(!n) {\n    return str;\n  }\n  return str + sep + strRepeat(str, --n, sep);\n}\n/**\n* @ngdoc filter\n* @name rtrim\n* @kind function\n*\n* @description\n* Right trim. Similar to trimFilter, but only for right side.\n*/\nangular.module('a8m.rtrim', [])\n  .filter('rtrim', function () {\n    return function(input, chars) {\n\n      var trim = chars || '\\\\s';\n\n      return isString(input)\n        ? input.replace(new RegExp(trim + '+$'), '')\n        : input;\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name slugify\n * @kind function\n *\n * @description\n * remove spaces from string, replace with \"-\" or given argument\n */\nangular.module('a8m.slugify', [])\n  .filter('slugify',[ function () {\n    return function (input, sub) {\n\n      var replace = (isUndefined(sub)) ? '-' : sub;\n\n      return isString(input)\n        ? input.toLowerCase().replace(/\\s+/g, replace)\n        : input;\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name startWith\n * @kind function\n *\n * @description\n * checks whether string starts with the starts parameter.\n */\nangular.module('a8m.starts-with', [])\n  .filter('startsWith', function () {\n    return function (input, start, csensitive) {\n\n      var sensitive = csensitive || false;\n\n      if(!isString(input) || isUndefined(start)) {\n        return input;\n      }\n\n      input = (sensitive) ? input : input.toLowerCase();\n\n      return !input.indexOf((sensitive) ? start : start.toLowerCase());\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name stringular\n * @kind function\n *\n * @description\n * get string with {n} and replace match with enumeration values\n */\nangular.module('a8m.stringular', [])\n  .filter('stringular', function () {\n    return function(input) {\n\n      var args = Array.prototype.slice.call(arguments, 1);\n\n      return input.replace(/{(\\d+)}/g, function (match, number) {\n        return isUndefined(args[number]) ? match : args[number];\n      });\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name stripTags\n * @kind function\n *\n * @description\n * strip html tags from string\n */\nangular.module('a8m.strip-tags', [])\n  .filter('stripTags', function () {\n    return function(input) {\n      return isString(input)\n        ? input.replace(/<\\S[^><]*>/g, '')\n        : input;\n    }\n  });\n\n/**\r\n * @ngdoc filter\r\n * @name test\r\n * @kind function\r\n *\r\n * @description\r\n * test if a string match a pattern.\r\n */\r\nangular.module('a8m.test', [])\r\n  .filter('test', function () {\r\n    return function (input, pattern, flag) {\r\n\r\n      var reg = new RegExp(pattern, flag);\r\n\r\n      return isString(input)\r\n        ? reg.test(input)\r\n        : input;\r\n    }\r\n  });\r\n\n/**\n * @ngdoc filter\n * @name trim\n * @kind function\n *\n * @description\n *  Strip whitespace (or other characters) from the beginning and end of a string\n */\nangular.module('a8m.trim', [])\n  .filter('trim', function () {\n    return function(input, chars) {\n\n      var trim = chars || '\\\\s';\n\n      return isString(input)\n        ? input.replace(new RegExp('^' + trim + '+|' + trim + '+$', 'g'), '')\n        : input;\n    }\n  });\n\n/**\n * @ngdoc filter\n * @name truncate\n * @kind function\n *\n * @description\n * truncates a string given a specified length, providing a custom string to denote an omission.\n */\nangular.module('a8m.truncate', [])\n  .filter('truncate', function () {\n    return function(input, length, suffix, preserve) {\n\n      length = isUndefined(length) ? input.length : length;\n      preserve = preserve || false;\n      suffix = suffix || '';\n\n      if(!isString(input) || (input.length <= length)) return input;\n\n      return input.substring(0, (preserve)\n        ? ((input.indexOf(' ', length) === -1) ? input.length : input.indexOf(' ', length))\n        : length) + suffix;\n    };\n  });\n\n/**\n * @ngdoc filter\n * @name ucfirst\n * @kind function\n *\n * @description\n * ucfirst\n */\nangular.module('a8m.ucfirst', [])\n  .filter('ucfirst', [function() {\n    return function(input) {\n      return isString(input)\n        ? input\n            .split(' ')\n            .map(function (ch) {\n              return ch.charAt(0).toUpperCase() + ch.substring(1);\n            })\n            .join(' ')\n        : input;\n    }\n  }]);\n\n/**\n * @ngdoc filter\n * @name uriComponentEncode\n * @kind function\n *\n * @description\n * get string as parameter and return encoded string\n */\nangular.module('a8m.uri-component-encode', [])\n  .filter('uriComponentEncode',['$window', function ($window) {\n      return function (input) {\n        return isString(input)\n          ? $window.encodeURIComponent(input)\n          : input;\n      }\n    }]);\n\n/**\n * @ngdoc filter\n * @name uriEncode\n * @kind function\n *\n * @description\n * get string as parameter and return encoded string\n */\nangular.module('a8m.uri-encode', [])\n  .filter('uriEncode',['$window', function ($window) {\n      return function (input) {\n        return isString(input)\n          ? $window.encodeURI(input)\n          : input;\n      }\n    }]);\n\n/**\n * @ngdoc filter\n * @name wrap\n * @kind function\n *\n * @description\n * Wrap a string with another string\n */\nangular.module('a8m.wrap', [])\n  .filter('wrap', function () {\n    return function(input, wrap, ends) {\n      return isString(input) && isDefined(wrap)\n        ? [wrap, input, ends || wrap].join('')\n        : input;\n    }\n  });\n\n/**\n * @ngdoc provider\n * @name filterWatcher\n * @kind function\n *\n * @description\n * store specific filters result in $$cache, based on scope life time(avoid memory leak).\n * on scope.$destroy remove it's cache from $$cache container\n */\n\nangular.module('a8m.filter-watcher', [])\n  .provider('filterWatcher', function() {\n\n    this.$get = ['$window', '$rootScope', function($window, $rootScope) {\n\n      /**\n       * Cache storing\n       * @type {Object}\n       */\n      var $$cache = {};\n\n      /**\n       * Scope listeners container\n       * scope.$destroy => remove all cache keys\n       * bind to current scope.\n       * @type {Object}\n       */\n      var $$listeners = {};\n\n      /**\n       * $timeout without triggering the digest cycle\n       * @type {function}\n       */\n      var $$timeout = $window.setTimeout;\n\n      /**\n       * @description\n       * get `HashKey` string based on the given arguments.\n       * @param fName\n       * @param args\n       * @returns {string}\n       */\n      function getHashKey(fName, args) {\n        function replacerFactory() {\n          var cache = [];\n          return function(key, val) {\n            if(isObject(val) && !isNull(val)) {\n              if (~cache.indexOf(val)) return '[Circular]';\n              cache.push(val)\n            }\n            if($window == val) return '$WINDOW';\n            if($window.document == val) return '$DOCUMENT';\n            if(isScope(val)) return '$SCOPE';\n            return val;\n          }\n        }\n        return [fName, JSON.stringify(args, replacerFactory())]\n          .join('#')\n          .replace(/\"/g,'');\n      }\n\n      /**\n       * @description\n       * fir on $scope.$destroy,\n       * remove cache based scope from `$$cache`,\n       * and remove itself from `$$listeners`\n       * @param event\n       */\n      function removeCache(event) {\n        var id = event.targetScope.$id;\n        forEach($$listeners[id], function(key) {\n          delete $$cache[key];\n        });\n        delete $$listeners[id];\n      }\n\n      /**\n       * @description\n       * for angular version that greater than v.1.3.0\n       * it clear cache when the digest cycle is end.\n       */\n      function cleanStateless() {\n        $$timeout(function() {\n          if(!$rootScope.$$phase)\n            $$cache = {};\n        }, 2000);\n      }\n\n      /**\n       * @description\n       * Store hashKeys in $$listeners container\n       * on scope.$destroy, remove them all(bind an event).\n       * @param scope\n       * @param hashKey\n       * @returns {*}\n       */\n      function addListener(scope, hashKey) {\n        var id = scope.$id;\n        if(isUndefined($$listeners[id])) {\n          scope.$on('$destroy', removeCache);\n          $$listeners[id] = [];\n        }\n        return $$listeners[id].push(hashKey);\n      }\n\n      /**\n       * @description\n       * return the `cacheKey` or undefined.\n       * @param filterName\n       * @param args\n       * @returns {*}\n       */\n      function $$isMemoized(filterName, args) {\n        var hashKey = getHashKey(filterName, args);\n        return $$cache[hashKey];\n      }\n\n      /**\n       * @description\n       * store `result` in `$$cache` container, based on the hashKey.\n       * add $destroy listener and return result\n       * @param filterName\n       * @param args\n       * @param scope\n       * @param result\n       * @returns {*}\n       */\n      function $$memoize(filterName, args, scope, result) {\n        var hashKey = getHashKey(filterName, args);\n        //store result in `$$cache` container\n        $$cache[hashKey] = result;\n        // for angular versions that less than 1.3\n        // add to `$destroy` listener, a cleaner callback\n        if(isScope(scope)) {\n          addListener(scope, hashKey);\n        } else {\n          cleanStateless();\n        }\n        return result;\n      }\n\n      return {\n        isMemoized: $$isMemoized,\n        memoize: $$memoize\n      }\n    }];\n  });\n  \n\n/**\n * @ngdoc module\n * @name angular.filters\n * @description\n * Bunch of useful filters for angularJS\n */\n\nangular.module('angular.filter', [\n\n  'a8m.ucfirst',\n  'a8m.uri-encode',\n  'a8m.uri-component-encode',\n  'a8m.slugify',\n  'a8m.latinize',\n  'a8m.strip-tags',\n  'a8m.stringular',\n  'a8m.truncate',\n  'a8m.starts-with',\n  'a8m.ends-with',\n  'a8m.wrap',\n  'a8m.trim',\n  'a8m.ltrim',\n  'a8m.rtrim',\n  'a8m.repeat',\n  'a8m.test',\n  'a8m.match',\n\n  'a8m.to-array',\n  'a8m.concat',\n  'a8m.contains',\n  'a8m.unique',\n  'a8m.is-empty',\n  'a8m.after',\n  'a8m.after-where',\n  'a8m.before',\n  'a8m.before-where',\n  'a8m.defaults',\n  'a8m.where',\n  'a8m.reverse',\n  'a8m.remove',\n  'a8m.remove-with',\n  'a8m.group-by',\n  'a8m.count-by',\n  'a8m.chunk-by',\n  'a8m.search-field',\n  'a8m.fuzzy-by',\n  'a8m.fuzzy',\n  'a8m.omit',\n  'a8m.pick',\n  'a8m.every',\n  'a8m.filter-by',\n  'a8m.xor',\n  'a8m.map',\n  'a8m.first',\n  'a8m.last',\n  'a8m.flatten',\n  'a8m.join',\n  'a8m.range',\n\n  'a8m.math.max',\n  'a8m.math.min',\n  'a8m.math.abs',\n  'a8m.math.percent',\n  'a8m.math.radix',\n  'a8m.math.sum',\n  'a8m.math.degrees',\n  'a8m.math.radians',\n  'a8m.math.byteFmt',\n  'a8m.math.kbFmt',\n  'a8m.math.shortFmt',\n\n  'a8m.angular',\n  'a8m.conditions',\n  'a8m.is-null',\n\n  'a8m.filter-watcher'\n]);\n})( window, window.angular );","(function(window) {\n   var createModule = function(angular) {\n      var module = angular.module('FBAngular', []);\n\n      module.factory('Fullscreen', ['$document', '$rootScope', function ($document,$rootScope) {\n         var document = $document[0];\n\n         // ensure ALLOW_KEYBOARD_INPUT is available and enabled\n         var isKeyboardAvailbleOnFullScreen = (typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element) && Element.ALLOW_KEYBOARD_INPUT;\n\n         var emitter = $rootScope.$new();\n\n         // listen event on document instead of element to avoid firefox limitation\n         // see https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode\n         $document.on('fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange', function(){\n            emitter.$emit('FBFullscreen.change', serviceInstance.isEnabled());\n         });\n\n         var serviceInstance = {\n            $on: angular.bind(emitter, emitter.$on),\n            all: function() {\n               serviceInstance.enable( document.documentElement );\n            },\n            enable: function(element) {\n               if(element.requestFullScreen) {\n                  element.requestFullScreen();\n               } else if(element.mozRequestFullScreen) {\n                  element.mozRequestFullScreen();\n               } else if(element.webkitRequestFullscreen) {\n                  // Safari temporary fix\n                  if (/Version\\/[\\d]{1,2}(\\.[\\d]{1,2}){1}(\\.(\\d){1,2}){0,1} Safari/.test(navigator.userAgent)) {\n                     element.webkitRequestFullscreen();\n                  } else {\n                     element.webkitRequestFullscreen(isKeyboardAvailbleOnFullScreen);\n                  }\n               } else if (element.msRequestFullscreen) {\n                  element.msRequestFullscreen();\n               }\n            },\n            cancel: function() {\n               if(document.cancelFullScreen) {\n                  document.cancelFullScreen();\n               } else if(document.mozCancelFullScreen) {\n                  document.mozCancelFullScreen();\n               } else if(document.webkitExitFullscreen) {\n                  document.webkitExitFullscreen();\n               } else if (document.msExitFullscreen) {\n                  document.msExitFullscreen();\n               }\n            },\n            isEnabled: function(){\n               var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\n               return fullscreenElement ? true : false;\n            },\n            toggleAll: function(){\n                serviceInstance.isEnabled() ? serviceInstance.cancel() : serviceInstance.all();\n            },\n            isSupported: function(){\n                var docElm = document.documentElement;\n                var requestFullscreen = docElm.requestFullScreen || docElm.mozRequestFullScreen || docElm.webkitRequestFullscreen || docElm.msRequestFullscreen;\n                return requestFullscreen ? true : false;\n            }\n         };\n\n         return serviceInstance;\n      }]);\n\n      module.directive('fullscreen', ['Fullscreen', function(Fullscreen) {\n         return {\n            link : function ($scope, $element, $attrs) {\n               // Watch for changes on scope if model is provided\n               if ($attrs.fullscreen) {\n                  $scope.$watch($attrs.fullscreen, function(value) {\n                     var isEnabled = Fullscreen.isEnabled();\n                     if (value && !isEnabled) {\n                        Fullscreen.enable($element[0]);\n                        $element.addClass('isInFullScreen');\n                     } else if (!value && isEnabled) {\n                        Fullscreen.cancel();\n                        $element.removeClass('isInFullScreen');\n                     }\n                  });\n\n                  // Listen on the `FBFullscreen.change`\n                  // the event will fire when anything changes the fullscreen mode\n                  var removeFullscreenHandler = Fullscreen.$on('FBFullscreen.change', function(evt, isFullscreenEnabled){\n                     if(!isFullscreenEnabled){\n                        $scope.$evalAsync(function(){\n                           $scope.$eval($attrs.fullscreen + '= false');\n                           $element.removeClass('isInFullScreen');\n                        });\n                     }\n                  });\n\n                  $scope.$on('$destroy', function() {\n                     removeFullscreenHandler();\n                  });\n\n               } else {\n                  if ($attrs.onlyWatchedProperty !== undefined) {\n                     return;\n                  }\n\n                  $element.on('click', function (ev) {\n                     Fullscreen.enable(  $element[0] );\n                  });\n               }\n            }\n         };\n      }]);\n      return module;\n   };\n\n   if (typeof define === \"function\" && define.amd) {\n      define(\"FBAngular\", ['angular'], function (angular) { return createModule(angular); } );\n   } else {\n      createModule(window.angular);\n   }\n})(window);\n","/**\n * @license AngularJS v1.6.6\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\nvar forEach;\nvar isArray;\nvar isString;\nvar jqLite;\n\n/**\n * @ngdoc module\n * @name ngMessages\n * @description\n *\n * The `ngMessages` module provides enhanced support for displaying messages within templates\n * (typically within forms or when rendering message objects that return key/value data).\n * Instead of relying on JavaScript code and/or complex ng-if statements within your form template to\n * show and hide error messages specific to the state of an input field, the `ngMessages` and\n * `ngMessage` directives are designed to handle the complexity, inheritance and priority\n * sequencing based on the order of how the messages are defined in the template.\n *\n * Currently, the ngMessages module only contains the code for the `ngMessages`, `ngMessagesInclude`\n * `ngMessage` and `ngMessageExp` directives.\n *\n * # Usage\n * The `ngMessages` directive allows keys in a key/value collection to be associated with a child element\n * (or 'message') that will show or hide based on the truthiness of that key's value in the collection. A common use\n * case for `ngMessages` is to display error messages for inputs using the `$error` object exposed by the\n * {@link ngModel ngModel} directive.\n *\n * The child elements of the `ngMessages` directive are matched to the collection keys by a `ngMessage` or\n * `ngMessageExp` directive. The value of these attributes must match a key in the collection that is provided by\n * the `ngMessages` directive.\n *\n * Consider the following example, which illustrates a typical use case of `ngMessages`. Within the form `myForm` we\n * have a text input named `myField` which is bound to the scope variable `field` using the {@link ngModel ngModel}\n * directive.\n *\n * The `myField` field is a required input of type `email` with a maximum length of 15 characters.\n *\n * ```html\n * <form name=\"myForm\">\n *   <label>\n *     Enter text:\n *     <input type=\"email\" ng-model=\"field\" name=\"myField\" required maxlength=\"15\" />\n *   </label>\n *   <div ng-messages=\"myForm.myField.$error\" role=\"alert\">\n *     <div ng-message=\"required\">Please enter a value for this field.</div>\n *     <div ng-message=\"email\">This field must be a valid email address.</div>\n *     <div ng-message=\"maxlength\">This field can be at most 15 characters long.</div>\n *   </div>\n * </form>\n * ```\n *\n * In order to show error messages corresponding to `myField` we first create an element with an `ngMessages` attribute\n * set to the `$error` object owned by the `myField` input in our `myForm` form.\n *\n * Within this element we then create separate elements for each of the possible errors that `myField` could have.\n * The `ngMessage` attribute is used to declare which element(s) will appear for which error - for example,\n * setting `ng-message=\"required\"` specifies that this particular element should be displayed when there\n * is no value present for the required field `myField` (because the key `required` will be `true` in the object\n * `myForm.myField.$error`).\n *\n * ### Message order\n *\n * By default, `ngMessages` will only display one message for a particular key/value collection at any time. If more\n * than one message (or error) key is currently true, then which message is shown is determined by the order of messages\n * in the HTML template code (messages declared first are prioritised). This mechanism means the developer does not have\n * to prioritize messages using custom JavaScript code.\n *\n * Given the following error object for our example (which informs us that the field `myField` currently has both the\n * `required` and `email` errors):\n *\n * ```javascript\n * <!-- keep in mind that ngModel automatically sets these error flags -->\n * myField.$error = { required : true, email: true, maxlength: false };\n * ```\n * The `required` message will be displayed to the user since it appears before the `email` message in the DOM.\n * Once the user types a single character, the `required` message will disappear (since the field now has a value)\n * but the `email` message will be visible because it is still applicable.\n *\n * ### Displaying multiple messages at the same time\n *\n * While `ngMessages` will by default only display one error element at a time, the `ng-messages-multiple` attribute can\n * be applied to the `ngMessages` container element to cause it to display all applicable error messages at once:\n *\n * ```html\n * <!-- attribute-style usage -->\n * <div ng-messages=\"myForm.myField.$error\" ng-messages-multiple>...</div>\n *\n * <!-- element-style usage -->\n * <ng-messages for=\"myForm.myField.$error\" multiple>...</ng-messages>\n * ```\n *\n * ## Reusing and Overriding Messages\n * In addition to prioritization, ngMessages also allows for including messages from a remote or an inline\n * template. This allows for generic collection of messages to be reused across multiple parts of an\n * application.\n *\n * ```html\n * <script type=\"text/ng-template\" id=\"error-messages\">\n *   <div ng-message=\"required\">This field is required</div>\n *   <div ng-message=\"minlength\">This field is too short</div>\n * </script>\n *\n * <div ng-messages=\"myForm.myField.$error\" role=\"alert\">\n *   <div ng-messages-include=\"error-messages\"></div>\n * </div>\n * ```\n *\n * However, including generic messages may not be useful enough to match all input fields, therefore,\n * `ngMessages` provides the ability to override messages defined in the remote template by redefining\n * them within the directive container.\n *\n * ```html\n * <!-- a generic template of error messages known as \"my-custom-messages\" -->\n * <script type=\"text/ng-template\" id=\"my-custom-messages\">\n *   <div ng-message=\"required\">This field is required</div>\n *   <div ng-message=\"minlength\">This field is too short</div>\n * </script>\n *\n * <form name=\"myForm\">\n *   <label>\n *     Email address\n *     <input type=\"email\"\n *            id=\"email\"\n *            name=\"myEmail\"\n *            ng-model=\"email\"\n *            minlength=\"5\"\n *            required />\n *   </label>\n *   <!-- any ng-message elements that appear BEFORE the ng-messages-include will\n *        override the messages present in the ng-messages-include template -->\n *   <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n *     <!-- this required message has overridden the template message -->\n *     <div ng-message=\"required\">You did not enter your email address</div>\n *\n *     <!-- this is a brand new message and will appear last in the prioritization -->\n *     <div ng-message=\"email\">Your email address is invalid</div>\n *\n *     <!-- and here are the generic error messages -->\n *     <div ng-messages-include=\"my-custom-messages\"></div>\n *   </div>\n * </form>\n * ```\n *\n * In the example HTML code above the message that is set on required will override the corresponding\n * required message defined within the remote template. Therefore, with particular input fields (such\n * email addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied\n * while more generic messages can be used to handle other, more general input errors.\n *\n * ## Dynamic Messaging\n * ngMessages also supports using expressions to dynamically change key values. Using arrays and\n * repeaters to list messages is also supported. This means that the code below will be able to\n * fully adapt itself and display the appropriate message when any of the expression data changes:\n *\n * ```html\n * <form name=\"myForm\">\n *   <label>\n *     Email address\n *     <input type=\"email\"\n *            name=\"myEmail\"\n *            ng-model=\"email\"\n *            minlength=\"5\"\n *            required />\n *   </label>\n *   <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n *     <div ng-message=\"required\">You did not enter your email address</div>\n *     <div ng-repeat=\"errorMessage in errorMessages\">\n *       <!-- use ng-message-exp for a message whose key is given by an expression -->\n *       <div ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\n *     </div>\n *   </div>\n * </form>\n * ```\n *\n * The `errorMessage.type` expression can be a string value or it can be an array so\n * that multiple errors can be associated with a single error message:\n *\n * ```html\n *   <label>\n *     Email address\n *     <input type=\"email\"\n *            ng-model=\"data.email\"\n *            name=\"myEmail\"\n *            ng-minlength=\"5\"\n *            ng-maxlength=\"100\"\n *            required />\n *   </label>\n *   <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n *     <div ng-message-exp=\"'required'\">You did not enter your email address</div>\n *     <div ng-message-exp=\"['minlength', 'maxlength']\">\n *       Your email must be between 5 and 100 characters long\n *     </div>\n *   </div>\n * ```\n *\n * Feel free to use other structural directives such as ng-if and ng-switch to further control\n * what messages are active and when. Be careful, if you place ng-message on the same element\n * as these structural directives, Angular may not be able to determine if a message is active\n * or not. Therefore it is best to place the ng-message on a child element of the structural\n * directive.\n *\n * ```html\n * <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n *   <div ng-if=\"showRequiredError\">\n *     <div ng-message=\"required\">Please enter something</div>\n *   </div>\n * </div>\n * ```\n *\n * ## Animations\n * If the `ngAnimate` module is active within the application then the `ngMessages`, `ngMessage` and\n * `ngMessageExp` directives will trigger animations whenever any messages are added and removed from\n * the DOM by the `ngMessages` directive.\n *\n * Whenever the `ngMessages` directive contains one or more visible messages then the `.ng-active` CSS\n * class will be added to the element. The `.ng-inactive` CSS class will be applied when there are no\n * messages present. Therefore, CSS transitions and keyframes as well as JavaScript animations can\n * hook into the animations whenever these classes are added/removed.\n *\n * Let's say that our HTML code for our messages container looks like so:\n *\n * ```html\n * <div ng-messages=\"myMessages\" class=\"my-messages\" role=\"alert\">\n *   <div ng-message=\"alert\" class=\"some-message\">...</div>\n *   <div ng-message=\"fail\" class=\"some-message\">...</div>\n * </div>\n * ```\n *\n * Then the CSS animation code for the message container looks like so:\n *\n * ```css\n * .my-messages {\n *   transition:1s linear all;\n * }\n * .my-messages.ng-active {\n *   // messages are visible\n * }\n * .my-messages.ng-inactive {\n *   // messages are hidden\n * }\n * ```\n *\n * Whenever an inner message is attached (becomes visible) or removed (becomes hidden) then the enter\n * and leave animation is triggered for each particular element bound to the `ngMessage` directive.\n *\n * Therefore, the CSS code for the inner messages looks like so:\n *\n * ```css\n * .some-message {\n *   transition:1s linear all;\n * }\n *\n * .some-message.ng-enter {}\n * .some-message.ng-enter.ng-enter-active {}\n *\n * .some-message.ng-leave {}\n * .some-message.ng-leave.ng-leave-active {}\n * ```\n *\n * {@link ngAnimate Click here} to learn how to use JavaScript animations or to learn more about ngAnimate.\n */\nangular.module('ngMessages', [], function initAngularHelpers() {\n  // Access helpers from angular core.\n  // Do it inside a `config` block to ensure `window.angular` is available.\n  forEach = angular.forEach;\n  isArray = angular.isArray;\n  isString = angular.isString;\n  jqLite = angular.element;\n})\n  .info({ angularVersion: '1.6.6' })\n\n  /**\n   * @ngdoc directive\n   * @module ngMessages\n   * @name ngMessages\n   * @restrict AE\n   *\n   * @description\n   * `ngMessages` is a directive that is designed to show and hide messages based on the state\n   * of a key/value object that it listens on. The directive itself complements error message\n   * reporting with the `ngModel` $error object (which stores a key/value state of validation errors).\n   *\n   * `ngMessages` manages the state of internal messages within its container element. The internal\n   * messages use the `ngMessage` directive and will be inserted/removed from the page depending\n   * on if they're present within the key/value object. By default, only one message will be displayed\n   * at a time and this depends on the prioritization of the messages within the template. (This can\n   * be changed by using the `ng-messages-multiple` or `multiple` attribute on the directive container.)\n   *\n   * A remote template can also be used to promote message reusability and messages can also be\n   * overridden.\n   *\n   * {@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.\n   *\n   * @usage\n   * ```html\n   * <!-- using attribute directives -->\n   * <ANY ng-messages=\"expression\" role=\"alert\">\n   *   <ANY ng-message=\"stringValue\">...</ANY>\n   *   <ANY ng-message=\"stringValue1, stringValue2, ...\">...</ANY>\n   *   <ANY ng-message-exp=\"expressionValue\">...</ANY>\n   * </ANY>\n   *\n   * <!-- or by using element directives -->\n   * <ng-messages for=\"expression\" role=\"alert\">\n   *   <ng-message when=\"stringValue\">...</ng-message>\n   *   <ng-message when=\"stringValue1, stringValue2, ...\">...</ng-message>\n   *   <ng-message when-exp=\"expressionValue\">...</ng-message>\n   * </ng-messages>\n   * ```\n   *\n   * @param {string} ngMessages an angular expression evaluating to a key/value object\n   *                 (this is typically the $error object on an ngModel instance).\n   * @param {string=} ngMessagesMultiple|multiple when set, all messages will be displayed with true\n   *\n   * @example\n   * <example name=\"ngMessages-directive\" module=\"ngMessagesExample\"\n   *          deps=\"angular-messages.js\"\n   *          animations=\"true\" fixBase=\"true\">\n   *   <file name=\"index.html\">\n   *     <form name=\"myForm\">\n   *       <label>\n   *         Enter your name:\n   *         <input type=\"text\"\n   *                name=\"myName\"\n   *                ng-model=\"name\"\n   *                ng-minlength=\"5\"\n   *                ng-maxlength=\"20\"\n   *                required />\n   *       </label>\n   *       <pre>myForm.myName.$error = {{ myForm.myName.$error | json }}</pre>\n   *\n   *       <div ng-messages=\"myForm.myName.$error\" style=\"color:maroon\" role=\"alert\">\n   *         <div ng-message=\"required\">You did not enter a field</div>\n   *         <div ng-message=\"minlength\">Your field is too short</div>\n   *         <div ng-message=\"maxlength\">Your field is too long</div>\n   *       </div>\n   *     </form>\n   *   </file>\n   *   <file name=\"script.js\">\n   *     angular.module('ngMessagesExample', ['ngMessages']);\n   *   </file>\n   * </example>\n   */\n  .directive('ngMessages', ['$animate', function($animate) {\n    var ACTIVE_CLASS = 'ng-active';\n    var INACTIVE_CLASS = 'ng-inactive';\n\n    return {\n      require: 'ngMessages',\n      restrict: 'AE',\n      controller: ['$element', '$scope', '$attrs', function NgMessagesCtrl($element, $scope, $attrs) {\n        var ctrl = this;\n        var latestKey = 0;\n        var nextAttachId = 0;\n\n        this.getAttachId = function getAttachId() { return nextAttachId++; };\n\n        var messages = this.messages = {};\n        var renderLater, cachedCollection;\n\n        this.render = function(collection) {\n          collection = collection || {};\n\n          renderLater = false;\n          cachedCollection = collection;\n\n          // this is true if the attribute is empty or if the attribute value is truthy\n          var multiple = isAttrTruthy($scope, $attrs.ngMessagesMultiple) ||\n                         isAttrTruthy($scope, $attrs.multiple);\n\n          var unmatchedMessages = [];\n          var matchedKeys = {};\n          var messageItem = ctrl.head;\n          var messageFound = false;\n          var totalMessages = 0;\n\n          // we use != instead of !== to allow for both undefined and null values\n          while (messageItem != null) {\n            totalMessages++;\n            var messageCtrl = messageItem.message;\n\n            var messageUsed = false;\n            if (!messageFound) {\n              forEach(collection, function(value, key) {\n                if (!messageUsed && truthy(value) && messageCtrl.test(key)) {\n                  // this is to prevent the same error name from showing up twice\n                  if (matchedKeys[key]) return;\n                  matchedKeys[key] = true;\n\n                  messageUsed = true;\n                  messageCtrl.attach();\n                }\n              });\n            }\n\n            if (messageUsed) {\n              // unless we want to display multiple messages then we should\n              // set a flag here to avoid displaying the next message in the list\n              messageFound = !multiple;\n            } else {\n              unmatchedMessages.push(messageCtrl);\n            }\n\n            messageItem = messageItem.next;\n          }\n\n          forEach(unmatchedMessages, function(messageCtrl) {\n            messageCtrl.detach();\n          });\n\n          if (unmatchedMessages.length !== totalMessages) {\n            $animate.setClass($element, ACTIVE_CLASS, INACTIVE_CLASS);\n          } else {\n            $animate.setClass($element, INACTIVE_CLASS, ACTIVE_CLASS);\n          }\n        };\n\n        $scope.$watchCollection($attrs.ngMessages || $attrs['for'], ctrl.render);\n\n        // If the element is destroyed, proactively destroy all the currently visible messages\n        $element.on('$destroy', function() {\n          forEach(messages, function(item) {\n            item.message.detach();\n          });\n        });\n\n        this.reRender = function() {\n          if (!renderLater) {\n            renderLater = true;\n            $scope.$evalAsync(function() {\n              if (renderLater && cachedCollection) {\n                ctrl.render(cachedCollection);\n              }\n            });\n          }\n        };\n\n        this.register = function(comment, messageCtrl) {\n          var nextKey = latestKey.toString();\n          messages[nextKey] = {\n            message: messageCtrl\n          };\n          insertMessageNode($element[0], comment, nextKey);\n          comment.$$ngMessageNode = nextKey;\n          latestKey++;\n\n          ctrl.reRender();\n        };\n\n        this.deregister = function(comment) {\n          var key = comment.$$ngMessageNode;\n          delete comment.$$ngMessageNode;\n          removeMessageNode($element[0], comment, key);\n          delete messages[key];\n          ctrl.reRender();\n        };\n\n        function findPreviousMessage(parent, comment) {\n          var prevNode = comment;\n          var parentLookup = [];\n\n          while (prevNode && prevNode !== parent) {\n            var prevKey = prevNode.$$ngMessageNode;\n            if (prevKey && prevKey.length) {\n              return messages[prevKey];\n            }\n\n            // dive deeper into the DOM and examine its children for any ngMessage\n            // comments that may be in an element that appears deeper in the list\n            if (prevNode.childNodes.length && parentLookup.indexOf(prevNode) === -1) {\n              parentLookup.push(prevNode);\n              prevNode = prevNode.childNodes[prevNode.childNodes.length - 1];\n            } else if (prevNode.previousSibling) {\n              prevNode = prevNode.previousSibling;\n            } else {\n              prevNode = prevNode.parentNode;\n              parentLookup.push(prevNode);\n            }\n          }\n        }\n\n        function insertMessageNode(parent, comment, key) {\n          var messageNode = messages[key];\n          if (!ctrl.head) {\n            ctrl.head = messageNode;\n          } else {\n            var match = findPreviousMessage(parent, comment);\n            if (match) {\n              messageNode.next = match.next;\n              match.next = messageNode;\n            } else {\n              messageNode.next = ctrl.head;\n              ctrl.head = messageNode;\n            }\n          }\n        }\n\n        function removeMessageNode(parent, comment, key) {\n          var messageNode = messages[key];\n\n          var match = findPreviousMessage(parent, comment);\n          if (match) {\n            match.next = messageNode.next;\n          } else {\n            ctrl.head = messageNode.next;\n          }\n        }\n      }]\n    };\n\n    function isAttrTruthy(scope, attr) {\n     return (isString(attr) && attr.length === 0) || //empty attribute\n            truthy(scope.$eval(attr));\n    }\n\n    function truthy(val) {\n      return isString(val) ? val.length : !!val;\n    }\n  }])\n\n  /**\n   * @ngdoc directive\n   * @name ngMessagesInclude\n   * @restrict AE\n   * @scope\n   *\n   * @description\n   * `ngMessagesInclude` is a directive with the purpose to import existing ngMessage template\n   * code from a remote template and place the downloaded template code into the exact spot\n   * that the ngMessagesInclude directive is placed within the ngMessages container. This allows\n   * for a series of pre-defined messages to be reused and also allows for the developer to\n   * determine what messages are overridden due to the placement of the ngMessagesInclude directive.\n   *\n   * @usage\n   * ```html\n   * <!-- using attribute directives -->\n   * <ANY ng-messages=\"expression\" role=\"alert\">\n   *   <ANY ng-messages-include=\"remoteTplString\">...</ANY>\n   * </ANY>\n   *\n   * <!-- or by using element directives -->\n   * <ng-messages for=\"expression\" role=\"alert\">\n   *   <ng-messages-include src=\"expressionValue1\">...</ng-messages-include>\n   * </ng-messages>\n   * ```\n   *\n   * {@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.\n   *\n   * @param {string} ngMessagesInclude|src a string value corresponding to the remote template.\n   */\n  .directive('ngMessagesInclude',\n    ['$templateRequest', '$document', '$compile', function($templateRequest, $document, $compile) {\n\n    return {\n      restrict: 'AE',\n      require: '^^ngMessages', // we only require this for validation sake\n      link: function($scope, element, attrs) {\n        var src = attrs.ngMessagesInclude || attrs.src;\n        $templateRequest(src).then(function(html) {\n          if ($scope.$$destroyed) return;\n\n          if (isString(html) && !html.trim()) {\n            // Empty template - nothing to compile\n            replaceElementWithMarker(element, src);\n          } else {\n            // Non-empty template - compile and link\n            $compile(html)($scope, function(contents) {\n              element.after(contents);\n              replaceElementWithMarker(element, src);\n            });\n          }\n        });\n      }\n    };\n\n    // Helpers\n    function replaceElementWithMarker(element, src) {\n      // A comment marker is placed for debugging purposes\n      var comment = $compile.$$createComment ?\n          $compile.$$createComment('ngMessagesInclude', src) :\n          $document[0].createComment(' ngMessagesInclude: ' + src + ' ');\n      var marker = jqLite(comment);\n      element.after(marker);\n\n      // Don't pollute the DOM anymore by keeping an empty directive element\n      element.remove();\n    }\n  }])\n\n  /**\n   * @ngdoc directive\n   * @name ngMessage\n   * @restrict AE\n   * @scope\n   *\n   * @description\n   * `ngMessage` is a directive with the purpose to show and hide a particular message.\n   * For `ngMessage` to operate, a parent `ngMessages` directive on a parent DOM element\n   * must be situated since it determines which messages are visible based on the state\n   * of the provided key/value map that `ngMessages` listens on.\n   *\n   * More information about using `ngMessage` can be found in the\n   * {@link module:ngMessages `ngMessages` module documentation}.\n   *\n   * @usage\n   * ```html\n   * <!-- using attribute directives -->\n   * <ANY ng-messages=\"expression\" role=\"alert\">\n   *   <ANY ng-message=\"stringValue\">...</ANY>\n   *   <ANY ng-message=\"stringValue1, stringValue2, ...\">...</ANY>\n   * </ANY>\n   *\n   * <!-- or by using element directives -->\n   * <ng-messages for=\"expression\" role=\"alert\">\n   *   <ng-message when=\"stringValue\">...</ng-message>\n   *   <ng-message when=\"stringValue1, stringValue2, ...\">...</ng-message>\n   * </ng-messages>\n   * ```\n   *\n   * @param {expression} ngMessage|when a string value corresponding to the message key.\n   */\n  .directive('ngMessage', ngMessageDirectiveFactory())\n\n\n  /**\n   * @ngdoc directive\n   * @name ngMessageExp\n   * @restrict AE\n   * @priority 1\n   * @scope\n   *\n   * @description\n   * `ngMessageExp` is the same as {@link directive:ngMessage `ngMessage`}, but instead of a static\n   * value, it accepts an expression to be evaluated for the message key.\n   *\n   * @usage\n   * ```html\n   * <!-- using attribute directives -->\n   * <ANY ng-messages=\"expression\">\n   *   <ANY ng-message-exp=\"expressionValue\">...</ANY>\n   * </ANY>\n   *\n   * <!-- or by using element directives -->\n   * <ng-messages for=\"expression\">\n   *   <ng-message when-exp=\"expressionValue\">...</ng-message>\n   * </ng-messages>\n   * ```\n   *\n   * {@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.\n   *\n   * @param {expression} ngMessageExp|whenExp an expression value corresponding to the message key.\n   */\n  .directive('ngMessageExp', ngMessageDirectiveFactory());\n\nfunction ngMessageDirectiveFactory() {\n  return ['$animate', function($animate) {\n    return {\n      restrict: 'AE',\n      transclude: 'element',\n      priority: 1, // must run before ngBind, otherwise the text is set on the comment\n      terminal: true,\n      require: '^^ngMessages',\n      link: function(scope, element, attrs, ngMessagesCtrl, $transclude) {\n        var commentNode = element[0];\n\n        var records;\n        var staticExp = attrs.ngMessage || attrs.when;\n        var dynamicExp = attrs.ngMessageExp || attrs.whenExp;\n        var assignRecords = function(items) {\n          records = items\n              ? (isArray(items)\n                  ? items\n                  : items.split(/[\\s,]+/))\n              : null;\n          ngMessagesCtrl.reRender();\n        };\n\n        if (dynamicExp) {\n          assignRecords(scope.$eval(dynamicExp));\n          scope.$watchCollection(dynamicExp, assignRecords);\n        } else {\n          assignRecords(staticExp);\n        }\n\n        var currentElement, messageCtrl;\n        ngMessagesCtrl.register(commentNode, messageCtrl = {\n          test: function(name) {\n            return contains(records, name);\n          },\n          attach: function() {\n            if (!currentElement) {\n              $transclude(function(elm, newScope) {\n                $animate.enter(elm, null, element);\n                currentElement = elm;\n\n                // Each time we attach this node to a message we get a new id that we can match\n                // when we are destroying the node later.\n                var $$attachId = currentElement.$$attachId = ngMessagesCtrl.getAttachId();\n\n                // in the event that the element or a parent element is destroyed\n                // by another structural directive then it's time\n                // to deregister the message from the controller\n                currentElement.on('$destroy', function() {\n                  if (currentElement && currentElement.$$attachId === $$attachId) {\n                    ngMessagesCtrl.deregister(commentNode);\n                    messageCtrl.detach();\n                  }\n                  newScope.$destroy();\n                });\n              });\n            }\n          },\n          detach: function() {\n            if (currentElement) {\n              var elm = currentElement;\n              currentElement = null;\n              $animate.leave(elm);\n            }\n          }\n        });\n      }\n    };\n  }];\n\n  function contains(collection, key) {\n    if (collection) {\n      return isArray(collection)\n          ? collection.indexOf(key) >= 0\n          : collection.hasOwnProperty(key);\n    }\n  }\n}\n\n\n})(window, window.angular);\n","/**\n * @license AngularJS v1.6.6\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\nvar $resourceMinErr = angular.$$minErr('$resource');\n\n// Helper functions and regex to lookup a dotted path on an object\n// stopping at undefined/null.  The path must be composed of ASCII\n// identifiers (just like $parse)\nvar MEMBER_NAME_REGEX = /^(\\.[a-zA-Z_$@][0-9a-zA-Z_$@]*)+$/;\n\nfunction isValidDottedPath(path) {\n  return (path != null && path !== '' && path !== 'hasOwnProperty' &&\n      MEMBER_NAME_REGEX.test('.' + path));\n}\n\nfunction lookupDottedPath(obj, path) {\n  if (!isValidDottedPath(path)) {\n    throw $resourceMinErr('badmember', 'Dotted member path \"@{0}\" is invalid.', path);\n  }\n  var keys = path.split('.');\n  for (var i = 0, ii = keys.length; i < ii && angular.isDefined(obj); i++) {\n    var key = keys[i];\n    obj = (obj !== null) ? obj[key] : undefined;\n  }\n  return obj;\n}\n\n/**\n * Create a shallow copy of an object and clear other fields from the destination\n */\nfunction shallowClearAndCopy(src, dst) {\n  dst = dst || {};\n\n  angular.forEach(dst, function(value, key) {\n    delete dst[key];\n  });\n\n  for (var key in src) {\n    if (src.hasOwnProperty(key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {\n      dst[key] = src[key];\n    }\n  }\n\n  return dst;\n}\n\n/**\n * @ngdoc module\n * @name ngResource\n * @description\n *\n * # ngResource\n *\n * The `ngResource` module provides interaction support with RESTful services\n * via the $resource service.\n *\n *\n * <div doc-module-components=\"ngResource\"></div>\n *\n * See {@link ngResource.$resourceProvider} and {@link ngResource.$resource} for usage.\n */\n\n/**\n * @ngdoc provider\n * @name $resourceProvider\n *\n * @description\n *\n * Use `$resourceProvider` to change the default behavior of the {@link ngResource.$resource}\n * service.\n *\n * ## Dependencies\n * Requires the {@link ngResource } module to be installed.\n *\n */\n\n/**\n * @ngdoc service\n * @name $resource\n * @requires $http\n * @requires ng.$log\n * @requires $q\n * @requires ng.$timeout\n *\n * @description\n * A factory which creates a resource object that lets you interact with\n * [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.\n *\n * The returned resource object has action methods which provide high-level behaviors without\n * the need to interact with the low level {@link ng.$http $http} service.\n *\n * Requires the {@link ngResource `ngResource`} module to be installed.\n *\n * By default, trailing slashes will be stripped from the calculated URLs,\n * which can pose problems with server backends that do not expect that\n * behavior.  This can be disabled by configuring the `$resourceProvider` like\n * this:\n *\n * ```js\n     app.config(['$resourceProvider', function($resourceProvider) {\n       // Don't strip trailing slashes from calculated URLs\n       $resourceProvider.defaults.stripTrailingSlashes = false;\n     }]);\n * ```\n *\n * @param {string} url A parameterized URL template with parameters prefixed by `:` as in\n *   `/user/:username`. If you are using a URL with a port number (e.g.\n *   `http://example.com:8080/api`), it will be respected.\n *\n *   If you are using a url with a suffix, just add the suffix, like this:\n *   `$resource('http://example.com/resource.json')` or `$resource('http://example.com/:id.json')`\n *   or even `$resource('http://example.com/resource/:resource_id.:format')`\n *   If the parameter before the suffix is empty, :resource_id in this case, then the `/.` will be\n *   collapsed down to a single `.`.  If you need this sequence to appear and not collapse then you\n *   can escape it with `/\\.`.\n *\n * @param {Object=} paramDefaults Default values for `url` parameters. These can be overridden in\n *   `actions` methods. If a parameter value is a function, it will be called every time\n *   a param value needs to be obtained for a request (unless the param was overridden). The function\n *   will be passed the current data value as an argument.\n *\n *   Each key value in the parameter object is first bound to url template if present and then any\n *   excess keys are appended to the url search query after the `?`.\n *\n *   Given a template `/path/:verb` and parameter `{verb:'greet', salutation:'Hello'}` results in\n *   URL `/path/greet?salutation=Hello`.\n *\n *   If the parameter value is prefixed with `@`, then the value for that parameter will be\n *   extracted from the corresponding property on the `data` object (provided when calling actions\n *   with a request body).\n *   For example, if the `defaultParam` object is `{someParam: '@someProp'}` then the value of\n *   `someParam` will be `data.someProp`.\n *   Note that the parameter will be ignored, when calling a \"GET\" action method (i.e. an action\n *   method that does not accept a request body)\n *\n * @param {Object.<Object>=} actions Hash with declaration of custom actions that will be available\n *   in addition to the default set of resource actions (see below). If a custom action has the same\n *   key as a default action (e.g. `save`), then the default action will be *overwritten*, and not\n *   extended.\n *\n *   The declaration should be created in the format of {@link ng.$http#usage $http.config}:\n *\n *       {action1: {method:?, params:?, isArray:?, headers:?, ...},\n *        action2: {method:?, params:?, isArray:?, headers:?, ...},\n *        ...}\n *\n *   Where:\n *\n *   - **`action`** – {string} – The name of action. This name becomes the name of the method on\n *     your resource object.\n *   - **`method`** – {string} – Case insensitive HTTP method (e.g. `GET`, `POST`, `PUT`,\n *     `DELETE`, `JSONP`, etc).\n *   - **`params`** – {Object=} – Optional set of pre-bound parameters for this action. If any of\n *     the parameter value is a function, it will be called every time when a param value needs to\n *     be obtained for a request (unless the param was overridden). The function will be passed the\n *     current data value as an argument.\n *   - **`url`** – {string} – action specific `url` override. The url templating is supported just\n *     like for the resource-level urls.\n *   - **`isArray`** – {boolean=} – If true then the returned object for this action is an array,\n *     see `returns` section.\n *   - **`transformRequest`** –\n *     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n *     transform function or an array of such functions. The transform function takes the http\n *     request body and headers and returns its transformed (typically serialized) version.\n *     By default, transformRequest will contain one function that checks if the request data is\n *     an object and serializes it using `angular.toJson`. To prevent this behavior, set\n *     `transformRequest` to an empty array: `transformRequest: []`\n *   - **`transformResponse`** –\n *     `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –\n *     transform function or an array of such functions. The transform function takes the http\n *     response body, headers and status and returns its transformed (typically deserialized)\n *     version.\n *     By default, transformResponse will contain one function that checks if the response looks\n *     like a JSON string and deserializes it using `angular.fromJson`. To prevent this behavior,\n *     set `transformResponse` to an empty array: `transformResponse: []`\n *   - **`cache`** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n *     GET request, otherwise if a cache instance built with\n *     {@link ng.$cacheFactory $cacheFactory} is supplied, this cache will be used for\n *     caching.\n *   - **`timeout`** – `{number}` – timeout in milliseconds.<br />\n *     **Note:** In contrast to {@link ng.$http#usage $http.config}, {@link ng.$q promises} are\n *     **not** supported in $resource, because the same value would be used for multiple requests.\n *     If you are looking for a way to cancel requests, you should use the `cancellable` option.\n *   - **`cancellable`** – `{boolean}` – if set to true, the request made by a \"non-instance\" call\n *     will be cancelled (if not already completed) by calling `$cancelRequest()` on the call's\n *     return value. Calling `$cancelRequest()` for a non-cancellable or an already\n *     completed/cancelled request will have no effect.<br />\n *   - **`withCredentials`** - `{boolean}` - whether to set the `withCredentials` flag on the\n *     XHR object. See\n *     [requests with credentials](https://developer.mozilla.org/en/http_access_control#section_5)\n *     for more information.\n *   - **`responseType`** - `{string}` - see\n *     [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).\n *   - **`interceptor`** - `{Object=}` - The interceptor object has two optional methods -\n *     `response` and `responseError`. Both `response` and `responseError` interceptors get called\n *     with `http response` object. See {@link ng.$http $http interceptors}. In addition, the\n *     resource instance or array object is accessible by the `resource` property of the\n *     `http response` object.\n *     Keep in mind that the associated promise will be resolved with the value returned by the\n *     response interceptor, if one is specified. The default response interceptor returns\n *     `response.resource` (i.e. the resource instance or array).\n *   - **`hasBody`** - `{boolean}` - allows to specify if a request body should be included or not.\n *     If not specified only POST, PUT and PATCH requests will have a body.\n *\n * @param {Object} options Hash with custom settings that should extend the\n *   default `$resourceProvider` behavior.  The supported options are:\n *\n *   - **`stripTrailingSlashes`** – {boolean} – If true then the trailing\n *   slashes from any calculated URL will be stripped. (Defaults to true.)\n *   - **`cancellable`** – {boolean} – If true, the request made by a \"non-instance\" call will be\n *   cancelled (if not already completed) by calling `$cancelRequest()` on the call's return value.\n *   This can be overwritten per action. (Defaults to false.)\n *\n * @returns {Object} A resource \"class\" object with methods for the default set of resource actions\n *   optionally extended with custom `actions`. The default set contains these actions:\n *   ```js\n *   { 'get':    {method:'GET'},\n *     'save':   {method:'POST'},\n *     'query':  {method:'GET', isArray:true},\n *     'remove': {method:'DELETE'},\n *     'delete': {method:'DELETE'} };\n *   ```\n *\n *   Calling these methods invoke an {@link ng.$http} with the specified http method,\n *   destination and parameters. When the data is returned from the server then the object is an\n *   instance of the resource class. The actions `save`, `remove` and `delete` are available on it\n *   as  methods with the `$` prefix. This allows you to easily perform CRUD operations (create,\n *   read, update, delete) on server-side data like this:\n *   ```js\n *   var User = $resource('/user/:userId', {userId:'@id'});\n *   var user = User.get({userId:123}, function() {\n *     user.abc = true;\n *     user.$save();\n *   });\n *   ```\n *\n *   It is important to realize that invoking a $resource object method immediately returns an\n *   empty reference (object or array depending on `isArray`). Once the data is returned from the\n *   server the existing reference is populated with the actual data. This is a useful trick since\n *   usually the resource is assigned to a model which is then rendered by the view. Having an empty\n *   object results in no rendering, once the data arrives from the server then the object is\n *   populated with the data and the view automatically re-renders itself showing the new data. This\n *   means that in most cases one never has to write a callback function for the action methods.\n *\n *   The action methods on the class object or instance object can be invoked with the following\n *   parameters:\n *\n *   - \"class\" actions without a body: `Resource.action([parameters], [success], [error])`\n *   - \"class\" actions with a body: `Resource.action([parameters], postData, [success], [error])`\n *   - instance actions: `instance.$action([parameters], [success], [error])`\n *\n *\n *   When calling instance methods, the instance itself is used as the request body (if the action\n *   should have a body). By default, only actions using `POST`, `PUT` or `PATCH` have request\n *   bodies, but you can use the `hasBody` configuration option to specify whether an action\n *   should have a body or not (regardless of its HTTP method).\n *\n *\n *   Success callback is called with (value (Object|Array), responseHeaders (Function),\n *   status (number), statusText (string)) arguments, where the value is the populated resource\n *   instance or collection object. The error callback is called with (httpResponse) argument.\n *\n *   Class actions return empty instance (with additional properties below).\n *   Instance actions return promise of the action.\n *\n *   The Resource instances and collections have these additional properties:\n *\n *   - `$promise`: the {@link ng.$q promise} of the original server interaction that created this\n *     instance or collection.\n *\n *     On success, the promise is resolved with the same resource instance or collection object,\n *     updated with data from server. This makes it easy to use in\n *     {@link ngRoute.$routeProvider resolve section of $routeProvider.when()} to defer view\n *     rendering until the resource(s) are loaded.\n *\n *     On failure, the promise is rejected with the {@link ng.$http http response} object.\n *\n *     If an interceptor object was provided, the promise will instead be resolved with the value\n *     returned by the interceptor.\n *\n *   - `$resolved`: `true` after first server interaction is completed (either with success or\n *      rejection), `false` before that. Knowing if the Resource has been resolved is useful in\n *      data-binding.\n *\n *   The Resource instances and collections have these additional methods:\n *\n *   - `$cancelRequest`: If there is a cancellable, pending request related to the instance or\n *      collection, calling this method will abort the request.\n *\n *   The Resource instances have these additional methods:\n *\n *   - `toJSON`: It returns a simple object without any of the extra properties added as part of\n *     the Resource API. This object can be serialized through {@link angular.toJson} safely\n *     without attaching Angular-specific fields. Notice that `JSON.stringify` (and\n *     `angular.toJson`) automatically use this method when serializing a Resource instance\n *     (see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON%28%29_behavior)).\n *\n * @example\n *\n * # Credit card resource\n *\n * ```js\n     // Define CreditCard class\n     var CreditCard = $resource('/user/:userId/card/:cardId',\n      {userId:123, cardId:'@id'}, {\n       charge: {method:'POST', params:{charge:true}}\n      });\n\n     // We can retrieve a collection from the server\n     var cards = CreditCard.query(function() {\n       // GET: /user/123/card\n       // server returns: [ {id:456, number:'1234', name:'Smith'} ];\n\n       var card = cards[0];\n       // each item is an instance of CreditCard\n       expect(card instanceof CreditCard).toEqual(true);\n       card.name = \"J. Smith\";\n       // non GET methods are mapped onto the instances\n       card.$save();\n       // POST: /user/123/card/456 {id:456, number:'1234', name:'J. Smith'}\n       // server returns: {id:456, number:'1234', name: 'J. Smith'};\n\n       // our custom method is mapped as well.\n       card.$charge({amount:9.99});\n       // POST: /user/123/card/456?amount=9.99&charge=true {id:456, number:'1234', name:'J. Smith'}\n     });\n\n     // we can create an instance as well\n     var newCard = new CreditCard({number:'0123'});\n     newCard.name = \"Mike Smith\";\n     newCard.$save();\n     // POST: /user/123/card {number:'0123', name:'Mike Smith'}\n     // server returns: {id:789, number:'0123', name: 'Mike Smith'};\n     expect(newCard.id).toEqual(789);\n * ```\n *\n * The object returned from this function execution is a resource \"class\" which has \"static\" method\n * for each action in the definition.\n *\n * Calling these methods invoke `$http` on the `url` template with the given `method`, `params` and\n * `headers`.\n *\n * @example\n *\n * # User resource\n *\n * When the data is returned from the server then the object is an instance of the resource type and\n * all of the non-GET methods are available with `$` prefix. This allows you to easily support CRUD\n * operations (create, read, update, delete) on server-side data.\n\n   ```js\n     var User = $resource('/user/:userId', {userId:'@id'});\n     User.get({userId:123}, function(user) {\n       user.abc = true;\n       user.$save();\n     });\n   ```\n *\n * It's worth noting that the success callback for `get`, `query` and other methods gets passed\n * in the response that came from the server as well as $http header getter function, so one\n * could rewrite the above example and get access to http headers as:\n *\n   ```js\n     var User = $resource('/user/:userId', {userId:'@id'});\n     User.get({userId:123}, function(user, getResponseHeaders){\n       user.abc = true;\n       user.$save(function(user, putResponseHeaders) {\n         //user => saved user object\n         //putResponseHeaders => $http header getter\n       });\n     });\n   ```\n *\n * You can also access the raw `$http` promise via the `$promise` property on the object returned\n *\n   ```\n     var User = $resource('/user/:userId', {userId:'@id'});\n     User.get({userId:123})\n         .$promise.then(function(user) {\n           $scope.user = user;\n         });\n   ```\n *\n * @example\n *\n * # Creating a custom 'PUT' request\n *\n * In this example we create a custom method on our resource to make a PUT request\n * ```js\n *    var app = angular.module('app', ['ngResource', 'ngRoute']);\n *\n *    // Some APIs expect a PUT request in the format URL/object/ID\n *    // Here we are creating an 'update' method\n *    app.factory('Notes', ['$resource', function($resource) {\n *    return $resource('/notes/:id', null,\n *        {\n *            'update': { method:'PUT' }\n *        });\n *    }]);\n *\n *    // In our controller we get the ID from the URL using ngRoute and $routeParams\n *    // We pass in $routeParams and our Notes factory along with $scope\n *    app.controller('NotesCtrl', ['$scope', '$routeParams', 'Notes',\n                                      function($scope, $routeParams, Notes) {\n *    // First get a note object from the factory\n *    var note = Notes.get({ id:$routeParams.id });\n *    $id = note.id;\n *\n *    // Now call update passing in the ID first then the object you are updating\n *    Notes.update({ id:$id }, note);\n *\n *    // This will PUT /notes/ID with the note object in the request payload\n *    }]);\n * ```\n *\n * @example\n *\n * # Cancelling requests\n *\n * If an action's configuration specifies that it is cancellable, you can cancel the request related\n * to an instance or collection (as long as it is a result of a \"non-instance\" call):\n *\n   ```js\n     // ...defining the `Hotel` resource...\n     var Hotel = $resource('/api/hotel/:id', {id: '@id'}, {\n       // Let's make the `query()` method cancellable\n       query: {method: 'get', isArray: true, cancellable: true}\n     });\n\n     // ...somewhere in the PlanVacationController...\n     ...\n     this.onDestinationChanged = function onDestinationChanged(destination) {\n       // We don't care about any pending request for hotels\n       // in a different destination any more\n       this.availableHotels.$cancelRequest();\n\n       // Let's query for hotels in '<destination>'\n       // (calls: /api/hotel?location=<destination>)\n       this.availableHotels = Hotel.query({location: destination});\n     };\n   ```\n *\n */\nangular.module('ngResource', ['ng']).\n  info({ angularVersion: '1.6.6' }).\n  provider('$resource', function ResourceProvider() {\n    var PROTOCOL_AND_IPV6_REGEX = /^https?:\\/\\/\\[[^\\]]*][^/]*/;\n\n    var provider = this;\n\n    /**\n     * @ngdoc property\n     * @name $resourceProvider#defaults\n     * @description\n     * Object containing default options used when creating `$resource` instances.\n     *\n     * The default values satisfy a wide range of usecases, but you may choose to overwrite any of\n     * them to further customize your instances. The available properties are:\n     *\n     * - **stripTrailingSlashes** – `{boolean}` – If true, then the trailing slashes from any\n     *   calculated URL will be stripped.<br />\n     *   (Defaults to true.)\n     * - **cancellable** – `{boolean}` – If true, the request made by a \"non-instance\" call will be\n     *   cancelled (if not already completed) by calling `$cancelRequest()` on the call's return\n     *   value. For more details, see {@link ngResource.$resource}. This can be overwritten per\n     *   resource class or action.<br />\n     *   (Defaults to false.)\n     * - **actions** - `{Object.<Object>}` - A hash with default actions declarations. Actions are\n     *   high-level methods corresponding to RESTful actions/methods on resources. An action may\n     *   specify what HTTP method to use, what URL to hit, if the return value will be a single\n     *   object or a collection (array) of objects etc. For more details, see\n     *   {@link ngResource.$resource}. The actions can also be enhanced or overwritten per resource\n     *   class.<br />\n     *   The default actions are:\n     *   ```js\n     *   {\n     *     get: {method: 'GET'},\n     *     save: {method: 'POST'},\n     *     query: {method: 'GET', isArray: true},\n     *     remove: {method: 'DELETE'},\n     *     delete: {method: 'DELETE'}\n     *   }\n     *   ```\n     *\n     * #### Example\n     *\n     * For example, you can specify a new `update` action that uses the `PUT` HTTP verb:\n     *\n     * ```js\n     *   angular.\n     *     module('myApp').\n     *     config(['$resourceProvider', function ($resourceProvider) {\n     *       $resourceProvider.defaults.actions.update = {\n     *         method: 'PUT'\n     *       };\n     *     }]);\n     * ```\n     *\n     * Or you can even overwrite the whole `actions` list and specify your own:\n     *\n     * ```js\n     *   angular.\n     *     module('myApp').\n     *     config(['$resourceProvider', function ($resourceProvider) {\n     *       $resourceProvider.defaults.actions = {\n     *         create: {method: 'POST'},\n     *         get:    {method: 'GET'},\n     *         getAll: {method: 'GET', isArray:true},\n     *         update: {method: 'PUT'},\n     *         delete: {method: 'DELETE'}\n     *       };\n     *     });\n     * ```\n     *\n     */\n    this.defaults = {\n      // Strip slashes by default\n      stripTrailingSlashes: true,\n\n      // Make non-instance requests cancellable (via `$cancelRequest()`)\n      cancellable: false,\n\n      // Default actions configuration\n      actions: {\n        'get': {method: 'GET'},\n        'save': {method: 'POST'},\n        'query': {method: 'GET', isArray: true},\n        'remove': {method: 'DELETE'},\n        'delete': {method: 'DELETE'}\n      }\n    };\n\n    this.$get = ['$http', '$log', '$q', '$timeout', function($http, $log, $q, $timeout) {\n\n      var noop = angular.noop,\n          forEach = angular.forEach,\n          extend = angular.extend,\n          copy = angular.copy,\n          isArray = angular.isArray,\n          isDefined = angular.isDefined,\n          isFunction = angular.isFunction,\n          isNumber = angular.isNumber,\n          encodeUriQuery = angular.$$encodeUriQuery,\n          encodeUriSegment = angular.$$encodeUriSegment;\n\n      function Route(template, defaults) {\n        this.template = template;\n        this.defaults = extend({}, provider.defaults, defaults);\n        this.urlParams = {};\n      }\n\n      Route.prototype = {\n        setUrlParams: function(config, params, actionUrl) {\n          var self = this,\n            url = actionUrl || self.template,\n            val,\n            encodedVal,\n            protocolAndIpv6 = '';\n\n          var urlParams = self.urlParams = Object.create(null);\n          forEach(url.split(/\\W/), function(param) {\n            if (param === 'hasOwnProperty') {\n              throw $resourceMinErr('badname', 'hasOwnProperty is not a valid parameter name.');\n            }\n            if (!(new RegExp('^\\\\d+$').test(param)) && param &&\n              (new RegExp('(^|[^\\\\\\\\]):' + param + '(\\\\W|$)').test(url))) {\n              urlParams[param] = {\n                isQueryParamValue: (new RegExp('\\\\?.*=:' + param + '(?:\\\\W|$)')).test(url)\n              };\n            }\n          });\n          url = url.replace(/\\\\:/g, ':');\n          url = url.replace(PROTOCOL_AND_IPV6_REGEX, function(match) {\n            protocolAndIpv6 = match;\n            return '';\n          });\n\n          params = params || {};\n          forEach(self.urlParams, function(paramInfo, urlParam) {\n            val = params.hasOwnProperty(urlParam) ? params[urlParam] : self.defaults[urlParam];\n            if (isDefined(val) && val !== null) {\n              if (paramInfo.isQueryParamValue) {\n                encodedVal = encodeUriQuery(val, true);\n              } else {\n                encodedVal = encodeUriSegment(val);\n              }\n              url = url.replace(new RegExp(':' + urlParam + '(\\\\W|$)', 'g'), function(match, p1) {\n                return encodedVal + p1;\n              });\n            } else {\n              url = url.replace(new RegExp('(/?):' + urlParam + '(\\\\W|$)', 'g'), function(match,\n                  leadingSlashes, tail) {\n                if (tail.charAt(0) === '/') {\n                  return tail;\n                } else {\n                  return leadingSlashes + tail;\n                }\n              });\n            }\n          });\n\n          // strip trailing slashes and set the url (unless this behavior is specifically disabled)\n          if (self.defaults.stripTrailingSlashes) {\n            url = url.replace(/\\/+$/, '') || '/';\n          }\n\n          // Collapse `/.` if found in the last URL path segment before the query.\n          // E.g. `http://url.com/id/.format?q=x` becomes `http://url.com/id.format?q=x`.\n          url = url.replace(/\\/\\.(?=\\w+($|\\?))/, '.');\n          // Replace escaped `/\\.` with `/.`.\n          // (If `\\.` comes from a param value, it will be encoded as `%5C.`.)\n          config.url = protocolAndIpv6 + url.replace(/\\/(\\\\|%5C)\\./, '/.');\n\n\n          // set params - delegate param encoding to $http\n          forEach(params, function(value, key) {\n            if (!self.urlParams[key]) {\n              config.params = config.params || {};\n              config.params[key] = value;\n            }\n          });\n        }\n      };\n\n\n      function resourceFactory(url, paramDefaults, actions, options) {\n        var route = new Route(url, options);\n\n        actions = extend({}, provider.defaults.actions, actions);\n\n        function extractParams(data, actionParams) {\n          var ids = {};\n          actionParams = extend({}, paramDefaults, actionParams);\n          forEach(actionParams, function(value, key) {\n            if (isFunction(value)) { value = value(data); }\n            ids[key] = value && value.charAt && value.charAt(0) === '@' ?\n              lookupDottedPath(data, value.substr(1)) : value;\n          });\n          return ids;\n        }\n\n        function defaultResponseInterceptor(response) {\n          return response.resource;\n        }\n\n        function Resource(value) {\n          shallowClearAndCopy(value || {}, this);\n        }\n\n        Resource.prototype.toJSON = function() {\n          var data = extend({}, this);\n          delete data.$promise;\n          delete data.$resolved;\n          delete data.$cancelRequest;\n          return data;\n        };\n\n        forEach(actions, function(action, name) {\n          var hasBody = action.hasBody === true || (action.hasBody !== false && /^(POST|PUT|PATCH)$/i.test(action.method));\n          var numericTimeout = action.timeout;\n          var cancellable = isDefined(action.cancellable) ?\n              action.cancellable : route.defaults.cancellable;\n\n          if (numericTimeout && !isNumber(numericTimeout)) {\n            $log.debug('ngResource:\\n' +\n                       '  Only numeric values are allowed as `timeout`.\\n' +\n                       '  Promises are not supported in $resource, because the same value would ' +\n                       'be used for multiple requests. If you are looking for a way to cancel ' +\n                       'requests, you should use the `cancellable` option.');\n            delete action.timeout;\n            numericTimeout = null;\n          }\n\n          Resource[name] = function(a1, a2, a3, a4) {\n            var params = {}, data, success, error;\n\n            switch (arguments.length) {\n              case 4:\n                error = a4;\n                success = a3;\n                // falls through\n              case 3:\n              case 2:\n                if (isFunction(a2)) {\n                  if (isFunction(a1)) {\n                    success = a1;\n                    error = a2;\n                    break;\n                  }\n\n                  success = a2;\n                  error = a3;\n                  // falls through\n                } else {\n                  params = a1;\n                  data = a2;\n                  success = a3;\n                  break;\n                }\n                // falls through\n              case 1:\n                if (isFunction(a1)) success = a1;\n                else if (hasBody) data = a1;\n                else params = a1;\n                break;\n              case 0: break;\n              default:\n                throw $resourceMinErr('badargs',\n                  'Expected up to 4 arguments [params, data, success, error], got {0} arguments',\n                  arguments.length);\n            }\n\n            var isInstanceCall = this instanceof Resource;\n            var value = isInstanceCall ? data : (action.isArray ? [] : new Resource(data));\n            var httpConfig = {};\n            var responseInterceptor = action.interceptor && action.interceptor.response ||\n              defaultResponseInterceptor;\n            var responseErrorInterceptor = action.interceptor && action.interceptor.responseError ||\n              undefined;\n            var hasError = !!error;\n            var hasResponseErrorInterceptor = !!responseErrorInterceptor;\n            var timeoutDeferred;\n            var numericTimeoutPromise;\n\n            forEach(action, function(value, key) {\n              switch (key) {\n                default:\n                  httpConfig[key] = copy(value);\n                  break;\n                case 'params':\n                case 'isArray':\n                case 'interceptor':\n                case 'cancellable':\n                  break;\n              }\n            });\n\n            if (!isInstanceCall && cancellable) {\n              timeoutDeferred = $q.defer();\n              httpConfig.timeout = timeoutDeferred.promise;\n\n              if (numericTimeout) {\n                numericTimeoutPromise = $timeout(timeoutDeferred.resolve, numericTimeout);\n              }\n            }\n\n            if (hasBody) httpConfig.data = data;\n            route.setUrlParams(httpConfig,\n              extend({}, extractParams(data, action.params || {}), params),\n              action.url);\n\n            var promise = $http(httpConfig).then(function(response) {\n              var data = response.data;\n\n              if (data) {\n                // Need to convert action.isArray to boolean in case it is undefined\n                if (isArray(data) !== (!!action.isArray)) {\n                  throw $resourceMinErr('badcfg',\n                      'Error in resource configuration for action `{0}`. Expected response to ' +\n                      'contain an {1} but got an {2} (Request: {3} {4})', name, action.isArray ? 'array' : 'object',\n                    isArray(data) ? 'array' : 'object', httpConfig.method, httpConfig.url);\n                }\n                if (action.isArray) {\n                  value.length = 0;\n                  forEach(data, function(item) {\n                    if (typeof item === 'object') {\n                      value.push(new Resource(item));\n                    } else {\n                      // Valid JSON values may be string literals, and these should not be converted\n                      // into objects. These items will not have access to the Resource prototype\n                      // methods, but unfortunately there\n                      value.push(item);\n                    }\n                  });\n                } else {\n                  var promise = value.$promise;     // Save the promise\n                  shallowClearAndCopy(data, value);\n                  value.$promise = promise;         // Restore the promise\n                }\n              }\n              response.resource = value;\n\n              return response;\n            }, function(response) {\n              response.resource = value;\n              return $q.reject(response);\n            });\n\n            promise = promise['finally'](function() {\n              value.$resolved = true;\n              if (!isInstanceCall && cancellable) {\n                value.$cancelRequest = noop;\n                $timeout.cancel(numericTimeoutPromise);\n                timeoutDeferred = numericTimeoutPromise = httpConfig.timeout = null;\n              }\n            });\n\n            promise = promise.then(\n              function(response) {\n                var value = responseInterceptor(response);\n                (success || noop)(value, response.headers, response.status, response.statusText);\n                return value;\n              },\n              (hasError || hasResponseErrorInterceptor) ?\n                function(response) {\n                  if (hasError && !hasResponseErrorInterceptor) {\n                    // Avoid `Possibly Unhandled Rejection` error,\n                    // but still fulfill the returned promise with a rejection\n                    promise.catch(noop);\n                  }\n                  if (hasError) error(response);\n                  return hasResponseErrorInterceptor ?\n                    responseErrorInterceptor(response) :\n                    $q.reject(response);\n                } :\n                undefined);\n\n            if (!isInstanceCall) {\n              // we are creating instance / collection\n              // - set the initial promise\n              // - return the instance / collection\n              value.$promise = promise;\n              value.$resolved = false;\n              if (cancellable) value.$cancelRequest = cancelRequest;\n\n              return value;\n            }\n\n            // instance call\n            return promise;\n\n            function cancelRequest(value) {\n              promise.catch(noop);\n              if (timeoutDeferred !== null) {\n                timeoutDeferred.resolve(value);\n              }\n            }\n          };\n\n\n          Resource.prototype['$' + name] = function(params, success, error) {\n            if (isFunction(params)) {\n              error = success; success = params; params = {};\n            }\n            var result = Resource[name].call(this, params, this, success, error);\n            return result.$promise || result;\n          };\n        });\n\n        Resource.bind = function(additionalParamDefaults) {\n          var extendedParamDefaults = extend({}, paramDefaults, additionalParamDefaults);\n          return resourceFactory(url, extendedParamDefaults, actions, options);\n        };\n\n        return Resource;\n      }\n\n      return resourceFactory;\n    }];\n  });\n\n\n})(window, window.angular);\n","/**\n * @license AngularJS v1.6.6\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\nvar bind;\nvar extend;\nvar forEach;\nvar isDefined;\nvar lowercase;\nvar noop;\nvar nodeContains;\nvar htmlParser;\nvar htmlSanitizeWriter;\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * # ngSanitize\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n *\n * <div doc-module-components=\"ngSanitize\"></div>\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   Sanitizes an html string by stripping all potentially dangerous tokens.\n *\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string.\n *\n *   The whitelist for URL sanitization of attribute values is configured using the functions\n *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider\n *   `$compileProvider`}.\n *\n *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\" name=\"sanitize-service\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\n\n\n/**\n * @ngdoc provider\n * @name $sanitizeProvider\n * @this\n *\n * @description\n * Creates and configures {@link $sanitize} instance.\n */\nfunction $SanitizeProvider() {\n  var svgEnabled = false;\n\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    if (svgEnabled) {\n      extend(validElements, svgElements);\n    }\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n\n\n  /**\n   * @ngdoc method\n   * @name $sanitizeProvider#enableSvg\n   * @kind function\n   *\n   * @description\n   * Enables a subset of svg to be supported by the sanitizer.\n   *\n   * <div class=\"alert alert-warning\">\n   *   <p>By enabling this setting without taking other precautions, you might expose your\n   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned\n   *   outside of the containing element and be rendered over other elements on the page (e.g. a login\n   *   link). Such behavior can then result in phishing incidents.</p>\n   *\n   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg\n   *   tags within the sanitized content:</p>\n   *\n   *   <br>\n   *\n   *   <pre><code>\n   *   .rootOfTheIncludedContent svg {\n   *     overflow: hidden !important;\n   *   }\n   *   </code></pre>\n   * </div>\n   *\n   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.\n   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called\n   *    without an argument or self for chaining otherwise.\n   */\n  this.enableSvg = function(enableSvg) {\n    if (isDefined(enableSvg)) {\n      svgEnabled = enableSvg;\n      return this;\n    } else {\n      return svgEnabled;\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Private stuff\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  bind = angular.bind;\n  extend = angular.extend;\n  forEach = angular.forEach;\n  isDefined = angular.isDefined;\n  lowercase = angular.lowercase;\n  noop = angular.noop;\n\n  htmlParser = htmlParserImpl;\n  htmlSanitizeWriter = htmlSanitizeWriterImpl;\n\n  nodeContains = window.Node.prototype.contains || /** @this */ function(arg) {\n    // eslint-disable-next-line no-bitwise\n    return !!(this.compareDocumentPosition(arg) & 16);\n  };\n\n  // Regular Expressions for parsing tags and attributes\n  var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n    // Match everything outside of normal chars and \" (quote character)\n    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;\n\n\n  // Good source of info about elements and attributes\n  // http://dev.w3.org/html5/spec/Overview.html#semantics\n  // http://simon.html5.org/html-elements\n\n  // Safe Void Elements - HTML5\n  // http://dev.w3.org/html5/spec/Overview.html#void-elements\n  var voidElements = toMap('area,br,col,hr,img,wbr');\n\n  // Elements that you can, intentionally, leave open (and which close themselves)\n  // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),\n      optionalEndTagInlineElements = toMap('rp,rt'),\n      optionalEndTagElements = extend({},\n                                              optionalEndTagInlineElements,\n                                              optionalEndTagBlockElements);\n\n  // Safe Block Elements - HTML5\n  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +\n          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));\n\n  // Inline Elements - HTML5\n  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +\n          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +\n          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));\n\n  // SVG Elements\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\n  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.\n  // They can potentially allow for arbitrary javascript to be executed. See #11290\n  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +\n          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +\n          'radialGradient,rect,stop,svg,switch,text,title,tspan');\n\n  // Blocked Elements (will be stripped)\n  var blockedElements = toMap('script,style');\n\n  var validElements = extend({},\n                                     voidElements,\n                                     blockElements,\n                                     inlineElements,\n                                     optionalEndTagElements);\n\n  //Attributes that have href and hence need to be sanitized\n  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href');\n\n  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +\n      'valign,value,vspace,width');\n\n  // SVG attributes (without \"id\" and \"name\" attributes)\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\n  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +\n      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +\n      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +\n      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +\n      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +\n      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +\n      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +\n      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +\n      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +\n      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +\n      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +\n      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +\n      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +\n      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);\n\n  var validAttrs = extend({},\n                                  uriAttrs,\n                                  svgAttrs,\n                                  htmlAttrs);\n\n  function toMap(str, lowercaseKeys) {\n    var obj = {}, items = str.split(','), i;\n    for (i = 0; i < items.length; i++) {\n      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;\n    }\n    return obj;\n  }\n\n  /**\n   * Create an inert document that contains the dirty HTML that needs sanitizing\n   * Depending upon browser support we use one of three strategies for doing this.\n   * Support: Safari 10.x -> XHR strategy\n   * Support: Firefox -> DomParser strategy\n   */\n  var getInertBodyElement /* function(html: string): HTMLBodyElement */ = (function(window, document) {\n    var inertDocument;\n    if (document && document.implementation) {\n      inertDocument = document.implementation.createHTMLDocument('inert');\n    } else {\n      throw $sanitizeMinErr('noinert', 'Can\\'t create an inert html document');\n    }\n    var inertBodyElement = (inertDocument.documentElement || inertDocument.getDocumentElement()).querySelector('body');\n\n    // Check for the Safari 10.1 bug - which allows JS to run inside the SVG G element\n    inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (!inertBodyElement.querySelector('svg')) {\n      return getInertBodyElement_XHR;\n    } else {\n      // Check for the Firefox bug - which prevents the inner img JS from being sanitized\n      inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n      if (inertBodyElement.querySelector('svg img')) {\n        return getInertBodyElement_DOMParser;\n      } else {\n        return getInertBodyElement_InertDocument;\n      }\n    }\n\n    function getInertBodyElement_XHR(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        html = encodeURI(html);\n      } catch (e) {\n        return undefined;\n      }\n      var xhr = new window.XMLHttpRequest();\n      xhr.responseType = 'document';\n      xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n      xhr.send(null);\n      var body = xhr.response.body;\n      body.firstChild.remove();\n      return body;\n    }\n\n    function getInertBodyElement_DOMParser(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n        body.firstChild.remove();\n        return body;\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    function getInertBodyElement_InertDocument(html) {\n      inertBodyElement.innerHTML = html;\n\n      // Support: IE 9-11 only\n      // strip custom-namespaced attributes on IE<=11\n      if (document.documentMode) {\n        stripCustomNsAttrs(inertBodyElement);\n      }\n\n      return inertBodyElement;\n    }\n  })(window, window.document);\n\n  /**\n   * @example\n   * htmlParser(htmlString, {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * });\n   *\n   * @param {string} html string\n   * @param {object} handler\n   */\n  function htmlParserImpl(html, handler) {\n    if (html === null || html === undefined) {\n      html = '';\n    } else if (typeof html !== 'string') {\n      html = '' + html;\n    }\n\n    var inertBodyElement = getInertBodyElement(html);\n    if (!inertBodyElement) return '';\n\n    //mXSS protection\n    var mXSSAttempts = 5;\n    do {\n      if (mXSSAttempts === 0) {\n        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      // trigger mXSS if it is going to happen by reading and writing the innerHTML\n      html = inertBodyElement.innerHTML;\n      inertBodyElement = getInertBodyElement(html);\n    } while (html !== inertBodyElement.innerHTML);\n\n    var node = inertBodyElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case 1: // ELEMENT_NODE\n          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));\n          break;\n        case 3: // TEXT NODE\n          handler.chars(node.textContent);\n          break;\n      }\n\n      var nextNode;\n      if (!(nextNode = node.firstChild)) {\n        if (node.nodeType === 1) {\n          handler.end(node.nodeName.toLowerCase());\n        }\n        nextNode = getNonDescendant('nextSibling', node);\n        if (!nextNode) {\n          while (nextNode == null) {\n            node = getNonDescendant('parentNode', node);\n            if (node === inertBodyElement) break;\n            nextNode = getNonDescendant('nextSibling', node);\n            if (node.nodeType === 1) {\n              handler.end(node.nodeName.toLowerCase());\n            }\n          }\n        }\n      }\n      node = nextNode;\n    }\n\n    while ((node = inertBodyElement.firstChild)) {\n      inertBodyElement.removeChild(node);\n    }\n  }\n\n  function attrToMap(attrs) {\n    var map = {};\n    for (var i = 0, ii = attrs.length; i < ii; i++) {\n      var attr = attrs[i];\n      map[attr.name] = attr.value;\n    }\n    return map;\n  }\n\n\n  /**\n   * Escapes all potentially dangerous characters, so that the\n   * resulting string can be safely inserted into attribute or\n   * element text.\n   * @param value\n   * @returns {string} escaped text\n   */\n  function encodeEntities(value) {\n    return value.\n      replace(/&/g, '&amp;').\n      replace(SURROGATE_PAIR_REGEXP, function(value) {\n        var hi = value.charCodeAt(0);\n        var low = value.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n      }).\n      replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n        return '&#' + value.charCodeAt(0) + ';';\n      }).\n      replace(/</g, '&lt;').\n      replace(/>/g, '&gt;');\n  }\n\n  /**\n   * create an HTML/XML writer which writes to buffer\n   * @param {Array} buf use buf.join('') to get out sanitized html string\n   * @returns {object} in the form of {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * }\n   */\n  function htmlSanitizeWriterImpl(buf, uriValidator) {\n    var ignoreCurrentElement = false;\n    var out = bind(buf, buf.push);\n    return {\n      start: function(tag, attrs) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && blockedElements[tag]) {\n          ignoreCurrentElement = tag;\n        }\n        if (!ignoreCurrentElement && validElements[tag] === true) {\n          out('<');\n          out(tag);\n          forEach(attrs, function(value, key) {\n            var lkey = lowercase(key);\n            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n            if (validAttrs[lkey] === true &&\n              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n              out(' ');\n              out(key);\n              out('=\"');\n              out(encodeEntities(value));\n              out('\"');\n            }\n          });\n          out('>');\n        }\n      },\n      end: function(tag) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        // eslint-disable-next-line eqeqeq\n        if (tag == ignoreCurrentElement) {\n          ignoreCurrentElement = false;\n        }\n      },\n      chars: function(chars) {\n        if (!ignoreCurrentElement) {\n          out(encodeEntities(chars));\n        }\n      }\n    };\n  }\n\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare\n   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want\n   * to allow any of these custom attributes. This method strips them all.\n   *\n   * @param node Root element to process\n   */\n  function stripCustomNsAttrs(node) {\n    while (node) {\n      if (node.nodeType === window.Node.ELEMENT_NODE) {\n        var attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          var attrNode = attrs[i];\n          var attrName = attrNode.name.toLowerCase();\n          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {\n            node.removeAttributeNode(attrNode);\n            i--;\n            l--;\n          }\n        }\n      }\n\n      var nextNode = node.firstChild;\n      if (nextNode) {\n        stripCustomNsAttrs(nextNode);\n      }\n\n      node = getNonDescendant('nextSibling', node);\n    }\n  }\n\n  function getNonDescendant(propName, node) {\n    // An element is clobbered if its `propName` property points to one of its descendants\n    var nextNode = node[propName];\n    if (nextNode && nodeContains.call(node, nextNode)) {\n      throw $sanitizeMinErr('elclob', 'Failed to sanitize html because the element is clobbered: {0}', node.outerHTML || node.outerText);\n    }\n    return nextNode;\n  }\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', [])\n  .provider('$sanitize', $SanitizeProvider)\n  .info({ angularVersion: '1.6.6' });\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports `http/https/ftp/mailto` and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} target Window (`_blank|_self|_parent|_top`) or named frame to open links in.\n * @param {object|function(url)} [attributes] Add custom attributes to the link element.\n *\n *    Can be one of:\n *\n *    - `object`: A map of attributes\n *    - `function`: Takes the url as a parameter and returns a map of attributes\n *\n *    If the map of attributes contains a value for `target`, it overrides the value of\n *    the target parameter.\n *\n *\n * @returns {string} Html-linkified and {@link $sanitize sanitized} text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\" name=\"linky-filter\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <th>Filter</th>\n           <th>Source</th>\n           <th>Rendered</th>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"linky-custom-attributes\">\n          <td>linky custom attributes</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"script.js\">\n       angular.module('linkyExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n' +\n             'http://angularjs.org/,\\n' +\n             'mailto:us@somewhere.org,\\n' +\n             'another@somewhere.org,\\n' +\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithSingleURL = 'http://angularjs.org/';\n         }]);\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n\n       it('should optionally add custom attributes', function() {\n        expect(element(by.id('linky-custom-attributes')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"\\u201d\\u2019]/i,\n      MAILTO_REGEXP = /^mailto:/i;\n\n  var linkyMinErr = angular.$$minErr('linky');\n  var isDefined = angular.isDefined;\n  var isFunction = angular.isFunction;\n  var isObject = angular.isObject;\n  var isString = angular.isString;\n\n  return function(text, target, attributes) {\n    if (text == null || text === '') return text;\n    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);\n\n    var attributesFn =\n      isFunction(attributes) ? attributes :\n      isObject(attributes) ? function getAttributesObject() {return attributes;} :\n      function getEmptyAttributesObject() {return {};};\n\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      var key, linkAttributes = attributesFn(url);\n      html.push('<a ');\n\n      for (key in linkAttributes) {\n        html.push(key + '=\"' + linkAttributes[key] + '\" ');\n      }\n\n      if (isDefined(target) && !('target' in linkAttributes)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n","/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n\nimport {Predicate} from \"./common\";\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nexport function curry(fn: Function): Function {\n  let initial_args = [].slice.apply(arguments, [1]);\n  let func_args_length = fn.length;\n\n  function curried(args: any[]) {\n    if (args.length >= func_args_length)\n      return fn.apply(null, args);\n    return function () {\n      return curried(args.concat([].slice.apply(arguments)));\n    };\n  }\n  return curried(initial_args);\n}\n\n\n\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nexport function compose() {\n  let args = arguments;\n  let start = args.length - 1;\n  return function() {\n    let i = start, result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nexport function pipe(...funcs: Function[]): (obj: any) => any {\n  return compose.apply(null, [].slice.call(arguments).reverse());\n}\n\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexport const prop = (name: string) =>\n    (obj: any) => obj && obj[name];\n\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexport const propEq = curry((name: string, val: any, obj: any) => obj && obj[name] === val);\n\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexport const parse = (name: string) =>\n    pipe.apply(null, name.split(\".\").map(prop));\n\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexport const not: (fn: Predicate<any>) => Predicate<any> = (fn: Predicate<any>) =>\n    (...args: any[]) => !fn.apply(null, args);\n\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nexport function and(fn1: Predicate<any>, fn2: Predicate<any>): Predicate<any> {\n  return (...args: any[]) => fn1.apply(null, args) && fn2.apply(null, args);\n}\n\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nexport function or(fn1: Predicate<any>, fn2: Predicate<any>): Predicate<any> {\n  return (...args: any[]) => fn1.apply(null, args) || fn2.apply(null, args);\n}\n\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexport const all = (fn1: Predicate<any>) =>\n    (arr: any[]) => arr.reduce((b, x) => b && !!fn1(x), true) as boolean;\nexport const any = (fn1: Predicate<any>) =>\n    (arr: any[]) => arr.reduce((b, x) => b || !!fn1(x), false) as boolean;\n\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexport const is = <T> (ctor: { new(...args): T }) =>\n    (obj: any): obj is T =>\n        (obj != null && obj.constructor === ctor || obj instanceof ctor);\n\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexport const eq: (comp: any) => Predicate<any> = (val: any) => (other: any) =>\n    val === other;\n\n/** Given a value, returns a function which returns the value */\nexport const val = <T> (v: T) => () => v;\n\n\n\nexport function invoke(fnName: string): Function;\nexport function invoke(fnName: string, args: any[]): Function;\nexport function invoke(fnName: string, args?: any[]): Function {\n  return (obj: any) =>\n      obj[fnName].apply(obj, args);\n}\n\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nexport function pattern(struct: Function[][]): Function {\n  return function(x: any) {\n    for (var i = 0; i < struct.length; i++) {\n      if (struct[i][0](x)) return struct[i][1](x);\n    }\n  };\n}\n\n","/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */\n/** */\nimport { and, not, pipe, prop, or } from \"./hof\";\nimport { Predicate } from \"./common\"; // has or is using\nimport { StateObject } from \"../state/stateObject\";\n\nconst toStr = Object.prototype.toString;\nconst tis = (t: string) => (x: any) => typeof(x) === t;\nexport const isUndefined = tis('undefined');\nexport const isDefined = not(isUndefined);\nexport const isNull = (o: any) => o === null;\nexport const isNullOrUndefined = or(isNull, isUndefined);\nexport const isFunction: (x: any) => x is Function = <any> tis('function');\nexport const isNumber: (x: any) => x is number = <any> tis('number');\nexport const isString = <(x: any) => x is string> tis('string');\nexport const isObject = (x: any) => x !== null && typeof x === 'object';\nexport const isArray = Array.isArray;\nexport const isDate: (x: any) => x is Date = <any> ((x: any) => toStr.call(x) === '[object Date]');\nexport const isRegExp: (x: any) => x is RegExp = <any> ((x: any) => toStr.call(x) === '[object RegExp]');\nexport const isState: (x: any) => x is StateObject = StateObject.isState;\n\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nexport function isInjectable(val: any) {\n  if (isArray(val) && val.length) {\n    let head = val.slice(0, -1), tail = val.slice(-1);\n    return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n  }\n  return isFunction(val);\n}\n\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexport const isPromise = <(x: any) => x is Promise<any>> and(isObject, pipe(prop('then'), isFunction));\n\n","/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred\n * @module common\n */\n/** for typedoc */\nimport { isFunction, isString, isArray, isRegExp, isDate } from \"./predicates\";\nimport { all, any, prop, curry, not } from \"./hof\";\nimport { services } from \"./coreservices\";\nimport { StateObject } from \"../state/stateObject\";\n\nlet w: any = typeof window === 'undefined' ? {} : window;\nlet angular = w.angular || {};\nexport const fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexport const toJson = angular.toJson || JSON.stringify.bind(JSON);\nexport const copy = angular.copy || _copy;\nexport const forEach = angular.forEach || _forEach;\nexport const extend = Object.assign || _extend;\nexport const equals = angular.equals || _equals;\nexport function identity(x: any) { return x; }\nexport function noop(): any {}\n\nexport type Mapper<X, T> = (x: X, key?: (string|number)) => T;\nexport interface TypedMap<T> { [key: string]: T; }\nexport type Predicate<X> = (x?: X) => boolean;\n/**\n * An ng1-style injectable\n *\n * This could be a (non-minified) function such as:\n * ```js\n * function injectableFunction(SomeDependency) {\n *\n * }\n * ```\n *\n * or an explicitly annotated function (minify safe)\n * ```js\n * injectableFunction.$inject = [ 'SomeDependency' ];\n * function injectableFunction(SomeDependency) {\n *\n * }\n * ```\n *\n * or an array style annotated function (minify safe)\n * ```js\n * ['SomeDependency', function injectableFunction(SomeDependency) {\n *\n * }];\n * ```\n *\n * @publicapi\n */\nexport type IInjectable = (Function|any[]);\n\nexport interface Obj extends Object {\n  [key: string]: any;\n}\n\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nexport function createProxyFunctions(source: Function, target: Obj, bind: Function, fnNames?: string[], latebind = false): Obj {\n  const bindFunction = (fnName) =>\n      source()[fnName].bind(bind());\n\n  const makeLateRebindFn = fnName => function lateRebindFunction() {\n    target[fnName] = bindFunction(fnName);\n    return target[fnName].apply(null, arguments);\n  };\n\n  fnNames = fnNames || Object.keys(source());\n\n  return fnNames.reduce((acc, name) => {\n    acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n    return acc;\n  }, target);\n}\n\n\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexport const inherit = (parent: Obj, extra?: Obj) =>\n    extend(Object.create(parent), extra);\n\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexport const inArray: typeof _inArray = curry(_inArray) as any;\nexport function _inArray(array: any[], obj: any): boolean;\nexport function _inArray(array: any[]): (obj: any) => boolean;\nexport function _inArray(array, obj?): any {\n  return array.indexOf(obj) !== -1;\n}\n\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nexport const removeFrom: typeof _removeFrom = curry(_removeFrom) as any;\nexport function _removeFrom<T>(array: T[], obj: T): T[];\nexport function _removeFrom<T>(array: T[]): (obj: T) => T[];\nexport function _removeFrom(array, obj?) {\n  let idx = array.indexOf(obj);\n  if (idx >= 0) array.splice(idx, 1);\n  return array;\n}\n\n/** pushes a values to an array and returns the value */\nexport const pushTo: typeof _pushTo = curry(_pushTo) as any;\nexport function _pushTo<T>(arr: T[], val: T): T ;\nexport function _pushTo<T>(arr: T[]): (val: T) => T ;\nexport function _pushTo(arr, val?): any {\n  return (arr.push(val), val);\n}\n\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nexport const deregAll = (functions: Function[]) =>\n    functions.slice().forEach(fn => {\n      typeof fn === 'function' && fn();\n      removeFrom(functions, fn);\n    });\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nexport function defaults(opts, ...defaultsList: Obj[]) {\n  let _defaultsList = defaultsList.concat({}).reverse();\n  let defaultVals = extend.apply(null, _defaultsList);\n  return extend({}, defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\n\n/** Reduce function that merges each element of the list into a single object, using extend */\nexport const mergeR = (memo: Obj, item: Obj) => extend(memo, item);\n\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nexport function ancestors(first: StateObject, second: StateObject) {\n  let path: StateObject[] = [];\n\n  for (let n in first.path) {\n    if (first.path[n] !== second.path[n]) break;\n    path.push(first.path[n]);\n  }\n  return path;\n}\n\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nexport function pick(obj: Obj, propNames: string[]): Obj {\n  let objCopy = {};\n  for (let prop in obj) {\n    if (propNames.indexOf(prop) !== -1) {\n      objCopy[prop] = obj[prop];\n    }\n  }\n  return objCopy;\n}\n\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nexport function omit(obj: Obj, propNames: string[]): Obj {\n  return Object.keys(obj)\n      .filter(not(inArray(propNames)))\n      .reduce((acc, key) => (acc[key] = obj[key], acc), {});\n}\n\n\n/** Given an array of objects, maps each element to a named property of the element. */\nexport function pluck<T>(collection: Obj[], propName: string): T[];\n/** Given an object, maps each property of the object to a named property of the property. */\nexport function pluck(collection: { [key: string]: any }, propName: string): { [key: string]: any };\n/**\n * Maps an array, or object to a property (by name)\n */\nexport function pluck(collection: any, propName: string): any {\n  return map(collection, <Mapper<any, string>> prop(propName));\n}\n\n\n/** Given an array of objects, returns a new array containing only the elements which passed the callback predicate */\nexport function filter<T>(collection: T[], callback: (t: T, key?: number) => boolean): T[];\n/** Given an object, returns a new object with only those properties that passed the callback predicate */\nexport function filter<T>(collection: TypedMap<T>, callback: (t: T, key?: string) => boolean): TypedMap<T>;\n/** Filters an Array or an Object's properties based on a predicate */\nexport function filter<T>(collection: any, callback: Function): T {\n  let arr = isArray(collection), result: any = arr ? [] : {};\n  let accept = arr ? x => result.push(x) : (x, key) => result[key] = x;\n  forEach(collection, function(item, i) {\n    if (callback(item, i)) accept(item, i);\n  });\n  return <T>result;\n}\n\n\n/** Given an object, return the first property of that object which passed the callback predicate */\nexport function find<T>(collection: TypedMap<T>, callback: Predicate<T>): T;\n/** Given an array of objects, returns the first object which passed the callback predicate */\nexport function find<T>(collection: T[], callback: Predicate<T>): T;\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nexport function find(collection: any, callback: any) {\n  let result;\n\n  forEach(collection, function(item, i) {\n    if (result) return;\n    if (callback(item, i)) result = item;\n  });\n\n  return result;\n}\n\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexport let mapObj: <T, U>(collection: { [key: string]: T }, callback: Mapper<T, U>) => { [key: string]: U } = map;\n/** Given an array, returns a new array, where each element is transformed by the callback function */\nexport function map<T, U>(collection: T[], callback: Mapper<T, U>): U[];\nexport function map<T, U>(collection: { [key: string]: T }, callback: Mapper<T, U>): { [key: string]: U };\n/** Maps an array or object properties using a callback function */\nexport function map(collection: any, callback: any): any {\n  let result = isArray(collection) ? [] : {};\n  forEach(collection, (item, i) => result[i] = callback(item, i));\n  return result;\n}\n\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexport const values: (<T> (obj: TypedMap<T>) => T[]) = (obj: Obj) =>\n    Object.keys(obj).map(key => obj[key]);\n\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexport const allTrueR  = (memo: boolean, elem: any) => memo && elem;\n\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexport const anyTrueR  = (memo: boolean, elem: any) => memo || elem;\n\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport const unnestR   = (memo: any[], elem: any[]) => memo.concat(elem);\n\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport const flattenR  = (memo: any[], elem: any) =>\n    isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nexport function pushR(arr: any[], obj: any) {\n  arr.push(obj);\n  return arr;\n}\n\n/** Reduce function that filters out duplicates */\nexport const uniqR = <T> (acc: T[], token: T): T[] =>\n    inArray(acc, token) ? acc : pushR(acc, token);\n\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport const unnest    = (arr: any[]) => arr.reduce(unnestR, []);\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport const flatten   = (arr: any[]) => arr.reduce(flattenR, []);\n\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexport const assertPredicate: <T> (predicate: Predicate<T>, errMsg: (string|Function)) => Predicate<T> = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nexport const assertMap: <T, U> (mapFn: (t: T) => U, errMsg: (string|Function)) => (t: T) => U = assertFn;\nexport function assertFn(predicateOrMap: Function, errMsg: (string|Function) = \"assert failure\"): any {\n  return (obj) => {\n    let result = predicateOrMap(obj);\n    if (!result) {\n      throw new Error(isFunction(errMsg) ? (<Function> errMsg)(obj) : errMsg);\n    }\n    return result;\n  };\n}\n\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexport const pairs = (obj: Obj) =>\n    Object.keys(obj).map(key => [ key, obj[key]] );\n\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nexport function arrayTuples(...args: any[]): any[] {\n  if (args.length === 0) return [];\n  let maxArrayLen = args.reduce((min, arr) => Math.min(arr.length, min), 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n\n  let i, result = [];\n\n  for (i = 0; i < maxArrayLen; i++) {\n    // This is a hot function\n    // Unroll when there are 1-4 arguments\n    switch (args.length) {\n      case 1: result.push([args[0][i]]); break;\n      case 2: result.push([args[0][i], args[1][i]]); break;\n      case 3: result.push([args[0][i], args[1][i], args[2][i]]); break;\n      case 4: result.push([args[0][i], args[1][i], args[2][i], args[3][i]]); break;\n      default:\n        result.push(args.map(array => array[i])); break;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nexport function applyPairs(memo: TypedMap<any>, keyValTuple: any[]) {\n  let key: string, value: any;\n  if (isArray(keyValTuple)) [key, value] = keyValTuple;\n  if (!isString(key)) throw new Error(\"invalid parameters to applyPairs\");\n  memo[key] = value;\n  return memo;\n}\n\n/** Get the last element of an array */\nexport function tail<T>(arr: T[]): T {\n  return arr.length && arr[arr.length - 1] || undefined;\n}\n\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src: Obj, dest: Obj) {\n  if (dest) Object.keys(dest).forEach(key => delete dest[key]);\n  if (!dest) dest = {};\n  return extend(dest, src);\n}\n\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj: (any[]|any), cb: (el, idx?) => void, _this: Obj) {\n  if (isArray(obj)) return obj.forEach(cb, _this);\n  Object.keys(obj).forEach(key => cb(obj[key], key));\n}\n\n/** Like Object.assign() */\nexport function _extend(toObj: Obj, ...fromObjs: Obj[]): any;\nexport function _extend(toObj: Obj): any {\n  for (let i = 1; i < arguments.length; i++) {\n    let obj = arguments[i];\n    if (!obj) continue;\n    let keys = Object.keys(obj);\n\n    for (let j = 0; j < keys.length; j++) {\n      toObj[keys[j]] = obj[keys[j]];\n    }\n  }\n\n  return toObj;\n}\n\nfunction _equals(o1: any, o2: any): boolean {\n  if (o1 === o2) return true;\n  if (o1 === null || o2 === null) return false;\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\n  let t1 = typeof o1, t2 = typeof o2;\n  if (t1 !== t2 || t1 !== 'object') return false;\n\n  const tup = [o1, o2];\n  if (all(isArray)(tup)) return _arraysEq(o1, o2);\n  if (all(isDate)(tup)) return o1.getTime() === o2.getTime();\n  if (all(isRegExp)(tup)) return o1.toString() === o2.toString();\n  if (all(isFunction)(tup)) return true; // meh\n\n  let predicates = [isFunction, isArray, isDate, isRegExp];\n  if (predicates.map(any).reduce((b, fn) => b || !!fn(tup), false)) return false;\n\n  let key: string, keys: { [i: string]: boolean } = {};\n  for (key in o1) {\n    if (!_equals(o1[key], o2[key])) return false;\n    keys[key] = true;\n  }\n  for (key in o2) {\n    if (!keys[key]) return false;\n  }\n\n  return true;\n}\n\nfunction _arraysEq(a1: any[], a2: any[]) {\n  if (a1.length !== a2.length) return false;\n  return arrayTuples(a1, a2).reduce((b, t) => b && _equals(t[0], t[1]), true);\n}\n\n// issue #2676\nexport const silenceUncaughtInPromise = (promise: Promise<any>) =>\n    promise.catch(e => 0) && promise;\nexport const silentRejection = (error: any) =>\n    silenceUncaughtInPromise(services.$q.reject(error));\n","/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @coreapi\n * @module trace\n */ /** for typedoc */\nimport {parse} from \"../common/hof\";\nimport {isNumber} from \"../common/predicates\";\nimport {Transition}  from \"../transition/transition\";\nimport {ActiveUIView, ViewConfig, ViewContext}  from \"../view/interface\";\nimport {stringify, functionToString, maxLength, padString} from \"./strings\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {PathNode} from \"../path/pathNode\";\nimport {PolicyWhen} from \"../resolve/interface\";\nimport {TransitionHook} from \"../transition/transitionHook\";\nimport {HookResult} from \"../transition/interface\";\nimport {StateObject} from \"../state/stateObject\";\n\n/** @hidden */\nfunction uiViewString (uiview: ActiveUIView) {\n    if (!uiview) return 'ui-view (defunct)';\n    const state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return `[ui-view#${uiview.id} ${uiview.$type}:${uiview.fqn} (${uiview.name}@${state})]`;\n}\n\n/** @hidden */\nconst viewConfigString = (viewConfig: ViewConfig) => {\n  let view = viewConfig.viewDecl;\n  const state = view.$context.name || '(root)';\n  return `[View#${viewConfig.$id} from '${state}' state]: target ui-view: '${view.$uiViewName}@${view.$uiViewContextAnchor}'`;\n};\n\n/** @hidden */\nfunction normalizedCat(input: Category|string): string {\n  return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n\n\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nexport enum Category {\n  RESOLVE, TRANSITION, HOOK, UIVIEW, VIEWCONFIG,\n}\n\n/** @hidden */ const _tid = parse(\"$id\");\n/** @hidden */ const _rid = parse(\"router.$id\");\n/** @hidden */ const transLbl = (trans) => `Transition #${_tid(trans)}-${_rid(trans)}`;\n\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nexport class Trace {\n  /** @hidden */\n  approximateDigests: number;\n\n  /** @hidden */\n  constructor() {\n    this.approximateDigests = 0;\n  }\n\n  /** @hidden */\n  private _enabled: { [key: string]: boolean } = {};\n\n   /** @hidden */\n  private _set(enabled: boolean, categories: Category[]) {\n    if (!categories.length) {\n      categories = <any> Object.keys(Category)\n          .map(k => parseInt(k, 10))\n          .filter(k => !isNaN(k))\n          .map(key => Category[key]);\n    }\n    categories.map(normalizedCat).forEach(category => this._enabled[category] = enabled);\n  }\n\n  /**\n   * Enables a trace [[Category]]\n   *\n   * ```js\n   * trace.enable(\"TRANSITION\");\n   * ```\n   *\n   * @param categories categories to enable. If `categories` is omitted, all categories are enabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  enable(...categories: (Category|string|number)[]);\n  enable(...categories: any[]) { this._set(true, categories); }\n  /**\n   * Disables a trace [[Category]]\n   *\n   * ```js\n   * trace.disable(\"VIEWCONFIG\");\n   * ```\n   *\n   * @param categories categories to disable. If `categories` is omitted, all categories are disabled.\n   *        Also takes strings (category name) or ordinal (category position)\n   */\n  disable(...categories: (Category|string|number)[]);\n  disable(...categories: any[]) { this._set(false, categories); }\n\n  /**\n   * Retrieves the enabled stateus of a [[Category]]\n   *\n   * ```js\n   * trace.enabled(\"VIEWCONFIG\"); // true or false\n   * ```\n   *\n   * @returns boolean true if the category is enabled\n   */\n  enabled(category: (Category|string|number)): boolean {\n    return !!this._enabled[normalizedCat(category)];\n  }\n\n  /** @internalapi called by ui-router code */\n  traceTransitionStart(trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    console.log(`${transLbl(trans)}: Started  -> ${stringify(trans)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceTransitionIgnored(trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    console.log(`${transLbl(trans)}: Ignored  <> ${stringify(trans)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceHookInvocation(step: TransitionHook, trans: Transition, options: any) {\n    if (!this.enabled(Category.HOOK)) return;\n    let event = parse(\"traceData.hookType\")(options) || \"internal\",\n        context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\",\n        name = functionToString((step as any).registeredHook.callback);\n    console.log(`${transLbl(trans)}:   Hook -> ${event} context: ${context}, ${maxLength(200, name)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceHookResult(hookResult: HookResult, trans: Transition, transitionOptions: any) {\n    if (!this.enabled(Category.HOOK)) return;\n    console.log(`${transLbl(trans)}:   <- Hook returned: ${maxLength(200, stringify(hookResult))}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceResolvePath(path: PathNode[], when: PolicyWhen, trans?: Transition) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    console.log(`${transLbl(trans)}:         Resolving ${path} (${when})`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceResolvableResolved(resolvable: Resolvable, trans?: Transition) {\n    if (!this.enabled(Category.RESOLVE)) return;\n    console.log(`${transLbl(trans)}:               <- Resolved  ${resolvable} to: ${maxLength(200, stringify(resolvable.data))}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceError(reason: any, trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    console.log(`${transLbl(trans)}: <- Rejected ${stringify(trans)}, reason: ${reason}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceSuccess(finalState: StateObject, trans: Transition) {\n    if (!this.enabled(Category.TRANSITION)) return;\n    console.log(`${transLbl(trans)}: <- Success  ${stringify(trans)}, final state: ${finalState.name}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceUIViewEvent(event: string, viewData: ActiveUIView, extra = \"\") {\n    if (!this.enabled(Category.UIVIEW)) return;\n    console.log(`ui-view: ${padString(30, event)} ${uiViewString(viewData)}${extra}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceUIViewConfigUpdated(viewData: ActiveUIView, context: ViewContext) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent(\"Updating\", viewData, ` with ViewConfig from context='${context}'`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceUIViewFill(viewData: ActiveUIView, html: string) {\n    if (!this.enabled(Category.UIVIEW)) return;\n    this.traceUIViewEvent(\"Fill\", viewData, ` with: ${maxLength(200, html)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceViewSync(pairs: any[]) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    const mapping = pairs.map(([ uiViewData, config ]) => {\n      const uiView = `${uiViewData.$type}:${uiViewData.fqn}`;\n      const view = config && `${config.viewDecl.$context.name}: ${config.viewDecl.$name} (${config.viewDecl.$type})`;\n\n      return { 'ui-view fqn': uiView, 'state: view name': view };\n    }).sort((a, b) => a['ui-view fqn'].localeCompare(b['ui-view fqn']));\n\n    console.table(mapping);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceViewServiceEvent(event: string, viewConfig: ViewConfig) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    console.log(`VIEWCONFIG: ${event} ${viewConfigString(viewConfig)}`);\n  }\n\n  /** @internalapi called by ui-router code */\n  traceViewServiceUIViewEvent(event: string, viewData: ActiveUIView) {\n    if (!this.enabled(Category.VIEWCONFIG)) return;\n    console.log(`VIEWCONFIG: ${event} ${uiViewString(viewData)}`);\n  }\n}\n\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nlet trace = new Trace();\nexport {trace};\n","/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\nimport { extend, removeFrom, tail, values, identity, map } from \"../common/common\";\nimport {isString, isFunction} from \"../common/predicates\";\nimport {PathNode} from \"../path/pathNode\";\nimport {\n    TransitionStateHookFn, TransitionHookFn, TransitionHookPhase, TransitionHookScope, IHookRegistry, PathType\n} from \"./interface\"; // has or is using\n\nimport {\n    HookRegOptions, HookMatchCriteria, TreeChanges,\n    HookMatchCriterion, IMatchingNodes, HookFn\n} from \"./interface\";\nimport {Glob} from \"../common/glob\";\nimport {StateObject} from \"../state/stateObject\";\nimport {TransitionEventType} from \"./transitionEventType\";\nimport { TransitionService } from \"./transitionService\";\n\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nexport function matchState(state: StateObject, criterion: HookMatchCriterion) {\n  let toMatch = isString(criterion) ? [criterion] : criterion;\n\n  function matchGlobs(_state: StateObject) {\n    let globStrings = <string[]> toMatch;\n    for (let i = 0; i < globStrings.length; i++) {\n      let glob = new Glob(globStrings[i]);\n\n      if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  let matchFn = <any> (isFunction(toMatch) ? toMatch : matchGlobs);\n  return !!matchFn(state);\n}\n\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nexport class RegisteredHook {\n  priority: number;\n  bind: any;\n  _deregistered: boolean;\n\n  constructor(public tranSvc: TransitionService,\n              public eventType: TransitionEventType,\n              public callback: HookFn,\n              public matchCriteria: HookMatchCriteria,\n              options: HookRegOptions = {} as any) {\n    this.priority = options.priority || 0;\n    this.bind = options.bind || null;\n    this._deregistered = false;\n  }\n\n  /**\n   * Gets the matching [[PathNode]]s\n   *\n   * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n   * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n   *\n   * Returning `null` is significant to distinguish between the default\n   * \"match-all criterion value\" of `true` compared to a `() => true` function,\n   * when the nodes is an empty array.\n   *\n   * This is useful to allow a transition match criteria of `entering: true`\n   * to still match a transition, even when `entering === []`.  Contrast that\n   * with `entering: (state) => true` which only matches when a state is actually\n   * being entered.\n   */\n  private _matchingNodes(nodes: PathNode[], criterion: HookMatchCriterion): PathNode[] {\n    if (criterion === true) return nodes;\n    let matching = nodes.filter(node => matchState(node.state, criterion));\n    return matching.length ? matching : null;\n  }\n\n  /**\n   * Gets the default match criteria (all `true`)\n   *\n   * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n   *\n   * ```js\n   * {\n   *   to: true,\n   *   from: true,\n   *   entering: true,\n   *   exiting: true,\n   *   retained: true,\n   * }\n   */\n  private _getDefaultMatchCriteria(): HookMatchCriteria {\n    return map(this.tranSvc._pluginapi._getPathTypes(), () => true);\n  }\n\n  /**\n   * Gets matching nodes as [[IMatchingNodes]]\n   *\n   * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n   *\n   * ```js\n   * let matches: IMatchingNodes = {\n   *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n   *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n   *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n   *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n   *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n   * };\n   * ```\n   */\n  private _getMatchingNodes(treeChanges: TreeChanges): IMatchingNodes {\n    let criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n    let paths: PathType[] = values(this.tranSvc._pluginapi._getPathTypes());\n\n    return paths.reduce((mn: IMatchingNodes, pathtype: PathType) => {\n      // STATE scope criteria matches against every node in the path.\n      // TRANSITION scope criteria matches against only the last node in the path\n      let isStateHook = pathtype.scope === TransitionHookScope.STATE;\n      let path = treeChanges[pathtype.name] || [];\n      let nodes: PathNode[] = isStateHook ? path : [tail(path)];\n\n      mn[pathtype.name] = this._matchingNodes(nodes, criteria[pathtype.name]);\n      return mn;\n    }, {} as IMatchingNodes);\n  }\n\n  /**\n   * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n   *\n   * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n   * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n   */\n  matches(treeChanges: TreeChanges): IMatchingNodes {\n    let matches = this._getMatchingNodes(treeChanges);\n\n    // Check if all the criteria matched the TreeChanges object\n    let allMatched = values(matches).every(identity);\n    return allMatched ? matches : null;\n  }\n}\n\n/** @hidden Return a registration function of the requested type. */\nexport function makeEvent(registry: IHookRegistry, transitionService: TransitionService, eventType: TransitionEventType) {\n  // Create the object which holds the registered transition hooks.\n  let _registeredHooks = registry._registeredHooks = (registry._registeredHooks || {});\n  let hooks = _registeredHooks[eventType.name] = [];\n\n  // Create hook registration function on the IHookRegistry for the event\n  registry[eventType.name] = hookRegistrationFn;\n\n  function hookRegistrationFn(matchObject, callback, options = {}) {\n    let registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, options);\n    hooks.push(registeredHook);\n\n    return function deregisterEventHook() {\n      registeredHook._deregistered = true;\n      removeFrom(hooks)(registeredHook);\n    };\n  }\n\n  return hookRegistrationFn;\n}","/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n\nimport {extend, tail, assertPredicate, unnestR, identity} from \"../common/common\";\nimport {isArray} from \"../common/predicates\";\n\nimport {\n    TransitionOptions, TransitionHookOptions, IHookRegistry, TreeChanges, IMatchingNodes,\n    TransitionHookPhase, TransitionHookScope\n} from \"./interface\";\n\nimport {Transition} from \"./transition\";\nimport {TransitionHook} from \"./transitionHook\";\nimport {StateObject} from \"../state/stateObject\";\nimport {PathNode} from \"../path/pathNode\";\nimport {TransitionService} from \"./transitionService\";\nimport {TransitionEventType} from \"./transitionEventType\";\nimport {RegisteredHook} from \"./hookRegistry\";\n\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nexport class HookBuilder {\n  constructor(private transition: Transition) { }\n\n  buildHooksForPhase(phase: TransitionHookPhase): TransitionHook[] {\n    let $transitions = this.transition.router.transitionService;\n    return $transitions._pluginapi._getEvents(phase)\n        .map(type => this.buildHooks(type))\n        .reduce(unnestR, [])\n        .filter(identity);\n  }\n\n  /**\n   * Returns an array of newly built TransitionHook objects.\n   *\n   * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n   * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n   * - For each of the [[PathNode]]s, creates a TransitionHook\n   *\n   * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n   */\n  buildHooks(hookType: TransitionEventType): TransitionHook[] {\n    let transition = this.transition;\n    let treeChanges = transition.treeChanges();\n\n    // Find all the matching registered hooks for a given hook type\n    let matchingHooks = this.getMatchingHooks(hookType, treeChanges);\n    if (!matchingHooks) return [];\n\n    let baseHookOptions = <TransitionHookOptions> {\n      transition: transition,\n      current: transition.options().current\n    };\n\n    const makeTransitionHooks = (hook: RegisteredHook) => {\n       // Fetch the Nodes that caused this hook to match.\n       let matches: IMatchingNodes = hook.matches(treeChanges);\n       // Select the PathNode[] that will be used as TransitionHook context objects\n       let matchingNodes: PathNode[] = matches[hookType.criteriaMatchPath.name];\n\n       // Return an array of HookTuples\n       return matchingNodes.map(node => {\n         let _options = extend({\n           bind: hook.bind,\n           traceData: { hookType: hookType.name, context: node }\n         }, baseHookOptions);\n\n         let state = hookType.criteriaMatchPath.scope === TransitionHookScope.STATE ? node.state.self : null;\n         let transitionHook = new TransitionHook(transition, state, hook, _options);\n         return <HookTuple> { hook, node, transitionHook };\n       });\n    };\n\n    return matchingHooks.map(makeTransitionHooks)\n        .reduce(unnestR, [])\n        .sort(tupleSort(hookType.reverseSort))\n        .map(tuple => tuple.transitionHook);\n  }\n\n  /**\n   * Finds all RegisteredHooks from:\n   * - The Transition object instance hook registry\n   * - The TransitionService ($transitions) global hook registry\n   *\n   * which matched:\n   * - the eventType\n   * - the matchCriteria (to, from, exiting, retained, entering)\n   *\n   * @returns an array of matched [[RegisteredHook]]s\n   */\n  public getMatchingHooks(hookType: TransitionEventType, treeChanges: TreeChanges): RegisteredHook[] {\n    let isCreate = hookType.hookPhase === TransitionHookPhase.CREATE;\n\n    // Instance and Global hook registries\n    let $transitions = this.transition.router.transitionService;\n    let registries = isCreate ? [ $transitions ] : [ this.transition, $transitions ];\n\n    return registries.map((reg: IHookRegistry) => reg.getHooks(hookType.name))    // Get named hooks from registries\n        .filter(assertPredicate(isArray, `broken event named: ${hookType.name}`)) // Sanity check\n        .reduce(unnestR, [])                                                      // Un-nest RegisteredHook[][] to RegisteredHook[] array\n        .filter(hook => hook.matches(treeChanges));                               // Only those satisfying matchCriteria\n  }\n}\n\ninterface HookTuple { hook: RegisteredHook, node: PathNode, transitionHook: TransitionHook }\n\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort = false) {\n  return function nodeDepthThenPriority(l: HookTuple, r: HookTuple): number {\n    let factor = reverseDepthSort ? -1 : 1;\n    let depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n    return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n  }\n}","/**\n * @coreapi\n * @module params\n */\n/** */\nimport {extend, filter, map} from \"../common/common\";\nimport {isArray, isDefined} from \"../common/predicates\";\nimport {ParamTypeDefinition} from \"./interface\";\n\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nexport class ParamType implements ParamTypeDefinition {\n  /** @inheritdoc */\n  pattern: RegExp = /.*/;\n  /** The name/id of the parameter type */\n  name: string;\n  /** @inheritdoc */\n  raw: boolean;\n  /** @inheritdoc */\n  dynamic: boolean;\n  /** @inheritdoc */\n  inherit = true;\n\n  /**\n   * @param def  A configuration object which contains the custom type definition.  The object's\n   *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n   * @returns a new ParamType object\n   */\n  constructor(def: ParamTypeDefinition) {\n    extend(this, def);\n  }\n\n\n  // consider these four methods to be \"abstract methods\" that should be overridden\n  /** @inheritdoc */\n  is(val: any, key?: string): boolean { return true; }\n  /** @inheritdoc */\n  encode(val: any, key?: string): (string|string[]) { return val; }\n  /** @inheritdoc */\n  decode(val: string, key?: string): any { return val; }\n  /** @inheritdoc */\n  equals(a: any, b: any): boolean { return a == b; }\n\n\n  $subPattern() {\n    let sub = this.pattern.toString();\n    return sub.substr(1, sub.length - 2);\n  }\n\n  toString() {\n    return `{ParamType:${this.name}}`;\n  }\n\n  /** Given an encoded string, or a decoded object, returns a decoded object */\n  $normalize(val: any) {\n    return this.is(val) ? val : this.decode(val);\n  }\n\n  /**\n   * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n   * e.g.:\n   * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n   * - url: \"/path?queryParam=1&queryParam=2\n   * - $stateParams.queryParam will be [1, 2]\n   * if `mode` is \"auto\", then\n   * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n   * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n   */\n  $asArray(mode: (boolean|\"auto\"), isSearch: boolean) {\n    if (!mode) return this;\n    if (mode === \"auto\" && !isSearch) throw new Error(\"'auto' array mode is for query parameters only\");\n    return new (<any> ArrayType)(this, mode);\n  }\n}\n\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type: ParamType, mode: (boolean|\"auto\")) {\n  // Wrap non-array value as array\n  function arrayWrap(val: any): any[] {\n    return isArray(val) ? val : (isDefined(val) ? [ val ] : []);\n  }\n\n  // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n  function arrayUnwrap(val: any) {\n    switch (val.length) {\n      case 0: return undefined;\n      case 1: return mode === \"auto\" ? val[0] : val;\n      default: return val;\n    }\n  }\n\n  // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n  function arrayHandler(callback: (x: any) => any, allTruthyMode?: boolean) {\n    return function handleArray(val: any) {\n      if (isArray(val) && val.length === 0) return val;\n      let arr = arrayWrap(val);\n      let result = map(arr, callback);\n      return (allTruthyMode === true) ? filter(result, x => !x).length === 0 : arrayUnwrap(result);\n    };\n  }\n\n  // Wraps type (.equals) functions to operate on each value of an array\n  function arrayEqualsHandler(callback: (l: any, r: any) => boolean) {\n    return function handleArray(val1: any, val2: any) {\n      let left = arrayWrap(val1), right = arrayWrap(val2);\n      if (left.length !== right.length) return false;\n      for (let i = 0; i < left.length; i++) {\n        if (!callback(left[i], right[i])) return false;\n      }\n      return true;\n    };\n  }\n\n  ['encode', 'decode', 'equals', '$normalize'].forEach(name => {\n    var paramTypeFn = type[name].bind(type);\n    var wrapperFn: Function = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n    this[name] = wrapperFn(paramTypeFn);\n  });\n\n  extend(this, {\n    dynamic: type.dynamic,\n    name: type.name,\n    pattern: type.pattern,\n    inherit: type.inherit,\n    is: arrayHandler(type.is.bind(type), true),\n    $arrayMode: mode\n  });\n}\n","/**\n * @coreapi\n * @module params\n */ /** for typedoc */\nimport { extend, filter, map, allTrueR } from \"../common/common\";\nimport { prop } from \"../common/hof\";\nimport { isInjectable, isDefined, isString, isArray, isUndefined } from \"../common/predicates\";\nimport { RawParams, ParamDeclaration } from \"../params/interface\";\nimport { services } from \"../common/coreservices\";\nimport { ParamType } from \"./paramType\";\nimport { ParamTypes } from \"./paramTypes\";\nimport { UrlMatcherFactory } from \"../url/urlMatcherFactory\";\n\n/** @hidden */ let hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */ let isShorthand = (cfg: ParamDeclaration) =>\n    [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n\n/** @internalapi */\nexport enum DefType {\n  PATH,\n  SEARCH,\n  CONFIG,\n}\n\n/** @hidden */\nfunction unwrapShorthand(cfg: ParamDeclaration): ParamDeclaration {\n  cfg = isShorthand(cfg) && { value: cfg } as any || cfg;\n\n  getStaticDefaultValue['__cacheable'] = true;\n  function getStaticDefaultValue() {\n    return cfg.value;\n  }\n\n  return extend(cfg, {\n    $$fn: isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue,\n  });\n}\n\n/** @hidden */\nfunction getType(cfg: ParamDeclaration, urlType: ParamType, location: DefType, id: string, paramTypes: ParamTypes) {\n  if (cfg.type && urlType && urlType.name !== 'string') throw new Error(`Param '${id}' has two type configurations.`);\n  if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type as string)) return paramTypes.type(cfg.type as string);\n  if (urlType) return urlType;\n  if (!cfg.type) {\n    let type = location === DefType.CONFIG ? \"any\" :\n        location === DefType.PATH ? \"path\" :\n        location === DefType.SEARCH ? \"query\" : \"string\";\n    return paramTypes.type(type);\n  }\n  return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type as string);\n}\n\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config: ParamDeclaration, isOptional: boolean, defaultPolicy: (boolean|string)) {\n  let squash = config.squash;\n  if (!isOptional || squash === false) return false;\n  if (!isDefined(squash) || squash == null) return defaultPolicy;\n  if (squash === true || isString(squash)) return squash;\n  throw new Error(`Invalid squash policy: '${squash}'. Valid policies: false, true, or arbitrary string`);\n}\n\n/** @internalapi */\nfunction getReplace(config: ParamDeclaration, arrayMode: boolean, isOptional: boolean, squash: (string|boolean)) {\n  let replace: any, configuredKeys: string[], defaultPolicy = [\n    {from: \"\", to: (isOptional || arrayMode ? undefined : \"\")},\n    {from: null, to: (isOptional || arrayMode ? undefined : \"\")},\n  ];\n  replace = isArray(config.replace) ? config.replace : [];\n  if (isString(squash)) replace.push({ from: squash, to: undefined });\n  configuredKeys = map(replace, prop(\"from\"));\n  return filter(defaultPolicy, item => configuredKeys.indexOf(item.from) === -1).concat(replace);\n}\n\n\n/** @internalapi */\nexport class Param {\n  id: string;\n  type: ParamType;\n  location: DefType;\n  isOptional: boolean;\n  dynamic: boolean;\n  raw: boolean;\n  squash: (boolean|string);\n  replace: [{ to: any, from: any }];\n  inherit: boolean;\n  array: boolean;\n  config: any;\n  /** Cache the default value if it is a static value */\n  _defaultValueCache: {\n    defaultValue: any,\n  };\n\n  constructor(id: string, type: ParamType, config: ParamDeclaration, location: DefType, urlMatcherFactory: UrlMatcherFactory) {\n    config = unwrapShorthand(config);\n    type = getType(config, type, location, id, urlMatcherFactory.paramTypes);\n    let arrayMode = getArrayMode();\n    type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n    let isOptional = config.value !== undefined || location === DefType.SEARCH;\n    let dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n    let raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n    let squash = getSquashPolicy(config, isOptional, urlMatcherFactory.defaultSquashPolicy());\n    let replace = getReplace(config, arrayMode, isOptional, squash);\n    let inherit = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n\n    // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n    function getArrayMode() {\n      let arrayDefaults = { array: (location === DefType.SEARCH ? \"auto\" : false) };\n      let arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n      return extend(arrayDefaults, arrayParamNomenclature, config).array;\n    }\n\n    extend(this, {id, type, location, isOptional, dynamic, raw, squash, replace, inherit, array: arrayMode, config });\n  }\n\n  isDefaultValue(value: any): boolean {\n    return this.isOptional && this.type.equals(this.value(), value);\n  }\n\n  /**\n   * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n   * default value, which may be the result of an injectable function.\n   */\n  value(value?: any): any {\n    /**\n     * [Internal] Get the default value of a parameter, which may be an injectable function.\n     */\n    const getDefaultValue = () => {\n      if (this._defaultValueCache) return this._defaultValueCache.defaultValue;\n\n      if (!services.$injector) throw new Error(\"Injectable functions cannot be called at configuration time\");\n\n      let defaultValue = services.$injector.invoke(this.config.$$fn);\n\n      if (defaultValue !== null && defaultValue !== undefined && !this.type.is(defaultValue))\n        throw new Error(`Default value (${defaultValue}) for parameter '${this.id}' is not an instance of ParamType (${this.type.name})`);\n\n      if (this.config.$$fn['__cacheable']) {\n        this._defaultValueCache = { defaultValue };\n      }\n\n      return defaultValue;\n    };\n\n    const replaceSpecialValues = (val: any) => {\n      for (let tuple of this.replace) {\n        if (tuple.from === val) return tuple.to;\n      }\n      return val;\n    };\n\n    value = replaceSpecialValues(value);\n\n    return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n  }\n\n  isSearch(): boolean {\n    return this.location === DefType.SEARCH;\n  }\n\n  validates(value: any): boolean {\n    // There was no parameter value, but the param is optional\n    if ((isUndefined(value) || value === null) && this.isOptional) return true;\n\n    // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n    const normalized = this.type.$normalize(value);\n    if (!this.type.is(normalized)) return false;\n\n    // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n    const encoded = this.type.encode(normalized);\n    return !(isString(encoded) && !this.type.pattern.exec(<string> encoded));\n  }\n\n  toString() {\n    return `{Param:${this.id} ${this.type} squash: '${this.squash}' optional: ${this.isOptional}}`;\n  }\n\n  static values(params: Param[], values: RawParams = {}): RawParams {\n    const paramValues = {} as RawParams;\n    for (let param of params) {\n      paramValues[param.id] = param.value(values[param.id]);\n    }\n    return paramValues;\n  }\n\n  /**\n   * Finds [[Param]] objects which have different param values\n   *\n   * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n   *\n   * @param params: The list of Param objects to filter\n   * @param values1: The first set of parameter values\n   * @param values2: the second set of parameter values\n   *\n   * @returns any Param objects whose values were different between values1 and values2\n   */\n  static changed(params: Param[], values1: RawParams = {}, values2: RawParams = {}): Param[] {\n    return params.filter(param => !param.type.equals(values1[param.id], values2[param.id]));\n  }\n\n  /**\n   * Checks if two param value objects are equal (for a set of [[Param]] objects)\n   *\n   * @param params The list of [[Param]] objects to check\n   * @param values1 The first set of param values\n   * @param values2 The second set of param values\n   *\n   * @returns true if the param values in values1 and values2 are equal\n   */\n  static equals(params: Param[], values1 = {}, values2 = {}): boolean {\n    return Param.changed(params, values1, values2).length === 0;\n  }\n\n  /** Returns true if a the parameter values are valid, according to the Param definitions */\n  static validates(params: Param[], values: RawParams = {}): boolean {\n    return params.map(param => param.validates(values[param.id])).reduce(allTrueR, true);\n  }\n}","/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\n\nimport { isString, isArray, isDefined, isNull, isPromise, isInjectable, isObject } from \"./predicates\";\nimport { Rejection } from \"../transition/rejectFactory\";\nimport { IInjectable, identity, Obj, tail, pushR } from \"./common\";\nimport { pattern, is, not, val, invoke } from \"./hof\";\nimport { Transition } from \"../transition/transition\";\nimport { Resolvable } from \"../resolve/resolvable\";\n\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nexport function maxLength(max: number, str: string) {\n  if (str.length <= max) return str;\n  return str.substr(0, max - 3) + \"...\";\n}\n\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nexport function padString(length: number, str: string) {\n  while (str.length < length) str += \" \";\n  return str;\n}\n\nexport function kebobString(camelCase: string) {\n  return camelCase\n      .replace(/^([A-Z])/, $1 => $1.toLowerCase()) // replace first char\n      .replace(/([A-Z])/g, $1 => \"-\" + $1.toLowerCase()); // replace rest\n}\n\nfunction _toJson(obj: Obj) {\n  return JSON.stringify(obj);\n}\n\nfunction _fromJson(json: string) {\n  return isString(json) ? JSON.parse(json) : json;\n}\n\n\nfunction promiseToString(p: Promise<any>) {\n  return `Promise(${JSON.stringify(p)})`;\n}\n\nexport function functionToString(fn: Function) {\n  let fnStr = fnToString(fn);\n  let namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n  let toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n\n  let fnName = fn['name'] || \"\";\n  if (fnName && toStr.match(/function \\(/)) {\n    return 'function ' + fnName + toStr.substr(9);\n  }\n  return toStr;\n}\n\nexport function fnToString(fn: IInjectable) {\n  let _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n  return _fn && _fn.toString() || \"undefined\";\n}\n\nlet stringifyPatternFn: (val: any) => string = null;\nlet stringifyPattern = function(value: any) {\n  let isRejection = Rejection.isRejectionPromise;\n\n  stringifyPatternFn = <any> stringifyPatternFn || pattern([\n    [not(isDefined),  val(\"undefined\")],\n    [isNull,          val(\"null\")],\n    [isPromise,       val(\"[Promise]\")],\n    [isRejection,     (x: any) => x._transitionRejection.toString()],\n    [is(Rejection),   invoke(\"toString\")],\n    [is(Transition),  invoke(\"toString\")],\n    [is(Resolvable),  invoke(\"toString\")],\n    [isInjectable,    functionToString],\n    [val(true),       identity]\n  ]);\n\n  return stringifyPatternFn(value);\n};\n\nexport function stringify(o: any) {\n  var seen: any[] = [];\n\n  function format(val: any) {\n    if (isObject(val)) {\n      if (seen.indexOf(val) !== -1) return '[circular ref]';\n      seen.push(val);\n    }\n    return stringifyPattern(val);\n  }\n\n  return JSON.stringify(o, (key, val) => format(val)).replace(/\\\\\"/g, '\"');\n}\n\n/** Returns a function that splits a string on a character or substring */\nexport const beforeAfterSubstr = (char: string) => (str: string) => {\n  if (!str) return [\"\", \"\"];\n  let idx = str.indexOf(char);\n  if (idx === -1) return [str, \"\"];\n  return [str.substr(0, idx), str.substr(idx + 1)];\n};\n\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nexport function splitOnDelim(delim: string) {\n  let re = new RegExp(\"(\" + delim + \")\", \"g\");\n  return (str: string) =>\n      str.split(re).filter(identity);\n};\n\n\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nexport function joinNeighborsR(acc: any[], x: any) {\n  if (isString(tail(acc)) && isString(x))\n    return acc.slice(0, -1).concat(tail(acc)+ x);\n  return pushR(acc, x);\n};\n\n","/** @module state */ /** for typedoc */\nimport {Obj, omit, noop, extend, inherit, values, applyPairs, tail, mapObj, identity} from \"../common/common\";\nimport {isDefined, isFunction, isString, isArray} from \"../common/predicates\";\nimport {stringify} from \"../common/strings\";\nimport {prop, pattern, is, pipe, val} from \"../common/hof\";\nimport {StateDeclaration} from \"./interface\";\n\nimport {StateObject} from \"./stateObject\";\nimport {StateMatcher} from \"./stateMatcher\";\nimport {Param} from \"../params/param\";\nimport {UrlMatcherFactory} from \"../url/urlMatcherFactory\";\nimport {UrlMatcher} from \"../url/urlMatcher\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {services} from \"../common/coreservices\";\nimport {ResolvePolicy} from \"../resolve/interface\";\nimport { ParamFactory } from \"../url/interface\";\n\nconst parseUrl = (url: string): any => {\n  if (!isString(url)) return false;\n  let root = url.charAt(0) === '^';\n  return { val: root ? url.substring(1) : url, root };\n};\n\nexport type BuilderFunction = (state: StateObject, parent?: BuilderFunction) => any;\n\ninterface Builders {\n  [key: string]: BuilderFunction[];\n\n  name: BuilderFunction[];\n  parent: BuilderFunction[];\n  data: BuilderFunction[];\n  url: BuilderFunction[];\n  navigable: BuilderFunction[];\n  params: BuilderFunction[];\n  views: BuilderFunction[];\n  path: BuilderFunction[];\n  includes: BuilderFunction[];\n  resolvables: BuilderFunction[];\n}\n\n\nfunction nameBuilder(state: StateObject) {\n  return state.name;\n}\n\nfunction selfBuilder(state: StateObject) {\n  state.self.$$state = () => state;\n  return state.self;\n}\n\nfunction dataBuilder(state: StateObject) {\n  if (state.parent && state.parent.data) {\n    state.data = state.self.data = inherit(state.parent.data, state.data);\n  }\n  return state.data;\n}\n\nconst getUrlBuilder = ($urlMatcherFactoryProvider: UrlMatcherFactory, root: () => StateObject) =>\nfunction urlBuilder(state: StateObject) {\n  let stateDec: StateDeclaration = <any> state;\n\n  // For future states, i.e., states whose name ends with `.**`,\n  // match anything that starts with the url prefix\n  if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n    stateDec.url += \"{remainder:any}\"; // match any path (.*)\n  }\n\n  const parsed = parseUrl(stateDec.url), parent = state.parent;\n  const url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n    params: state.params || {},\n    paramMap: function (paramConfig: any, isSearch: boolean) {\n      if (stateDec.reloadOnSearch === false && isSearch) paramConfig = extend(paramConfig || {}, {dynamic: true});\n      return paramConfig;\n    }\n  });\n\n  if (!url) return null;\n  if (!$urlMatcherFactoryProvider.isMatcher(url)) throw new Error(`Invalid url '${url}' in state '${state}'`);\n  return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(<UrlMatcher> url);\n};\n\nconst getNavigableBuilder = (isRoot: (state: StateObject) => boolean) =>\nfunction navigableBuilder(state: StateObject) {\n  return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n};\n\nconst getParamsBuilder = (paramFactory: ParamFactory) =>\nfunction paramsBuilder(state: StateObject): { [key: string]: Param } {\n  const makeConfigParam = (config: any, id: string) => paramFactory.fromConfig(id, null, config);\n  let urlParams: Param[] = (state.url && state.url.parameters({inherit: false})) || [];\n  let nonUrlParams: Param[] = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n  return urlParams.concat(nonUrlParams).map(p => [p.id, p]).reduce(applyPairs, {});\n};\n\nfunction pathBuilder(state: StateObject) {\n  return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n}\n\nfunction includesBuilder(state: StateObject) {\n  let includes = state.parent ? extend({}, state.parent.includes) : {};\n  includes[state.name] = true;\n  return includes;\n}\n\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nexport function resolvablesBuilder(state: StateObject): Resolvable[] {\n  interface Tuple { token: any, val: any, deps: any[], policy: ResolvePolicy }\n  \n  /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n  const objects2Tuples    = (resolveObj: Obj, resolvePolicies: { [key: string]: ResolvePolicy }) =>\n      Object.keys(resolveObj || {}).map(token => ({token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token]}));\n\n  /** fetch DI annotations from a function or ng1-style array */\n  const annotate          = (fn: Function)  => {\n    let $injector = services.$injector;\n    // ng1 doesn't have an $injector until runtime.\n    // If the $injector doesn't exist, use \"deferred\" literal as a\n    // marker indicating they should be annotated when runtime starts\n    return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || <any> \"deferred\";\n  };\n\n  /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n  const isResolveLiteral  = (obj: any) => !!(obj.token && obj.resolveFn);\n\n  /** true if the object looks like a provide literal, or a ng2 Provider */\n  const isLikeNg2Provider = (obj: any) => !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass));\n\n  /** true if the object looks like a tuple from obj2Tuples */\n  const isTupleFromObj    = (obj: any) => !!(obj && obj.val && (isString(obj.val) || isArray(obj.val)  || isFunction(obj.val)));\n\n  /** extracts the token from a Provider or provide literal */\n  const token             = (p: any) => p.provide || p.token;\n\n  /** Given a literal resolve or provider object, returns a Resolvable */\n  const literal2Resolvable = pattern([\n    [prop('resolveFn'),   p => new Resolvable(token(p), p.resolveFn, p.deps, p.policy)],\n    [prop('useFactory'),  p => new Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy)],\n    [prop('useClass'),    p => new Resolvable(token(p), () => new (<any>p.useClass)(), [], p.policy)],\n    [prop('useValue'),    p => new Resolvable(token(p), () => p.useValue, [], p.policy, p.useValue)],\n    [prop('useExisting'), p => new Resolvable(token(p), identity, [p.useExisting], p.policy)],\n  ]);\n\n  const tuple2Resolvable = pattern([\n    [pipe(prop(\"val\"), isString),   (tuple: Tuple) => new Resolvable(tuple.token, identity, [ tuple.val ], tuple.policy)],\n    [pipe(prop(\"val\"), isArray),    (tuple: Tuple) => new Resolvable(tuple.token, tail(<any[]> tuple.val), tuple.val.slice(0, -1), tuple.policy)],\n    [pipe(prop(\"val\"), isFunction), (tuple: Tuple) => new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy)],\n  ]);\n\n  const item2Resolvable = <(obj: any) => Resolvable> pattern([\n    [is(Resolvable),                (r: Resolvable) => r],\n    [isResolveLiteral,              literal2Resolvable],\n    [isLikeNg2Provider,             literal2Resolvable],\n    [isTupleFromObj,                tuple2Resolvable],\n    [val(true),                     (obj: any) => { throw new Error(\"Invalid resolve value: \" + stringify(obj)) }]\n  ]);\n\n  // If resolveBlock is already an array, use it as-is.\n  // Otherwise, assume it's an object and convert to an Array of tuples\n  let decl = state.resolve;\n  let items: any[] = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n  return items.map(item2Resolvable);\n}\n\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nexport class StateBuilder {\n  /** An object that contains all the BuilderFunctions registered, key'd by the name of the State property they build */\n  private builders: Builders;\n\n  constructor(private matcher: StateMatcher, urlMatcherFactory: UrlMatcherFactory) {\n    let self = this;\n\n    const root = () => matcher.find(\"\");\n    const isRoot = (state: StateObject) => state.name === \"\";\n\n    function parentBuilder(state: StateObject) {\n      if (isRoot(state)) return null;\n      return matcher.find(self.parentName(state)) || root();\n    }\n\n    this.builders = {\n      name: [ nameBuilder ],\n      self: [ selfBuilder ],\n      parent: [ parentBuilder ],\n      data: [ dataBuilder ],\n      // Build a URLMatcher if necessary, either via a relative or absolute URL\n      url: [ getUrlBuilder(urlMatcherFactory, root) ],\n      // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n      navigable: [ getNavigableBuilder(isRoot) ],\n      params: [ getParamsBuilder(urlMatcherFactory.paramFactory) ],\n      // Each framework-specific ui-router implementation should define its own `views` builder\n      // e.g., src/ng1/statebuilders/views.ts\n      views: [],\n      // Keep a full path from the root down to this state as this is needed for state activation.\n      path: [ pathBuilder ],\n      // Speed up $state.includes() as it's used a lot\n      includes: [ includesBuilder ],\n      resolvables: [ resolvablesBuilder ]\n    };\n  }\n\n  /**\n   * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n   * More than one BuilderFunction can be registered for a given property.\n   *\n   * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n   *\n   * @param name The name of the State property being registered for.\n   * @param fn The BuilderFunction which will be used to build the State property\n   * @returns a function which deregisters the BuilderFunction\n   */\n  builder(name: string, fn: BuilderFunction): (BuilderFunction|BuilderFunction[]|Function) {\n    let builders = this.builders;\n    let array = builders[name] || [];\n    // Backwards compat: if only one builder exists, return it, else return whole arary.\n    if (isString(name) && !isDefined(fn)) return array.length > 1 ? array : array[0];\n    if (!isString(name) || !isFunction(fn)) return;\n\n    builders[name] = array;\n    builders[name].push(fn);\n    return () => builders[name].splice(builders[name].indexOf(fn, 1)) && null;\n  }\n\n  /**\n   * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n   * properties and API built.\n   *\n   * @param state an uninitialized State object\n   * @returns the built State object\n   */\n  build(state: StateObject): StateObject {\n    let {matcher, builders} = this;\n    let parent = this.parentName(state);\n\n    if (parent && !matcher.find(parent, undefined, false)) {\n      return null;\n    }\n\n    for (let key in builders) {\n      if (!builders.hasOwnProperty(key)) continue;\n      let chain = builders[key].reduce((parentFn: BuilderFunction, step: BuilderFunction) => (_state) => step(_state, parentFn), noop);\n      state[key] = chain(state);\n    }\n    return state;\n  }\n\n  parentName(state: StateObject) {\n    // name = 'foo.bar.baz.**'\n    let name = state.name || \"\";\n    // segments = ['foo', 'bar', 'baz', '.**']\n    let segments = name.split('.');\n    // segments = ['foo', 'bar', 'baz']\n    let lastSegment = segments.pop();\n    // segments = ['foo', 'bar'] (ignore .** segment for future states)\n    if (lastSegment === '**') segments.pop();\n\n    if (segments.length) {\n      if (state.parent) {\n        throw new Error(`States that specify the 'parent:' property should not have a '.' in their name (${name})`);\n      }\n\n      // 'foo.bar'\n      return segments.join(\".\");\n    }\n\n    if (!state.parent) return \"\";\n    return isString(state.parent) ? state.parent : state.parent.name;\n  }\n\n  name(state: StateObject) {\n    let name = state.name;\n    if (name.indexOf('.') !== -1 || !state.parent) return name;\n\n    let parentName = isString(state.parent) ? state.parent : state.parent.name;\n    return parentName ? parentName + \".\" + name : name;\n  }\n}\n","/**\n * @coreapi\n * @module url\n */\n/** for typedoc */\nimport {\n  map, defaults, inherit, identity, unnest, tail, find, Obj, pairs, allTrueR, unnestR, arrayTuples\n} from \"../common/common\";\nimport { prop, propEq } from \"../common/hof\";\nimport { isArray, isString, isDefined } from \"../common/predicates\";\nimport { Param, DefType } from \"../params/param\";\nimport { ParamTypes } from \"../params/paramTypes\";\nimport { RawParams } from \"../params/interface\";\nimport { ParamFactory } from \"./interface\";\nimport { joinNeighborsR, splitOnDelim } from \"../common/strings\";\n\n/** @hidden */\nfunction quoteRegExp(string: any, param?: any) {\n  let surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n  if (!param) return result;\n\n  switch (param.squash) {\n    case false:\n      surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')]; break;\n    case true:\n      result = result.replace(/\\/$/, '');\n      surroundPattern = ['(?:\\/(', ')|\\/)?'];\n      break;\n    default:\n      surroundPattern = [`(${param.squash}|`, ')?']; break;\n  }\n  return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n\n/** @hidden */\nconst memoizeTo = (obj: Obj, prop: string, fn: Function) =>\n    obj[prop] = obj[prop] || fn();\n\n/** @hidden */\nconst splitOnSlash = splitOnDelim('/');\n\n/** @hidden */\ninterface UrlMatcherCache {\n  segments?: any[];\n  weights?: number[];\n  path?: UrlMatcher[];\n  parent?: UrlMatcher;\n  pattern?: RegExp;\n}\n\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nexport class UrlMatcher {\n  /** @hidden */\n  static nameValidator: RegExp = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n\n  /** @hidden */\n  private _cache: UrlMatcherCache = { path: [this] };\n  /** @hidden */\n  private _children: UrlMatcher[] = [];\n  /** @hidden */\n  private _params:   Param[]      = [];\n  /** @hidden */\n  private _segments: string[]     = [];\n  /** @hidden */\n  private _compiled: string[]     = [];\n\n  /** The pattern that was passed into the constructor */\n  public pattern: string;\n\n  /**\n   * @param pattern The pattern to compile into a matcher.\n   * @param paramTypes The [[ParamTypes]] registry\n   * @param config  A configuration object\n   * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n   * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n   */\n  constructor(pattern: string, paramTypes: ParamTypes, paramFactory: ParamFactory, public config?: any) {\n    this.pattern = pattern;\n    this.config = defaults(this.config, {\n      params: {},\n      strict: true,\n      caseInsensitive: false,\n      paramMap: identity\n    });\n\n    // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n    //   '*' name\n    //   ':' name\n    //   '{' name '}'\n    //   '{' name ':' regexp '}'\n    // The regular expression is somewhat complicated due to the need to allow curly braces\n    // inside the regular expression. The placeholder regexp breaks down as follows:\n    //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n    //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n    //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n    //    [^{}\\\\]+                       - anything other than curly braces or backslash\n    //    \\\\.                            - a backslash escape\n    //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n    let placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n        searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g,\n        last = 0, m: RegExpExecArray, patterns: any[][] = [];\n\n    const checkParamErrors = (id: string) => {\n      if (!UrlMatcher.nameValidator.test(id)) throw new Error(`Invalid parameter name '${id}' in pattern '${pattern}'`);\n      if (find(this._params, propEq('id', id))) throw new Error(`Duplicate parameter name '${id}' in pattern '${pattern}'`);\n    };\n\n    // Split into static segments separated by path parameter placeholders.\n    // The number of segments is always 1 more than the number of parameters.\n    const matchDetails = (m: RegExpExecArray, isSearch: boolean) => {\n      // IE[78] returns '' for unmatched groups instead of null\n      let id = m[2] || m[3];\n      let regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n\n      const makeRegexpType = (regexp) => inherit(paramTypes.type(isSearch ? \"query\" : \"path\"), {\n        pattern: new RegExp(regexp, this.config.caseInsensitive ? 'i' : undefined)\n      });\n\n      return {\n        id,\n        regexp,\n        cfg:     this.config.params[id],\n        segment: pattern.substring(last, m.index),\n        type:    !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp)\n      };\n    };\n\n    let p: any, segment: string;\n\n    while ((m = placeholder.exec(pattern))) {\n      p = matchDetails(m, false);\n      if (p.segment.indexOf('?') >= 0) break; // we're into the search part\n\n      checkParamErrors(p.id);\n      this._params.push(paramFactory.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false)));\n      this._segments.push(p.segment);\n      patterns.push([p.segment, tail(this._params)]);\n      last = placeholder.lastIndex;\n    }\n    segment = pattern.substring(last);\n\n    // Find any search parameter names and remove them from the last segment\n    let i = segment.indexOf('?');\n\n    if (i >= 0) {\n      let search = segment.substring(i);\n      segment = segment.substring(0, i);\n\n      if (search.length > 0) {\n        last = 0;\n\n        while ((m = searchPlaceholder.exec(search))) {\n          p = matchDetails(m, true);\n          checkParamErrors(p.id);\n          this._params.push(paramFactory.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true)));\n          last = placeholder.lastIndex;\n          // check if ?&\n        }\n      }\n    }\n\n    this._segments.push(segment);\n    this._compiled = patterns.map(pattern => quoteRegExp.apply(null, pattern)).concat(quoteRegExp(segment));\n  }\n\n  /**\n   * Creates a new concatenated UrlMatcher\n   *\n   * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n   *\n   * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n   */\n  append(url: UrlMatcher): UrlMatcher {\n    this._children.push(url);\n    url._cache = {\n      path: this._cache.path.concat(url),\n      parent: this,\n      pattern: null,\n    };\n    return url;\n  }\n\n  /** @hidden */\n  isRoot(): boolean {\n    return this._cache.path[0] === this;\n  }\n\n  /** Returns the input pattern string */\n  toString(): string {\n    return this.pattern;\n  }\n\n  /**\n   * Tests the specified url/path against this matcher.\n   *\n   * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n   * parameter values.  Returns null if the path does not match.\n   *\n   * The returned object contains the values\n   * of any search parameters that are mentioned in the pattern, but their value may be null if\n   * they are not present in `search`. This means that search parameters are always treated\n   * as optional.\n   *\n   * #### Example:\n   * ```js\n   * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n   *   x: '1', q: 'hello'\n   * });\n   * // returns { id: 'bob', q: 'hello', r: null }\n   * ```\n   *\n   * @param path    The URL path to match, e.g. `$location.path()`.\n   * @param search  URL search parameters, e.g. `$location.search()`.\n   * @param hash    URL hash e.g. `$location.hash()`.\n   * @param options\n   *\n   * @returns The captured parameter values.\n   */\n  exec(path: string, search: any = {}, hash?: string, options: any = {}): RawParams {\n    let match = memoizeTo(this._cache, 'pattern', () => {\n      return new RegExp([\n        '^',\n        unnest(this._cache.path.map(prop('_compiled'))).join(''),\n        this.config.strict === false ? '\\/?' : '',\n        '$'\n      ].join(''), this.config.caseInsensitive ? 'i' : undefined);\n    }).exec(path);\n\n    if (!match) return null;\n\n    //options = defaults(options, { isolate: false });\n\n    let allParams:    Param[] = this.parameters(),\n        pathParams:   Param[] = allParams.filter(param => !param.isSearch()),\n        searchParams: Param[] = allParams.filter(param => param.isSearch()),\n        nPathSegments  = this._cache.path.map(urlm => urlm._segments.length - 1).reduce((a, x) => a + x),\n        values: RawParams = {};\n\n    if (nPathSegments !== match.length - 1)\n      throw new Error(`Unbalanced capture group in route '${this.pattern}'`);\n\n    function decodePathArray(string: string) {\n      const reverseString = (str: string) => str.split(\"\").reverse().join(\"\");\n      const unquoteDashes = (str: string) => str.replace(/\\\\-/g, \"-\");\n\n      let split = reverseString(string).split(/-(?!\\\\)/);\n      let allReversed = map(split, reverseString);\n      return map(allReversed, unquoteDashes).reverse();\n    }\n\n    for (let i = 0; i < nPathSegments; i++) {\n      let param: Param = pathParams[i];\n      let value: (any|any[]) = match[i + 1];\n\n      // if the param value matches a pre-replace pair, replace the value before decoding.\n      for (let j = 0; j < param.replace.length; j++) {\n        if (param.replace[j].from === value) value = param.replace[j].to;\n      }\n      if (value && param.array === true) value = decodePathArray(value);\n      if (isDefined(value)) value = param.type.decode(value);\n      values[param.id] = param.value(value);\n    }\n    searchParams.forEach(param => {\n      let value = search[param.id];\n      for (let j = 0; j < param.replace.length; j++) {\n        if (param.replace[j].from === value) value = param.replace[j].to;\n      }\n      if (isDefined(value)) value = param.type.decode(value);\n      values[param.id] = param.value(value);\n    });\n\n    if (hash) values[\"#\"] = hash;\n\n    return values;\n  }\n\n  /**\n   * @hidden\n   * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n   *\n   * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n   *    pattern has no parameters, an empty array is returned.\n   */\n  parameters(opts: any = {}): Param[] {\n    if (opts.inherit === false) return this._params;\n    return unnest(this._cache.path.map(matcher => matcher._params));\n  }\n\n  /**\n   * @hidden\n   * Returns a single parameter from this UrlMatcher by id\n   *\n   * @param id\n   * @param opts\n   * @returns {T|Param|any|boolean|UrlMatcher|null}\n   */\n  parameter(id: string, opts: any = {}): Param {\n    const findParam = () => {\n      for (let param of this._params) {\n        if (param.id === id) return param;\n      }\n    };\n\n    let parent = this._cache.parent;\n    return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n  }\n\n  /**\n   * Validates the input parameter values against this UrlMatcher\n   *\n   * Checks an object hash of parameters to validate their correctness according to the parameter\n   * types of this `UrlMatcher`.\n   *\n   * @param params The object hash of parameters to validate.\n   * @returns Returns `true` if `params` validates, otherwise `false`.\n   */\n  validates(params: RawParams): boolean {\n    const validParamVal = (param: Param, val: any) =>\n        !param || param.validates(val);\n\n    params = params || {};\n\n    // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n    let paramSchema = this.parameters().filter(paramDef => params.hasOwnProperty(paramDef.id));\n    return paramSchema.map(paramDef => validParamVal(paramDef, params[paramDef.id])).reduce(allTrueR, true);\n  }\n\n  /**\n   * Given a set of parameter values, creates a URL from this UrlMatcher.\n   *\n   * Creates a URL that matches this pattern by substituting the specified values\n   * for the path and search parameters.\n   *\n   * #### Example:\n   * ```js\n   * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n   * // returns '/user/bob?q=yes'\n   * ```\n   *\n   * @param values  the values to substitute for the parameters in this pattern.\n   * @returns the formatted URL (path and optionally search part).\n   */\n  format(values: RawParams = {}) {\n    // Build the full path of UrlMatchers (including all parent UrlMatchers)\n    let urlMatchers = this._cache.path;\n\n    // Extract all the static segments and Params (processed as ParamDetails)\n    // into an ordered array\n    let pathSegmentsAndParams: Array<string|ParamDetails> = urlMatchers.map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(unnestR, [])\n            .map(x => isString(x) ? x : getDetails(x));\n\n    // Extract the query params into a separate array\n    let queryParams: Array<ParamDetails> = urlMatchers.map(UrlMatcher.queryParams)\n            .reduce(unnestR, [])\n            .map(getDetails);\n\n    const isInvalid = (param: ParamDetails) => param.isValid === false;\n    if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n      return null;\n    }\n\n    /**\n     * Given a Param, applies the parameter value, then returns detailed information about it\n     */\n    function getDetails(param: Param): ParamDetails {\n      // Normalize to typed value\n      let value = param.value(values[param.id]);\n      let isValid = param.validates(value);\n      let isDefaultValue = param.isDefaultValue(value);\n      // Check if we're in squash mode for the parameter\n      let squash = isDefaultValue ? param.squash : false;\n      // Allow the Parameter's Type to encode the value\n      let encoded = param.type.encode(value);\n\n      return { param, value, isValid, isDefaultValue, squash, encoded };\n    }\n\n    // Build up the path-portion from the list of static segments and parameters\n    let pathString = pathSegmentsAndParams.reduce((acc: string, x: string|ParamDetails) => {\n      // The element is a static segment (a raw string); just append it\n      if (isString(x)) return acc + x;\n\n      // Otherwise, it's a ParamDetails.\n      let { squash, encoded, param } = x;\n\n      // If squash is === true, try to remove a slash from the path\n      if (squash === true) return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n      // If squash is a string, use the string for the param value\n      if (isString(squash)) return acc + squash;\n      if (squash !== false) return acc; // ?\n      if (encoded == null) return acc;\n      // If this parameter value is an array, encode the value using encodeDashes\n      if (isArray(encoded)) return acc + map(<string[]> encoded, UrlMatcher.encodeDashes).join(\"-\");\n      // If the parameter type is \"raw\", then do not encodeURIComponent\n      if (param.raw) return acc + encoded;\n      // Encode the value\n      return acc + encodeURIComponent(<string> encoded);\n    }, \"\");\n\n    // Build the query string by applying parameter values (array or regular)\n    // then mapping to key=value, then flattening and joining using \"&\"\n    let queryString = queryParams.map((paramDetails: ParamDetails) => {\n      let { param, squash, encoded, isDefaultValue } = paramDetails;\n      if (encoded == null || (isDefaultValue && squash !== false)) return;\n      if (!isArray(encoded)) encoded = [<string> encoded];\n      if (encoded.length === 0) return;\n      if (!param.raw) encoded = map(<string[]> encoded, encodeURIComponent);\n\n      return (<string[]> encoded).map(val => `${param.id}=${val}`);\n    }).filter(identity).reduce(unnestR, []).join(\"&\");\n\n    // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n    return pathString + (queryString ? `?${queryString}` : \"\") + (values[\"#\"] ? \"#\" + values[\"#\"] : \"\");\n  }\n\n  /** @hidden */\n  static encodeDashes(str: string) { // Replace dashes with encoded \"\\-\"\n    return encodeURIComponent(str).replace(/-/g, c => `%5C%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n  }\n\n  /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n  static pathSegmentsAndParams(matcher: UrlMatcher) {\n    let staticSegments = matcher._segments;\n    let pathParams = matcher._params.filter(p => p.location === DefType.PATH);\n    return arrayTuples(staticSegments, pathParams.concat(undefined))\n        .reduce(unnestR, [])\n        .filter(x => x !== \"\" && isDefined(x));\n  }\n\n  /** @hidden Given a matcher, return an array with the matcher's query params */\n  static queryParams(matcher: UrlMatcher): Param[] {\n    return matcher._params.filter(p => p.location === DefType.SEARCH);\n  }\n\n  /**\n   * Compare two UrlMatchers\n   *\n   * This comparison function converts a UrlMatcher into static and dynamic path segments.\n   * Each static path segment is a static string between a path separator (slash character).\n   * Each dynamic segment is a path parameter.\n   *\n   * The comparison function sorts static segments before dynamic ones.\n   */\n  static compare(a: UrlMatcher, b: UrlMatcher): number {\n    /**\n     * Turn a UrlMatcher and all its parent matchers into an array\n     * of slash literals '/', string literals, and Param objects\n     *\n     * This example matcher matches strings like \"/foo/:param/tail\":\n     * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n     * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n     *\n     * Caches the result as `matcher._cache.segments`\n     */\n    const segments = (matcher: UrlMatcher) =>\n        matcher._cache.segments = matcher._cache.segments ||\n            matcher._cache.path.map(UrlMatcher.pathSegmentsAndParams)\n                .reduce(unnestR, [])\n                .reduce(joinNeighborsR, [])\n                .map(x => isString(x) ? splitOnSlash(x) : x)\n                .reduce(unnestR, []);\n\n    /**\n     * Gets the sort weight for each segment of a UrlMatcher\n     *\n     * Caches the result as `matcher._cache.weights`\n     */\n    const weights = (matcher: UrlMatcher) =>\n        matcher._cache.weights = matcher._cache.weights ||\n            segments(matcher).map(segment => {\n              // Sort slashes first, then static strings, the Params\n              if (segment === '/') return 1;\n              if (isString(segment)) return 2;\n              if (segment instanceof Param) return 3;\n            });\n\n    /**\n     * Pads shorter array in-place (mutates)\n     */\n    const padArrays = (l: any[], r: any[], padVal: any) => {\n      const len = Math.max(l.length, r.length);\n      while (l.length < len) l.push(padVal);\n      while (r.length < len) r.push(padVal);\n    };\n\n    const weightsA = weights(a), weightsB = weights(b);\n    padArrays(weightsA, weightsB, 0);\n    let cmp, i, pairs = arrayTuples(weightsA, weightsB);\n\n    for (i = 0; i < pairs.length; i++) {\n      cmp = pairs[i][0] - pairs[i][1];\n      if (cmp !== 0) return cmp;\n    }\n\n    return 0;\n  }\n}\n\n/** @hidden */\ninterface ParamDetails {\n  param: Param;\n  value: any;\n  isValid: boolean;\n  isDefaultValue: boolean;\n  squash: (boolean|string);\n  encoded: (string|string[]);\n}\n","/**\n * @internalapi\n * @module url\n */\n/** for typedoc */\nimport { createProxyFunctions, extend, removeFrom } from '../common/common';\nimport { isDefined, isFunction, isString } from '../common/predicates';\nimport { UrlMatcher } from './urlMatcher';\nimport { RawParams } from '../params/interface';\nimport { Disposable } from '../interface';\nimport { UIRouter } from '../router';\nimport { is, pattern, val } from '../common/hof';\nimport { UrlRuleFactory } from './urlRule';\nimport { TargetState } from '../state/targetState';\nimport { MatcherUrlRule, MatchResult, UrlParts, UrlRule, UrlRuleHandlerFn, UrlRuleMatchFn, UrlRulesApi, UrlSyncApi, } from './interface';\nimport { TargetStateDef } from '../state/interface';\n\n/** @hidden */\nfunction appendBasePath(url: string, isHtml5: boolean, absolute: boolean, baseHref: string): string {\n  if (baseHref === '/') return url;\n  if (isHtml5) return baseHref.slice(0, -1) + url;\n  if (absolute) return baseHref.slice(1) + url;\n  return url;\n}\n\n/** @hidden */\nconst prioritySort = (a: UrlRule, b: UrlRule) =>\n  (b.priority || 0) - (a.priority || 0);\n\n/** @hidden */\nconst typeSort = (a: UrlRule, b: UrlRule) => {\n  const weights = { \"STATE\": 4, \"URLMATCHER\": 4, \"REGEXP\": 3, \"RAW\": 2, \"OTHER\": 1 };\n  return (weights[a.type] || 0) - (weights[b.type] || 0);\n};\n\n/** @hidden */\nconst urlMatcherSort = (a: MatcherUrlRule, b: MatcherUrlRule) =>\n  !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n\n/** @hidden */\nconst idSort = (a: UrlRule, b: UrlRule) => {\n  // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n  const useMatchPriority = { STATE: true, URLMATCHER: true };\n  const equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n  return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n};\n\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRulesApi.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Rule registration order (for rule types other than STATE and URLMATCHER)\n *   - Equally sorted State and UrlMatcher rules will each match the URL.\n *     Then, the *best* match is chosen based on how many parameter values were matched.\n *\n * @coreapi\n */\nlet defaultRuleSortFn: (a: UrlRule, b: UrlRule) => number;\ndefaultRuleSortFn = (a, b) => {\n  let cmp = prioritySort(a, b);\n  if (cmp !== 0) return cmp;\n\n  cmp = typeSort(a, b);\n  if (cmp !== 0) return cmp;\n\n  cmp = urlMatcherSort(a as MatcherUrlRule, b as MatcherUrlRule);\n  if (cmp !== 0) return cmp;\n\n  return idSort(a, b);\n};\n\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class updates the URL when the state changes.\n * It also responds to changes in the URL.\n */\nexport class UrlRouter implements UrlRulesApi, UrlSyncApi, Disposable {\n  /** used to create [[UrlRule]] objects for common cases */\n  public urlRuleFactory: UrlRuleFactory;\n\n  /** @hidden */ private _router: UIRouter;\n  /** @hidden */ private location: string;\n  /** @hidden */ private _sortFn = defaultRuleSortFn;\n  /** @hidden */ private _stopFn: Function;\n  /** @hidden */ _rules: UrlRule[] = [];\n  /** @hidden */ private _otherwiseFn: UrlRule;\n  /** @hidden */ interceptDeferred = false;\n  /** @hidden */ private _id = 0;\n  /** @hidden */ private _sorted = false;\n\n  /** @hidden */\n  constructor(router: UIRouter) {\n    this._router = router;\n    this.urlRuleFactory = new UrlRuleFactory(router);\n    createProxyFunctions(val(UrlRouter.prototype), this, val(this));\n  }\n\n  /** @internalapi */\n  dispose() {\n    this.listen(false);\n    this._rules = [];\n    delete this._otherwiseFn;\n  }\n\n  /** @inheritdoc */\n  sort(compareFn?: (a: UrlRule, b: UrlRule) => number) {\n    this._rules = this.stableSort(this._rules, this._sortFn = compareFn || this._sortFn);\n    this._sorted = true;\n  }\n\n  private ensureSorted() {\n    this._sorted || this.sort();\n  }\n\n  private stableSort(arr, compareFn) {\n    const arrOfWrapper = arr.map((elem, idx) => ({ elem, idx }));\n\n    arrOfWrapper.sort((wrapperA, wrapperB) => {\n      const cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n      return cmpDiff === 0\n        ? wrapperA.idx - wrapperB.idx\n        : cmpDiff;\n    });\n\n    return arrOfWrapper.map(wrapper => wrapper.elem);\n  }\n\n  /**\n   * Given a URL, check all rules and return the best [[MatchResult]]\n   * @param url\n   * @returns {MatchResult}\n   */\n  match(url: UrlParts): MatchResult {\n    this.ensureSorted();\n\n    url = extend({path: '', search: {}, hash: '' }, url);\n    let rules = this.rules();\n    if (this._otherwiseFn) rules.push(this._otherwiseFn);\n\n    // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n\n    let checkRule = (rule: UrlRule): MatchResult => {\n      let match = rule.match(url, this._router);\n      return match && { match, rule, weight: rule.matchPriority(match) };\n    };\n\n    // The rules are pre-sorted.\n    // - Find the first matching rule.\n    // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n    // - Choose the rule with the highest match weight.\n    let best: MatchResult;\n    for (let i = 0; i < rules.length; i++) {\n      // Stop when there is a 'best' rule and the next rule sorts differently than it.\n      if (best && this._sortFn(rules[i], best.rule) !== 0) break;\n\n      let current = checkRule(rules[i]);\n      // Pick the best MatchResult\n      best = (!best || current && current.weight > best.weight) ? current : best;\n    }\n\n    return best;\n  }\n\n  /** @inheritdoc */\n  sync(evt?) {\n    if (evt && evt.defaultPrevented) return;\n\n    let router = this._router,\n        $url = router.urlService,\n        $state = router.stateService;\n\n    let url: UrlParts = {\n      path: $url.path(), search: $url.search(), hash: $url.hash(),\n    };\n\n    let best = this.match(url);\n\n    let applyResult = pattern([\n      [isString, (newurl: string) => $url.url(newurl, true)],\n      [TargetState.isDef, (def: TargetStateDef) => $state.go(def.state, def.params, def.options)],\n      [is(TargetState), (target: TargetState) => $state.go(target.state(), target.params(), target.options())],\n    ]);\n\n    applyResult(best && best.rule.handler(best.match, url, router));\n  }\n\n  /** @inheritdoc */\n  listen(enabled?: boolean): Function {\n    if (enabled === false) {\n      this._stopFn && this._stopFn();\n      delete this._stopFn;\n    } else {\n      return this._stopFn = this._stopFn || this._router.urlService.onChange(evt => this.sync(evt));\n    }\n  }\n\n  /**\n   * Internal API.\n   * @internalapi\n   */\n  update(read?: boolean) {\n    let $url = this._router.locationService;\n    if (read) {\n      this.location = $url.path();\n      return;\n    }\n    if ($url.path() === this.location) return;\n\n    $url.url(this.location, true);\n  }\n\n  /**\n   * Internal API.\n   *\n   * Pushes a new location to the browser history.\n   *\n   * @internalapi\n   * @param urlMatcher\n   * @param params\n   * @param options\n   */\n  push(urlMatcher: UrlMatcher, params?: RawParams, options?: { replace?: (string|boolean) }) {\n    let replace = options && !!options.replace;\n    this._router.urlService.url(urlMatcher.format(params || {}), replace);\n  }\n\n  /**\n   * Builds and returns a URL with interpolated parameters\n   *\n   * #### Example:\n   * ```js\n   * matcher = $umf.compile(\"/about/:person\");\n   * params = { person: \"bob\" };\n   * $bob = $urlRouter.href(matcher, params);\n   * // $bob == \"/about/bob\";\n   * ```\n   *\n   * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n   * @param params An object of parameter values to fill the matcher's required parameters.\n   * @param options Options object. The options are:\n   *\n   * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n   *\n   * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n   */\n  href(urlMatcher: UrlMatcher, params?: any, options?: { absolute: boolean }): string {\n    let url = urlMatcher.format(params);\n    if (url == null) return null;\n\n    options = options || { absolute: false };\n\n    let cfg = this._router.urlService.config;\n    let isHtml5 = cfg.html5Mode();\n    if (!isHtml5 && url !== null) {\n      url = \"#\" + cfg.hashPrefix() + url;\n    }\n    url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n\n    if (!options.absolute || !url) {\n      return url;\n    }\n\n    let slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n    port = <any> (port === 80 || port === 443 ? '' : ':' + port);\n\n    return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n  }\n\n\n  /**\n   * Manually adds a URL Rule.\n   *\n   * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n   * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n   * Rules can be created using [[UrlRouter.urlRuleFactory]], or create manually as simple objects.\n   *\n   * A rule should have a `match` function which returns truthy if the rule matched.\n   * It should also have a `handler` function which is invoked if the rule is the best match.\n   *\n   * @return a function that deregisters the rule\n   */\n  rule(rule: UrlRule): Function {\n    if (!UrlRuleFactory.isUrlRule(rule)) throw new Error(\"invalid rule\");\n    rule.$id = this._id++;\n    rule.priority = rule.priority || 0;\n\n    this._rules.push(rule);\n    this._sorted = false;\n\n    return () => this.removeRule(rule);\n  }\n\n  /** @inheritdoc */\n  removeRule(rule): void {\n    removeFrom(this._rules, rule);\n  }\n\n  /** @inheritdoc */\n  rules(): UrlRule[] {\n    this.ensureSorted();\n    return this._rules.slice();\n  }\n\n  /** @inheritdoc */\n  otherwise(handler: string|UrlRuleHandlerFn|TargetState|TargetStateDef) {\n    let handlerFn: UrlRuleHandlerFn = getHandlerFn(handler);\n\n    this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n    this._sorted = false;\n  };\n\n  /** @inheritdoc */\n  initial(handler: string | UrlRuleHandlerFn | TargetState | TargetStateDef) {\n    let handlerFn: UrlRuleHandlerFn = getHandlerFn(handler);\n\n    let matchFn: UrlRuleMatchFn = (urlParts, router) =>\n        router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n\n    this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n  };\n\n  /** @inheritdoc */\n  when(matcher: (RegExp|UrlMatcher|string), handler: string|UrlRuleHandlerFn, options?: { priority: number }): UrlRule {\n    let rule = this.urlRuleFactory.create(matcher, handler);\n    if (isDefined(options && options.priority)) rule.priority = options.priority;\n    this.rule(rule);\n    return rule;\n  };\n\n  /** @inheritdoc */\n  deferIntercept(defer?: boolean) {\n    if (defer === undefined) defer = true;\n    this.interceptDeferred = defer;\n  };\n}\n\nfunction getHandlerFn(handler: string|UrlRuleHandlerFn|TargetState|TargetStateDef): UrlRuleHandlerFn {\n  if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n    throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n  }\n  return isFunction(handler) ? handler as UrlRuleHandlerFn : val(handler);\n}\n","/** @module hooks */ /** */\nimport { Transition } from \"../transition/transition\";\nimport { UIRouter } from \"../router\";\nimport { TransitionService } from \"../transition/transitionService\";\n\nfunction addCoreResolvables(trans: Transition) {\n  trans.addResolvable({ token: UIRouter,       deps: [], resolveFn: () => trans.router,   data: trans.router },   \"\");\n  trans.addResolvable({ token: Transition,     deps: [], resolveFn: () => trans,          data: trans },          \"\");\n  trans.addResolvable({ token: '$transition$', deps: [], resolveFn: () => trans,          data: trans },          \"\");\n  trans.addResolvable({ token: '$stateParams', deps: [], resolveFn: () => trans.params(), data: trans.params() }, \"\");\n\n  trans.entering().forEach(state => {\n    trans.addResolvable({ token: '$state$',    deps: [], resolveFn: () => state,          data: state },       state);\n  });\n}\n\nexport const registerAddCoreResolvables = (transitionService: TransitionService) =>\n    transitionService.onCreate({}, addCoreResolvables);\n","/** @module hooks */\n/** for typedoc */\nimport { TransitionStateHookFn } from '../transition/interface';\nimport { Transition } from '../transition/transition';\nimport { TransitionService } from '../transition/transitionService';\nimport { StateDeclaration } from '../state/interface';\nimport { StateObject } from '../state/stateObject';\n\n/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName: string): TransitionStateHookFn {\n  return (transition: Transition, state: StateDeclaration) => {\n    let _state: StateObject = state.$$state();\n    let hookFn: TransitionStateHookFn = _state[hookName];\n    return hookFn(transition, state);\n  }\n}\n\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nconst onExitHook: TransitionStateHookFn = makeEnterExitRetainHook('onExit');\nexport const registerOnExitHook = (transitionService: TransitionService) =>\n    transitionService.onExit({exiting: state => !!state.onExit}, onExitHook);\n\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nconst onRetainHook: TransitionStateHookFn = makeEnterExitRetainHook('onRetain');\nexport const registerOnRetainHook = (transitionService: TransitionService) =>\n    transitionService.onRetain({retained: state => !!state.onRetain}, onRetainHook);\n\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nconst onEnterHook: TransitionStateHookFn = makeEnterExitRetainHook('onEnter');\nexport const registerOnEnterHook = (transitionService: TransitionService) =>\n    transitionService.onEnter({entering: state => !!state.onEnter}, onEnterHook);\n\n","/** @module hooks */ /** */\nimport {Transition} from \"../transition/transition\";\nimport {TransitionService} from \"../transition/transitionService\";\nimport {TransitionHookFn} from \"../transition/interface\";\nimport {StateDeclaration, LazyLoadResult} from \"../state/interface\";\nimport {services} from \"../common/coreservices\";\nimport { StateRule } from \"../url/interface\";\n\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nconst lazyLoadHook: TransitionHookFn = (transition: Transition) => {\n  let router = transition.router;\n\n  function retryTransition() {\n    if (transition.originalTransition().options().source !== 'url') {\n      // The original transition was not triggered via url sync\n      // The lazy state should be loaded now, so re-try the original transition\n      let orig = transition.targetState();\n      return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n    }\n\n    // The original transition was triggered via url sync\n    // Run the URL rules and find the best match\n    let $url = router.urlService;\n    let result = $url.match($url.parts());\n    let rule = result && result.rule;\n\n    // If the best match is a state, redirect the transition (instead\n    // of calling sync() which supersedes the current transition)\n    if (rule && rule.type === \"STATE\") {\n      let state = (rule as StateRule).state;\n      let params = result.match;\n      return router.stateService.target(state, params, transition.options());\n    }\n\n    // No matching state found, so let .sync() choose the best non-state match/otherwise\n    router.urlService.sync();\n  }\n\n  let promises = transition.entering()\n      .filter(state => !!state.$$state().lazyLoad)\n      .map(state => lazyLoadState(transition, state));\n\n  return services.$q.all(promises).then(retryTransition);\n};\n\nexport const registerLazyLoadHook = (transitionService: TransitionService) =>\n    transitionService.onBefore({ entering: (state) => !!state.lazyLoad }, lazyLoadHook);\n\n\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nexport function lazyLoadState(transition: Transition, state: StateDeclaration): Promise<LazyLoadResult> {\n  let lazyLoadFn = state.$$state().lazyLoad;\n\n  // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n  let promise = lazyLoadFn['_promise'];\n  if (!promise) {\n    const success = (result) => {\n      delete state.lazyLoad;\n      delete state.$$state().lazyLoad;\n      delete lazyLoadFn['_promise'];\n      return result;\n    };\n\n    const error = (err) => {\n      delete lazyLoadFn['_promise'];\n      return services.$q.reject(err);\n    };\n\n    promise = lazyLoadFn['_promise'] =\n        services.$q.when(lazyLoadFn(transition, state))\n            .then(updateStateRegistry)\n            .then(success, error);\n  }\n\n  /** Register any lazy loaded state definitions */\n  function updateStateRegistry(result: LazyLoadResult) {\n    if (result && Array.isArray(result.states)) {\n      result.states.forEach(state => transition.router.stateRegistry.register(state));\n    }\n    return result;\n  }\n\n  return promise;\n}\n","/** @module hooks */ /** */\n\nimport { trace } from '../common/trace';\nimport { Rejection } from '../transition/rejectFactory';\nimport { TransitionService } from '../transition/transitionService';\nimport { Transition } from '../transition/transition';\n\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans: Transition) {\n  const ignoredReason = trans._ignoredReason();\n  if (!ignoredReason) return;\n\n  trace.traceTransitionIgnored(trans);\n\n  const pending = trans.router.globals.transition;\n\n  // The user clicked a link going back to the *current state* ('A')\n  // However, there is also a pending transition in flight (to 'B')\n  // Abort the transition to 'B' because the user now wants to be back at 'A'.\n  if (ignoredReason === 'SameAsCurrent' && pending) {\n    pending.abort();\n  }\n\n  return Rejection.ignored().toPromise();\n}\n\nexport const registerIgnoredTransitionHook = (transitionService: TransitionService) =>\n    transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n","/** @module hooks */ /** */\n\nimport { TransitionService } from '../transition/transitionService';\nimport { Transition } from '../transition/transition';\n\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans: Transition) {\n  if (!trans.valid()) {\n    throw new Error(trans.error());\n  }\n}\n\nexport const registerInvalidTransitionHook = (transitionService: TransitionService) =>\n    transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport { isArray } from \"../common/index\";\nimport { LocationServices, LocationConfig } from \"../common/coreservices\";\nimport { UIRouter } from \"../router\";\nimport { identity, unnestR, removeFrom, deregAll, extend } from \"../common/common\";\nimport { LocationLike, HistoryLike } from \"./interface\";\nimport { isDefined } from \"../common/predicates\";\nimport { Disposable } from \"../interface\";\n\nconst beforeAfterSubstr = (char: string) => (str: string): string[] => {\n  if (!str) return [\"\", \"\"];\n  let idx = str.indexOf(char);\n  if (idx === -1) return [str, \"\"];\n  return [str.substr(0, idx), str.substr(idx + 1)];\n};\n\nexport const splitHash = beforeAfterSubstr(\"#\");\nexport const splitQuery = beforeAfterSubstr(\"?\");\nexport const splitEqual = beforeAfterSubstr(\"=\");\nexport const trimHashVal = (str) => str ? str.replace(/^#/, \"\") : \"\";\n\nexport const keyValsToObjectR = (accum, [key, val]) => {\n  if (!accum.hasOwnProperty(key)) {\n    accum[key] = val;\n  } else if (isArray(accum[key])) {\n    accum[key].push(val);\n  } else {\n    accum[key] = [accum[key], val]\n  }\n  return accum;\n};\n\nexport const getParams = (queryString: string): any =>\n    queryString.split(\"&\").filter(identity).map(splitEqual).reduce(keyValsToObjectR, {});\n\nexport function parseUrl(url: string) {\n  const orEmptyString = x => x || \"\";\n  let [beforehash, hash] = splitHash(url).map(orEmptyString);\n  let [path, search] = splitQuery(beforehash).map(orEmptyString);\n\n  return { path, search, hash, url };\n}\n\nexport const buildUrl = (loc: LocationServices) => {\n  let path = loc.path();\n  let searchObject = loc.search();\n  let hash = loc.hash();\n\n  let search = Object.keys(searchObject).map(key => {\n    let param = searchObject[key];\n    let vals = isArray(param) ? param : [param];\n    return vals.map(val => key + \"=\" + val);\n  }).reduce(unnestR, []).join(\"&\");\n\n  return path + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\n};\n\nexport function locationPluginFactory(\n    name: string,\n    isHtml5: boolean,\n    serviceClass: { new(router?: UIRouter): LocationServices },\n    configurationClass: { new(router?: UIRouter, isHtml5?: boolean): LocationConfig }\n) {\n  return function(router: UIRouter) {\n    let service       = router.locationService = new serviceClass(router);\n    let configuration = router.locationConfig  = new configurationClass(router, isHtml5);\n\n    function dispose(router: UIRouter) {\n      router.dispose(service);\n      router.dispose(configuration);\n    }\n\n    return { name, service, configuration, dispose };\n  };\n}\n\n","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport { BrowserLocationConfig } from \"./browserLocationConfig\";\nimport { HashLocationService } from \"./hashLocationService\";\nimport { locationPluginFactory } from \"./utils\";\nimport { LocationPlugin, ServicesPlugin } from \"./interface\";\nimport { UIRouter } from \"../router\";\nimport { PushStateLocationService } from \"./pushStateLocationService\";\nimport { MemoryLocationService } from \"./memoryLocationService\";\nimport { MemoryLocationConfig } from \"./memoryLocationConfig\";\nimport { $injector } from \"./injector\";\nimport { $q } from \"./q\";\nimport { services } from \"../common/coreservices\";\n\nexport function servicesPlugin(router: UIRouter): ServicesPlugin {\n  services.$injector = $injector;\n  services.$q = $q;\n\n  return { name: \"vanilla.services\", $q, $injector, dispose: () => null };\n}\n\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexport const hashLocationPlugin: (router: UIRouter) => LocationPlugin =\n    locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexport const pushStateLocationPlugin: (router: UIRouter) => LocationPlugin =\n    locationPluginFactory(\"vanilla.pushStateLocation\", true, PushStateLocationService, BrowserLocationConfig);\n\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexport const memoryLocationPlugin: (router: UIRouter) => LocationPlugin =\n    locationPluginFactory(\"vanilla.memoryLocation\", false, MemoryLocationService, MemoryLocationConfig);\n","/** @module ng1 */ /** */\nimport { ng as angular } from \"../angular\";\nimport {\n    StateObject, pick, forEach, tail, extend,\n    isArray, isInjectable, isDefined, isString, services, trace,\n    ViewConfig, ViewService, ViewConfigFactory, PathNode, ResolveContext, Resolvable, IInjectable\n} from \"@uirouter/core\";\nimport { Ng1ViewDeclaration } from \"../interface\";\nimport { TemplateFactory } from \"../templateFactory\";\nimport IInjectorService = angular.auto.IInjectorService;\n\nexport function getNg1ViewConfigFactory(): ViewConfigFactory {\n  let templateFactory: TemplateFactory = null;\n  return (path, view) => {\n    templateFactory = templateFactory || services.$injector.get(\"$templateFactory\");\n    return [new Ng1ViewConfig(path, view, templateFactory)];\n  };\n}\n\nconst hasAnyKey = (keys, obj) =>\n    keys.reduce((acc, key) => acc || isDefined(obj[key]), false);\n\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n */\nexport function ng1ViewsBuilder(state: StateObject) {\n  // Do not process root state\n  if (!state.parent) return {};\n\n  let tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'],\n      ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'],\n      compKeys = ['component', 'bindings', 'componentProvider'],\n      nonCompKeys = tplKeys.concat(ctrlKeys),\n      allViewKeys = compKeys.concat(nonCompKeys);\n\n  // Do not allow a state to have both state-level props and also a `views: {}` property.\n  // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n  // However, the `$default` approach should not be mixed with a separate `views: ` block.\n  if (isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n    throw new Error(`State '${state.name}' has a 'views' object. ` +\n        `It cannot also have \"view properties\" at the state level.  ` +\n        `Move the following properties into a view (in the 'views' object): ` +\n        ` ${allViewKeys.filter(key => isDefined(state[key])).join(\", \")}`);\n  }\n\n  let views: { [key: string]: Ng1ViewDeclaration } = {},\n      viewsObject = state.views || { \"$default\": pick(state, allViewKeys) };\n\n  forEach(viewsObject, function (config: Ng1ViewDeclaration, name: string) {\n    // Account for views: { \"\": { template... } }\n    name = name || \"$default\";\n    // Account for views: { header: \"headerComponent\" }\n    if (isString(config)) config = { component: <string> config };\n\n    // Make a shallow copy of the config object\n    config = extend({}, config);\n\n    // Do not allow a view to mix props for component-style view with props for template/controller-style view\n    if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n      throw new Error(`Cannot combine: ${compKeys.join(\"|\")} with: ${nonCompKeys.join(\"|\")} in stateview: '${name}@${state.name}'`);\n    }\n\n    config.resolveAs = config.resolveAs || '$resolve';\n    config.$type = \"ng1\";\n    config.$context = state;\n    config.$name = name;\n\n    let normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n    config.$uiViewName = normalized.uiViewName;\n    config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n\n    views[name] = config;\n  });\n  return views;\n}\n\nlet id = 0;\nexport class Ng1ViewConfig implements ViewConfig {\n  $id = id++;\n  loaded: boolean = false;\n  controller: Function; // actually IInjectable|string\n  template: string;\n  component: string;\n  locals: any; // TODO: delete me\n\n  constructor(public path: PathNode[], public viewDecl: Ng1ViewDeclaration, public factory: TemplateFactory) { }\n\n  load() {\n    let $q = services.$q;\n    let context = new ResolveContext(this.path);\n    let params = this.path.reduce((acc, node) => extend(acc, node.paramValues), {});\n\n    let promises: any = {\n      template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\n      controller: $q.when(this.getController(context))\n    };\n\n    return $q.all(promises).then((results) => {\n      trace.traceViewServiceEvent(\"Loaded\", this);\n      this.controller = results.controller;\n      extend(this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n      return this;\n    });\n  }\n\n  getTemplate = (uiView, context: ResolveContext) =>\n    this.component ? this.factory.makeComponentTemplate(uiView, context, this.component, this.viewDecl.bindings) : this.template;\n\n  /**\n   * Gets the controller for a view configuration.\n   *\n   * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n   */\n  getController(context: ResolveContext): (IInjectable|string|Promise<IInjectable|string>) {\n    let provider = this.viewDecl.controllerProvider;\n    if (!isInjectable(provider)) return this.viewDecl.controller;\n    let deps = services.$injector.annotate(provider);\n    let providerFn = isArray(provider) ? tail(<any> provider) : provider;\n    let resolvable = new Resolvable(\"\", <any> providerFn, deps);\n    return resolvable.get(context);\n  }\n}\n","/** @module view */\n/** for typedoc */\nimport { ng as angular } from \"./angular\";\nimport { IAugmentedJQuery } from \"angular\";\nimport {\n  isArray, isDefined, isFunction, isObject, services, Obj, IInjectable, tail, kebobString, unnestR, ResolveContext,\n  Resolvable, RawParams\n} from \"@uirouter/core\";\nimport { Ng1ViewDeclaration, TemplateFactoryProvider } from \"./interface\";\n\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nexport class TemplateFactory implements TemplateFactoryProvider {\n  /** @hidden */ private _useHttp = angular.version.minor < 3;\n  /** @hidden */ private $templateRequest;\n  /** @hidden */ private $templateCache;\n  /** @hidden */ private $http;\n\n  /** @hidden */ $get = ['$http', '$templateCache', '$injector', ($http, $templateCache, $injector) => {\n    this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\n    this.$http = $http;\n    this.$templateCache = $templateCache;\n    return this;\n  }];\n\n  /** @hidden */\n  useHttpService(value: boolean) {\n    this._useHttp = value;\n  };\n\n  /**\n   * Creates a template from a configuration object.\n   *\n   * @param config Configuration object for which to load a template.\n   * The following properties are search in the specified order, and the first one\n   * that is defined is used to create the template:\n   *\n   * @param params  Parameters to pass to the template function.\n   * @param context The resolve context associated with the template's view\n   *\n   * @return {string|object}  The template html as a string, or a promise for\n   * that string,or `null` if no template is configured.\n   */\n  fromConfig(config: Ng1ViewDeclaration, params: any, context: ResolveContext): Promise<{ template?: string, component?: string }> {\n    const defaultTemplate = \"<ui-view></ui-view>\";\n\n    const asTemplate  = (result) => services.$q.when(result).then(str => ({ template:  str }));\n    const asComponent = (result) => services.$q.when(result).then(str => ({ component: str }));\n\n    return (\n        isDefined(config.template)          ? asTemplate(this.fromString(config.template, params)) :\n        isDefined(config.templateUrl)       ? asTemplate(this.fromUrl(config.templateUrl, params)) :\n        isDefined(config.templateProvider)  ? asTemplate(this.fromProvider(config.templateProvider, params, context)) :\n        isDefined(config.component)         ? asComponent(config.component) :\n        isDefined(config.componentProvider) ? asComponent(this.fromComponentProvider(config.componentProvider, params, context)) :\n        asTemplate(defaultTemplate)\n    );\n  };\n\n  /**\n   * Creates a template from a string or a function returning a string.\n   *\n   * @param template html template as a string or function that returns an html template as a string.\n   * @param params Parameters to pass to the template function.\n   *\n   * @return {string|object} The template html as a string, or a promise for that\n   * string.\n   */\n  fromString(template: (string | Function), params?: RawParams) {\n    return isFunction(template) ? (<any> template)(params) : template;\n  };\n\n  /**\n   * Loads a template from the a URL via `$http` and `$templateCache`.\n   *\n   * @param {string|Function} url url of the template to load, or a function\n   * that returns a url.\n   * @param {Object} params Parameters to pass to the url function.\n   * @return {string|Promise.<string>} The template html as a string, or a promise\n   * for that string.\n   */\n  fromUrl(url: (string | Function), params: any) {\n    if (isFunction(url)) url = (<any> url)(params);\n    if (url == null) return null;\n\n    if (this._useHttp) {\n      return this.$http.get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n          .then(function (response) {\n            return response.data;\n          });\n    }\n\n    return this.$templateRequest(url);\n  };\n\n  /**\n   * Creates a template by invoking an injectable provider function.\n   *\n   * @param provider Function to invoke via `locals`\n   * @param {Function} injectFn a function used to invoke the template provider\n   * @return {string|Promise.<string>} The template html as a string, or a promise\n   * for that string.\n   */\n  fromProvider(provider: IInjectable, params: any, context: ResolveContext) {\n    let deps = services.$injector.annotate(provider);\n    let providerFn = isArray(provider) ? tail(<any[]> provider) : provider;\n    let resolvable = new Resolvable(\"\", <Function> providerFn, deps);\n    return resolvable.get(context);\n  };\n\n  /**\n   * Creates a component's template by invoking an injectable provider function.\n   *\n   * @param provider Function to invoke via `locals`\n   * @param {Function} injectFn a function used to invoke the template provider\n   * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n   */\n  fromComponentProvider(provider: IInjectable, params: any, context: ResolveContext) {\n    let deps = services.$injector.annotate(provider);\n    let providerFn = isArray(provider) ? tail(<any[]> provider) : provider;\n    let resolvable = new Resolvable(\"\", <Function> providerFn, deps);\n    return resolvable.get(context);\n  };\n\n  /**\n   * Creates a template from a component's name\n   *\n   * This implements route-to-component.\n   * It works by retrieving the component (directive) metadata from the injector.\n   * It analyses the component's bindings, then constructs a template that instantiates the component.\n   * The template wires input and output bindings to resolves or from the parent component.\n   *\n   * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n   * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n   * @param component {string} Component's name in camel case.\n   * @param bindings An object defining the component's bindings: {foo: '<'}\n   * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n   */\n  makeComponentTemplate(uiView: IAugmentedJQuery, context: ResolveContext, component: string, bindings?: any) {\n    bindings = bindings || {};\n\n    // Bind once prefix\n    const prefix = angular.version.minor >= 3 ? \"::\" : \"\";\n    // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n    const kebob = (camelCase: string) => {\n      const kebobed = kebobString(camelCase);\n      return /^(x|data)-/.exec(kebobed) ? `x-${kebobed}` : kebobed;\n    };\n\n\n    const attributeTpl = (input: BindingTuple) => {\n      let { name, type } = input;\n      let attrName = kebob(name);\n      // If the ui-view has an attribute which matches a binding on the routed component\n      // then pass that attribute through to the routed component template.\n      // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n      if (uiView.attr(attrName) && !bindings[name])\n        return `${attrName}='${uiView.attr(attrName)}'`;\n\n      let resolveName = bindings[name] || name;\n      // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n      // some-attr=\"{{ ::$resolve.someResolveName }}\"\n      if (type === '@')\n        return `${attrName}='{{${prefix}$resolve.${resolveName}}}'`;\n\n      // Wire \"&\" callbacks to resolves that return a callback function\n      // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n      // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n      if (type === '&') {\n        let res = context.getResolvable(resolveName);\n        let fn = res && res.data;\n        let args = fn && services.$injector.annotate(fn) || [];\n        // account for array style injection, i.e., ['foo', function(foo) {}]\n        let arrayIdxStr = isArray(fn) ? `[${fn.length - 1}]` : '';\n        return `${attrName}='$resolve.${resolveName}${arrayIdxStr}(${args.join(\",\")})'`;\n      }\n\n      // some-attr=\"::$resolve.someResolveName\"\n      return `${attrName}='${prefix}$resolve.${resolveName}'`;\n    };\n\n    let attrs = getComponentBindings(component).map(attributeTpl).join(\" \");\n    let kebobName = kebob(component);\n    return `<${kebobName} ${attrs}></${kebobName}>`;\n  };\n}\n\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\nfunction getComponentBindings(name: string) {\n  let cmpDefs = <any[]> services.$injector.get(name + \"Directive\"); // could be multiple\n  if (!cmpDefs || !cmpDefs.length) throw new Error(`Unable to find component named '${name}'`);\n  return cmpDefs.map(getBindings).reduce(unnestR, []);\n}\n\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nconst getBindings = (def: any) => {\n  if (isObject(def.bindToController)) return scopeBindings(def.bindToController);\n  return scopeBindings(def.scope);\n};\n\ninterface BindingTuple {\n  name: string;\n  type: string;\n}\n\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nconst scopeBindings = (bindingsObj: Obj) => Object.keys(bindingsObj || {})\n    // [ 'input', [ '=foo', '=', 'foo' ] ]\n    .map(key => [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])])\n    // skip malformed values\n    .filter(tuple => isDefined(tuple) && isArray(tuple[1]))\n    // { name: ('foo' || 'input'), type: '=' }\n    .map(tuple => ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] } as BindingTuple));\n\n","/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @module ng1\n * @preferred\n */\n/** for typedoc */\nimport { ng as angular } from \"./angular\";\nimport {\n  IRootScopeService, IQService, ILocationService, ILocationProvider, IHttpService, ITemplateCacheService\n} from \"angular\";\nimport {\n  services, applyPairs, isString, trace, extend, UIRouter, StateService, UrlRouter, UrlMatcherFactory, ResolveContext,\n  unnestR, TypedMap\n} from \"@uirouter/core\";\nimport { ng1ViewsBuilder, getNg1ViewConfigFactory } from \"./statebuilders/views\";\nimport { TemplateFactory } from \"./templateFactory\";\nimport { StateProvider } from \"./stateProvider\";\nimport { getStateHookBuilder } from \"./statebuilders/onEnterExitRetain\";\nimport { Ng1LocationServices } from \"./locationServices\";\nimport { UrlRouterProvider } from \"./urlRouterProvider\";\nimport IInjectorService = angular.auto.IInjectorService; // tslint:disable-line\n\nangular.module(\"ui.router.angular1\", []);\nlet mod_init  = angular.module('ui.router.init',   []);\nlet mod_util  = angular.module('ui.router.util',   ['ng', 'ui.router.init']);\nlet mod_rtr   = angular.module('ui.router.router', ['ui.router.util']);\nlet mod_state = angular.module('ui.router.state',  ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nlet mod_main  = angular.module('ui.router',        ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nlet mod_cmpt  = angular.module('ui.router.compat', ['ui.router']); // tslint:disable-line\n\ndeclare module '@uirouter/core/lib/router' {\n  interface UIRouter {\n    /** @hidden */\n    stateProvider: StateProvider;\n    /** @hidden */\n    urlRouterProvider: UrlRouterProvider;\n  }\n}\n\nlet router: UIRouter = null;\n\n$uiRouter.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouter($locationProvider: ILocationProvider) {\n\n  // Create a new instance of the Router when the $uiRouterProvider is initialized\n  router = this.router = new UIRouter();\n  router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n\n  // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n  router.stateRegistry.decorator(\"views\",    ng1ViewsBuilder);\n  router.stateRegistry.decorator(\"onExit\",   getStateHookBuilder(\"onExit\"));\n  router.stateRegistry.decorator(\"onRetain\", getStateHookBuilder(\"onRetain\"));\n  router.stateRegistry.decorator(\"onEnter\",  getStateHookBuilder(\"onEnter\"));\n\n  router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\n\n  let ng1LocationService = router.locationService = router.locationConfig = new Ng1LocationServices($locationProvider);\n\n  Ng1LocationServices.monkeyPatchPathParameterType(router);\n\n  // backwards compat: also expose router instance as $uiRouterProvider.router\n  router['router'] = router;\n  router['$get'] = $get;\n  $get.$inject = ['$location', '$browser', '$sniffer', '$rootScope', '$http', '$templateCache'];\n  function $get($location: ILocationService, $browser: any, $sniffer: any, $rootScope: ng.IScope, $http: IHttpService, $templateCache: ITemplateCacheService) {\n    ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser);\n    delete router['router'];\n    delete router['$get'];\n    return router;\n  }\n  return router;\n}\n\nconst getProviderFor = (serviceName) => [ '$uiRouterProvider', ($urp) => {\n  let service = $urp.router[serviceName];\n  service[\"$get\"] = () => service;\n  return service;\n}];\n\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector: IInjectorService, $q: IQService, $uiRouter: UIRouter) {\n  services.$injector = $injector;\n  services.$q = <any> $q;\n\n  // The $injector is now available.\n  // Find any resolvables that had dependency annotation deferred\n  $uiRouter.stateRegistry.get()\n      .map(x => x.$$state().resolvables)\n      .reduce(unnestR, [])\n      .filter(x => x.deps === \"deferred\")\n      .forEach(resolvable => resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi));\n}\n\n// $urlRouter service and $urlRouterProvider\nconst getUrlRouterProvider = (uiRouter: UIRouter) =>\n  uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter);\n\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nconst getStateProvider = () =>\n    extend(router.stateProvider, { $get: () => router.stateService });\n\nwatchDigests.$inject = ['$rootScope'];\nexport function watchDigests($rootScope: IRootScopeService) {\n  $rootScope.$watch(function() { trace.approximateDigests++; });\n}\n\nmod_init .provider(\"$uiRouter\",          <any> $uiRouter);\nmod_rtr  .provider('$urlRouter',         ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util .provider('$urlService',        getProviderFor('urlService'));\nmod_util .provider('$urlMatcherFactory', ['$uiRouterProvider', () => router.urlMatcherFactory]);\nmod_util .provider('$templateFactory',   () => new TemplateFactory());\nmod_state.provider('$stateRegistry',     getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals',   getProviderFor('globals'));\nmod_state.provider('$transitions',       getProviderFor('transitionService'));\nmod_state.provider('$state',             ['$uiRouterProvider', getStateProvider]);\n\nmod_state.factory ('$stateParams',       ['$uiRouter', ($uiRouter: UIRouter) => $uiRouter.globals.params]);\nmod_main .factory ('$view',              () => router.viewService);\nmod_main .service (\"$trace\",             () => trace);\n\nmod_main .run     (watchDigests);\nmod_util .run     (['$urlMatcherFactory', function ($urlMatcherFactory: UrlMatcherFactory) { }]);\nmod_state.run     (['$state', function ($state: StateService) { }]);\nmod_rtr  .run     (['$urlRouter', function ($urlRouter: UrlRouter) { }]);\nmod_init .run     (runBlock);\n\n/** @hidden TODO: find a place to move this */\nexport const getLocals = (ctx: ResolveContext): TypedMap<any> => {\n  let tokens = ctx.getTokens().filter(isString);\n\n  let tuples = tokens .map(key => {\n    let resolvable = ctx.getResolvable(key);\n    let waitPolicy = ctx.getPolicy(resolvable).async;\n    return [ key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data ];\n  });\n\n  return tuples.reduce(applyPairs, {});\n};\n\n","/**\n * # Angular 1 Directives\n *\n * These are the directives included in UI-Router for Angular 1.\n * These directives are used in templates to create viewports and link/navigate to states.\n *\n * @ng1api\n * @preferred\n * @module directives\n */ /** for typedoc */\nimport { ng as angular } from \"../angular\";\nimport { IAugmentedJQuery, ITimeoutService, IScope, IInterpolateService } from \"angular\";\n\nimport {\n    Obj, extend, forEach, tail, isString, isObject, isArray, parse, noop, unnestR, identity, uniqR, inArray, removeFrom,\n    RawParams, PathNode, StateOrName, StateService, StateDeclaration, UIRouter\n} from \"@uirouter/core\";\nimport { UIViewData } from \"./viewDirective\";\n\n/** @hidden Used for typedoc */\nexport interface ng1_directive {}\n\n/** @hidden */\nfunction parseStateRef(ref: string) {\n  let paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n  if (paramsOnly) ref = '(' + paramsOnly[1] + ')';\n\n  parsed = ref.replace(/\\n/g, \" \").match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\n  return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n}\n\n/** @hidden */\nfunction stateContext(el: IAugmentedJQuery) {\n  let $uiView: UIViewData = (el.parent() as IAugmentedJQuery).inheritedData('$uiView');\n  let path: PathNode[] = parse('$cfg.path')($uiView);\n  return path ? tail(path).state.name : undefined;\n}\n\n/** @hidden */\nfunction processedDef($state: StateService, $element: IAugmentedJQuery, def: Def): Def {\n  let uiState = def.uiState || $state.current.name;\n  let uiStateOpts = extend(defaultOpts($element, $state), def.uiStateOpts || {});\n  let href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n  return { uiState, uiStateParams: def.uiStateParams, uiStateOpts, href };\n}\n\n/** @hidden */\ninterface TypeInfo {\n  attr: string;\n  isAnchor: boolean;\n  clickable: boolean;\n}\n\n/** @hidden */\nfunction getTypeInfo(el: IAugmentedJQuery): TypeInfo {\n  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n  var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n  var isForm = el[0].nodeName === \"FORM\";\n\n  return {\n    attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n    isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n    clickable: !isForm\n  };\n}\n\n/** @hidden */\nfunction clickHook(el: IAugmentedJQuery, $state: StateService, $timeout: ITimeoutService, type: TypeInfo, getDef: () => Def) {\n  return function (e: JQueryMouseEventObject) {\n    var button = e.which || e.button, target = getDef();\n\n    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n      var transition = $timeout(function () {\n        $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n      });\n      e.preventDefault();\n\n      // if the state has no URL, ignore one preventDefault from the <a> directive.\n      var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;\n\n      e.preventDefault = function () {\n        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\n      };\n    }\n  };\n}\n\n/** @hidden */\nfunction defaultOpts(el: IAugmentedJQuery, $state: StateService) {\n  return {\n    relative: stateContext(el) || $state.$current,\n    inherit: true,\n    source: \"sref\"\n  };\n}\n\n/** @hidden */\nfunction bindEvents(element: IAugmentedJQuery, scope: IScope, hookFn: (e: JQueryMouseEventObject) => void, uiStateOpts: any): void {\n  let events;\n\n  if (uiStateOpts) {\n    events = uiStateOpts.events;\n  }\n\n  if (!isArray(events)) {\n    events = ['click'];\n  }\n\n  let on = element.on ? 'on' : 'bind';\n  for (let event of events) {\n    element[on](event, hookFn);\n  }\n\n  scope.$on('$destroy', function() {\n    let off = element.off ? 'off' : 'unbind';\n    for (let event of events) {\n      element[off](event, hookFn);\n    }\n  });\n}\n\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of the `ui-sref` is the name of the state to link to.\n *\n * #### Example:\n * This will activate the `home` state when the link is clicked.\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * ```\n *\n * ### Relative Links\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\n *\n * #### Example:\n * Both these links are relative to the parent state, even when a child state is currently active.\n * ```html\n * <a ui-sref=\".child1\">child 1 state</a>\n * <a ui-sref=\".child2\">child 2 state</a>\n * ```\n *\n * This link activates the parent state.\n * ```html\n * <a ui-sref=\"^\">Return</a>\n * ```\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * #### Example:\n * Assuming the `users` state has a url of `/users/`\n * ```html\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n * ```\n *\n * ### Parameter Values\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n * The content inside the parentheses is an expression, evaluated to the parameter values.\n *\n * #### Example:\n * This example renders a list of links to users.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"user in users\">\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n * </li>\n * ```\n *\n * Note:\n * The parameter values expression is `$watch`ed for updates.\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * #### Example:\n * ```html\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-sref-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Examples\n * If you have the following template:\n *\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * <a ui-sref=\"about\">About</a>\n * <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * ```\n *\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n *\n * ```html\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * ```\n *\n * ### Notes\n *\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n *\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n */\nlet uiSref: ng1_directive;\nuiSref = ['$uiRouter', '$timeout',\n  function $StateRefDirective($uiRouter: UIRouter, $timeout: ITimeoutService) {\n    let $state = $uiRouter.stateService;\n\n    return {\n      restrict: 'A',\n      require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n      link: function (scope: IScope, element: IAugmentedJQuery, attrs: any, uiSrefActive: any) {\n        let type = getTypeInfo(element);\n        let active = uiSrefActive[1] || uiSrefActive[0];\n        let unlinkInfoFn: Function = null;\n        let hookFn;\n\n        let rawDef = {} as Def;\n        let getDef = () => processedDef($state, element, rawDef);\n\n        let ref = parseStateRef(attrs.uiSref);\n        rawDef.uiState = ref.state;\n        rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n\n        function update() {\n          let def = getDef();\n          if (unlinkInfoFn) unlinkInfoFn();\n          if (active) unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n          if (def.href != null) attrs.$set(type.attr, def.href);\n        }\n\n        if (ref.paramExpr) {\n          scope.$watch(ref.paramExpr, function (val) {\n            rawDef.uiStateParams = extend({}, val);\n            update();\n          }, true);\n          rawDef.uiStateParams = extend({}, scope.$eval(ref.paramExpr));\n        }\n\n        update();\n\n        scope.$on('$destroy', <any> $uiRouter.stateRegistry.onStatesChanged(update));\n        scope.$on('$destroy', <any> $uiRouter.transitionService.onSuccess({}, update));\n\n        if (!type.clickable) return;\n        hookFn = clickHook(element, $state, $timeout, type, getDef);\n        bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n      }\n    };\n  }];\n\n/**\n * `ui-state`: A fully dynamic directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n *\n * #### Example:\n * Create a list of links.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Relative Links\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create relative `ui-state` which always targets the same destination.\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * ### Parameter Values\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n * Param values should be provided using the `ui-state-params` attribute.\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * This example renders a list of links with param values.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * ```html\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-state-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Notes\n *\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\n *\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n * ```\n */\nlet uiState: ng1_directive;\nuiState = ['$uiRouter', '$timeout',\n  function $StateRefDynamicDirective($uiRouter: UIRouter, $timeout: ITimeoutService) {\n    let $state = $uiRouter.stateService;\n\n    return {\n      restrict: 'A',\n      require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n      link: function (scope: IScope, element: IAugmentedJQuery, attrs: any, uiSrefActive: any) {\n        let type = getTypeInfo(element);\n        let active = uiSrefActive[1] || uiSrefActive[0];\n        let unlinkInfoFn: Function = null;\n        let hookFn;\n\n        let rawDef = {} as Def;\n        let getDef = () => processedDef($state, element, rawDef);\n\n        let inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n        let watchDeregFns = inputAttrs.reduce((acc, attr) => (acc[attr] = noop, acc), {});\n\n        function update() {\n          let def = getDef();\n          if (unlinkInfoFn) unlinkInfoFn();\n          if (active) unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n          if (def.href != null) attrs.$set(type.attr, def.href);\n        }\n\n        inputAttrs.forEach((field) => {\n          rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n\n          attrs.$observe(field, (expr) => {\n            watchDeregFns[field]();\n            watchDeregFns[field] = scope.$watch(expr, (newval) => {\n              rawDef[field] = newval;\n              update();\n            }, true);\n          })\n        });\n\n        update();\n\n        scope.$on('$destroy', <any> $uiRouter.stateRegistry.onStatesChanged(update));\n        scope.$on('$destroy', <any> $uiRouter.transitionService.onSuccess({}, update));\n\n        if (!type.clickable) return;\n        hookFn = clickHook(element, $state, $timeout, type, getDef);\n        bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n      }\n    };\n  }];\n\n\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n * related directive's state is active (and remove them when it is inactive).\n *\n * The primary use-case is to highlight the active link in navigation menus,\n * distinguishing it from the inactive menu items.\n *\n * ### Linking to a `ui-sref` or `ui-state`\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n *\n * ### Matching\n *\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\n *\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n * This is an \"exact match\" which uses [[StateService.is]].\n *\n * ### Parameter values\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n *\n * #### Example:\n * ```html\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n * </li>\n * ```\n *\n * ### Examples\n *\n * Given the following template:\n * #### Example:\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * When the app state is `app.user` (or any child state),\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * ### Glob mode\n *\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n * The objects keys represent active class names and values represent the respective state names/globs.\n * `ui-sref-active` will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * #### Example:\n * Given the following template, with \"admin\" being an abstract state:\n * ```html\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the <div> and <a> elements.\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n *\n * ### Notes:\n *\n * - The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n */\nlet uiSrefActive: ng1_directive;\nuiSrefActive = ['$state', '$stateParams', '$interpolate', '$uiRouter',\n  function $StateRefActiveDirective($state: StateService, $stateParams: Obj, $interpolate: IInterpolateService, $uiRouter: UIRouter) {\n    return {\n      restrict: \"A\",\n      controller: ['$scope', '$element', '$attrs',\n        function ($scope: IScope, $element: IAugmentedJQuery, $attrs: any) {\n          let states: StateData[] = [],\n              activeEqClass: string,\n              uiSrefActive: any;\n\n          // There probably isn't much point in $observing this\n          // uiSrefActive and uiSrefActiveEq share the same directive object with some\n          // slight difference in logic routing\n          activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n\n          try {\n            uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n          } catch (e) {\n            // Do nothing. uiSrefActive is not a valid expression.\n            // Fall back to using $interpolate below\n          }\n          uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n          if (isObject(uiSrefActive)) {\n            forEach(uiSrefActive, function (stateOrName: StateOrName, activeClass: string) {\n              if (isString(stateOrName)) {\n                let ref = parseStateRef(stateOrName);\n                addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n              }\n            });\n          }\n\n          // Allow uiSref to communicate with uiSrefActive[Equals]\n          this.$$addStateInfo = function (newState: string, newParams: Obj) {\n            // we already got an explicit state provided by ui-sref-active, so we\n            // shadow the one that comes from ui-sref\n            if (isObject(uiSrefActive) && states.length > 0) {\n              return;\n            }\n            let deregister = addState(newState, newParams, uiSrefActive);\n            update();\n            return deregister;\n          };\n\n          function updateAfterTransition(trans) {\n            trans.promise.then(update, noop);\n          }\n\n          $scope.$on('$stateChangeSuccess', update);\n          $scope.$on('$destroy', <any> $uiRouter.transitionService.onStart({}, updateAfterTransition));\n          if ($uiRouter.globals.transition) {\n            updateAfterTransition($uiRouter.globals.transition);\n          }\n\n          function addState(stateName: string, stateParams: Obj, activeClass: string) {\n            var state = $state.get(stateName, stateContext($element));\n\n            var stateInfo = {\n              state: state || { name: stateName },\n              params: stateParams,\n              activeClass: activeClass\n            };\n\n            states.push(stateInfo);\n\n            return function removeState() {\n              removeFrom(states)(stateInfo);\n            }\n          }\n\n          // Update route state\n          function update() {\n            const splitClasses = str =>\n                str.split(/\\s/).filter(identity);\n            const getClasses = (stateList: StateData[]) =>\n                stateList.map(x => x.activeClass).map(splitClasses).reduce(unnestR, []);\n\n            let allClasses = getClasses(states).concat(splitClasses(activeEqClass)).reduce(uniqR, []);\n            let fuzzyClasses = getClasses(states.filter(x => $state.includes(x.state.name, x.params)));\n            let exactlyMatchesAny = !!states.filter(x => $state.is(x.state.name, x.params)).length;\n            let exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n\n            let addClasses = fuzzyClasses.concat(exactClasses).reduce(uniqR, []);\n            let removeClasses = allClasses.filter(cls => !inArray(addClasses, cls));\n\n            $scope.$evalAsync(() => {\n              addClasses.forEach(className => $element.addClass(className));\n              removeClasses.forEach(className => $element.removeClass(className));\n            });\n          }\n\n          update();\n        }]\n    };\n  }];\n\n/** @hidden */\ninterface Def { uiState: string; href: string; uiStateParams: Obj; uiStateOpts: any; }\n/** @hidden */\ninterface StateData { state: StateDeclaration; params: RawParams; activeClass: string; }\n\nangular.module('ui.router.state')\n    .directive('uiSref', uiSref)\n    .directive('uiSrefActive', uiSrefActive)\n    .directive('uiSrefActiveEq', uiSrefActive)\n    .directive('uiState', uiState);\n","/** @module ng1 */ /** for typedoc */\n\nimport { ng as angular } from \"./angular\";\nimport { Obj, StateService, StateOrName } from \"@uirouter/core\";\n\n/**\n * `isState` Filter: truthy if the current state is the parameter\n *\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n * ```\n */\n$IsStateFilter.$inject = ['$state'];\nexport function $IsStateFilter($state: StateService) {\n  var isFilter: any = function(state: StateOrName, params: Obj, options?: { relative?: StateOrName }) {\n    return $state.is(state, params, options);\n  };\n  isFilter.$stateful = true;\n  return isFilter;\n}\n\n/**\n * `includedByState` Filter: truthy if the current state includes the parameter\n *\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n * ```\n */\n$IncludedByStateFilter.$inject = ['$state'];\nexport function $IncludedByStateFilter($state: StateService) {\n  var includesFilter: any = function(state: StateOrName, params: Obj, options: { relative?: StateOrName }) {\n    return $state.includes(state, params, options);\n  };\n  includesFilter.$stateful = true;\n  return  includesFilter;\n}\n\nangular.module('ui.router.state')\n  .filter('isState', $IsStateFilter)\n  .filter('includedByState', $IncludedByStateFilter);\n","/** \n * @ng1api \n * @module directives \n */ /** for typedoc */\nimport { ng as angular } from \"../angular\";\nimport {\n    IInterpolateService, IScope, ITranscludeFunction, IAugmentedJQuery,\n    ICompileService, IControllerService, ITimeoutService, noop\n} from \"angular\";\n\nimport {\n    extend, unnestR, filter, tail, isDefined, isFunction, isString, trace, parse,\n    ActiveUIView, TransitionService, ResolveContext, Transition, PathNode, StateDeclaration,\n    Param, kebobString, HookRegOptions, ViewService, $QLike, Obj, TypedMap\n} from \"@uirouter/core\";\nimport {Ng1ViewConfig} from \"../statebuilders/views\";\nimport {Ng1Controller, Ng1StateDeclaration} from \"../interface\";\nimport {getLocals} from \"../services\";\nimport { ng1_directive } from \"./stateDirectives\";\n\n/** @hidden */\nexport type UIViewData = {\n  $cfg: Ng1ViewConfig;\n  $uiView: ActiveUIView;\n}\n\n/** @hidden */\nexport type UIViewAnimData = {\n  $animEnter: Promise<any>;\n  $animLeave: Promise<any>;\n  $$animLeave: { resolve: () => any; } // \"deferred\"\n}\n\n/**\n * `ui-view`: A viewport directive which is filled in by a view from the active state.\n *\n * ### Attributes\n *\n * - `name`: (Optional) A view name.\n *   The name should be unique amongst the other views in the same state.\n *   You can have views of the same name that live in different states.\n *   The ui-view can be targeted in a View using the name ([[Ng1StateDeclaration.views]]).\n *\n * - `autoscroll`: an expression. When it evaluates to true, the `ui-view` will be scrolled into view when it is activated.\n *   Uses [[$uiViewScroll]] to do the scrolling.\n *\n * - `onload`: Expression to evaluate whenever the view updates.\n *\n * #### Example:\n * A view can be unnamed or named.\n * ```html\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n *\n * <!-- Named (different style) -->\n * <ui-view name=\"viewName\"></ui-view>\n * ```\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n *\n * ```html\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * ```\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the\n * [[Ng1StateDeclaration.views]] config property, by name, in this case an empty name:\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n *\n * ```html\n * <div ui-view=\"main\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * Really though, you'll use views to set up multiple views:\n *\n * ```html\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }\n * })\n * ```\n *\n * #### Examples for `autoscroll`:\n * ```html\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * ```\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[Ng1ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * #### Example:\n * ```js\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * ```\n */\nexport let uiView: ng1_directive;\nuiView = ['$view', '$animate', '$uiViewScroll', '$interpolate', '$q',\nfunction $ViewDirective($view: ViewService, $animate: any, $uiViewScroll: any, $interpolate: IInterpolateService, $q: $QLike) {\n\n  function getRenderer(attrs: Obj, scope: IScope) {\n    return {\n      enter: function(element: JQuery, target: any, cb: Function) {\n        if (angular.version.minor > 2) {\n          $animate.enter(element, null, target).then(cb);\n        } else {\n          $animate.enter(element, null, target, cb);\n        }\n      },\n      leave: function(element: JQuery, cb: Function) {\n        if (angular.version.minor > 2) {\n          $animate.leave(element).then(cb);\n        } else {\n          $animate.leave(element, cb);\n        }\n      }\n    };\n  }\n\n  function configsEqual(config1: Ng1ViewConfig, config2: Ng1ViewConfig) {\n    return config1 === config2;\n  }\n\n  let rootData = {\n    $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n    $uiView: { }\n  };\n\n  let directive = {\n    count: 0,\n    restrict: 'ECA',\n    terminal: true,\n    priority: 400,\n    transclude: 'element',\n    compile: function (tElement: JQuery, tAttrs: Obj, $transclude: ITranscludeFunction) {\n\n      return function (scope: IScope, $element: IAugmentedJQuery, attrs: Obj) {\n        let previousEl: JQuery, currentEl: JQuery,\n            currentScope: IScope, unregister: Function,\n            onloadExp     = attrs['onload'] || '',\n            autoScrollExp = attrs['autoscroll'],\n            renderer      = getRenderer(attrs, scope),\n            viewConfig    = undefined as Ng1ViewConfig,\n            inherited     = $element.inheritedData('$uiView') || rootData,\n            name          = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n\n        let activeUIView: ActiveUIView = {\n          $type: 'ng1',\n          id: directive.count++,                                   // Global sequential ID for ui-view tags added to DOM\n          name: name,                                              // ui-view name (<div ui-view=\"name\"></div>\n          fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + \".\" + name : name, // fully qualified name, describes location in DOM\n          config: null,                                            // The ViewConfig loaded (from a state.views definition)\n          configUpdated: configUpdatedCallback,                    // Called when the matching ViewConfig changes\n          get creationContext() {                                  // The context in which this ui-view \"tag\" was created\n            let fromParentTagConfig = parse('$cfg.viewDecl.$context')(inherited);\n            // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n            // See https://github.com/angular-ui/ui-router/issues/3355\n            let fromParentTag = parse('$uiView.creationContext')(inherited);\n            return fromParentTagConfig || fromParentTag;\n          }\n        };\n\n        trace.traceUIViewEvent(\"Linking\", activeUIView);\n\n        function configUpdatedCallback(config?: Ng1ViewConfig) {\n          if (config && !(config instanceof Ng1ViewConfig)) return;\n          if (configsEqual(viewConfig, config)) return;\n          trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n\n          viewConfig = config;\n          updateView(config);\n        }\n\n        $element.data('$uiView', { $uiView: activeUIView });\n\n        updateView();\n\n        unregister = $view.registerUIView(activeUIView);\n        scope.$on(\"$destroy\", function() {\n          trace.traceUIViewEvent(\"Destroying/Unregistering\", activeUIView);\n          unregister();\n        });\n\n        function cleanupLastView() {\n          if (previousEl) {\n            trace.traceUIViewEvent(\"Removing (previous) el\", previousEl.data('$uiView'));\n            previousEl.remove();\n            previousEl = null;\n          }\n\n          if (currentScope) {\n            trace.traceUIViewEvent(\"Destroying scope\", activeUIView);\n            currentScope.$destroy();\n            currentScope = null;\n          }\n\n          if (currentEl) {\n            let _viewData = currentEl.data('$uiViewAnim');\n            trace.traceUIViewEvent(\"Animate out\", _viewData);\n            renderer.leave(currentEl, function() {\n              _viewData.$$animLeave.resolve();\n              previousEl = null;\n            });\n\n            previousEl = currentEl;\n            currentEl = null;\n          }\n        }\n\n        function updateView(config?: Ng1ViewConfig) {\n          let newScope = scope.$new();\n          let animEnter = $q.defer(), animLeave = $q.defer();\n\n          let $uiViewData: UIViewData = {\n            $cfg: config,\n            $uiView: activeUIView,\n          };\n\n          let $uiViewAnim: UIViewAnimData = {\n            $animEnter: animEnter.promise,\n            $animLeave: animLeave.promise,\n            $$animLeave: animLeave\n          };\n\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoading\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description\n           *\n           * Fired once the view **begins loading**, *before* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           * @param {string} viewName Name of the view.\n           */\n          newScope.$emit('$viewContentLoading', name);\n\n          let cloned = $transclude(newScope, function(clone) {\n            clone.data('$uiViewAnim', $uiViewAnim);\n            clone.data('$uiView', $uiViewData);\n            renderer.enter(clone, $element, function onUIViewEnter() {\n              animEnter.resolve();\n              if (currentScope) currentScope.$emit('$viewContentAnimationEnded');\n\n              if (isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                $uiViewScroll(clone);\n              }\n            });\n\n            cleanupLastView();\n          });\n\n          currentEl = cloned;\n          currentScope = newScope;\n          /**\n           * @ngdoc event\n           * @name ui.router.state.directive:ui-view#$viewContentLoaded\n           * @eventOf ui.router.state.directive:ui-view\n           * @eventType emits on ui-view directive scope\n           * @description           *\n           * Fired once the view is **loaded**, *after* the DOM is rendered.\n           *\n           * @param {Object} event Event object.\n           */\n          currentScope.$emit('$viewContentLoaded', config || viewConfig);\n          currentScope.$eval(onloadExp);\n        }\n      };\n    }\n  };\n\n  return directive;\n}];\n\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill($compile: angular.ICompileService,\n                            $controller: angular.IControllerService,\n                            $transitions: TransitionService,\n                            $view: ViewService,\n                            $q: angular.IQService,\n                            $timeout: ITimeoutService) {\n  const getControllerAs = parse('viewDecl.controllerAs');\n  const getResolveAs = parse('viewDecl.resolveAs');\n\n  return {\n    restrict: 'ECA',\n    priority: -400,\n    compile: function (tElement: JQuery) {\n      let initial = tElement.html();\n      tElement.empty();\n\n      return function (scope: IScope, $element: JQuery) {\n        let data: UIViewData = $element.data('$uiView');\n        if (!data) {\n            $element.html(initial);\n            $compile($element.contents())(scope);\n            return;\n        }\n\n        let cfg: Ng1ViewConfig = data.$cfg || <any> { viewDecl: {}, getTemplate: noop };\n        let resolveCtx: ResolveContext = cfg.path && new ResolveContext(cfg.path);\n        $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n        trace.traceUIViewFill(data.$uiView, $element.html());\n\n        let link = $compile($element.contents());\n        let controller = cfg.controller;\n        let controllerAs: string = getControllerAs(cfg);\n        let resolveAs: string = getResolveAs(cfg);\n        let locals = resolveCtx && getLocals(resolveCtx);\n\n        scope[resolveAs] = locals;\n\n        if (controller) {\n          let controllerInstance = <Ng1Controller> $controller(controller, extend({}, locals, { $scope: scope, $element: $element }));\n          if (controllerAs) {\n            scope[controllerAs] = controllerInstance;\n            scope[controllerAs][resolveAs] = locals;\n          }\n\n          // TODO: Use $view service as a central point for registering component-level hooks\n          // Then, when a component is created, tell the $view service, so it can invoke hooks\n          // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n          // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n\n          $element.data('$ngControllerController', controllerInstance);\n          $element.children().data('$ngControllerController', controllerInstance);\n\n          registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\n        }\n\n        // Wait for the component to appear in the DOM\n        if (isString(cfg.viewDecl.component)) {\n          let cmp = cfg.viewDecl.component;\n          let kebobName = kebobString(cmp);\n          let tagRegexp = new RegExp(`^(x-|data-)?${kebobName}$`, \"i\");\n\n          let getComponentController = () => {\n            let directiveEl = [].slice.call($element[0].children)\n                .filter((el: Element) => el && el.tagName && tagRegexp.exec(el.tagName)) ;\n            \n            return directiveEl && angular.element(directiveEl).data(`$${cmp}Controller`);\n          };\n\n          let deregisterWatch = scope.$watch(getComponentController, function(ctrlInstance) {\n            if (!ctrlInstance) return;\n            registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\n            deregisterWatch();\n          });\n        }\n\n        link(scope);\n      };\n    }\n  };\n}\n\n/** @hidden */\nlet hasComponentImpl = typeof (angular as any).module('ui.router')['component'] === 'function';\n/** @hidden incrementing id */\nlet _uiCanExitId = 0;\n\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($q: angular.IQService,\n                                     $transitions: TransitionService,\n                                     controllerInstance: Ng1Controller,\n                                     $scope: IScope,\n                                     cfg: Ng1ViewConfig) {\n  // Call $onInit() ASAP\n  if (isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) {\n    controllerInstance.$onInit();\n  }\n\n  let viewState: Ng1StateDeclaration = tail(cfg.path).state.self;\n\n  let hookOptions: HookRegOptions = { bind: controllerInstance };\n  // Add component-level hook for onParamsChange\n  if (isFunction(controllerInstance.uiOnParamsChanged)) {\n    let resolveContext: ResolveContext = new ResolveContext(cfg.path);\n    let viewCreationTrans = resolveContext.getResolvable('$transition$').data;\n\n    // Fire callback on any successful transition\n    const paramsUpdated = ($transition$: Transition) => {\n      // Exit early if the $transition$ is the same as the view was created within.\n      // Exit early if the $transition$ will exit the state the view is for.\n      if ($transition$ === viewCreationTrans || $transition$.exiting().indexOf(viewState as StateDeclaration) !== -1) return;\n\n      let toParams = $transition$.params(\"to\") as TypedMap<any>;\n      let fromParams = $transition$.params<TypedMap<any>>(\"from\") as TypedMap<any>;\n      let toSchema: Param[] = $transition$.treeChanges().to.map((node: PathNode) => node.paramSchema).reduce(unnestR, []);\n      let fromSchema: Param[] = $transition$.treeChanges().from.map((node: PathNode) => node.paramSchema).reduce(unnestR, []);\n\n      // Find the to params that have different values than the from params\n      let changedToParams = toSchema.filter((param: Param) => {\n        let idx = fromSchema.indexOf(param);\n        return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n      });\n\n      // Only trigger callback if a to param has changed or is new\n      if (changedToParams.length) {\n        let changedKeys: string[] = changedToParams.map(x => x.id);\n        // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n        let newValues = filter(toParams, (val, key) => changedKeys.indexOf(key) !== -1);\n        controllerInstance.uiOnParamsChanged(newValues, $transition$);\n      }\n    };\n    $scope.$on('$destroy', <any> $transitions.onSuccess({}, paramsUpdated, hookOptions));\n  }\n\n  // Add component-level hook for uiCanExit\n  if (isFunction(controllerInstance.uiCanExit)) {\n    let id = _uiCanExitId++;\n    let cacheProp = '_uiCanExitIds';\n\n    // Returns true if a redirect transition already answered truthy\n    const prevTruthyAnswer = (trans: Transition) =>\n        !!trans && (trans[cacheProp] && trans[cacheProp][id] === true || prevTruthyAnswer(trans.redirectedFrom()));\n\n    // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n    const wrappedHook = (trans: Transition) => {\n      let promise, ids = trans[cacheProp] = trans[cacheProp] || {};\n      if (!prevTruthyAnswer(trans)) {\n        promise = $q.when(controllerInstance.uiCanExit(trans));\n        promise.then(val => ids[id] = (val !== false));\n      }\n      return promise;\n    };\n\n    let criteria = {exiting: viewState.name};\n    $scope.$on('$destroy', <any> $transitions.onBefore(criteria, wrappedHook, hookOptions));\n  }\n}\n\nangular.module('ui.router.state').directive('uiView', <any> uiView);\nangular.module('ui.router.state').directive('uiView', <any> $ViewDirectiveFill);\n","/**\n * @hidden\n * @module ng1\n */ /** */\ndeclare var angular;\nimport * as ng_from_import from \"angular\";\nlet ng_from_global = angular;\n\nexport const ng = (ng_from_import && ng_from_import.module) ? ng_from_import : ng_from_global;\n","/**\n * @coreapi\n * @module core\n */\n/** \n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nexport class Glob {\n  text: string;\n  glob: Array<string>;\n  regexp: RegExp;\n\n  constructor(text: string) {\n    this.text = text;\n    this.glob = text.split('.');\n\n    let regexpString = this.text.split('.')\n        .map(seg => {\n          if (seg === '**') return '(?:|(?:\\\\.[^.]*)*)';\n          if (seg === '*')  return '\\\\.[^.]*';\n          return                   '\\\\.' + seg;\n        }).join('');\n\n    this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n  }\n\n  matches(name: string) {\n    return this.regexp.test('.' + name);\n  }\n\n  /** Returns true if the string has glob-like characters in it */\n  static is(text: string) {\n    return !!/[!,*]+/.exec(text);\n  }\n\n  /** Returns a glob from the string, or null if the string isn't Glob-like */\n  static fromString(text: string) {\n    return Glob.is(text) ? new Glob(text) : null;\n  }\n}\n","/**\n * @coreapi\n * @module state\n */\n/** for typedoc */\nimport { StateDeclaration, _ViewDeclaration, _StateDeclaration, LazyLoadResult } from \"./interface\";\nimport { defaults, values, find, inherit } from \"../common/common\";\nimport { propEq } from \"../common/hof\";\nimport { Param } from \"../params/param\";\nimport { UrlMatcher } from \"../url/urlMatcher\";\nimport { Resolvable } from \"../resolve/resolvable\";\nimport { TransitionStateHookFn } from \"../transition/interface\";\nimport { TargetState } from \"./targetState\";\nimport { Transition } from \"../transition/transition\";\nimport { Glob } from \"../common/glob\";\nimport { isObject, isFunction } from \"../common/predicates\";\n\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nexport class StateObject {\n  /** The parent [[StateObject]] */\n  public parent: StateObject;\n\n  /** The name used to register the state */\n  public name: string;\n\n  /** Prototypally inherits from [[StateDeclaration.abstract]] */\n  public abstract: boolean;\n\n  /** Prototypally inherits from [[StateDeclaration.resolve]] */\n  public resolve: ({ [key: string]: (string|any[]|Function) }|any[]);\n\n  /** A list of [[Resolvable]] objects.  The internal representation of [[resolve]]. */\n  public resolvables: Resolvable[];\n\n  /** Prototypally inherits from [[StateDeclaration.resolvePolicy]] */\n  public resolvePolicy: any;\n\n  /** A compiled URLMatcher which detects when the state's URL is matched */\n  public url: UrlMatcher;\n\n  /** The parameters for the state, built from the URL and [[StateDeclaration.params]] */\n  public params: { [key: string]: Param };\n\n  /**\n   * The views for the state.\n   * Note: `@uirouter/core` does not register a builder for views.\n   * The framework specific code should register a `views` builder.\n   */\n  public views: { [key: string]: _ViewDeclaration; };\n\n  /**\n   * The original [[StateDeclaration]] used to build this [[StateObject]].\n   * Note: `this` object also prototypally inherits from the `self` declaration object.\n   */\n  public self: StateDeclaration;\n\n  /** The nearest parent [[StateObject]] which has a URL */\n  public navigable: StateObject;\n\n  /** The parent [[StateObject]] objects from this state up to the root */\n  public path: StateObject[];\n\n  /**\n   * Prototypally inherits from [[StateDeclaration.data]]\n   * Note: This is the only field on the [[StateDeclaration]] which is mutated.\n   * The definition object's `data` field is replaced with a new object\n   * which prototypally inherits from the parent state definition's `data` field.\n   */\n  public data: any;\n\n  /** \n   * An object containing the parent States' names as keys and \n   * true as their values.\n   */\n  public includes: { [name: string]: boolean };\n\n  /** Prototypally inherits from [[StateDeclaration.onExit]] */\n  public onExit: TransitionStateHookFn;\n  /** Prototypally inherits from [[StateDeclaration.onRetain]] */\n  public onRetain: TransitionStateHookFn;\n  /** Prototypally inherits from [[StateDeclaration.onEnter]] */\n  public onEnter: TransitionStateHookFn;\n\n  /** Prototypally inherits from [[StateDeclaration.lazyLoad]] */\n  public lazyLoad: (transition: Transition, state: StateDeclaration) => Promise<LazyLoadResult>;\n\n  /** Prototypally inherits from [[StateDeclaration.redirectTo]] */\n  redirectTo: (\n      string |\n      (($transition$: Transition) => TargetState) |\n      { state: (string|StateDeclaration), params: { [key: string]: any }}\n  );\n\n  /** @hidden */\n  __stateObjectCache: {\n    /** Might be null */\n    nameGlob?: Glob\n  };\n\n\n  /** @deprecated use State.create() */\n  constructor(config?: StateDeclaration) {\n    return StateObject.create(config || {});\n  }\n\n  /**\n   * Create a state object to put the private/internal implementation details onto.\n   * The object's prototype chain looks like:\n   * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n   *\n   * @param stateDecl the user-supplied State Declaration\n   * @returns {StateObject} an internal State object\n   */\n  static create(stateDecl: _StateDeclaration): StateObject {\n    stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n\n    let state = inherit(inherit(stateDecl, StateObject.prototype)) as StateObject;\n    stateDecl.$$state = () => state;\n    state.self = stateDecl;\n    state.__stateObjectCache = {\n      nameGlob: Glob.fromString(state.name) // might return null\n    };\n    return state;\n  }\n\n  /** Predicate which returns true if the object is an class with @State() decorator */\n  static isStateClass = (stateDecl: _StateDeclaration): stateDecl is ({ new (): StateDeclaration }) =>\n      isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n\n  /** Predicate which returns true if the object is an internal [[StateObject]] object */\n  static isState = (obj: any): obj is StateObject =>\n      isObject(obj['__stateObjectCache']);\n\n  /**\n   * Returns true if the provided parameter is the same state.\n   *\n   * Compares the identity of the state against the passed value, which is either an object\n   * reference to the actual `State` instance, the original definition object passed to\n   * `$stateProvider.state()`, or the fully-qualified name.\n   *\n   * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n   *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n   * @returns Returns `true` if `ref` matches the current `State` instance.\n   */\n  is(ref: StateObject|StateDeclaration|string): boolean {\n    return this === ref || this.self === ref || this.fqn() === ref;\n  }\n\n  /**\n   * @deprecated this does not properly handle dot notation\n   * @returns Returns a dot-separated name of the state.\n   */\n  fqn(): string {\n    if (!this.parent || !(this.parent instanceof this.constructor)) return this.name;\n    let name = this.parent.fqn();\n    return name ? name + \".\" + this.name : this.name;\n  }\n\n  /**\n   * Returns the root node of this state's tree.\n   *\n   * @returns The root of this state's tree.\n   */\n  root(): StateObject {\n    return this.parent && this.parent.root() || this;\n  }\n\n  /**\n   * Gets the state's `Param` objects\n   *\n   * Gets the list of [[Param]] objects owned by the state.\n   * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n   * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n   *\n   * @param opts options\n   */\n  parameters(opts?: { inherit?: boolean, matchingKeys?: any }): Param[] {\n    opts = defaults(opts, { inherit: true, matchingKeys: null });\n    let inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n    return inherited.concat(values(this.params))\n        .filter(param => !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id));\n  }\n\n  /**\n   * Returns a single [[Param]] that is owned by the state\n   *\n   * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n   * @param id the name of the [[Param]] to return\n   * @param opts options\n   */\n  parameter(id: string, opts: { inherit?: boolean } = {}): Param {\n    return (\n        this.url && this.url.parameter(id, opts) ||\n        find(values(this.params), propEq('id', id)) ||\n        opts.inherit && this.parent && this.parent.parameter(id)\n    );\n  }\n\n  toString() {\n    return this.fqn();\n  }\n}\n","/**\n * This module is a stub for core services such as Dependency Injection or Browser Location.\n * Core services may be implemented by a specific framework, such as ng1 or ng2, or be pure javascript.\n *\n * @module common\n */\n/** for typedoc */\nimport {IInjectable, Obj} from \"./common\";\nimport { Disposable } from \"../interface\";\nimport { UrlParts } from \"../url/interface\";\n\nexport let notImplemented = (fnname: string) => () => {\n  throw new Error(`${fnname}(): No coreservices implementation for UI-Router is loaded.`);\n};\n\nlet services: CoreServices = {\n  $q: undefined,\n  $injector: undefined,\n};\n\nexport interface $QLikeDeferred {\n  resolve: (val?: any) => void;\n  reject: (reason?: any) => void;\n  promise: Promise<any>;\n}\n\nexport interface $QLike {\n  when<T>(value?: T | PromiseLike<T>): Promise<T>;\n  reject<T>(reason: any): Promise<T>;\n  defer(): $QLikeDeferred;\n  all(promises: { [key: string]: Promise<any> }): Promise<any>;\n  all(promises: Promise<any>[]): Promise<any[]>;\n}\n\nexport interface $InjectorLike {\n  get(token: any): any;\n  get<T>(token: any): T;\n  has(token: any): boolean;\n  invoke(fn: IInjectable, context?: any, locals?: Obj): any;\n  annotate(fn: IInjectable, strictDi?: boolean): any[];\n  strictDi?: boolean;\n}\n\nexport interface CoreServices {\n  $q: $QLike;\n  $injector: $InjectorLike;\n}\n\nexport interface LocationServices extends Disposable {\n  /**\n   * Gets the current url string\n   *\n   * The URL is normalized using the internal [[path]]/[[search]]/[[hash]] values.\n   *\n   * For example, the URL may be stored in the hash ([[HashLocationServices]]) or\n   * have a base HREF prepended ([[PushStateLocationServices]]).\n   *\n   * The raw URL in the browser might be:\n   *\n   * ```\n   * http://mysite.com/somepath/index.html#/internal/path/123?param1=foo#anchor\n   * ```\n   *\n   * or\n   *\n   * ```\n   * http://mysite.com/basepath/internal/path/123?param1=foo#anchor\n   * ```\n   *\n   * then this method returns:\n   *\n   * ```\n   * /internal/path/123?param1=foo#anchor\n   * ```\n   *\n   *\n   * #### Example:\n   * ```js\n   * locationServices.url(); // \"/some/path?query=value#anchor\"\n   * ```\n   *\n   * @returns the current value of the url, as a string.\n   */\n  url(): string;\n\n  /**\n   * Updates the url, or gets the current url\n   *\n   * Updates the url, changing it to the value in `newurl`\n   *\n   * #### Example:\n   * ```js\n   * locationServices.url(\"/some/path?query=value#anchor\", true);\n   * ```\n   *\n   * @param newurl The new value for the URL.\n   *               This url should reflect only the new internal [[path]], [[search]], and [[hash]] values.\n   *               It should not include the protocol, site, port, or base path of an absolute HREF.\n   * @param replace When true, replaces the current history entry (instead of appending it) with this new url\n   * @param state The history's state object, i.e., pushState (if the LocationServices implementation supports it)\n   * @return the url (after potentially being processed)\n   */\n  url(newurl: string, replace?: boolean, state?: any): string;\n\n  /**\n   * Gets the path part of the current url\n   *\n   * If the current URL is `/some/path?query=value#anchor`, this returns `/some/path`\n   *\n   * @return the path portion of the url\n   */\n  path(): string;\n\n  /**\n   * Gets the search part of the current url as an object\n   *\n   * If the current URL is `/some/path?query=value#anchor`, this returns `{ query: 'value' }`\n   *\n   * @return the search (querystring) portion of the url, as an object\n   */\n  search(): { [key: string]: any };\n\n  /**\n   * Gets the hash part of the current url\n   *\n   * If the current URL is `/some/path?query=value#anchor`, this returns `anchor`\n   *\n   * @return the hash (anchor) portion of the url\n   */\n  hash(): string;\n\n  /**\n   * Registers a url change handler\n   *\n   * #### Example:\n   * ```js\n   * let deregisterFn = locationServices.onChange((evt) => console.log(\"url change\", evt));\n   * ```\n   *\n   * @param callback a function that will be called when the url is changing\n   * @return a function that de-registers the callback\n   */\n  onChange(callback: Function): Function;\n}\n\n/**\n * This service returns the location configuration\n *\n * This service returns information about the location configuration.\n * This service is primarily used when building URLs (e.g., for `hrefs`)\n */\nexport interface LocationConfig extends Disposable {\n  /**\n   * Gets the port, e.g., `80`\n   *\n   * @return the port number\n   */\n  port(): number;\n  /**\n   * Gets the protocol, e.g., `http`\n   *\n   * @return the protocol\n   */\n  protocol(): string;\n  /**\n   * Gets the host, e.g., `localhost`\n   *\n   * @return the protocol\n   */\n  host(): string;\n  /**\n   * Gets the base Href, e.g., `http://localhost/approot/`\n   *\n   * @return the application's base href\n   */\n  baseHref(): string;\n  /**\n   * Returns true when running in pushstate mode\n   *\n   * @return true when running in pushstate mode\n   */\n  html5Mode(): boolean;\n  /**\n   * Gets the hashPrefix (when not running in pushstate mode)\n   *\n   * If the current url is `http://localhost/app#!/uirouter/path/#anchor`, it returns `!` which is the prefix for the \"hashbang\" portion.\n   *\n   * @return the hash prefix\n   */\n  hashPrefix(): string;\n  /**\n   * Sets the hashPrefix (when not running in pushstate mode)\n   *\n   * @return the new hash prefix\n   */\n  hashPrefix(newprefix: string): string;\n}\n\nexport {services};\n","/**\n * @module common\n */ /** for typedoc */\n\nexport class Queue<T> {\n  constructor(private _items: T[] = [], private _limit: number = null) { }\n\n  enqueue(item: T) {\n    let items = this._items;\n    items.push(item);\n    if (this._limit && items.length > this._limit) items.shift();\n    return item;\n  }\n\n  dequeue(): T {\n    if (this.size())\n      return this._items.splice(0, 1)[0];\n  }\n\n  clear(): Array<T> {\n    let current = this._items;\n    this._items = [];\n    return current;\n  }\n\n  size(): number {\n    return this._items.length;\n  }\n\n  remove(item: T) {\n    let idx = this._items.indexOf(item);\n    return idx > -1 && this._items.splice(idx, 1)[0];\n  }\n\n  peekTail(): T {\n    return this._items[this._items.length - 1];\n  }\n\n  peekHead(): T {\n    if (this.size())\n      return this._items[0];\n  }\n}\n","/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n\"use strict\";\nimport {extend, silentRejection} from \"../common/common\";\nimport {stringify} from \"../common/strings\";\nimport { is } from '../common/hof';\n\nexport enum RejectType {\n  SUPERSEDED = 2, ABORTED = 3, INVALID = 4, IGNORED = 5, ERROR = 6\n}\n\n/** @hidden */ let id = 0;\n\nexport class Rejection {\n  $id = id++;\n  type: number;\n  message: string;\n  detail: any;\n  redirected: boolean;\n\n  constructor(type: number, message?: string, detail?: any) {\n    this.type = type;\n    this.message = message;\n    this.detail = detail;\n  }\n\n  toString() {\n    const detailString = (d: any) => \n        d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d);\n    let detail = detailString(this.detail);\n    let { $id, type, message } = this;\n    return `Transition Rejection($id: ${$id} type: ${type}, message: ${message}, detail: ${detail})`;\n  }\n\n  toPromise(): Promise<any> {\n    return extend(silentRejection(this), { _transitionRejection: this });\n  }\n\n  /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n  static isRejectionPromise(obj: any): boolean {\n    return obj && (typeof obj.then === 'function') && is(Rejection)(obj._transitionRejection);\n  }\n\n  /** Returns a Rejection due to transition superseded */\n  static superseded(detail?: any, options?: any): Rejection {\n    let message = \"The transition has been superseded by a different transition\";\n    let rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n    if (options && options.redirected) {\n      rejection.redirected = true;\n    }\n    return rejection;\n  }\n\n  /** Returns a Rejection due to redirected transition */\n  static redirected(detail?: any): Rejection {\n    return Rejection.superseded(detail, { redirected: true });\n  }\n\n  /** Returns a Rejection due to invalid transition */\n  static invalid(detail?: any): Rejection {\n    let message = \"This transition is invalid\";\n    return new Rejection(RejectType.INVALID, message, detail);\n  }\n\n  /** Returns a Rejection due to ignored transition */\n  static ignored(detail?: any): Rejection {\n    let message = \"The transition was ignored\";\n    return new Rejection(RejectType.IGNORED, message, detail);\n  }\n\n  /** Returns a Rejection due to aborted transition */\n  static aborted(detail?: any): Rejection {\n    let message = \"The transition has been aborted\";\n    return new Rejection(RejectType.ABORTED, message, detail);\n  }\n\n  /** Returns a Rejection due to aborted transition */\n  static errored(detail?: any): Rejection {\n    let message = \"The transition errored\";\n    return new Rejection(RejectType.ERROR, message, detail);\n  }\n  \n  /**\n   * Returns a Rejection\n   *\n   * Normalizes a value as a Rejection.\n   * If the value is already a Rejection, returns it.\n   * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n   *\n   * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n   */\n  static normalize(detail?: Rejection | Error | any): Rejection {\n    return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n  }\n}\n","/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\nimport {StateDeclaration} from \"../state/interface\";\nimport {Predicate} from \"../common/common\";\n\nimport {Transition} from \"./transition\";\nimport {StateObject} from \"../state/stateObject\";\nimport {PathNode} from \"../path/pathNode\";\nimport {TargetState} from \"../state/targetState\";\nimport {RegisteredHook} from \"./hookRegistry\";\n\n/**\n * The TransitionOptions object can be used to change the behavior of a transition.\n *\n * It is passed as the third argument to [[StateService.go]], [[StateService.transitionTo]].\n * It can also be used with a `uiSref`.\n */\nexport interface TransitionOptions {\n  /**\n   * This option changes how the Transition interacts with the browser's location bar (URL).\n   *\n   * - If `true`, it will update the url in the location bar.\n   * - If `false`, it will not update the url in the location bar.\n   * - If it is the string `\"replace\"`, it will update the url and also replace the last history record.\n   *\n   * @default `true`\n   */\n  location    ?: (boolean|string);\n\n  /**\n   * When transitioning to relative path (e.g '`^`'), this option defines which state to be relative from.\n   * @default `$state.current`\n   */\n  relative    ?: (string|StateDeclaration|StateObject);\n\n  /**\n   * This option sets whether or not the transition's parameter values should be inherited from\n   * the current parameter values.\n   *\n   * - If `true`, it will inherit parameter values from the current parameter values.\n   * - If `false`, only the parameters which are provided to `transitionTo` will be used.\n   *\n   * @default `false`\n   */\n  inherit     ?: boolean;\n\n  /**\n   * @deprecated\n   */\n  notify      ?: boolean;\n\n  /**\n   * This option may be used to force states which are currently active to reload.\n   *\n   * During a normal transition, a state is \"retained\" if:\n   * - It was previously active\n   * - The state's parameter values have not changed\n   * - All the parent states' parameter values have not changed\n   *\n   * Forcing a reload of a state will cause it to be exited and entered, which will:\n   * - Refetch that state's resolve data\n   * - Exit the state (onExit hook)\n   * - Re-enter the state (onEnter hook)\n   * - Re-render the views (controllers and templates)\n   *\n   * - When `true`, the destination state (and all parent states) will be reloaded.\n   * - When it is a string and is the name of a state, or when it is a State object,\n   *   that state and any children states will be reloaded.\n   *\n   * @default `false`\n   */\n  reload      ?: (boolean|string|StateDeclaration|StateObject);\n  /**\n   * You can define your own Transition Options inside this property and use them, e.g., from a Transition Hook\n   */\n  custom      ?: any;\n  /** @internalapi */\n  reloadState ?: (StateObject);\n  /** @internalapi\n   * If this transition is a redirect, this property should be the original Transition (which was redirected to this one)\n   */\n  redirectedFrom?: Transition;\n  /** @internalapi */\n  current     ?: () => Transition;\n  /** @internalapi */\n  source      ?: \"sref\" | \"url\" | \"redirect\" | \"otherwise\" | \"unknown\";\n}\n\n/** @internalapi */\nexport interface TransitionHookOptions {\n  current             ?: () => Transition;  //path?\n  transition          ?: Transition;\n  hookType            ?: string;\n  target              ?: any;\n  traceData           ?: any;\n  bind                ?: any;\n  stateHook           ?: boolean;\n}\n\n/**\n * TreeChanges encapsulates the various Paths that are involved in a Transition.\n *\n * Get a TreeChanges object using [[Transition.treeChanges]]\n *\n * A UI-Router Transition is from one Path in a State Tree to another Path.  For a given Transition,\n * this object stores the \"to\" and \"from\" paths, as well as subsets of those: the \"retained\",\n * \"exiting\" and \"entering\" paths.\n *\n * Each path in TreeChanges is an array of [[PathNode]] objects. Each PathNode in the array corresponds to a portion\n * of a nested state.\n *\n * For example, if you had a nested state named `foo.bar.baz`, it would have three\n * portions, `foo, bar, baz`.  If you transitioned **to** `foo.bar.baz` and inspected the [[TreeChanges.to]]\n * Path, you would find a node in the array for each portion: `foo`, `bar`, and `baz`.\n *\n * ---\n *\n * @todo show visual state tree\n */\nexport interface TreeChanges {\n  /** @nodoc */\n  [key: string]: PathNode[];\n\n  /** The path of nodes in the state tree that the transition is coming *from* */\n  from: PathNode[];\n\n  /** The path of nodes in the state tree that the transition is going *to* */\n  to: PathNode[];\n\n  /**\n   * The path of active nodes that the transition is retaining.\n   *\n   * These nodes are neither exited, nor entered.\n   * Before and after the transition is successful, these nodes are active.\n   */\n  retained: PathNode[];\n\n  /**\n   * The path of previously active nodes that the transition is exiting.\n   *\n   * After the Transition is successful, these nodes are no longer active.\n   *\n   * Note that a state that is being reloaded (due to parameter values changing, or `reload: true`) may be in both the\n   * `exiting` and `entering` paths.\n   */\n  exiting: PathNode[];\n\n  /**\n   * The path of nodes that the transition is entering.\n   *\n   * After the Transition is successful, these nodes will be active.\n   * Because they are entering, they have their resolves fetched, `onEnter` hooks run, and their views\n   * (component(s) or controller(s)+template(s)) refreshed.\n   *\n   * Note that a state that is reloaded (due to parameter values changing, or `reload: true`) may be in both the\n   * `exiting` and `entering` paths.\n   */\n  entering: PathNode[];\n}\n\nexport type IHookRegistration = (matchCriteria: HookMatchCriteria, callback: HookFn, options?: HookRegOptions) => Function;\n\n/**\n * The signature for Transition Hooks.\n *\n * Transition hooks are callback functions that hook into the lifecycle of transitions.\n * As a transition runs, it reaches certain lifecycle events.\n * As each event occurs, the hooks which are registered for the event are called (in priority order).\n *\n * A transition hook may alter a Transition by returning a [[HookResult]].\n *\n * #### See:\n *\n * - [[IHookRegistry.onBefore]]\n * - [[IHookRegistry.onStart]]\n * - [[IHookRegistry.onFinish]]\n * - [[IHookRegistry.onSuccess]]\n * - [[IHookRegistry.onError]]\n *\n * @param transition the current [[Transition]]\n * @param injector (for ng1 or ng2 only) the injector service\n *\n * @returns a [[HookResult]] which may alter the transition\n *\n */\nexport interface TransitionHookFn {\n  (transition: Transition) : HookResult;\n}\n\n/**\n * The signature for Transition State Hooks.\n *\n * A function which hooks into a lifecycle event for a specific state.\n *\n * Transition State Hooks are callback functions that hook into the lifecycle events of specific states during a transition.\n * As a transition runs, it may exit some states, retain (keep) states, and enter states.\n * As each lifecycle event occurs, the hooks which are registered for the event and that state are called (in priority order).\n *\n * #### See:\n *\n * - [[IHookRegistry.onExit]]\n * - [[IHookRegistry.onRetain]]\n * - [[IHookRegistry.onEnter]]\n *\n * @param transition the current [[Transition]]\n * @param state the [[StateObject]] that the hook is bound to\n * @param injector (for ng1 or ng2 only) the injector service\n *\n * @returns a [[HookResult]] which may alter the transition\n */\nexport interface TransitionStateHookFn {\n  (transition: Transition, state: StateDeclaration) : HookResult;\n}\n\n/**\n * The signature for Transition onCreate Hooks.\n *\n * Transition onCreate Hooks are callbacks that allow customization or preprocessing of\n * a Transition before it is returned from [[TransitionService.create]]\n *\n * @param transition the [[Transition]] that was just created\n * @return a [[Transition]] which will then be returned from [[TransitionService.create]]\n */\nexport interface TransitionCreateHookFn {\n  (transition: Transition): void;\n}\n\nexport type HookFn = (TransitionHookFn|TransitionStateHookFn|TransitionCreateHookFn);\n\n/**\n * The return value of a [[TransitionHookFn]] or [[TransitionStateHookFn]]\n *\n * When returned from a [[TransitionHookFn]] or [[TransitionStateHookFn]], these values alter the running [[Transition]]:\n *\n * - `false`: the transition will be cancelled.\n * - [[TargetState]]: the transition will be redirected to the new target state (see: [[StateService.target]])\n * - `Promise`: the transition will wait for the promise to resolve or reject\n *    - If the promise is rejected (or resolves to `false`), the transition will be cancelled\n *    - If the promise resolves to a [[TargetState]], the transition will be redirected\n *    - If the promise resolves to anything else, the transition will resume\n * - Anything else: the transition will resume\n */\nexport type HookResult = (boolean | TargetState | void | Promise<boolean|TargetState|void>);\n\n/**\n * These options may be provided when registering a Transition Hook (such as `onStart`)\n */\nexport interface HookRegOptions {\n  /**\n   * Sets the priority of the registered hook\n   *\n   * Hooks of the same type (onBefore, onStart, etc) are invoked in priority order.  A hook with a higher priority\n   * is invoked before a hook with a lower priority.\n   *\n   * The default hook priority is 0\n   */\n  priority?: number;\n\n  /**\n   * Specifies what `this` is bound to during hook invocation.\n   */\n  bind?: any;\n}\n\n/**\n * This interface specifies the api for registering Transition Hooks.  Both the\n * [[TransitionService]] and also the [[Transition]] object itself implement this interface.\n * Note: the Transition object only allows hooks to be registered before the Transition is started.\n */\nexport interface IHookRegistry {\n  /**\n   * Registers a [[TransitionHookFn]], called *before a transition starts*.\n   *\n   * Registers a transition lifecycle hook, which is invoked before a transition even begins.\n   * This hook can be useful to implement logic which prevents a transition from even starting, such\n   * as authentication, redirection\n   *\n   * See [[TransitionHookFn]] for the signature of the function.\n   *\n   * The [[HookMatchCriteria]] is used to determine which Transitions the hook should be invoked for.\n   * To match all Transitions, use an empty criteria object `{}`.\n   *\n   * ### Lifecycle\n   *\n   * `onBefore` hooks are invoked *before a Transition starts*.\n   * No resolves have been fetched yet.\n   * Each `onBefore` hook is invoked synchronously, in the same call stack as [[StateService.transitionTo]].\n   * The registered `onBefore` hooks are invoked in priority order.\n   *\n   * Note: during the `onBefore` phase, additional hooks can be added to the specific [[Transition]] instance.\n   * These \"on-the-fly\" hooks only affect the currently running transition..\n   *\n   * ### Return value\n   *\n   * The hook's return value can be used to pause, cancel, or redirect the current Transition.\n   * See [[HookResult]] for more information.\n   *\n   * If any hook modifies the transition *synchronously* (by throwing, returning `false`, or returning\n   * a [[TargetState]]), the remainder of the hooks are skipped.\n   * If a hook returns a promise, the remainder of the `onBefore` hooks are still invoked synchronously.\n   * All promises are resolved, and processed asynchronously before the `onStart` phase of the Transition.\n   *\n   * ### Examples\n   *\n   * #### Default Substate\n   *\n   * This example redirects any transition from 'home' to 'home.dashboard'.  This is commonly referred to as a\n   * \"default substate\".\n   *\n   * @example\n   * ```js\n   * // ng2\n   * transitionService.onBefore({ to: 'home' }, (trans: Transition) =>\n   *     trans.router.stateService.target(\"home.dashboard\"));\n   * ```\n   *\n   * #### Data Driven Default Substate\n   *\n   * This example provides data-driven default substate functionality. It matches on a transition to any state\n   * which has `defaultSubstate: \"some.sub.state\"` defined.  See: [[Transition.to]] which returns the \"to state\"\n   * definition.\n   *\n   * @example\n   * ```js\n   * // ng1\n   * // state declaration\n   * {\n   *   name: 'home',\n   *   template: '<div ui-view/>',\n   *   defaultSubstate: 'home.dashboard'\n   * }\n   *\n   * var criteria = {\n   *   to: function(state) {\n   *     return state.defaultSubstate != null;\n   *   }\n   * }\n   *\n   * $transitions.onBefore(criteria, function(trans: Transition) {\n   *   var substate = trans.to().defaultSubstate;\n   *   return trans.router.stateService.target(substate);\n   * });\n   * ```\n   *\n   *\n   * #### Require authentication\n   *\n   * This example cancels a transition to a state which requires authentication, if the user is not currently authenticated.\n   *\n   * This example assumes a state tree where all states which require authentication are children of a parent `'requireauth'` state.\n   * This example assumes `MyAuthService` synchronously returns a boolean from `isAuthenticated()`.\n   *\n   * #### Example:\n   * ```js\n   * // ng1\n   * $transitions.onBefore( { to: 'requireauth.**' }, function(trans) {\n   *   var myAuthService = trans.injector().get('MyAuthService');\n   *   // If isAuthenticated returns false, the transition is cancelled.\n   *   return myAuthService.isAuthenticated();\n   * });\n   * ```\n   *\n   * @param matchCriteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be invoked.\n   * @returns a function which deregisters the hook.\n   */\n  onBefore(matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function;\n\n  /**\n   * Registers a [[TransitionHookFn]], called when a transition starts.\n   *\n   * Registers a transition lifecycle hook, which is invoked as a transition starts running.\n   * This hook can be useful to perform some asynchronous action before completing a transition.\n   *\n   * See [[TransitionHookFn]] for the signature of the function.\n   *\n   * The [[HookMatchCriteria]] is used to determine which Transitions the hook should be invoked for.\n   * To match all Transitions, use an empty criteria object `{}`.\n   *\n   * ### Lifecycle\n   *\n   * `onStart` hooks are invoked asynchronously when the Transition starts running.\n   * This happens after the `onBefore` phase is complete.\n   * At this point, the Transition has not yet exited nor entered any states.\n   * The registered `onStart` hooks are invoked in priority order.\n   *\n   * Note: A built-in `onStart` hook with high priority is used to fetch any eager resolve data.\n   *\n   * ### Return value\n   *\n   * The hook's return value can be used to pause, cancel, or redirect the current Transition.\n   * See [[HookResult]] for more information.\n   *\n   * ### Example\n   *\n   * #### Login during transition\n   *\n   * This example intercepts any transition to a state which requires authentication, when the user is\n   * not currently authenticated.  It allows the user to authenticate asynchronously, then resumes the\n   * transition.  If the user did not authenticate successfully, it redirects to the \"guest\" state, which\n   * does not require authentication.\n   *\n   * This example assumes:\n   * - a state tree where all states which require authentication are children of a parent `'auth'` state.\n   * - `MyAuthService.isAuthenticated()` synchronously returns a boolean.\n   * - `MyAuthService.authenticate()` presents a login dialog, and returns a promise which is resolved\n   *   or rejected, whether or not the login attempt was successful.\n   *\n   * #### Example:\n   * ```js\n   * // ng1\n   * $transitions.onStart( { to: 'auth.**' }, function(trans) {\n   *   var $state = trans.router.stateService;\n   *   var MyAuthService = trans.injector().get('MyAuthService');\n   *\n   *   // If the user is not authenticated\n   *   if (!MyAuthService.isAuthenticated()) {\n   *\n   *     // Then return a promise for a successful login.\n   *     // The transition will wait for this promise to settle\n   *\n   *     return MyAuthService.authenticate().catch(function() {\n   *\n   *       // If the authenticate() method failed for whatever reason,\n   *       // redirect to a 'guest' state which doesn't require auth.\n   *       return $state.target(\"guest\");\n   *     });\n   *   }\n   * });\n   * ```\n   *\n   * @param matchCriteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be injected and invoked.\n   * @returns a function which deregisters the hook.\n   */\n  onStart(matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function;\n\n  /**\n   * Registers a [[TransitionStateHookFn]], called when a specific state is entered.\n   *\n   * Registers a lifecycle hook, which is invoked (during a transition) when a specific state is being entered.\n   *\n   * Since this hook is run only when the specific state is being *entered*, it can be useful for\n   * performing tasks when entering a submodule/feature area such as initializing a stateful service, \n   * or for guarding access to a submodule/feature area.\n   *\n   * See [[TransitionStateHookFn]] for the signature of the function.\n   *\n   * The [[HookMatchCriteria]] is used to determine which Transitions the hook should be invoked for.\n   * `onEnter` hooks generally specify `{ entering: 'somestate' }`.\n   * To match all Transitions, use an empty criteria object `{}`.\n   *\n   * ### Lifecycle\n   *\n   * `onEnter` hooks are invoked when the Transition is entering a state.\n   * States are entered after the `onRetain` phase is complete.\n   * If more than one state is being entered, the parent state is entered first.\n   * The registered `onEnter` hooks for a state are invoked in priority order.\n   *\n   * Note: A built-in `onEnter` hook with high priority is used to fetch lazy resolve data for states being entered.\n   *\n   * ### Return value\n   *\n   * The hook's return value can be used to pause, cancel, or redirect the current Transition.\n   * See [[HookResult]] for more information.\n   *\n   * ### Inside a state declaration\n   *\n   * Instead of registering `onEnter` hooks using the [[TransitionService]], you may define an `onEnter` hook\n   * directly on a state declaration (see: [[StateDeclaration.onEnter]]).\n   * \n   *\n   * ### Examples\n   *\n   * #### Audit Log\n   *\n   * This example uses a service to log that a user has entered the admin section of an app.\n   * This assumes that there are substates of the \"admin\" state, such as \"admin.users\", \"admin.pages\", etc.\n   * @example\n   * ```\n   *\n   * $transitions.onEnter({ entering: 'admin' }, function(transition, state) {\n   *   var AuditService = trans.injector().get('AuditService');\n   *   AuditService.log(\"Entered \" + state.name + \" module while transitioning to \" + transition.to().name);\n   * }\n   * ```\n   *\n   * #### Audit Log (inside a state declaration)\n   *\n   * The `onEnter` inside this state declaration is syntactic sugar for the previous Audit Log example.\n   * ```\n   * {\n   *   name: 'admin',\n   *   component: 'admin',\n   *   onEnter: function($transition$, $state$) {\n   *     var AuditService = $transition$.injector().get('AuditService');\n   *     AuditService.log(\"Entered \" + state.name + \" module while transitioning to \" + transition.to().name);\n   *   }\n   * }\n   * ```\n   *\n   * Note: A state declaration's `onEnter` function is injected for Angular 1 only.\n   *\n   * @param matchCriteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be injected and invoked.\n   * @returns a function which deregisters the hook.\n   */\n  onEnter(matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function;\n\n  /**\n   * Registers a [[TransitionStateHookFn]], called when a specific state is retained/kept.\n   *\n   * Registers a lifecycle hook, which is invoked (during a transition) for\n   * a specific state that was previously active will remain active (is not being entered nor exited).\n   * \n   * This hook is invoked when a state is \"retained\" or \"kept\".\n   * It means the transition is coming *from* a substate of the retained state *to* a substate of the retained state.\n   * This hook can be used to perform actions when the user moves from one substate to another, such as between steps in a wizard.\n   *\n   * The [[HookMatchCriteria]] is used to determine which Transitions the hook should be invoked for.\n   * `onRetain` hooks generally specify `{ retained: 'somestate' }`.\n   * To match all Transitions, use an empty criteria object `{}`.\n   *\n   * ### Lifecycle\n   *\n   * `onRetain` hooks are invoked after any `onExit` hooks have been fired.\n   * If more than one state is retained, the child states' `onRetain` hooks are invoked first.\n   * The registered `onRetain` hooks for a state are invoked in priority order.\n   *\n   * ### Return value\n   *\n   * The hook's return value can be used to pause, cancel, or redirect the current Transition.\n   * See [[HookResult]] for more information.\n   *\n   * ### Inside a state declaration\n   *\n   * Instead of registering `onRetain` hooks using the [[TransitionService]], you may define an `onRetain` hook\n   * directly on a state declaration (see: [[StateDeclaration.onRetain]]).\n   *\n   * Note: A state declaration's `onRetain` function is injected for Angular 1 only.\n   *\n   * @param matchCriteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be injected and invoked.\n   * @returns a function which deregisters the hook.\n   */\n  onRetain(matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function;\n\n  /**\n   * Registers a [[TransitionStateHookFn]], called when a specific state is exited.\n   *\n   * Registers a lifecycle hook, which is invoked (during a transition) when a specific state is being exited.\n   *\n   * Since this hook is run only when the specific state is being *exited*, it can be useful for\n   * performing tasks when leaving a submodule/feature area such as cleaning up a stateful service, \n   * or for preventing the user from leaving a state or submodule until some criteria is satisfied.\n   *\n   * See [[TransitionStateHookFn]] for the signature of the function.\n   *\n   * The [[HookMatchCriteria]] is used to determine which Transitions the hook should be invoked for.\n   * `onExit` hooks generally specify `{ exiting: 'somestate' }`.\n   * To match all Transitions, use an empty criteria object `{}`.\n   *\n   * ### Lifecycle\n   *\n   * `onExit` hooks are invoked when the Transition is exiting a state.\n   * States are exited after any `onStart` phase is complete.\n   * If more than one state is being exited, the child states are exited first.\n   * The registered `onExit` hooks for a state are invoked in priority order.\n   *\n   * ### Return value\n   *\n   * The hook's return value can be used to pause, cancel, or redirect the current Transition.\n   * See [[HookResult]] for more information.\n   *\n   * ### Inside a state declaration\n   *\n   * Instead of registering `onExit` hooks using the [[TransitionService]], you may define an `onExit` hook\n   * directly on a state declaration (see: [[StateDeclaration.onExit]]).\n   *\n   * Note: A state declaration's `onExit` function is injected for Angular 1 only.\n   *\n   * @param matchCriteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be injected and invoked.\n   * @returns a function which deregisters the hook.\n   */\n  onExit(matchCriteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function;\n\n  /**\n   * Registers a [[TransitionHookFn]], called *just before a transition finishes*.\n   *\n   * Registers a transition lifecycle hook, which is invoked just before a transition finishes.\n   * This hook is a last chance to cancel or redirect a transition.\n   *\n   * See [[TransitionHookFn]] for the signature of the function.\n   *\n   * The [[HookMatchCriteria]] is used to determine which Transitions the hook should be invoked for.\n   * To match all Transitions, use an empty criteria object `{}`.\n   *\n   * ### Lifecycle\n   *\n   * `onFinish` hooks are invoked after the `onEnter` phase is complete.\n   * These hooks are invoked just before the transition is \"committed\".\n   * Each hook is invoked in priority order.\n   *\n   * ### Return value\n   *\n   * The hook's return value can be used to pause, cancel, or redirect the current Transition.\n   * See [[HookResult]] for more information.\n   *\n   * @param matchCriteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be injected and invoked.\n   * @returns a function which deregisters the hook.\n   */\n  onFinish(matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function;\n\n  /**\n   * Registers a [[TransitionHookFn]], called after a successful transition completed.\n   *\n   * Registers a transition lifecycle hook, which is invoked after a transition successfully completes.\n   *\n   * See [[TransitionHookFn]] for the signature of the function.\n   *\n   * The [[HookMatchCriteria]] is used to determine which Transitions the hook should be invoked for.\n   * To match all Transitions, use an empty criteria object `{}`.\n   *\n   * ### Lifecycle\n   *\n   * `onSuccess` hooks are chained off the Transition's promise (see [[Transition.promise]]).\n   * If the Transition is successful and its promise is resolved, then the `onSuccess` hooks are invoked.\n   * Since these hooks are run after the transition is over, their return value is ignored.\n   * The `onSuccess` hooks are invoked in priority order.\n   *\n   * ### Return value\n   *\n   * Since the Transition is already completed, the hook's return value is ignored\n   *\n   * @param matchCriteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be injected and invoked.\n   * @returns a function which deregisters the hook.\n   */\n  onSuccess(matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function;\n\n  /**\n   * Registers a [[TransitionHookFn]], called after a transition has errored.\n   *\n   * Registers a transition lifecycle hook, which is invoked after a transition has been rejected for any reason.\n   *\n   * See [[TransitionHookFn]] for the signature of the function.\n   *\n   * The [[HookMatchCriteria]] is used to determine which Transitions the hook should be invoked for.\n   * To match all Transitions, use an empty criteria object `{}`.\n   *\n   * ### Lifecycle\n   *\n   * The `onError` hooks are chained off the Transition's promise (see [[Transition.promise]]).\n   * If a Transition fails, its promise is rejected and the `onError` hooks are invoked.\n   * The `onError` hooks are invoked in priority order.\n   *\n   * Since these hooks are run after the transition is over, their return value is ignored.\n   *\n   * A transition \"errors\" if it was started, but failed to complete (for any reason).\n   * A *non-exhaustive list* of reasons a transition can error:\n   *\n   * - A transition was cancelled because a new transition started while it was still running (`Transition superseded`)\n   * - A transition was cancelled by a Transition Hook returning false\n   * - A transition was redirected by a Transition Hook returning a [[TargetState]]\n   * - A Transition Hook or resolve function threw an error\n   * - A Transition Hook returned a rejected promise\n   * - A resolve function returned a rejected promise\n   *\n   * To check the failure reason, inspect the return value of [[Transition.error]].\n   * \n   * Note: `onError` should be used for targeted error handling, or error recovery.\n   * For simple catch-all error reporting, use [[StateService.defaultErrorHandler]].\n   *\n   * ### Return value\n   *\n   * Since the Transition is already completed, the hook's return value is ignored\n   *\n   * @param matchCriteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be injected and invoked.\n   * @returns a function which deregisters the hook.\n   */\n  onError(matchCriteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function;\n\n  /**\n   * Returns all the registered hooks of a given `hookName` type\n   *\n   * #### Example:\n   * ```\n   * $transitions.getHooks(\"onEnter\")\n   * ```\n   */\n  getHooks(hookName: string): RegisteredHook[];\n\n  /** @hidden place to store the hooks */\n  _registeredHooks: { [key: string]: RegisteredHook[] };\n}\n\n/** A predicate type which tests if a [[StateDeclaration]] passes some test. Returns a boolean. */\nexport type IStateMatch = Predicate<StateDeclaration>\n\n/**\n * This object is used to configure whether or not a Transition Hook is invoked for a particular transition,\n * based on the Transition's \"to state\" and \"from state\".\n *\n * Each property (`to`, `from`, `exiting`, `retained`, and `entering`) can be a state [[Glob]] string,\n * a boolean, or a function that takes a state and returns a boolean (see [[HookMatchCriterion]])\n *\n * All properties are optional.  If any property is omitted, it is replaced with the value `true`, and always matches.\n * To match any transition, use an empty criteria object `{}`.\n *\n * #### Example:\n * ```js\n * // This matches a transition coming from the `parent` state and going to the `parent.child` state.\n * var match = {\n *   to: 'parent',\n *   from: 'parent.child'\n * }\n * ```\n *\n * #### Example:\n * ```js\n * // This matches a transition coming from any substate of `parent` and going directly to the `parent` state.\n * var match = {\n *   to: 'parent',\n *   from: 'parent.**'\n * }\n * ```\n *\n * #### Example:\n * ```js\n * // This matches a transition coming from any state and going to any substate of `mymodule`\n * var match = {\n *   to: 'mymodule.**'\n * }\n * ```\n *\n * #### Example:\n * ```js\n * // This matches a transition coming from any state and going to any state that has `data.authRequired`\n * // set to a truthy value.\n * var match = {\n *   to: function(state) {\n *     return state.data != null && state.data.authRequired === true;\n *   }\n * }\n * ```\n *\n * #### Example:\n * ```js\n * // This matches a transition that is exiting `parent.child`\n * var match = {\n *   exiting: 'parent.child'\n * }\n * ```\n */\nexport interface HookMatchCriteria {\n  [key: string]: HookMatchCriterion | undefined;\n\n  /** A [[HookMatchCriterion]] to match the destination state */\n  to?: HookMatchCriterion;\n  /** A [[HookMatchCriterion]] to match the original (from) state */\n  from?: HookMatchCriterion;\n  /** A [[HookMatchCriterion]] to match any state that would be exiting */\n  exiting?: HookMatchCriterion;\n  /** A [[HookMatchCriterion]] to match any state that would be retained */\n  retained?: HookMatchCriterion;\n  /** A [[HookMatchCriterion]] to match any state that would be entering */\n  entering?: HookMatchCriterion;\n}\n\nexport interface IMatchingNodes {\n  [key: string]: PathNode[];\n\n  to: PathNode[];\n  from: PathNode[];\n  exiting: PathNode[];\n  retained: PathNode[];\n  entering: PathNode[];\n}\n\n/** @hidden */\nexport interface RegisteredHooks {\n  [key: string]: RegisteredHook[];\n}\n\n/** @hidden */\nexport interface PathTypes {\n  [key: string]: PathType;\n\n  to: PathType;\n  from: PathType;\n  exiting: PathType;\n  retained: PathType;\n  entering: PathType;\n}\n\n/** @hidden */\nexport interface PathType {\n  name: string;\n  scope: TransitionHookScope;\n}\n\n/**\n * Hook Criterion used to match a transition.\n *\n * A [[Glob]] string that matches the name of a state.\n *\n * Or, a function with the signature `function(state) { return matches; }`\n * which should return a boolean to indicate if a state matches.\n *\n * Or, `true` to always match\n */\nexport type HookMatchCriterion = (string|IStateMatch|boolean)\n\nexport enum TransitionHookPhase { CREATE, BEFORE, RUN, SUCCESS, ERROR }\nexport enum TransitionHookScope { TRANSITION, STATE }\n","/**\n * @coreapi\n * @module state\n */ /** for typedoc */\n\nimport { StateDeclaration, StateOrName, TargetStateDef } from \"./interface\";\nimport { ParamsOrArray } from \"../params/interface\";\nimport { TransitionOptions } from \"../transition/interface\";\nimport { StateObject } from \"./stateObject\";\nimport { toJson } from \"../common/common\";\nimport { isString } from \"../common/predicates\";\n\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nexport class TargetState {\n  private _params: ParamsOrArray;\n\n  /**\n   * The TargetState constructor\n   *\n   * Note: Do not construct a `TargetState` manually.\n   * To create a `TargetState`, use the [[StateService.target]] factory method.\n   *\n   * @param _identifier An identifier for a state.\n   *    Either a fully-qualified state name, or the object used to define the state.\n   * @param _definition The internal state representation, if exists.\n   * @param _params Parameters for the target state\n   * @param _options Transition options.\n   *\n   * @internalapi\n   */\n  constructor(\n    private _identifier: StateOrName,\n    private _definition?: StateObject,\n    _params?: ParamsOrArray,\n    private _options: TransitionOptions = {}\n  ) {\n    this._params = _params || {};\n  }\n\n  /** The name of the state this object targets */\n  name(): string {\n    return this._definition && this._definition.name || <string> this._identifier;\n  }\n\n  /** The identifier used when creating this TargetState */\n  identifier(): StateOrName {\n    return this._identifier;\n  }\n\n  /** The target parameter values */\n  params(): ParamsOrArray {\n    return this._params;\n  }\n\n  /** The internal state object (if it was found) */\n  $state(): StateObject {\n    return this._definition;\n  }\n\n  /** The internal state declaration (if it was found) */\n  state(): StateDeclaration {\n    return this._definition && this._definition.self;\n  }\n\n  /** The target options */\n  options() {\n    return this._options;\n  }\n\n  /** True if the target state was found */\n  exists(): boolean {\n    return !!(this._definition && this._definition.self);\n  }\n\n  /** True if the object is valid */\n  valid(): boolean {\n    return !this.error();\n  }\n\n  /** If the object is invalid, returns the reason why */\n  error(): string {\n    let base = <any> this.options().relative;\n    if (!this._definition && !!base) {\n      let stateName = base.name ? base.name : base;\n      return `Could not resolve '${this.name()}' from state '${stateName}'`;\n    }\n    if (!this._definition)\n      return `No such state '${this.name()}'`;\n    if (!this._definition.self)\n      return `State '${this.name()}' has an invalid definition`;\n  }\n\n  toString() {\n    return `'${this.name()}'${toJson(this.params())}`;\n  }\n\n  /** Returns true if the object has a state property that might be a state or state name */\n  static isDef = (obj): obj is TargetStateDef =>\n      obj && obj.state && (isString(obj.state) || isString(obj.state.name));\n\n  // /** Returns a new TargetState based on this one, but using the specified options */\n  // withOptions(_options: TransitionOptions): TargetState {\n  //   return extend(this._clone(), { _options });\n  // }\n  //\n  // /** Returns a new TargetState based on this one, but using the specified params */\n  // withParams(_params: ParamsOrArray): TargetState {\n  //   return extend(this._clone(), { _params });\n  // }\n\n  // private _clone = () =>\n  //     new TargetState(this._identifier, this._definition, this._params, this._options);\n}\n","/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nimport { TransitionHookOptions, HookResult, TransitionHookPhase } from './interface';\nimport { defaults, noop, silentRejection } from '../common/common';\nimport { fnToString, maxLength } from '../common/strings';\nimport { isPromise } from '../common/predicates';\nimport { is, parse } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { Rejection } from './rejectFactory';\nimport { TargetState } from '../state/targetState';\nimport { Transition } from './transition';\nimport { TransitionEventType } from './transitionEventType';\nimport { RegisteredHook } from './hookRegistry';\nimport { StateDeclaration } from '../state/interface';\n\nlet defaultOptions: TransitionHookOptions = {\n  current: noop,\n  transition: null,\n  traceData: {},\n  bind: null,\n};\n\nexport type GetResultHandler = (hook: TransitionHook) => ResultHandler;\nexport type GetErrorHandler  = (hook: TransitionHook) => ErrorHandler;\n\nexport type ResultHandler = (result: HookResult)      => Promise<HookResult>;\nexport type ErrorHandler  = (error: any)              => Promise<any>;\n\n/** @hidden */\nexport class TransitionHook {\n  type: TransitionEventType;\n  constructor(private transition: Transition,\n              private stateContext: StateDeclaration,\n              private registeredHook: RegisteredHook,\n              private options: TransitionHookOptions) {\n    this.options = defaults(options, defaultOptions);\n    this.type = registeredHook.eventType;\n  }\n\n  /**\n   * These GetResultHandler(s) are used by [[invokeHook]] below\n   * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n   */\n  static HANDLE_RESULT: GetResultHandler = (hook: TransitionHook) => (result: HookResult) =>\n      hook.handleHookResult(result);\n\n  /**\n   * If the result is a promise rejection, log it.\n   * Otherwise, ignore the result.\n   */\n  static LOG_REJECTED_RESULT: GetResultHandler = (hook: TransitionHook) => (result: HookResult) => {\n    isPromise(result) && result.catch(err =>\n        hook.logError(Rejection.normalize(err)));\n    return undefined;\n  }\n\n  /**\n   * These GetErrorHandler(s) are used by [[invokeHook]] below\n   * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n   */\n  static LOG_ERROR: GetErrorHandler = (hook: TransitionHook) => (error: any) =>\n      hook.logError(error);\n\n  static REJECT_ERROR: GetErrorHandler = (hook: TransitionHook) => (error: any) =>\n      silentRejection(error);\n\n  static THROW_ERROR: GetErrorHandler = (hook: TransitionHook) => (error: any) => {\n    throw error;\n  }\n\n  private isSuperseded = () =>\n    this.type.hookPhase === TransitionHookPhase.RUN && !this.options.transition.isActive();\n\n  logError(err): any {\n    this.transition.router.stateService.defaultErrorHandler()(err);\n  }\n\n  invokeHook(): Promise<HookResult> | void {\n    let hook = this.registeredHook;\n    if (hook._deregistered) return;\n\n    let notCurrent = this.getNotCurrentRejection();\n    if (notCurrent) return notCurrent;\n\n    let options = this.options;\n    trace.traceHookInvocation(this, this.transition, options);\n\n    const invokeCallback = () =>\n        hook.callback.call(options.bind, this.transition, this.stateContext);\n\n    const normalizeErr = err =>\n        Rejection.normalize(err).toPromise();\n\n    const handleError = err =>\n        hook.eventType.getErrorHandler(this)(err);\n\n    const handleResult = result =>\n        hook.eventType.getResultHandler(this)(result);\n\n    try {\n      let result = invokeCallback();\n\n      if (!this.type.synchronous && isPromise(result)) {\n        return result.catch(normalizeErr)\n            .then(handleResult, handleError);\n      } else {\n        return handleResult(result);\n      }\n    } catch (err) {\n      // If callback throws (synchronously)\n      return handleError(Rejection.normalize(err));\n    }\n  }\n\n  /**\n   * This method handles the return value of a Transition Hook.\n   *\n   * A hook can return false (cancel), a TargetState (redirect),\n   * or a promise (which may later resolve to false or a redirect)\n   *\n   * This also handles \"transition superseded\" -- when a new transition\n   * was started while the hook was still running\n   */\n  handleHookResult(result: HookResult): Promise<HookResult> {\n    let notCurrent = this.getNotCurrentRejection();\n    if (notCurrent) return notCurrent;\n\n    // Hook returned a promise\n    if (isPromise(result)) {\n      // Wait for the promise, then reprocess with the resulting value\n      return result.then(val => this.handleHookResult(val));\n    }\n\n    trace.traceHookResult(result, this.transition, this.options);\n\n    // Hook returned false\n    if (result === false) {\n      // Abort this Transition\n      return Rejection.aborted(\"Hook aborted transition\").toPromise();\n    }\n\n    const isTargetState = is(TargetState);\n    // hook returned a TargetState\n    if (isTargetState(result)) {\n      // Halt the current Transition and redirect (a new Transition) to the TargetState.\n      return Rejection.redirected(result).toPromise();\n    }\n  }\n\n\n  /**\n   * Return a Rejection promise if the transition is no longer current due\n   * to a stopped router (disposed), or a new transition has started and superseded this one.\n   */\n  private getNotCurrentRejection() {\n    let router = this.transition.router;\n\n    // The router is stopped\n    if (router._disposed) {\n      return Rejection.aborted(`UIRouter instance #${router.$id} has been stopped (disposed)`).toPromise();\n    }\n\n    if (this.transition._aborted) {\n      return Rejection.aborted().toPromise();\n    }\n\n    // This transition is no longer current.\n    // Another transition started while this hook was still running.\n    if (this.isSuperseded()) {\n      // Abort this transition\n      return Rejection.superseded(this.options.current()).toPromise();\n    }\n  }\n\n  toString() {\n    let { options, registeredHook } = this;\n    let event = parse(\"traceData.hookType\")(options) || \"internal\",\n        context = parse(\"traceData.context.state.name\")(options) || parse(\"traceData.context\")(options) || \"unknown\",\n        name = fnToString(registeredHook.callback);\n    return `${event} context: ${context}, ${maxLength(200, name)}`;\n  }\n\n  /**\n   * Chains together an array of TransitionHooks.\n   *\n   * Given a list of [[TransitionHook]] objects, chains them together.\n   * Each hook is invoked after the previous one completes.\n   *\n   * #### Example:\n   * ```js\n   * var hooks: TransitionHook[] = getHooks();\n   * let promise: Promise<any> = TransitionHook.chain(hooks);\n   *\n   * promise.then(handleSuccess, handleError);\n   * ```\n   *\n   * @param hooks the list of hooks to chain together\n   * @param waitFor if provided, the chain is `.then()`'ed off this promise\n   * @returns a `Promise` for sequentially invoking the hooks (in order)\n   */\n  static chain(hooks: TransitionHook[], waitFor?: Promise<any>): Promise<any> {\n    // Chain the next hook off the previous\n    const createHookChainR = (prev: Promise<any>, nextHook: TransitionHook) =>\n        prev.then(() => nextHook.invokeHook());\n    return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n  }\n\n\n  /**\n   * Invokes all the provided TransitionHooks, in order.\n   * Each hook's return value is checked.\n   * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n   * If no hook returns a promise, then all hooks are processed synchronously.\n   *\n   * @param hooks the list of TransitionHooks to invoke\n   * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n   *\n   * @returns a promise for the async result, or the result of the callback\n   */\n  static invokeHooks<T>(hooks: TransitionHook[], doneCallback: (result?: HookResult) => T): Promise<any> | T {\n    for (let idx = 0; idx < hooks.length; idx++) {\n      let hookResult = hooks[idx].invokeHook();\n\n      if (isPromise(hookResult)) {\n        let remainingHooks = hooks.slice(idx + 1);\n\n        return TransitionHook.chain(remainingHooks, hookResult)\n            .then(doneCallback);\n      }\n    }\n\n    return doneCallback();\n  }\n\n  /**\n   * Run all TransitionHooks, ignoring their return value.\n   */\n  static runAllHooks(hooks: TransitionHook[]): void {\n    hooks.forEach(hook => hook.invokeHook());\n  }\n\n}","/** @module path */ /** for typedoc */\nimport {extend, applyPairs, find, allTrueR, pairs, arrayTuples} from \"../common/common\";\nimport {propEq} from \"../common/hof\";\nimport {StateObject} from \"../state/stateObject\";\nimport {RawParams} from \"../params/interface\";\nimport {Param} from \"../params/param\";\nimport {Resolvable} from \"../resolve/resolvable\";\nimport {ViewConfig} from \"../view/interface\";\n\n/**\n * @internalapi\n *\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nexport class PathNode {\n  /** The state being entered, exited, or retained */\n  public state: StateObject;\n  /** The parameters declared on the state */\n  public paramSchema: Param[];\n  /** The parameter values that belong to the state */\n  public paramValues: { [key: string]: any };\n  /** The individual (stateful) resolvable objects that belong to the state */\n  public resolvables: Resolvable[];\n  /** The state's declared view configuration objects */\n  public views: ViewConfig[];\n\n  /** Creates a copy of a PathNode */\n  constructor(node: PathNode);\n  /** Creates a new (empty) PathNode for a State */\n  constructor(state: StateObject);\n  constructor(stateOrNode: any) {\n    if (stateOrNode instanceof PathNode) {\n      let node: PathNode = stateOrNode;\n      this.state = node.state;\n      this.paramSchema = node.paramSchema.slice();\n      this.paramValues = extend({}, node.paramValues);\n      this.resolvables = node.resolvables.slice();\n      this.views = node.views && node.views.slice();\n    } else {\n      let state: StateObject = stateOrNode;\n      this.state = state;\n      this.paramSchema = state.parameters({ inherit: false });\n      this.paramValues = {};\n      this.resolvables = state.resolvables.map(res => res.clone());\n    }\n  }\n\n  /** Sets [[paramValues]] for the node, from the values of an object hash */\n  applyRawParams(params: RawParams): PathNode {\n    const getParamVal = (paramDef: Param) => [ paramDef.id, paramDef.value(params[paramDef.id]) ];\n    this.paramValues = this.paramSchema.reduce((memo, pDef) => applyPairs(memo, getParamVal(pDef)), {});\n    return this;\n  }\n\n  /** Gets a specific [[Param]] metadata that belongs to the node */\n  parameter(name: string): Param {\n    return find(this.paramSchema, propEq(\"id\", name));\n  }\n\n  /**\n   * @returns true if the state and parameter values for another PathNode are\n   * equal to the state and param values for this PathNode\n   */\n  equals(node: PathNode, paramsFn?: GetParamsFn): boolean {\n    const diff = this.diff(node, paramsFn);\n    return diff && diff.length === 0;\n  }\n\n  /**\n   * Finds Params with different parameter values on another PathNode.\n   *\n   * Given another node (of the same state), finds the parameter values which differ.\n   * Returns the [[Param]] (schema objects) whose parameter values differ.\n   *\n   * Given another node for a different state, returns `false`\n   *\n   * @param node The node to compare to\n   * @param paramsFn A function that returns which parameters should be compared.\n   * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n   */\n  diff(node: PathNode, paramsFn?: GetParamsFn): Param[] | false {\n    if (this.state !== node.state) return false;\n\n    const params: Param[] = paramsFn ? paramsFn(this) : this.paramSchema;\n    return Param.changed(params, this.paramValues, node.paramValues);\n  }\n\n  /** Returns a clone of the PathNode */\n  static clone(node: PathNode) {\n    return new PathNode(node);\n  }\n}\n\n/** @hidden */\nexport type GetParamsFn = (pathNode: PathNode) => Param[];","/** @module path */ /** for typedoc */\n\nimport {\n  extend, find, pick, omit, tail, mergeR, values, unnestR, Predicate, inArray, arrayTuples,\n} from \"../common/common\";\nimport {prop, propEq, not} from \"../common/hof\";\n\nimport {RawParams} from \"../params/interface\";\nimport {TreeChanges} from \"../transition/interface\";\nimport {ViewConfig} from \"../view/interface\";\nimport {_ViewDeclaration} from \"../state/interface\";\n\nimport {StateObject} from \"../state/stateObject\";\nimport {TargetState} from \"../state/targetState\";\nimport {GetParamsFn, PathNode} from \"./pathNode\";\nimport {ViewService} from \"../view/view\";\nimport { Param } from '../params/param';\n\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nexport class PathUtils {\n\n  constructor() { }\n\n  /** Given a PathNode[], create an TargetState */\n  static makeTargetState(path: PathNode[]): TargetState {\n    let state = tail(path).state;\n    return new TargetState(state, state, path.map(prop(\"paramValues\")).reduce(mergeR, {}));\n  }\n\n  static buildPath(targetState: TargetState) {\n    let toParams = targetState.params();\n    return targetState.$state().path.map(state => new PathNode(state).applyRawParams(toParams));\n  }\n\n  /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n  static buildToPath(fromPath: PathNode[], targetState: TargetState): PathNode[] {\n    let toPath: PathNode[] = PathUtils.buildPath(targetState);\n    if (targetState.options().inherit) {\n      return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n    }\n    return toPath;\n  }\n\n  /**\n   * Creates ViewConfig objects and adds to nodes.\n   *\n   * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n   */\n  static applyViewConfigs($view: ViewService, path: PathNode[], states: StateObject[]) {\n    // Only apply the viewConfigs to the nodes for the given states\n    path.filter(node => inArray(states, node.state)).forEach(node => {\n      let viewDecls: _ViewDeclaration[] = values(node.state.views || {});\n      let subPath = PathUtils.subPath(path, n => n === node);\n      let viewConfigs: ViewConfig[][] = viewDecls.map(view => $view.createViewConfig(subPath, view));\n      node.views = viewConfigs.reduce(unnestR, []);\n    });\n  }\n\n  /**\n   * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n   *\n   * For a parameter in a node to be inherited from the from path:\n   * - The toPath's node must have a matching node in the fromPath (by state).\n   * - The parameter name must not be found in the toKeys parameter array.\n   *\n   * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n   * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n   * it is not inherited from the fromPath.\n   */\n  static inheritParams(fromPath: PathNode[], toPath: PathNode[], toKeys: string[] = []): PathNode[] {\n    function nodeParamVals(path: PathNode[], state: StateObject): RawParams {\n      let node: PathNode = find(path, propEq('state', state));\n      return extend({}, node && node.paramValues);\n    }\n\n    let noInherit = fromPath.map(node => node.paramSchema)\n        .reduce(unnestR, [])\n        .filter(param => !param.inherit)\n        .map(prop('id'));\n\n    /**\n     * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n     * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n     */\n    function makeInheritedParamsNode(toNode: PathNode): PathNode {\n      // All param values for the node (may include default key/vals, when key was not found in toParams)\n      let toParamVals = extend({}, toNode && toNode.paramValues);\n      // limited to only those keys found in toParams\n      let incomingParamVals = pick(toParamVals, toKeys);\n      toParamVals = omit(toParamVals, toKeys);\n      let fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n      // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n      let ownParamVals: RawParams = extend(toParamVals, fromParamVals, incomingParamVals);\n      return new PathNode(toNode.state).applyRawParams(ownParamVals);\n    }\n\n    // The param keys specified by the incoming toParams\n    return <PathNode[]> toPath.map(makeInheritedParamsNode);\n  }\n\n  static nonDynamicParams = (node: PathNode): Param[] =>\n      node.state.parameters({ inherit: false })\n          .filter(param => !param.dynamic);\n\n  /**\n   * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n   */\n  static treeChanges(fromPath: PathNode[], toPath: PathNode[], reloadState: StateObject): TreeChanges {\n    let keep = 0, max = Math.min(fromPath.length, toPath.length);\n\n    const nodesMatch = (node1: PathNode, node2: PathNode) =>\n        node1.equals(node2, PathUtils.nonDynamicParams);\n\n    while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n      keep++;\n    }\n\n    /** Given a retained node, return a new node which uses the to node's param values */\n    function applyToParams(retainedNode: PathNode, idx: number): PathNode {\n      let cloned = PathNode.clone(retainedNode);\n      cloned.paramValues = toPath[idx].paramValues;\n      return cloned;\n    }\n\n    let from: PathNode[], retained: PathNode[], exiting: PathNode[], entering: PathNode[], to: PathNode[];\n\n    from                  = fromPath;\n    retained              = from.slice(0, keep);\n    exiting               = from.slice(keep);\n\n    // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n    let retainedWithToParams  = retained.map(applyToParams);\n    entering              = toPath.slice(keep);\n    to                    = (retainedWithToParams).concat(entering);\n\n    return { from, to, retained, exiting, entering };\n  }\n\n  /**\n   * Returns a new path which is: the subpath of the first path which matches the second path.\n   *\n   * The new path starts from root and contains any nodes that match the nodes in the second path.\n   * It stops before the first non-matching node.\n   *\n   * Nodes are compared using their state property and their parameter values.\n   * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n   *\n   * @param pathA the first path\n   * @param pathB the second path\n   * @param paramsFn a function which returns the parameters to consider when comparing\n   *\n   * @returns an array of PathNodes from the first path which match the nodes in the second path\n   */\n  static matching(pathA: PathNode[], pathB: PathNode[], paramsFn?: GetParamsFn): PathNode[] {\n    let done = false;\n    let tuples: PathNode[][] = arrayTuples(pathA, pathB);\n    return tuples.reduce((matching, [nodeA, nodeB]) => {\n      done = done || !nodeA.equals(nodeB, paramsFn);\n      return done ? matching : matching.concat(nodeA);\n    }, []);\n  }\n\n  /**\n   * Returns true if two paths are identical.\n   *\n   * @param pathA\n   * @param pathB\n   * @param paramsFn a function which returns the parameters to consider when comparing\n   * @returns true if the the states and parameter values for both paths are identical\n   */\n  static equals(pathA: PathNode[], pathB: PathNode[], paramsFn?: GetParamsFn): boolean {\n    return pathA.length === pathB.length &&\n        PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n  }\n\n  /**\n   * Return a subpath of a path, which stops at the first matching node\n   *\n   * Given an array of nodes, returns a subset of the array starting from the first node,\n   * stopping when the first node matches the predicate.\n   *\n   * @param path a path of [[PathNode]]s\n   * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n   * @returns a subpath up to the matching node, or undefined if no match is found\n   */\n  static subPath(path: PathNode[], predicate: Predicate<PathNode>): PathNode[] {\n    let node = find(path, predicate);\n    let elementIdx = path.indexOf(node);\n    return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n  }\n\n  /** Gets the raw parameter values from a path */\n  static paramValues = (path: PathNode[]) =>\n      path.reduce((acc, node) => extend(acc, node.paramValues), {});\n}\n","/**\n * @coreapi\n * @module resolve\n */ /** for typedoc */\nimport {extend, equals, inArray, identity} from \"../common/common\";\nimport {services} from \"../common/coreservices\";\nimport {trace} from \"../common/trace\";\nimport {ResolvePolicy, ResolvableLiteral, resolvePolicies} from \"./interface\";\n\nimport {ResolveContext} from \"./resolveContext\";\nimport {stringify} from \"../common/strings\";\nimport {isFunction, isObject} from \"../common/predicates\";\nimport {Transition} from \"../transition/transition\";\nimport {StateObject} from \"../state/stateObject\";\nimport {PathNode} from \"../path/pathNode\";\nimport { isNullOrUndefined } from '../common';\n\n\n// TODO: explicitly make this user configurable\nexport let defaultResolvePolicy: ResolvePolicy = {\n  when: \"LAZY\",\n  async: \"WAIT\"\n};\n\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nexport class Resolvable implements ResolvableLiteral {\n  token: any;\n  policy: ResolvePolicy;\n  resolveFn: Function;\n  deps: any[];\n\n  data: any;\n  resolved: boolean = false;\n  promise: Promise<any> = undefined;\n\n  /** This constructor creates a Resolvable copy */\n  constructor(resolvable: Resolvable)\n\n  /** This constructor creates a new Resolvable from the plain old [[ResolvableLiteral]] javascript object */\n  constructor(resolvable: ResolvableLiteral)\n\n  /**\n   * This constructor creates a new `Resolvable`\n   *\n   * #### Example:\n   * ```js\n   * var resolvable1 = new Resolvable('mytoken', http => http.get('foo.json').toPromise(), [Http]);\n   *\n   * var resolvable2 = new Resolvable(UserService, dep => new UserService(dep.data), [SomeDependency]);\n   *\n   * var resolvable1Clone = new Resolvable(resolvable1);\n   * ```\n   *\n   * @param token The new resolvable's injection token, such as `\"userList\"` (a string) or `UserService` (a class).\n   *              When this token is used during injection, the resolved value will be injected.\n   * @param resolveFn The function that returns the resolved value, or a promise for the resolved value\n   * @param deps An array of dependencies, which will be injected into the `resolveFn`\n   * @param policy the [[ResolvePolicy]] defines when and how the Resolvable is processed\n   * @param data Pre-resolved data. If the resolve value is already known, it may be provided here.\n   */\n  constructor(token: any, resolveFn: Function, deps?: any[], policy?: ResolvePolicy, data?: any)\n  constructor(arg1: any, resolveFn?: Function, deps?: any[], policy?: ResolvePolicy, data?: any) {\n    if (arg1 instanceof Resolvable) {\n      extend(this, arg1);\n    } else if (isFunction(resolveFn)) {\n      if (isNullOrUndefined(arg1)) throw new Error(\"new Resolvable(): token argument is required\");\n      if (!isFunction(resolveFn)) throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n\n      this.token = arg1;\n      this.policy = policy;\n      this.resolveFn = resolveFn;\n      this.deps = deps || [];\n\n      this.data = data;\n      this.resolved = data !== undefined;\n      this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n    } else if (isObject(arg1) && arg1.token && isFunction(arg1.resolveFn)) {\n      let literal = <ResolvableLiteral> arg1;\n      return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n    }\n  }\n\n  getPolicy(state: StateObject): ResolvePolicy {\n    let thisPolicy = this.policy || {};\n    let statePolicy = state && state.resolvePolicy || {};\n    return {\n      when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n      async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n    };\n  }\n\n  /**\n   * Asynchronously resolve this Resolvable's data\n   *\n   * Given a ResolveContext that this Resolvable is found in:\n   * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n   * and update the Resolvable's state\n   */\n  resolve(resolveContext: ResolveContext, trans?: Transition) {\n    let $q = services.$q;\n\n    // Gets all dependencies from ResolveContext and wait for them to be resolved\n    const getResolvableDependencies = () =>\n        $q.all(resolveContext.getDependencies(this).map(resolvable =>\n            resolvable.get(resolveContext, trans))) as Promise<any[]>;\n\n    // Invokes the resolve function passing the resolved dependencies as arguments\n    const invokeResolveFn = (resolvedDeps: any[]) =>\n        this.resolveFn.apply(null, resolvedDeps);\n\n    /**\n     * For RXWAIT policy:\n     *\n     * Given an observable returned from a resolve function:\n     * - enables .cache() mode (this allows multicast subscribers)\n     * - then calls toPromise() (this triggers subscribe() and thus fetches)\n     * - Waits for the promise, then return the cached observable (not the first emitted value).\n     */\n    const waitForRx = (observable$: any) => {\n      let cached = observable$.cache(1);\n      return cached.take(1).toPromise().then(() => cached);\n    };\n\n    // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n    let node: PathNode = resolveContext.findNode(this);\n    let state: StateObject = node && node.state;\n    let maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : identity;\n\n    // After the final value has been resolved, update the state of the Resolvable\n    const applyResolvedValue = (resolvedValue: any) => {\n      this.data = resolvedValue;\n      this.resolved = true;\n      trace.traceResolvableResolved(this, trans);\n      return this.data;\n    };\n\n    // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n    return this.promise = $q.when()\n        .then(getResolvableDependencies)\n        .then(invokeResolveFn)\n        .then(maybeWaitForRx)\n        .then(applyResolvedValue);\n  }\n\n  /**\n   * Gets a promise for this Resolvable's data.\n   *\n   * Fetches the data and returns a promise.\n   * Returns the existing promise if it has already been fetched once.\n   */\n  get(resolveContext: ResolveContext, trans?: Transition): Promise<any> {\n    return this.promise || this.resolve(resolveContext, trans);\n  }\n\n  toString() {\n    return `Resolvable(token: ${stringify(this.token)}, requires: [${this.deps.map(stringify)}])`;\n  }\n\n  clone(): Resolvable {\n    return new Resolvable(this);\n  }\n  \n  static fromData = (token: any, data: any) =>  \n      new Resolvable(token, () => data, null, null, data);\n}\n","/**\n * # The Resolve subsystem\n *\n * This subsystem is an asynchronous, hierarchical Dependency Injection system.\n *\n * Typically, resolve is configured on a state using a [[StateDeclaration.resolve]] declaration.\n *\n * @coreapi\n * @module resolve\n */ /** for typedoc */\nimport {Resolvable} from \"./resolvable\";\n\n/**\n * An interface which is similar to an Angular 2 `Provider`\n */\nexport interface ProviderLike {\n  provide: any,\n  useClass?: any,\n  useFactory?: Function,\n  useValue?: any,\n  useExisting?: any,\n  deps?: any[]\n}\n\n/**\n * A plain object used to describe a [[Resolvable]]\n *\n * These objects may be used in the [[StateDeclaration.resolve]] array to declare\n * async data that the state or substates require.\n *\n * #### Example:\n * ```js\n *\n * var state = {\n *   name: 'main',\n *   resolve: [\n *     { token: 'myData', deps: [MyDataApi], resolveFn: (myDataApi) => myDataApi.getData() },\n *   ],\n * }\n * ```\n */\nexport interface ResolvableLiteral {\n  /**\n   * A Dependency Injection token\n   *\n   * This Resolvable's DI token.\n   * The Resolvable will be injectable elsewhere using the token.\n   */\n  token: any;\n\n  /**\n   * A function which fetches the Resolvable's data\n   *\n   * A function which returns one of:\n   *\n   * - The resolved value (synchronously)\n   * - A promise for the resolved value\n   * - An Observable of the resolved value(s)\n   *\n   * This function will be provided the dependencies listed in [[deps]] as its arguments.\n   * The resolve system will asynchronously fetch the dependencies before invoking this function.\n   */\n  resolveFn: Function;\n\n  /**\n   * Defines the Resolve Policy\n   *\n   * A policy that defines when to invoke the resolve,\n   * and whether to wait for async and unwrap the data\n   */\n  policy?: ResolvePolicy;\n\n  /**\n   * The Dependency Injection tokens\n   *\n   * This is an array of Dependency Injection tokens for the dependencies of the [[resolveFn]].\n   *\n   * The DI tokens are references to other `Resolvables`, or to other\n   * services from the native DI system.\n   */\n  deps?: any[];\n\n  /** Pre-resolved data. */\n  data?: any\n}\n\n/**\n * Defines how a resolve is processed during a transition\n *\n * This object is the [[StateDeclaration.resolvePolicy]] property.\n *\n * #### Example:\n * ```js\n * // Fetched when the resolve's state is being entered.\n * // Wait for the promise to resolve.\n * var policy1 = { when: \"LAZY\", async: \"WAIT\" }\n *\n * // Fetched when the Transition is starting.\n * // Do not wait for the returned promise to resolve.\n * // Inject the raw promise/value\n * var policy2 = { when: \"EAGER\", async: \"NOWAIT\" }\n * ```\n *\n * The policy for a given Resolvable is merged from three sources (highest priority first):\n *\n * - 1) Individual resolve definition\n * - 2) State definition\n * - 3) Global default\n *\n * #### Example:\n * ```js\n * // Wait for an Observable to emit one item.\n * // Since `wait` is not specified, it uses the `wait`\n * // policy defined on the state, or the global default\n * // if no `wait` policy is defined on the state\n * var myResolvablePolicy = { async: \"RXWAIT\" }\n * ```\n */\nexport interface ResolvePolicy {\n  /**\n   * Defines when a Resolvable is resolved (fetched) during a transition\n   *\n   * - `LAZY` (default)\n   *   - Resolved as the resolve's state is being entered\n   * - `EAGER`\n   *   - Resolved as the transition is starting\n   *\n   * #### Example:\n   * Resolves for `main` and `main.home` are fetched when each state is entered.\n   * All of `main` resolves are processed before fetching `main.home` resolves.\n   * ```js\n   * var state = {\n   *   name: 'main',\n   *   resolve: mainResolves, // defined elsewhere\n   *   resolvePolicy: { when: 'LAZY' }, // default\n   * }\n   *\n   * var state = {\n   *   name: 'main.home',\n   *   resolve: homeResolves, // defined elsewhere\n   *   resolvePolicy: { when: 'LAZY' }, // default\n   * }\n   * ```\n   *\n   * #### Example:\n   * Resolves for `main` and `main.home` are fetched at the same time when the transition starts.\n   * This happens earlier in the lifecycle than when states are entered.\n   * All of the `main` and `main.home` resolves are fetched as soon as possible.\n   * ```js\n   * var mainState = {\n   *   name: 'main',\n   *   resolve: mainResolves, // defined elsewhere\n   *   resolvePolicy: { when: 'EAGER' },\n   * }\n   *\n   * var homeState = {\n   *   name: 'main.home',\n   *   resolve: homeResolves, // defined elsewhere\n   *   resolvePolicy: { when: 'EAGER' },\n   * }\n   * ```\n   */\n  when?: PolicyWhen;\n\n  /**\n   * Determines the unwrapping behavior of asynchronous resolve values.\n   *\n   * - `WAIT` (default)\n   *   - If a promise is returned from the resolveFn, wait for the promise before proceeding\n   *   - The unwrapped value from the promise\n   * - `NOWAIT`\n   *   - If a promise is returned from the resolve, do not wait for the promise.\n   *   - Any other value returned is wrapped in a promise.\n   *   - The promise will not be unwrapped.\n   *   - The promise itself will be provided when the resolve is injected or bound elsewhere.\n   * - `RXWAIT`\n   *   - When an Observable is returned from the resolveFn, wait until the Observable emits at least one item.\n   *   - The Observable item will not be unwrapped.\n   *   - The Observable stream itself will be provided when the resolve is injected or bound elsewhere.\n   *\n   * #### Example:\n   * The `Transition` will not wait for the resolve promise(s) from `main` to settle before continuing.\n   * Resolves for `main` will be provided to components wrapped in a `Promise`.\n   *\n   * The `Transition` will wait for the `main.home` resolve promises.\n   * Resolved values will be unwrapped before being provided to components.\n   * ```js\n   * var mainState = {\n   *   name: 'main',\n   *   resolve: mainResolves, // defined elsewhere\n   *   resolvePolicy: { async: 'NOWAIT' },\n   * }\n   * var homeState = {\n   *   name: 'main.home',\n   *   resolve: homeResolves, // defined elsewhere\n   *   resolvePolicy: { async: 'WAIT' }, // default\n   * }\n   * ```\n   */\n  async?: PolicyAsync;\n}\n\nexport type PolicyWhen = \"LAZY\" | \"EAGER\" ;\nexport type PolicyAsync = \"WAIT\" | \"NOWAIT\" | \"RXWAIT\" ;\n\n/** @internalapi */\nexport let resolvePolicies = {\n  when: {\n    LAZY: \"LAZY\",\n    EAGER: \"EAGER\"\n  },\n  async: {\n    WAIT: \"WAIT\",\n    NOWAIT: \"NOWAIT\",\n    RXWAIT: \"RXWAIT\"\n  }\n};\n","/** @module resolve */\n/** for typedoc */\nimport { find, tail, uniqR, unnestR, inArray } from \"../common/common\";\nimport { propEq, not } from \"../common/hof\";\nimport { trace } from \"../common/trace\";\nimport { services, $InjectorLike } from \"../common/coreservices\";\nimport { resolvePolicies, PolicyWhen, ResolvePolicy } from \"./interface\";\nimport { PathNode } from \"../path/pathNode\";\nimport { Resolvable } from \"./resolvable\";\nimport { StateObject } from \"../state/stateObject\";\nimport { PathUtils } from \"../path/pathFactory\";\nimport { stringify } from \"../common/strings\";\nimport { Transition } from \"../transition/transition\";\nimport { UIInjector } from \"../interface\";\n\nconst when = resolvePolicies.when;\nconst ALL_WHENS = [when.EAGER, when.LAZY];\nconst EAGER_WHENS = [when.EAGER];\n\nexport const NATIVE_INJECTOR_TOKEN: string = \"Native Injector\";\n\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nexport class ResolveContext {\n  _injector: UIInjector;\n\n  constructor(private _path: PathNode[]) { }\n\n  /** Gets all the tokens found in the resolve context, de-duplicated */\n  getTokens(): any[] {\n    return this._path.reduce((acc, node) => acc.concat(node.resolvables.map(r => r.token)), []).reduce(uniqR, []);\n  }\n\n  /**\n   * Gets the Resolvable that matches the token\n   *\n   * Gets the last Resolvable that matches the token in this context, or undefined.\n   * Throws an error if it doesn't exist in the ResolveContext\n   */\n  getResolvable(token: any): Resolvable {\n    let matching = this._path.map(node => node.resolvables)\n        .reduce(unnestR, [])\n        .filter((r: Resolvable) => r.token === token);\n    return tail(matching);\n  }\n\n  /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n  getPolicy(resolvable: Resolvable): ResolvePolicy {\n    let node = this.findNode(resolvable);\n    return resolvable.getPolicy(node.state);\n  }\n\n  /**\n   * Returns a ResolveContext that includes a portion of this one\n   *\n   * Given a state, this method creates a new ResolveContext from this one.\n   * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n   *\n   * #### Why\n   *\n   * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n   * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n   * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n   * This method is used to create a narrower context when injecting ancestor nodes.\n   *\n   * @example\n   * `let ABCD = new ResolveContext([A, B, C, D]);`\n   *\n   * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n   * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n   * However, `B` should only be able to access resolvables from `A`, `B`.\n   *\n   * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n   * `let AB = ABCD.subcontext(a)`\n   */\n  subContext(state: StateObject): ResolveContext {\n    return new ResolveContext(PathUtils.subPath(this._path, node => node.state === state));\n  }\n\n  /**\n   * Adds Resolvables to the node that matches the state\n   *\n   * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n   * The resolvable is added to the node matching the `state` parameter.\n   *\n   * These new resolvables are not automatically fetched.\n   * The calling code should either fetch them, fetch something that depends on them,\n   * or rely on [[resolvePath]] being called when some state is being entered.\n   *\n   * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n   *\n   * @param newResolvables the new Resolvables\n   * @param state Used to find the node to put the resolvable on\n   */\n  addResolvables(newResolvables: Resolvable[], state: StateObject) {\n    let node = <PathNode> find(this._path, propEq('state', state));\n    let keys = newResolvables.map(r => r.token);\n    node.resolvables = node.resolvables.filter(r => keys.indexOf(r.token) === -1).concat(newResolvables);\n  }\n  \n  /**\n   * Returns a promise for an array of resolved path Element promises\n   *\n   * @param when\n   * @param trans\n   * @returns {Promise<any>|any}\n   */\n  resolvePath(when: PolicyWhen = \"LAZY\", trans?: Transition): Promise<{ token: any, value: any }[]> {\n    // This option determines which 'when' policy Resolvables we are about to fetch.\n    let whenOption: string = inArray(ALL_WHENS, when) ? when : \"LAZY\";\n    // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n    // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n    let matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n    \n    // get the subpath to the state argument, if provided\n    trace.traceResolvePath(this._path, when, trans);\n\n    const matchesPolicy = (acceptedVals: string[], whenOrAsync: \"when\"|\"async\") =>\n        (resolvable: Resolvable) =>\n            inArray(acceptedVals, this.getPolicy(resolvable)[whenOrAsync]);\n\n    // Trigger all the (matching) Resolvables in the path\n    // Reduce all the \"WAIT\" Resolvables into an array\n    let promises: Promise<any>[] = this._path.reduce((acc, node) => {\n      let nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n      let nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n      let wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n\n      // For the matching Resolvables, start their async fetch process.\n      let subContext = this.subContext(node.state);\n      let getResult = (r: Resolvable) => r.get(subContext, trans)\n          // Return a tuple that includes the Resolvable's token\n          .then(value => ({ token: r.token, value: value }));\n      nowait.forEach(getResult);\n      return acc.concat(wait.map(getResult));\n    }, []);\n\n    // Wait for all the \"WAIT\" resolvables\n    return services.$q.all(promises);\n  }\n\n  injector(): UIInjector {\n    return this._injector || (this._injector = new UIInjectorImpl(this));\n  }\n\n  findNode(resolvable: Resolvable): PathNode {\n    return find(this._path, (node: PathNode) => inArray(node.resolvables, resolvable));\n  }\n\n  /**\n   * Gets the async dependencies of a Resolvable\n   *\n   * Given a Resolvable, returns its dependencies as a Resolvable[]\n   */\n  getDependencies(resolvable: Resolvable): Resolvable[] {\n    let node = this.findNode(resolvable);\n    // Find which other resolvables are \"visible\" to the `resolvable` argument\n    // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n    let subPath: PathNode[] = PathUtils.subPath(this._path, x => x === node) || this._path;\n    let availableResolvables: Resolvable[] = subPath\n        .reduce((acc, node) => acc.concat(node.resolvables), []) //all of subpath's resolvables\n        .filter(res => res !== resolvable); // filter out the `resolvable` argument\n\n    const getDependency = (token: any) => {\n      let matching = availableResolvables.filter(r => r.token === token);\n      if (matching.length) return tail(matching);\n\n      let fromInjector = this.injector().getNative(token);\n      if (!fromInjector) {\n        throw new Error(\"Could not find Dependency Injection token: \" + stringify(token));\n      }\n\n      return new Resolvable(token, () => fromInjector, [], fromInjector);\n    };\n\n    return resolvable.deps.map(getDependency);\n  }\n}\n\nclass UIInjectorImpl implements UIInjector {\n  native: $InjectorLike;\n\n  constructor(public context: ResolveContext) {\n    this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n  }\n\n  get(token: any) {\n    let resolvable = this.context.getResolvable(token);\n    if (resolvable) {\n      if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n        return resolvable.get(this.context);\n      }\n\n      if (!resolvable.resolved) {\n        throw new Error(\"Resolvable async .get() not complete:\" + stringify(resolvable.token))\n      }\n      return resolvable.data;\n    }\n    return this.native && this.native.get(token);\n  }\n\n  getAsync(token: any) {\n    let resolvable = this.context.getResolvable(token);\n    if (resolvable) return resolvable.get(this.context);\n    return services.$q.when(this.native.get(token));\n  }\n\n  getNative(token: any) {\n    return this.native && this.native.get(token);\n  }\n}","/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport {\n  map, find, extend, mergeR, tail, omit, toJson, arrayTuples, unnestR, identity, anyTrueR,\n} from '../common/common';\nimport {isObject, isUndefined} from '../common/predicates';\nimport { prop, propEq, val, not, is } from '../common/hof';\nimport { StateDeclaration, StateOrName } from '../state/interface';\nimport {\n  TransitionOptions, TreeChanges, IHookRegistry, TransitionHookPhase, RegisteredHooks, HookRegOptions,\n  HookMatchCriteria, TransitionStateHookFn, TransitionHookFn,\n} from './interface'; // has or is using\nimport { TransitionHook } from './transitionHook';\nimport { matchState, makeEvent, RegisteredHook } from './hookRegistry';\nimport { HookBuilder } from './hookBuilder';\nimport { PathNode } from '../path/pathNode';\nimport { PathUtils } from '../path/pathFactory';\nimport { StateObject } from '../state/stateObject';\nimport { TargetState } from '../state/targetState';\nimport { Param } from '../params/param';\nimport { Resolvable } from '../resolve/resolvable';\nimport { ViewConfig } from '../view/interface';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { UIRouter } from '../router';\nimport { UIInjector } from '../interface';\nimport { RawParams } from '../params/interface';\nimport { ResolvableLiteral } from '../resolve/interface';\n\n/** @hidden */\nconst stateSelf: (_state: StateObject) => StateDeclaration = prop(\"self\");\n\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nexport class Transition implements IHookRegistry {\n\n  /** @hidden */\n  static diToken = Transition;\n\n  /**\n   * A unique identifier for the transition.\n   *\n   * This is an auto incrementing integer, starting from `0`.\n   */\n  $id: number;\n\n  /**\n   * A reference to the [[UIRouter]] instance\n   *\n   * This reference can be used to access the router services, such as the [[StateService]]\n   */\n  router: UIRouter;\n\n  /** @hidden */\n  private _deferred = services.$q.defer();\n  /**\n   * This promise is resolved or rejected based on the outcome of the Transition.\n   *\n   * When the transition is successful, the promise is resolved\n   * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n   */\n  promise: Promise<any> = this._deferred.promise;\n  /**\n   * A boolean which indicates if the transition was successful\n   *\n   * After a successful transition, this value is set to true.\n   * After an unsuccessful transition, this value is set to false.\n   *\n   * The value will be undefined if the transition is not complete\n   */\n  success: boolean;\n  /** @hidden */\n  _aborted: boolean;\n  /** @hidden */\n  private _error: any;\n\n  /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n  _registeredHooks: RegisteredHooks = { };\n\n  /** @hidden */\n  private _options: TransitionOptions;\n  /** @hidden */\n  private _treeChanges: TreeChanges;\n  /** @hidden */\n  private _targetState: TargetState;\n  /** @hidden */\n  private _hookBuilder = new HookBuilder(this);\n\n\n  /** @hidden */\n  onBefore(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return; }\n  /** @inheritdoc */\n  onStart(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return; }\n  /** @inheritdoc */\n  onExit(criteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function { return; }\n  /** @inheritdoc */\n  onRetain(criteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function { return; }\n  /** @inheritdoc */\n  onEnter(criteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function { return; }\n  /** @inheritdoc */\n  onFinish(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return; }\n  /** @inheritdoc */\n  onSuccess(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return; }\n  /** @inheritdoc */\n  onError(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return; }\n\n  /** @hidden\n   * Creates the transition-level hook registration functions\n   * (which can then be used to register hooks)\n   */\n  private createTransitionHookRegFns() {\n    this.router.transitionService._pluginapi._getEvents()\n        .filter(type => type.hookPhase !== TransitionHookPhase.CREATE)\n        .forEach(type => makeEvent(this, this.router.transitionService, type));\n  }\n\n  /** @internalapi */\n  getHooks(hookName: string): RegisteredHook[] {\n    return this._registeredHooks[hookName];\n  }\n\n  /**\n   * Creates a new Transition object.\n   *\n   * If the target state is not valid, an error is thrown.\n   *\n   * @internalapi\n   *\n   * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n   *        encapsulates the \"from state\".\n   * @param targetState The target state and parameters being transitioned to (also, the transition options)\n   * @param router The [[UIRouter]] instance\n   */\n  constructor(fromPath: PathNode[], targetState: TargetState, router: UIRouter) {\n    this.router = router;\n    this._targetState = targetState;\n\n    if (!targetState.valid()) {\n      throw new Error(targetState.error());\n    }\n\n    // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n    this._options = extend({ current: val(this) }, targetState.options());\n    this.$id = router.transitionService._transitionCount++;\n    let toPath = PathUtils.buildToPath(fromPath, targetState);\n    this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n    this.createTransitionHookRegFns();\n\n    let onCreateHooks = this._hookBuilder.buildHooksForPhase(TransitionHookPhase.CREATE);\n    TransitionHook.invokeHooks(onCreateHooks, () => null);\n\n    this.applyViewConfigs(router);\n  }\n\n  private applyViewConfigs(router: UIRouter) {\n    let enteringStates = this._treeChanges.entering.map(node => node.state);\n    PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n  }\n\n  /**\n   * @internalapi\n   *\n   * @returns the internal from [State] object\n   */\n  $from() {\n    return tail(this._treeChanges.from).state;\n  }\n\n  /**\n   * @internalapi\n   *\n   * @returns the internal to [State] object\n   */\n  $to() {\n    return tail(this._treeChanges.to).state;\n  }\n\n  /**\n   * Returns the \"from state\"\n   *\n   * Returns the state that the transition is coming *from*.\n   *\n   * @returns The state declaration object for the Transition's (\"from state\").\n   */\n  from(): StateDeclaration {\n    return this.$from().self;\n  }\n\n  /**\n   * Returns the \"to state\"\n   *\n   * Returns the state that the transition is going *to*.\n   *\n   * @returns The state declaration object for the Transition's target state (\"to state\").\n   */\n  to(): StateDeclaration {\n    return this.$to().self;\n  }\n\n  /**\n   * Gets the Target State\n   *\n   * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n   *\n   * @returns the [[TargetState]] of this Transition\n   */\n  targetState() {\n    return this._targetState;\n  }\n\n  /**\n   * Determines whether two transitions are equivalent.\n   * @deprecated\n   */\n  is(compare: (Transition|{to?: any, from?: any})): boolean {\n    if (compare instanceof Transition) {\n      // TODO: Also compare parameters\n      return this.is({ to: compare.$to().name, from: compare.$from().name });\n    }\n    return !(\n      (compare.to && !matchState(this.$to(), compare.to)) ||\n      (compare.from && !matchState(this.$from(), compare.from))\n    );\n  }\n\n  /**\n   * Gets transition parameter values\n   *\n   * Returns the parameter values for a transition as key/value pairs.\n   * This object is immutable.\n   *\n   * By default, returns the new parameter values (for the \"to state\").\n   * To return the previous parameter values,  supply `'from'` as the `pathname` argument.\n   *\n   * @param pathname the name of the treeChanges path to get parameter values for:\n   *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n   *\n   * @returns transition parameter values for the desired path.\n   */\n  params(pathname?: string): any;\n  params<T>(pathname?: string): T;\n  params(pathname: string = \"to\") {\n    return Object.freeze(this._treeChanges[pathname].map(prop(\"paramValues\")).reduce(mergeR, {}));\n  }\n\n\n  /**\n   * Creates a [[UIInjector]] Dependency Injector\n   *\n   * Returns a Dependency Injector for the Transition's target state (to state).\n   * The injector provides resolve values which the target state has access to.\n   *\n   * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n   *\n   * #### Example:\n   * ```js\n   * .onEnter({ entering: 'myState' }, trans => {\n   *   var myResolveValue = trans.injector().get('myResolve');\n   *   // Inject a global service from the global/native injector (if it exists)\n   *   var MyService = trans.injector().get('MyService');\n   * })\n   * ```\n   *\n   * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n   * You can use [[UIInjector.getAsync]] to get a promise for the data.\n   * #### Example:\n   * ```js\n   * .onBefore({}, trans => {\n   *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n   *     return myResolveValue !== 'ABORT';\n   *   });\n   * });\n   * ```\n   *\n   * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n   * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n   * #### Example:\n   * ```js\n   * .onEnter({ to: 'foo.bar' }, trans => {\n   *   // returns result of `foo` state's `data` resolve\n   *   // even though `foo.bar` also has a `data` resolve\n   *   var fooData = trans.injector('foo').get('data');\n   * });\n   * ```\n   *\n   * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n   * The resolve data from the `from` path will be returned.\n   * #### Example:\n   * ```js\n   * .onExit({ exiting: 'foo.bar' }, trans => {\n   *   // Gets the resolve value of `data` from the exiting state.\n   *   var fooData = trans.injector(null, 'foo.bar').get('data');\n   * });\n   * ```\n   *\n   *\n   * @param state Limits the resolves provided to only the resolves the provided state has access to.\n   * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n   *\n   * @returns a [[UIInjector]]\n   */\n  injector(state?: StateOrName, pathName = \"to\"): UIInjector {\n    let path: PathNode[] = this._treeChanges[pathName];\n    if (state) path = PathUtils.subPath(path, node => node.state === state || node.state.name === state);\n    return new ResolveContext(path).injector();\n  }\n\n  /**\n   * Gets all available resolve tokens (keys)\n   *\n   * This method can be used in conjunction with [[injector]] to inspect the resolve values\n   * available to the Transition.\n   *\n   * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n   * in the Transition's [[TreeChanges.to]] path.\n   *\n   * #### Example:\n   * This example logs all resolve values\n   * ```js\n   * let tokens = trans.getResolveTokens();\n   * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n   * ```\n   *\n   * #### Example:\n   * This example creates promises for each resolve value.\n   * This triggers fetches of resolves (if any have not yet been fetched).\n   * When all promises have all settled, it logs the resolve values.\n   * ```js\n   * let tokens = trans.getResolveTokens();\n   * let promise = tokens.map(token => trans.injector().getAsync(token));\n   * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n   * ```\n   *\n   * Note: Angular 1 users whould use `$q.all()`\n   *\n   * @param pathname resolve context's path name (e.g., `to` or `from`)\n   *\n   * @returns an array of resolve tokens (keys)\n   */\n  getResolveTokens(pathname: string = \"to\"): any[] {\n    return new ResolveContext(this._treeChanges[pathname]).getTokens();\n  }\n\n  /**\n   * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n   *\n   * #### Example:\n   * ```js\n   * transitionService.onBefore({}, transition => {\n   *   transition.addResolvable({\n   *     token: 'myResolve',\n   *     deps: ['MyService'],\n   *     resolveFn: myService => myService.getData()\n   *   });\n   * });\n   * ```\n   *\n   * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n   * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n   */\n  addResolvable(resolvable: Resolvable|ResolvableLiteral, state: StateOrName = \"\"): void {\n    resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n\n    let stateName: string = (typeof state === \"string\") ? state : state.name;\n    let topath = this._treeChanges.to;\n    let targetNode = find(topath, node => node.state.name === stateName);\n    let resolveContext: ResolveContext = new ResolveContext(topath);\n    resolveContext.addResolvables([resolvable as Resolvable], targetNode.state);\n  }\n\n  /**\n   * Gets the transition from which this transition was redirected.\n   *\n   * If the current transition is a redirect, this method returns the transition that was redirected.\n   *\n   * #### Example:\n   * ```js\n   * let transitionA = $state.go('A').transition\n   * transitionA.onStart({}, () => $state.target('B'));\n   * $transitions.onSuccess({ to: 'B' }, (trans) => {\n   *   trans.to().name === 'B'; // true\n   *   trans.redirectedFrom() === transitionA; // true\n   * });\n   * ```\n   *\n   * @returns The previous Transition, or null if this Transition is not the result of a redirection\n   */\n  redirectedFrom(): Transition {\n    return this._options.redirectedFrom || null;\n  }\n\n  /**\n   * Gets the original transition in a redirect chain\n   *\n   * A transition might belong to a long chain of multiple redirects.\n   * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n   *\n   * #### Example:\n   * ```js\n   * // states\n   * registry.register({ name: 'A', redirectTo: 'B' });\n   * registry.register({ name: 'B', redirectTo: 'C' });\n   * registry.register({ name: 'C', redirectTo: 'D' });\n   * registry.register({ name: 'D' });\n   *\n   * let transitionA = $state.go('A').transition\n   *\n   * $transitions.onSuccess({ to: 'D' }, (trans) => {\n   *   trans.to().name === 'D'; // true\n   *   trans.redirectedFrom().to().name === 'C'; // true\n   *   trans.originalTransition() === transitionA; // true\n   *   trans.originalTransition().to().name === 'A'; // true\n   * });\n   * ```\n   *\n   * @returns The original Transition that started a redirect chain\n   */\n  originalTransition(): Transition {\n    let rf = this.redirectedFrom();\n    return (rf && rf.originalTransition()) || this;\n  }\n\n  /**\n   * Get the transition options\n   *\n   * @returns the options for this Transition.\n   */\n  options(): TransitionOptions {\n    return this._options;\n  }\n\n  /**\n   * Gets the states being entered.\n   *\n   * @returns an array of states that will be entered during this transition.\n   */\n  entering(): StateDeclaration[] {\n    return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n  }\n\n  /**\n   * Gets the states being exited.\n   *\n   * @returns an array of states that will be exited during this transition.\n   */\n  exiting(): StateDeclaration[] {\n    return map(this._treeChanges.exiting, prop('state')).map(stateSelf).reverse();\n  }\n\n  /**\n   * Gets the states being retained.\n   *\n   * @returns an array of states that are already entered from a previous Transition, that will not be\n   *    exited during this Transition\n   */\n  retained(): StateDeclaration[] {\n    return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n  }\n\n  /**\n   * Get the [[ViewConfig]]s associated with this Transition\n   *\n   * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n   * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n   *\n   * @param pathname the name of the path to fetch views for:\n   *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n   * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n   *\n   * @returns a list of ViewConfig objects for the given path.\n   */\n  views(pathname: string = \"entering\", state?: StateObject): ViewConfig[] {\n    let path = this._treeChanges[pathname];\n    path = !state ? path : path.filter(propEq('state', state));\n    return path.map(prop(\"views\")).filter(identity).reduce(unnestR, []);\n  }\n\n  /**\n   * Return the transition's tree changes\n   *\n   * A transition goes from one state/parameters to another state/parameters.\n   * During a transition, states are entered and/or exited.\n   *\n   * This function returns various branches (paths) which represent the changes to the\n   * active state tree that are caused by the transition.\n   *\n   * @param pathname The name of the tree changes path to get:\n   *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n   */\n  treeChanges(pathname: string): PathNode[];\n  treeChanges(): TreeChanges;\n  treeChanges(pathname?: string) {\n    return pathname ? this._treeChanges[pathname] : this._treeChanges;\n  }\n\n  /**\n   * Creates a new transition that is a redirection of the current one.\n   *\n   * This transition can be returned from a [[TransitionService]] hook to\n   * redirect a transition to a new state and/or set of parameters.\n   *\n   * @internalapi\n   *\n   * @returns Returns a new [[Transition]] instance.\n   */\n  redirect(targetState: TargetState): Transition {\n    let redirects = 1, trans: Transition = this;\n    while ((trans = trans.redirectedFrom()) != null) {\n      if (++redirects > 20) throw new Error(`Too many consecutive Transition redirects (20+)`);\n    }\n\n    let redirectOpts: TransitionOptions = { redirectedFrom: this, source: \"redirect\" };\n    // If the original transition was caused by URL sync, then use { location: 'replace' }\n    // on the new transition (unless the target state explicitly specifies location: false).\n    // This causes the original url to be replaced with the url for the redirect target\n    // so the original url disappears from the browser history.\n    if (this.options().source === 'url' && targetState.options().location !== false) {\n      redirectOpts.location = 'replace';\n    }\n\n    let newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n\n    targetState = new TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n\n    let newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n    let originalEnteringNodes = this._treeChanges.entering;\n    let redirectEnteringNodes = newTransition._treeChanges.entering;\n\n    // --- Re-use resolve data from original transition ---\n    // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n    // (because of the redirect), the resolves fetched by the original transition are still valid in the\n    // redirected transition.\n    //\n    // This allows you to define a redirect on a parent state which depends on an async resolve value.\n    // You can wait for the resolve, then redirect to a child state based on the result.\n    // The redirected transition does not have to re-fetch the resolve.\n    // ---------------------------------------------------------\n\n    const nodeIsReloading = (reloadState: StateObject) => (node: PathNode) => {\n      return reloadState && node.state.includes[reloadState.name];\n    };\n\n    // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n    let matchingEnteringNodes: PathNode[] = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams)\n        .filter(not(nodeIsReloading(targetState.options().reloadState)));\n\n    // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n    matchingEnteringNodes.forEach((node, idx) => {\n      node.resolvables = originalEnteringNodes[idx].resolvables;\n    });\n\n    return newTransition;\n  }\n\n  /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n  private _changedParams(): Param[] {\n    let tc = this._treeChanges;\n\n    /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n    // If user explicitly wants a reload\n    if (this._options.reload) return undefined;\n    // If any states are exiting or entering\n    if (tc.exiting.length || tc.entering.length) return undefined;\n    // If to/from path lengths differ\n    if (tc.to.length !== tc.from.length) return undefined;\n    // If the to/from paths are different\n    let pathsDiffer: boolean = arrayTuples(tc.to, tc.from)\n        .map(tuple => tuple[0].state !== tuple[1].state)\n        .reduce(anyTrueR, false);\n    if (pathsDiffer) return undefined;\n\n    // Find any parameter values that differ\n    let nodeSchemas: Param[][] = tc.to.map((node: PathNode) => node.paramSchema);\n    let [toValues, fromValues] = [tc.to, tc.from].map(path => path.map(x => x.paramValues));\n    let tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n\n    return tuples.map(([schema, toVals, fromVals]) => Param.changed(schema, toVals, fromVals)).reduce(unnestR, []);\n  }\n\n  /**\n   * Returns true if the transition is dynamic.\n   *\n   * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n   *\n   * @returns true if the Transition is dynamic\n   */\n  dynamic(): boolean {\n    let changes = this._changedParams();\n    return !changes ? false : changes.map(x => x.dynamic).reduce(anyTrueR, false);\n  }\n\n  /**\n   * Returns true if the transition is ignored.\n   *\n   * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n   *\n   * @returns true if the Transition is ignored.\n   */\n  ignored(): boolean {\n    return !!this._ignoredReason();\n  }\n\n  /** @hidden */\n  _ignoredReason(): \"SameAsCurrent\"|\"SameAsPending\"|undefined {\n    const pending = this.router.globals.transition;\n    const reloadState = this._options.reloadState;\n\n    const same = (pathA, pathB) => {\n      if (pathA.length !== pathB.length) return false;\n      const matching = PathUtils.matching(pathA, pathB);\n      return pathA.length === matching.filter(node => !reloadState || !node.state.includes[reloadState.name]).length;\n    };\n\n    let newTC = this.treeChanges();\n    let pendTC = pending && pending.treeChanges();\n\n    if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting)) return \"SameAsPending\";\n    if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to)) return \"SameAsCurrent\";\n  }\n\n  /**\n   * Runs the transition\n   *\n   * This method is generally called from the [[StateService.transitionTo]]\n   *\n   * @internalapi\n   *\n   * @returns a promise for a successful transition.\n   */\n  run(): Promise<any> {\n    let runAllHooks = TransitionHook.runAllHooks;\n\n    // Gets transition hooks array for the given phase\n    const getHooksFor = (phase: TransitionHookPhase) =>\n        this._hookBuilder.buildHooksForPhase(phase);\n\n    // When the chain is complete, then resolve or reject the deferred\n    const transitionSuccess = () => {\n      trace.traceSuccess(this.$to(), this);\n      this.success = true;\n      this._deferred.resolve(this.to());\n      runAllHooks(getHooksFor(TransitionHookPhase.SUCCESS));\n    };\n\n    const transitionError = (reason: any) => {\n      trace.traceError(reason, this);\n      this.success = false;\n      this._deferred.reject(reason);\n      this._error = reason;\n      runAllHooks(getHooksFor(TransitionHookPhase.ERROR));\n    };\n\n    const runTransition = () => {\n      // Wait to build the RUN hook chain until the BEFORE hooks are done\n      // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n      let allRunHooks = getHooksFor(TransitionHookPhase.RUN);\n      let done = () => services.$q.when(undefined);\n      return TransitionHook.invokeHooks(allRunHooks, done);\n    };\n\n    const startTransition = () => {\n      let globals = this.router.globals;\n\n      globals.lastStartedTransitionId = this.$id;\n      globals.transition = this;\n      globals.transitionHistory.enqueue(this);\n\n      trace.traceTransitionStart(this);\n\n      return services.$q.when(undefined);\n    };\n\n    let allBeforeHooks = getHooksFor(TransitionHookPhase.BEFORE);\n    TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n        .then(runTransition)\n        .then(transitionSuccess, transitionError);\n\n    return this.promise;\n  }\n\n  /** Checks if this transition is currently active/running. */\n  isActive = () =>\n      this.router.globals.transition === this;\n\n  /**\n   * Checks if the Transition is valid\n   *\n   * @returns true if the Transition is valid\n   */\n  valid() {\n    return !this.error() || this.success !== undefined;\n  }\n\n  /**\n   * Aborts this transition\n   *\n   * Imperative API to abort a Transition.\n   * This only applies to Transitions that are not yet complete.\n   */\n  abort() {\n    // Do not set flag if the transition is already complete\n    if (isUndefined(this.success))  {\n      this._aborted = true;\n    }\n  }\n\n  /**\n   * The Transition error reason.\n   *\n   * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n   * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n   *\n   * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n   */\n  error() {\n    let state: StateObject = this.$to();\n\n    if (state.self.abstract)\n      return `Cannot transition to abstract state '${state.name}'`;\n\n    const paramDefs = state.parameters(), values = this.params();\n    const invalidParams = paramDefs.filter(param => !param.validates(values[param.id]));\n    if (invalidParams.length) {\n      return `Param values not valid for state '${state.name}'. Invalid params: [ ${invalidParams.map(param => param.id).join(', ')} ]`;\n    }\n\n    if (this.success === false)\n      return this._error;\n  }\n\n  /**\n   * A string representation of the Transition\n   *\n   * @returns A string representation of the Transition\n   */\n  toString () {\n    let fromStateOrName = this.from();\n    let toStateOrName = this.to();\n\n    const avoidEmptyHash = (params: RawParams) =>\n      (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : omit(params, [\"#\"]);\n\n    // (X) means the to state is invalid.\n    let id = this.$id,\n        from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName,\n        fromParams = toJson(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))),\n        toValid = this.valid() ? \"\" : \"(X) \",\n        to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName,\n        toParams = toJson(avoidEmptyHash(this.params()));\n\n    return `Transition#${id}( '${from}'${fromParams} -> ${toValid}'${to}'${toParams} )`;\n  }\n}\n","/**\n * @coreapi\n * @module params\n */\n/** */\nimport { fromJson, toJson, identity, equals, inherit, map, extend, pick } from \"../common/common\";\nimport { isDefined, isNullOrUndefined } from \"../common/predicates\";\nimport { is } from \"../common/hof\";\nimport { services } from \"../common/coreservices\";\nimport { ParamType } from \"./paramType\";\nimport { ParamTypeDefinition } from \"./interface\";\n\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n */\nexport class ParamTypes {\n  /** @hidden */\n  types: any;\n  /** @hidden */\n  enqueue: boolean = true;\n  /** @hidden */\n  typeQueue: any[] = [];\n\n  /**\n   * Built-in parameter type: `string`\n   *\n   * This parameter type coerces values to strings.\n   * It matches anything (`new RegExp(\".*\")`) in the URL\n   */\n  static string: ParamTypeDefinition;\n\n  /**\n   * Built-in parameter type: `path`\n   *\n   * This parameter type is the default type for path parameters.\n   * A path parameter is any parameter declared in the path portion of a url\n   *\n   * - `/foo/:param1/:param2`: two path parameters\n   *\n   * This parameter type behaves exactly like the [[string]] type with one exception.\n   * When matching parameter values in the URL, the `path` type does not match forward slashes `/`.\n   *\n   * #### Angular 1 note:\n   * In ng1, this type is overridden with one that pre-encodes slashes as `~2F` instead of `%2F`.\n   * For more details about this angular 1 behavior, see: https://github.com/angular-ui/ui-router/issues/2598\n   */\n  static path: ParamTypeDefinition;\n\n  /**\n   * Built-in parameter type: `query`\n   *\n   * This parameter type is the default type for query/search parameters.\n   * It behaves the same as the [[string]] parameter type.\n   *\n   * A query parameter is any parameter declared in the query/search portion of a url\n   *\n   * - `/bar?param2`: a query parameter\n   */\n  static query: ParamTypeDefinition;\n\n  /**\n   * Built-in parameter type: `hash`\n   *\n   * This parameter type is used for the `#` parameter (the hash)\n   * It behaves the same as the [[string]] parameter type.\n   * @coreapi\n   */\n  static hash: ParamTypeDefinition;\n\n  /**\n   * Built-in parameter type: `int`\n   *\n   * This parameter type serializes javascript integers (`number`s which represent an integer) to the URL.\n   *\n   * #### Example:\n   * ```js\n   * .state({\n   *   name: 'user',\n   *   url: '/user/{id:int}'\n   * });\n   * ```\n   * ```js\n   * $state.go('user', { id: 1298547 });\n   * ```\n   *\n   * The URL will serialize to: `/user/1298547`.\n   *\n   * When the parameter value is read, it will be the `number` `1298547`, not the string `\"1298547\"`.\n   */\n  static int: ParamTypeDefinition;\n\n  /**\n   * Built-in parameter type: `bool`\n   *\n   * This parameter type serializes `true`/`false` as `1`/`0`\n   *\n   * #### Example:\n   * ```js\n   * .state({\n   *   name: 'inbox',\n   *   url: '/inbox?{unread:bool}'\n   * });\n   * ```\n   * ```js\n   * $state.go('inbox', { unread: true });\n   * ```\n   *\n   * The URL will serialize to: `/inbox?unread=1`.\n   *\n   * Conversely, if the url is `/inbox?unread=0`, the value of the `unread` parameter will be a `false`.\n   */\n  static bool: ParamTypeDefinition;\n\n  /**\n   * Built-in parameter type: `date`\n   *\n   * This parameter type can be used to serialize Javascript dates as parameter values.\n   *\n   * #### Example:\n   * ```js\n   * .state({\n   *   name: 'search',\n   *   url: '/search?{start:date}'\n   * });\n   * ```\n   * ```js\n   * $state.go('search', { start: new Date(2000, 0, 1) });\n   * ```\n   *\n   * The URL will serialize to: `/search?start=2000-01-01`.\n   *\n   * Conversely, if the url is `/search?start=2016-12-25`, the value of the `start` parameter will be a `Date` object where:\n   *\n   * - `date.getFullYear() === 2016`\n   * - `date.getMonth() === 11` (month is 0-based)\n   * - `date.getDate() === 25`\n   */\n  static date: ParamTypeDefinition;\n\n  /**\n   * Built-in parameter type: `json`\n   *\n   * This parameter type can be used to serialize javascript objects into the URL using JSON serialization.\n   *\n   * #### Example:\n   * This example serializes an plain javascript object to the URL\n   * ```js\n   * .state({\n   *   name: 'map',\n   *   url: '/map/{coords:json}'\n   * });\n   * ```\n   * ```js\n   * $state.go('map', { coords: { x: 10399.2, y: 49071 });\n   * ```\n   *\n   * The URL will serialize to: `/map/%7B%22x%22%3A10399.2%2C%22y%22%3A49071%7D`\n   */\n  static json: ParamTypeDefinition;\n\n  /**\n   * Built-in parameter type: `any`\n   *\n   * This parameter type is used by default for url-less parameters (parameters that do not appear in the URL).\n   * This type does not encode or decode.\n   * It is compared using a deep `equals` comparison.\n   *\n   * #### Example:\n   * This example defines a non-url parameter on a [[StateDeclaration]].\n   * ```js\n   * .state({\n   *   name: 'new',\n   *   url: '/new',\n   *   params: {\n   *     inrepyto: null\n   *   }\n   * });\n   * ```\n   * ```js\n   * $state.go('new', { inreplyto: currentMessage });\n   * ```\n   */\n  static any: ParamTypeDefinition;\n\n\n  /** @internalapi */\n  private defaultTypes: any = pick(ParamTypes.prototype, [\"hash\", \"string\", \"query\", \"path\", \"int\", \"bool\", \"date\", \"json\", \"any\"]);\n\n  /** @internalapi */\n  constructor() {\n    // Register default types. Store them in the prototype of this.types.\n    const makeType = (definition: ParamTypeDefinition, name: string) =>\n        new ParamType(extend({ name }, definition));\n    this.types = inherit(map(this.defaultTypes, makeType), {});\n  }\n\n  /** @internalapi */\n  dispose() {\n    this.types = {};\n  }\n\n  /**\n   * Registers a parameter type\n   *\n   * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n   */\n  type(name: string, definition?: ParamTypeDefinition, definitionFn?: () => ParamTypeDefinition) {\n    if (!isDefined(definition)) return this.types[name];\n    if (this.types.hasOwnProperty(name)) throw new Error(`A type named '${name}' has already been defined.`);\n\n    this.types[name] = new ParamType(extend({ name }, definition));\n\n    if (definitionFn) {\n      this.typeQueue.push({ name, def: definitionFn });\n      if (!this.enqueue) this._flushTypeQueue();\n    }\n\n    return this;\n  }\n\n  /** @internalapi */\n  _flushTypeQueue() {\n    while (this.typeQueue.length) {\n      let type = this.typeQueue.shift();\n      if (type.pattern) throw new Error(\"You cannot override a type's .pattern at runtime.\");\n      extend(this.types[type.name], services.$injector.invoke(type.def));\n    }\n  }\n}\n\n/** @hidden */\nfunction initDefaultTypes() {\n\n  const makeDefaultType = (def) => {\n    const valToString = (val: any) =>\n        val != null ? val.toString() : val;\n\n    const defaultTypeBase = {\n      encode: valToString,\n      decode: valToString,\n      is: is(String),\n      pattern: /.*/,\n      equals: (a: any, b: any) => a == b, // allow coersion for null/undefined/\"\"\n    };\n\n    return extend({}, defaultTypeBase, def) as ParamTypeDefinition;\n  };\n\n  // Default Parameter Type Definitions\n  extend(ParamTypes.prototype, {\n    string: makeDefaultType({}),\n\n    path: makeDefaultType({\n      pattern: /[^/]*/,\n    }),\n\n    query: makeDefaultType({}),\n\n    hash: makeDefaultType({\n      inherit: false,\n    }),\n\n    int: makeDefaultType({\n      decode: (val: string) => parseInt(val, 10),\n      is: function(val: any) {\n        return !isNullOrUndefined(val) && this.decode(val.toString()) === val;\n      },\n      pattern: /-?\\d+/,\n    }),\n\n    bool: makeDefaultType({\n      encode: (val: any) => val && 1 || 0,\n      decode: (val: string) => parseInt(val, 10) !== 0,\n      is: is(Boolean),\n      pattern: /0|1/\n    }),\n\n    date: makeDefaultType({\n      encode: function(val: any) {\n        return !this.is(val) ? undefined : [\n          val.getFullYear(),\n          ('0' + (val.getMonth() + 1)).slice(-2),\n          ('0' + val.getDate()).slice(-2)\n        ].join(\"-\");\n      },\n      decode: function(val: string) {\n        if (this.is(val)) return <any> val as Date;\n        let match = this.capture.exec(val);\n        return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n      },\n      is: (val: any) => val instanceof Date && !isNaN(val.valueOf()),\n      equals(l: any, r: any) {\n        return ['getFullYear', 'getMonth', 'getDate']\n            .reduce((acc, fn) => acc && l[fn]() === r[fn](), true)\n      },\n      pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n      capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n    }),\n\n    json: makeDefaultType({\n      encode: toJson,\n      decode: fromJson,\n      is: is(Object),\n      equals: equals,\n      pattern: /[^/]*/\n    }),\n\n    // does not encode/decode\n    any: makeDefaultType({\n      encode: identity,\n      decode: identity,\n      is: () => true,\n      equals: equals,\n    }),\n  })\n\n}\n\ninitDefaultTypes();\n\n","/**\n * @coreapi\n * @module params\n */\n/** */\nimport {extend, ancestors, Obj} from \"../common/common\";\nimport {StateObject} from \"../state/stateObject\";\n\n/** @internalapi */\nexport class StateParams {\n  [key: string]: any;\n\n  constructor(params: Obj = {}) {\n    extend(this, params);\n  }\n\n  /**\n   * Merges a set of parameters with all parameters inherited between the common parents of the\n   * current state and a given destination state.\n   *\n   * @param {Object} newParams The set of parameters which will be composited with inherited params.\n   * @param {Object} $current Internal definition of object representing the current state.\n   * @param {Object} $to Internal definition of object representing state to transition to.\n   */\n  $inherit(newParams: Obj, $current: StateObject, $to: StateObject) {\n    let parents = ancestors($current, $to),\n        parentParams: string[],\n        inherited: Obj = {},\n        inheritList: string[] = [];\n\n    for (let i in parents) {\n      if (!parents[i] || !parents[i].params) continue;\n      parentParams = Object.keys(parents[i].params);\n      if (!parentParams.length) continue;\n\n      for (let j in parentParams) {\n        if (inheritList.indexOf(parentParams[j]) >= 0) continue;\n        inheritList.push(parentParams[j]);\n        inherited[parentParams[j]] = this[parentParams[j]];\n      }\n    }\n    return extend({}, inherited, newParams);\n  };\n}\n\n","/** @module state */ /** for typedoc */\nimport {isString} from \"../common/predicates\";\nimport {StateOrName} from \"./interface\";\nimport {StateObject} from \"./stateObject\";\nimport {values} from \"../common/common\";\n\nexport class StateMatcher {\n  constructor (private _states: { [key: string]: StateObject }) { }\n  \n  isRelative(stateName: string) {\n    stateName = stateName || \"\";\n    return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n  }\n\n\n  find(stateOrName: StateOrName, base?: StateOrName, matchGlob = true): StateObject {\n    if (!stateOrName && stateOrName !== \"\") return undefined;\n    let isStr = isString(stateOrName);\n    let name: string = isStr ? stateOrName : (<any>stateOrName).name;\n\n    if (this.isRelative(name)) name = this.resolvePath(name, base);\n    let state = this._states[name];\n\n    if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n      return state;\n    } else if (isStr && matchGlob) {\n      let _states = values(this._states);\n      let matches = _states.filter(state =>\n          state.__stateObjectCache.nameGlob &&\n          state.__stateObjectCache.nameGlob.matches(name)\n      );\n\n      if (matches.length > 1) {\n        console.log(`stateMatcher.find: Found multiple matches for ${name} using glob: `, matches.map(match => match.name));\n      }\n      return matches[0];\n    }\n    return undefined;\n  }\n\n  resolvePath(name: string, base: StateOrName) {\n    if (!base) throw new Error(`No reference point given for path '${name}'`);\n    \n    let baseState: StateObject = this.find(base);\n\n    let splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n\n    for (; i < pathLength; i++) {\n      if (splitName[i] === \"\" && i === 0) {\n        current = baseState;\n        continue;\n      }\n      if (splitName[i] === \"^\") {\n        if (!current.parent) throw new Error(`Path '${name}' not valid for state '${baseState.name}'`);\n        current = current.parent;\n        continue;\n      }\n      break;\n    }\n    let relName = splitName.slice(i).join(\".\");\n    return current.name + (current.name && relName ? \".\" : \"\") + relName;\n  }\n}\n","/** @module state */ /** for typedoc */\nimport { inArray } from \"../common/common\";\nimport { isString } from \"../common/predicates\";\nimport { StateDeclaration, _StateDeclaration } from \"./interface\";\nimport { StateObject } from \"./stateObject\";\nimport { StateBuilder } from \"./stateBuilder\";\nimport { StateRegistryListener, StateRegistry } from \"./stateRegistry\";\nimport { Disposable } from \"../interface\";\nimport { UrlRouter } from \"../url/urlRouter\";\nimport { prop } from \"../common/hof\";\nimport { StateMatcher } from \"./stateMatcher\";\n\n/** @internalapi */\nexport class StateQueueManager implements Disposable {\n  queue: StateObject[];\n  matcher: StateMatcher;\n\n  constructor(\n      private $registry: StateRegistry,\n      private $urlRouter: UrlRouter,\n      public states: { [key: string]: StateObject; },\n      public builder: StateBuilder,\n      public listeners: StateRegistryListener[]) {\n    this.queue = [];\n    this.matcher = $registry.matcher;\n  }\n\n  /** @internalapi */\n  dispose() {\n    this.queue = [];\n  }\n\n  register(stateDecl: _StateDeclaration) {\n    let queue = this.queue;\n    let state = StateObject.create(stateDecl);\n    let name = state.name;\n\n    if (!isString(name)) throw new Error(\"State must have a valid name\");\n    if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n      throw new Error(`State '${name}' is already defined`);\n\n    queue.push(state);\n    this.flush();\n\n    return state;\n  }\n\n  flush() {\n    let {queue, states, builder} = this;\n    let registered: StateObject[] = [], // states that got registered\n        orphans: StateObject[] = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n    const getState = (name) =>\n        this.states.hasOwnProperty(name) && this.states[name];\n\n    while (queue.length > 0) {\n      let state: StateObject = queue.shift();\n      let name = state.name;\n      let result: StateObject = builder.build(state);\n      let orphanIdx: number = orphans.indexOf(state);\n\n      if (result) {\n        let existingState = getState(name);\n        if (existingState && existingState.name === name) {\n          throw new Error(`State '${name}' is already defined`);\n        }\n\n        let existingFutureState = getState(name + \".**\");\n        if (existingFutureState) {\n          // Remove future state of the same name\n          this.$registry.deregister(existingFutureState);\n        }\n\n        states[name] = state;\n        this.attachRoute(state);\n        if (orphanIdx >= 0) orphans.splice(orphanIdx, 1);\n        registered.push(state);\n        continue;\n      }\n\n      let prev = previousQueueLength[name];\n      previousQueueLength[name] = queue.length;\n      if (orphanIdx >= 0 && prev === queue.length) {\n        // Wait until two consecutive iterations where no additional states were dequeued successfully.\n        // throw new Error(`Cannot register orphaned state '${name}'`);\n        queue.push(state);\n        return states;\n      } else if (orphanIdx < 0) {\n        orphans.push(state);\n      }\n\n      queue.push(state);\n    }\n\n    if (registered.length) {\n      this.listeners.forEach(listener => listener(\"registered\", registered.map(s => s.self)));\n    }\n\n    return states;\n  }\n\n  attachRoute(state: StateObject) {\n    if (state.abstract || !state.url) return;\n\n    this.$urlRouter.rule(this.$urlRouter.urlRuleFactory.create(state));\n  }\n}\n","/**\n * @coreapi\n * @module state\n */ /** for typedoc */\n\nimport { StateObject } from \"./stateObject\";\nimport { StateMatcher } from \"./stateMatcher\";\nimport { StateBuilder } from \"./stateBuilder\";\nimport { StateQueueManager } from \"./stateQueueManager\";\nimport { StateDeclaration, _StateDeclaration } from \"./interface\";\nimport { BuilderFunction } from \"./stateBuilder\";\nimport { StateOrName } from \"./interface\";\nimport { removeFrom } from \"../common/common\";\nimport { UIRouter } from \"../router\";\nimport { propEq } from \"../common/hof\";\n\n/**\n * The signature for the callback function provided to [[StateRegistry.onStatesChanged]].\n *\n * This callback receives two parameters:\n *\n * @param event a string; either \"registered\" or \"deregistered\"\n * @param states the list of [[StateDeclaration]]s that were registered (or deregistered).\n */\nexport type StateRegistryListener = (event: \"registered\"|\"deregistered\", states: StateDeclaration[]) => void;\n\nexport class StateRegistry {\n  private _root: StateObject;\n  private states: { [key: string]: StateObject } = {};\n\n  matcher: StateMatcher;\n  private builder: StateBuilder;\n  stateQueue: StateQueueManager;\n\n  listeners: StateRegistryListener[] = [];\n\n  /** @internalapi */\n  constructor(private _router: UIRouter) {\n    this.matcher = new StateMatcher(this.states);\n    this.builder = new StateBuilder(this.matcher, _router.urlMatcherFactory);\n    this.stateQueue = new StateQueueManager(this, _router.urlRouter, this.states, this.builder, this.listeners);\n    this._registerRoot();\n  }\n\n  /** @internalapi */\n  private _registerRoot() {\n    let rootStateDef: StateDeclaration = {\n      name: '',\n      url: '^',\n      views: null,\n      params: {\n        '#': { value: null, type: 'hash', dynamic: true }\n      },\n      abstract: true\n    };\n\n    let _root = this._root = this.stateQueue.register(rootStateDef);\n    _root.navigable = null;\n  }\n\n  /** @internalapi */\n  dispose() {\n    this.stateQueue.dispose();\n    this.listeners = [];\n    this.get().forEach(state => this.get(state) && this.deregister(state));\n  }\n\n  /**\n   * Listen for a State Registry events\n   *\n   * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n   *\n   * #### Example:\n   * ```js\n   * let allStates = registry.get();\n   *\n   * // Later, invoke deregisterFn() to remove the listener\n   * let deregisterFn = registry.onStatesChanged((event, states) => {\n   *   switch(event) {\n   *     case: 'registered':\n   *       states.forEach(state => allStates.push(state));\n   *       break;\n   *     case: 'deregistered':\n   *       states.forEach(state => {\n   *         let idx = allStates.indexOf(state);\n   *         if (idx !== -1) allStates.splice(idx, 1);\n   *       });\n   *       break;\n   *   }\n   * });\n   * ```\n   *\n   * @param listener a callback function invoked when the registered states changes.\n   *        The function receives two parameters, `event` and `state`.\n   *        See [[StateRegistryListener]]\n   * @return a function that deregisters the listener\n   */\n  onStatesChanged(listener: StateRegistryListener): () => void {\n    this.listeners.push(listener);\n    return function deregisterListener() {\n      removeFrom(this.listeners)(listener);\n    }.bind(this);\n  }\n\n  /**\n   * Gets the implicit root state\n   *\n   * Gets the root of the state tree.\n   * The root state is implicitly created by UI-Router.\n   * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n   *\n   * @return the root [[StateObject]]\n   */\n  root() {\n    return this._root;\n  }\n\n  /**\n   * Adds a state to the registry\n   *\n   * Registers a [[StateDeclaration]] or queues it for registration.\n   *\n   * Note: a state will be queued if the state's parent isn't yet registered.\n   *\n   * @param stateDefinition the definition of the state to register.\n   * @returns the internal [[StateObject]] object.\n   *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n   *          If the state was only queued, then the object is not fully built.\n   */\n  register(stateDefinition: _StateDeclaration): StateObject {\n    return this.stateQueue.register(stateDefinition);\n  }\n\n  /** @hidden */\n  private _deregisterTree(state: StateObject) {\n    let all = this.get().map(s => s.$$state());\n    const getChildren = (states: StateObject[]) => {\n      let children = all.filter(s => states.indexOf(s.parent) !== -1);\n      return children.length === 0 ? children : children.concat(getChildren(children));\n    };\n\n    let children = getChildren([state]);\n    let deregistered: StateObject[] = [state].concat(children).reverse();\n\n    deregistered.forEach(state => {\n      let $ur = this._router.urlRouter;\n      // Remove URL rule\n      $ur.rules().filter(propEq(\"state\", state)).forEach($ur.removeRule.bind($ur));\n      // Remove state from registry\n      delete this.states[state.name];\n    });\n\n    return deregistered;\n  }\n\n  /**\n   * Removes a state from the registry\n   *\n   * This removes a state from the registry.\n   * If the state has children, they are are also removed from the registry.\n   *\n   * @param stateOrName the state's name or object representation\n   * @returns {StateObject[]} a list of removed states\n   */\n  deregister(stateOrName: StateOrName) {\n    let _state = this.get(stateOrName);\n    if (!_state) throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n    let deregisteredStates = this._deregisterTree(_state.$$state());\n\n    this.listeners.forEach(listener => listener(\"deregistered\", deregisteredStates.map(s => s.self)));\n    return deregisteredStates;\n  }\n\n  /**\n   * Gets all registered states\n   *\n   * Calling this method with no arguments will return a list of all the states that are currently registered.\n   * Note: this does not return states that are *queued* but not yet registered.\n   *\n   * @return a list of [[StateDeclaration]]s\n   */\n  get(): StateDeclaration[];\n\n  /**\n   * Gets a registered state\n   *\n   * Given a state or a name, finds and returns the [[StateDeclaration]] from the registry.\n   * Note: this does not return states that are *queued* but not yet registered.\n   *\n   * @param stateOrName either the name of a state, or a state object.\n   * @return a registered [[StateDeclaration]] that matched the `stateOrName`, or null if the state isn't registered.\n   */\n  get(stateOrName: StateOrName, base?: StateOrName): StateDeclaration;\n  get(stateOrName?: StateOrName, base?: StateOrName): any {\n    if (arguments.length === 0) \n      return <StateDeclaration[]> Object.keys(this.states).map(name => this.states[name].self);\n    let found = this.matcher.find(stateOrName, base);\n    return found && found.self || null;\n  }\n\n  decorator(name: string, func: BuilderFunction) {\n    return this.builder.builder(name, func);\n  }\n}","/**\n * @internalapi\n * @module url\n */ /** for typedoc */\nimport { forEach, extend } from \"../common/common\";\nimport { isObject, isDefined, isFunction, isString } from \"../common/predicates\";\nimport { UrlMatcher } from \"./urlMatcher\";\nimport { Param, DefType } from \"../params/param\";\nimport { ParamTypes } from \"../params/paramTypes\";\nimport { ParamTypeDefinition } from \"../params/interface\";\nimport { Disposable } from \"../interface\";\nimport { ParamType } from \"../params/paramType\";\nimport { ParamFactory, UrlMatcherConfig } from \"./interface\";\n\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nexport class UrlMatcherFactory implements Disposable, UrlMatcherConfig {\n  /** @hidden */ paramTypes = new ParamTypes();\n  /** @hidden */ _isCaseInsensitive: boolean = false;\n  /** @hidden */ _isStrictMode: boolean = true;\n  /** @hidden */ _defaultSquashPolicy: (boolean|string) = false;\n\n  constructor() {\n    extend(this, { UrlMatcher, Param });\n  }\n\n  /** @inheritdoc */\n  caseInsensitive(value?: boolean): boolean {\n    return this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive;\n  }\n\n  /** @inheritdoc */\n  strictMode(value?: boolean): boolean {\n    return this._isStrictMode = isDefined(value) ? value : this._isStrictMode;\n  }\n\n  /** @inheritdoc */\n  defaultSquashPolicy(value?: (boolean|string)) {\n    if (isDefined(value) && value !== true && value !== false && !isString(value))\n      throw new Error(`Invalid squash policy: ${value}. Valid policies: false, true, arbitrary-string`);\n    return this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy;\n  }\n\n  /** @hidden */\n  private _getConfig = (config) =>\n      extend({ strict: this._isStrictMode, caseInsensitive: this._isCaseInsensitive }, config);\n\n  /**\n   * Creates a [[UrlMatcher]] for the specified pattern.\n   *\n   * @param pattern  The URL pattern.\n   * @param config  The config object hash.\n   * @returns The UrlMatcher.\n   */\n  compile(pattern: string, config?: { [key: string]: any }) {\n    return new UrlMatcher(pattern, this.paramTypes, this.paramFactory, this._getConfig(config));\n  }\n\n  /**\n   * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n   *\n   * @param object  The object to perform the type check against.\n   * @returns `true` if the object matches the `UrlMatcher` interface, by\n   *          implementing all the same methods.\n   */\n  isMatcher(object: any): boolean {\n    // TODO: typeof?\n    if (!isObject(object)) return false;\n    let result = true;\n\n    forEach(UrlMatcher.prototype, (val, name) => {\n      if (isFunction(val)) result = result && (isDefined(object[name]) && isFunction(object[name]));\n    });\n    return result;\n  };\n\n  /**\n   * Creates and registers a custom [[ParamType]] object\n   *\n   * A [[ParamType]] can be used to generate URLs with typed parameters.\n   *\n   * @param name  The type name.\n   * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n   * @param definitionFn A function that is injected before the app runtime starts.\n   *        The result of this function should be a [[ParamTypeDefinition]].\n   *        The result is merged into the existing `definition`.\n   *        See [[ParamType]] for information on the values accepted.\n   *\n   * @returns - if a type was registered: the [[UrlMatcherFactory]]\n   *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n   *\n   * Note: Register custom types *before using them* in a state definition.\n   *\n   * See [[ParamTypeDefinition]] for examples\n   */\n  type(name: string, definition?: ParamTypeDefinition, definitionFn?: () => ParamTypeDefinition) {\n    let type = this.paramTypes.type(name, definition, definitionFn);\n    return !isDefined(definition) ? type : this;\n  };\n\n  /** @hidden */\n  $get() {\n    this.paramTypes.enqueue = false;\n    this.paramTypes._flushTypeQueue();\n    return this;\n  };\n\n  /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n  paramFactory: ParamFactory = {\n    /** Creates a new [[Param]] from a CONFIG block */\n    fromConfig: (id: string, type: ParamType, config: any) =>\n        new Param(id, type, config, DefType.CONFIG, this),\n\n    /** Creates a new [[Param]] from a url PATH */\n    fromPath: (id: string, type: ParamType, config: any) =>\n        new Param(id, type, config, DefType.PATH, this),\n\n    /** Creates a new [[Param]] from a url SEARCH */\n    fromSearch: (id: string, type: ParamType, config: any) =>\n        new Param(id, type, config, DefType.SEARCH, this),\n  };\n\n  /** @internalapi */\n  dispose() {\n    this.paramTypes.dispose();\n  }\n}\n","/**\n * @coreapi\n * @module url\n */ /** */\nimport { UrlMatcher } from \"./urlMatcher\";\nimport { isString, isDefined, isFunction, isState } from \"../common/predicates\";\nimport { UIRouter } from \"../router\";\nimport { identity, extend } from \"../common/common\";\nimport { is, pattern } from \"../common/hof\";\nimport { StateObject } from \"../state/stateObject\";\nimport { RawParams } from \"../params/interface\";\nimport {\n    UrlRule, UrlRuleMatchFn, UrlRuleHandlerFn, UrlRuleType, UrlParts, MatcherUrlRule, StateRule, RegExpRule\n} from \"./interface\";\n\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nexport class UrlRuleFactory {\n  constructor(public router: UIRouter) { }\n\n  compile(str: string) {\n    return this.router.urlMatcherFactory.compile(str);\n  }\n\n  static isUrlRule = obj =>\n      obj && ['type', 'match', 'handler'].every(key => isDefined(obj[key]));\n\n  create(what: string|UrlMatcher|StateObject|RegExp|UrlRuleMatchFn, handler?: string|UrlRuleHandlerFn): UrlRule {\n    const makeRule = pattern([\n      [isString,       (_what: string)         => makeRule(this.compile(_what))],\n      [is(UrlMatcher), (_what: UrlMatcher)     => this.fromUrlMatcher(_what, handler)],\n      [isState,        (_what: StateObject)    => this.fromState(_what, this.router)],\n      [is(RegExp),     (_what: RegExp)         => this.fromRegExp(_what, handler)],\n      [isFunction,     (_what: UrlRuleMatchFn) => new BaseUrlRule(_what, handler as UrlRuleHandlerFn)],\n    ]);\n\n    let rule = makeRule(what);\n    if (!rule) throw new Error(\"invalid 'what' in when()\");\n    return rule;\n  }\n\n  /**\n   * A UrlRule which matches based on a UrlMatcher\n   *\n   * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n   *\n   * ## Handler as a function\n   *\n   * If `handler` is a function, the function is invoked with:\n   *\n   * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n   * - url: the current Url ([[UrlParts]])\n   * - router: the router object ([[UIRouter]])\n   *\n   * #### Example:\n   * ```js\n   * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n   * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n   * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n   * var result = rule.handler(match); // '/home/123/456'\n   * ```\n   *\n   * ## Handler as UrlMatcher\n   *\n   * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n   * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n   * The url is replaced with the result.\n   *\n   * #### Example:\n   * ```js\n   * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n   * var handler = $umf.compile(\"/home/:fooId/:barId\");\n   * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n   * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n   * var result = rule.handler(match); // '/home/123/456'\n   * ```\n   */\n  fromUrlMatcher(urlMatcher: UrlMatcher, handler: string|UrlMatcher|UrlRuleHandlerFn): MatcherUrlRule {\n    let _handler: UrlRuleHandlerFn = handler as any;\n    if (isString(handler)) handler = this.router.urlMatcherFactory.compile(handler);\n    if (is(UrlMatcher)(handler)) _handler = (match: RawParams) => (handler as UrlMatcher).format(match);\n\n    function match(url: UrlParts) {\n      let match = urlMatcher.exec(url.path, url.search, url.hash);\n      return urlMatcher.validates(match) && match;\n    }\n\n    // Prioritize URLs, lowest to highest:\n    // - Some optional URL parameters, but none matched\n    // - No optional parameters in URL\n    // - Some optional parameters, some matched\n    // - Some optional parameters, all matched\n    function matchPriority(params: RawParams): number {\n      let optional = urlMatcher.parameters().filter(param => param.isOptional);\n      if (!optional.length) return 0.000001;\n      let matched = optional.filter(param => params[param.id]);\n      return matched.length / optional.length;\n    }\n\n    let details = { urlMatcher, matchPriority, type: \"URLMATCHER\" };\n    return extend(new BaseUrlRule(match, _handler), details) as MatcherUrlRule;\n  }\n\n\n  /**\n   * A UrlRule which matches a state by its url\n   *\n   * #### Example:\n   * ```js\n   * var rule = factory.fromState($state.get('foo'), router);\n   * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n   * var result = rule.handler(match);\n   * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n   * ```\n   */\n  fromState(state: StateObject, router: UIRouter): StateRule {\n    /**\n     * Handles match by transitioning to matched state\n     *\n     * First checks if the router should start a new transition.\n     * A new transition is not required if the current state's URL\n     * and the new URL are already identical\n     */\n    const handler = (match: RawParams) => {\n      let $state = router.stateService;\n      let globals = router.globals;\n      if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n        $state.transitionTo(state, match, { inherit: true, source: \"url\" });\n      }\n    };\n\n    let details = { state, type: \"STATE\" };\n    return extend(this.fromUrlMatcher(state.url, handler), details) as StateRule;\n  }\n\n  /**\n   * A UrlRule which matches based on a regular expression\n   *\n   * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n   *\n   * ## Handler as a function\n   *\n   * If `handler` is a function, the function is invoked with:\n   *\n   * - regexp match array (from `regexp`)\n   * - url: the current Url ([[UrlParts]])\n   * - router: the router object ([[UIRouter]])\n   *\n   * #### Example:\n   * ```js\n   * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n   * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n   * var result = rule.handler(match); // '/home/bar'\n   * ```\n   *\n   * ## Handler as string\n   *\n   * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n   * The string is first interpolated using `string.replace()` style pattern.\n   *\n   * #### Example:\n   * ```js\n   * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n   * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n   * var result = rule.handler(match); // '/home/bar'\n   * ```\n   */\n  fromRegExp(regexp: RegExp, handler: string|UrlRuleHandlerFn): RegExpRule {\n    if (regexp.global || regexp.sticky) throw new Error(\"Rule RegExp must not be global or sticky\");\n\n    /**\n     * If handler is a string, the url will be replaced by the string.\n     * If the string has any String.replace() style variables in it (like `$2`),\n     * they will be replaced by the captures from [[match]]\n     */\n    const redirectUrlTo = (match: RegExpExecArray) =>\n        // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n        (handler as string).replace(/\\$(\\$|\\d{1,2})/, (m, what) =>\n            match[what === '$' ? 0 : Number(what)]);\n\n    const _handler = isString(handler) ? redirectUrlTo : handler;\n\n    const match = (url: UrlParts): RegExpExecArray =>\n        regexp.exec(url.path);\n\n    let details = { regexp, type: \"REGEXP\" };\n    return extend(new BaseUrlRule(match, _handler), details) as RegExpRule\n  }\n}\n\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nexport class BaseUrlRule implements UrlRule {\n  $id: number;\n  priority: number;\n  type: UrlRuleType = \"RAW\";\n  handler: UrlRuleHandlerFn;\n  matchPriority = (match) => 0 - this.$id;\n\n  constructor(public match: UrlRuleMatchFn, handler?: UrlRuleHandlerFn) {\n    this.handler = handler || identity;\n  }\n}","/**\n * @coreapi\n * @module view\n */ /** for typedoc */\nimport {equals, applyPairs, removeFrom, TypedMap} from \"../common/common\";\nimport {curry, prop} from \"../common/hof\";\nimport {isString, isArray} from \"../common/predicates\";\nimport {trace} from \"../common/trace\";\nimport {PathNode} from \"../path/pathNode\";\n\nimport {ActiveUIView, ViewContext, ViewConfig} from \"./interface\";\nimport {_ViewDeclaration} from \"../state/interface\";\n\nexport type ViewConfigFactory = (path: PathNode[], decl: _ViewDeclaration) => ViewConfig|ViewConfig[];\n\nexport interface ViewServicePluginAPI {\n  _rootViewContext(context?: ViewContext): ViewContext;\n  _viewConfigFactory(viewType: string, factory: ViewConfigFactory);\n  _registeredUIViews(): ActiveUIView[];\n  _activeViewConfigs(): ViewConfig[];\n}\n\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nexport class ViewService {\n  private _uiViews: ActiveUIView[] = [];\n  private _viewConfigs: ViewConfig[] = [];\n  private _rootContext: ViewContext;\n  private _viewConfigFactories: { [key: string]: ViewConfigFactory } = {};\n\n  constructor() { }\n\n  public _pluginapi: ViewServicePluginAPI = {\n    _rootViewContext: this._rootViewContext.bind(this),\n    _viewConfigFactory: this._viewConfigFactory.bind(this),\n    _registeredUIViews: () => this._uiViews,\n    _activeViewConfigs: () => this._viewConfigs,\n  };\n\n  private _rootViewContext(context?: ViewContext): ViewContext {\n    return this._rootContext = context || this._rootContext;\n  };\n\n  private _viewConfigFactory(viewType: string, factory: ViewConfigFactory) {\n    this._viewConfigFactories[viewType] = factory;\n  }\n\n  createViewConfig(path: PathNode[], decl: _ViewDeclaration): ViewConfig[] {\n    let cfgFactory = this._viewConfigFactories[decl.$type];\n    if (!cfgFactory) throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n    let cfgs = cfgFactory(path, decl);\n    return isArray(cfgs) ? cfgs : [cfgs];\n  }\n  \n  /**\n   * Deactivates a ViewConfig.\n   *\n   * This function deactivates a `ViewConfig`.\n   * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n   *\n   * @param viewConfig The ViewConfig view to deregister.\n   */\n  deactivateViewConfig(viewConfig: ViewConfig) {\n    trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n    removeFrom(this._viewConfigs, viewConfig);\n  }\n\n  activateViewConfig(viewConfig: ViewConfig) {\n    trace.traceViewServiceEvent(\"-> Registering\", <any> viewConfig);\n    this._viewConfigs.push(viewConfig);\n  }\n\n  /**\n   * Given a ui-view and a ViewConfig, determines if they \"match\".\n   *\n   * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n   * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n   *\n   * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n   * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n   *\n   * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n   *\n   * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n   * - the ui-view's name matches the ViewConfig's target name\n   * - the ui-view's context matches the ViewConfig's anchor\n   *\n   * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n   * - There exists a parent ui-view where:\n   *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n   *    - the parent ui-view's context matches the ViewConfig's anchor\n   * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n   *\n   * Example:\n   *\n   * DOM:\n   * <ui-view>                        <!-- created in the root context (name: \"\") -->\n   *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n   *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n   *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n   *       </ui-view>\n   *     </ui-view>\n   *   </ui-view>\n   * </ui-view>\n   *\n   * uiViews: [\n   *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n   *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n   *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n   *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n   * ]\n   *\n   * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n   *\n   * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n   * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n   * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n   * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n   *\n   * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n   * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n   * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n   *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n   *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n   * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n   *   the tail of the ui-view's fqn \"default.bar\"\n   *\n   * @internalapi\n   */\n  static matches = (uiViewsByFqn: TypedMap<ActiveUIView>, uiView: ActiveUIView) => (viewConfig: ViewConfig) => {\n    // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n    if (uiView.$type !== viewConfig.viewDecl.$type) return false;\n\n    // Split names apart from both viewConfig and uiView into segments\n    let vc = viewConfig.viewDecl;\n    let vcSegments = vc.$uiViewName.split(\".\");\n    let uivSegments = uiView.fqn.split(\".\");\n\n    // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n    // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n    if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n      return false;\n\n    // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n    // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n    let negOffset = (1 - vcSegments.length) || undefined;\n    let fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n    let uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n    return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n  }\n\n  sync() {\n    let uiViewsByFqn: TypedMap<ActiveUIView> =\n        this._uiViews.map(uiv => [uiv.fqn, uiv]).reduce(applyPairs, <any> {});\n\n    // Return a weighted depth value for a uiView.\n    // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n    // plus the depth of the state that is populating the uiView\n    function uiViewDepth(uiView: ActiveUIView) {\n      const stateDepth = (context: ViewContext) =>\n          context && context.parent ? stateDepth(context.parent) + 1 : 1;\n      return (uiView.fqn.split(\".\").length * 10000) + stateDepth(uiView.creationContext);\n    }\n\n    // Return the ViewConfig's context's depth in the context tree.\n    function viewConfigDepth(config: ViewConfig) {\n      let context: ViewContext = config.viewDecl.$context, count = 0;\n      while (++count && context.parent) context = context.parent;\n      return count;\n    }\n\n    // Given a depth function, returns a compare function which can return either ascending or descending order\n    const depthCompare = curry((depthFn, posNeg, left, right) => posNeg * (depthFn(left) - depthFn(right)));\n\n    const matchingConfigPair = (uiView: ActiveUIView) => {\n      let matchingConfigs = this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n      if (matchingConfigs.length > 1) {\n        // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n        // Sort by depth and return the match from the deepest child\n        // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n        matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n      }\n      return [uiView, matchingConfigs[0]];\n    };\n\n    const configureUIView = ([uiView, viewConfig]) => {\n      // If a parent ui-view is reconfigured, it could destroy child ui-views.\n      // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n      if (this._uiViews.indexOf(uiView) !== -1)\n        uiView.configUpdated(viewConfig);\n    };\n\n    // Sort views by FQN and state depth. Process uiviews nearest the root first.\n    const pairs = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n\n    trace.traceViewSync(pairs);\n\n    pairs.forEach(configureUIView);\n  };\n\n  /**\n   * Registers a `ui-view` component\n   *\n   * When a `ui-view` component is created, it uses this method to register itself.\n   * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n   *\n   * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n   * and what the view's state context is.\n   *\n   * Note: There is no corresponding `deregisterUIView`.\n   *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n   *\n   * @param uiView The metadata for a UIView\n   * @return a de-registration function used when the view is destroyed.\n   */\n  registerUIView(uiView: ActiveUIView) {\n    trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n    let uiViews = this._uiViews;\n    const fqnAndTypeMatches = (uiv: ActiveUIView) => uiv.fqn === uiView.fqn && uiv.$type === uiView.$type;\n    if (uiViews.filter(fqnAndTypeMatches).length)\n      trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n\n    uiViews.push(uiView);\n    this.sync();\n\n    return () => {\n      let idx = uiViews.indexOf(uiView);\n      if (idx === -1) {\n        trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n        return;\n      }\n      trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n      removeFrom(uiViews)(uiView);\n    };\n  };\n\n  /**\n   * Returns the list of views currently available on the page, by fully-qualified name.\n   *\n   * @return {Array} Returns an array of fully-qualified view names.\n   */\n  available() {\n    return this._uiViews.map(prop(\"fqn\"));\n  }\n\n  /**\n   * Returns the list of views on the page containing loaded content.\n   *\n   * @return {Array} Returns an array of fully-qualified view names.\n   */\n  active() {\n    return this._uiViews.filter(prop(\"$config\")).map(prop(\"name\"));\n  }\n\n  /**\n   * Normalizes a view's name from a state.views configuration block.\n   *\n   * This should be used by a framework implementation to calculate the values for\n   * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n   *\n   * @param context the context object (state declaration) that the view belongs to\n   * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n   *\n   * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n   */\n  static normalizeUIViewTarget(context: ViewContext, rawViewName = \"\") {\n    // TODO: Validate incoming view name with a regexp to allow:\n    // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n    // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n    let viewAtContext: string[] = rawViewName.split(\"@\");\n    let uiViewName = viewAtContext[0] || \"$default\";  // default to unnamed view\n    let uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : \"^\";    // default to parent context\n\n    // Handle relative view-name sugar syntax.\n    // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n    let relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n    if (relativeViewNameSugar) {\n      // Clobbers existing contextAnchor (rawViewName validation will fix this)\n      uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n      uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n    }\n\n    if (uiViewName.charAt(0) === '!') {\n      uiViewName = uiViewName.substr(1);\n      uiViewContextAnchor = \"\"; // target absolutely from root\n    }\n\n    // handle parent relative targeting \"^.^.^\"\n    let relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n    if (relativeMatch.exec(uiViewContextAnchor)) {\n      let anchor = uiViewContextAnchor.split(\".\").reduce(((anchor, x) => anchor.parent), context);\n      uiViewContextAnchor = anchor.name;\n    } else if (uiViewContextAnchor === '.') {\n      uiViewContextAnchor = context.name;\n    }\n\n    return {uiViewName, uiViewContextAnchor};\n  }\n}","/**\n * @coreapi\n * @module core\n */ /** */\nimport {StateParams} from \"./params/stateParams\";\nimport {StateDeclaration} from \"./state/interface\";\nimport {StateObject} from \"./state/stateObject\";\nimport {Transition} from \"./transition/transition\";\nimport {Queue} from \"./common/queue\";\nimport {TransitionService} from \"./transition/transitionService\";\nimport {copy} from \"./common/common\";\nimport { Disposable } from './interface';\n\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nexport class UIRouterGlobals implements Disposable {\n  /**\n   * Current parameter values\n   *\n   * The parameter values from the latest successful transition\n   */\n  params: StateParams = new StateParams();\n\n  /**\n   * Current state\n   *\n   * The to-state from the latest successful transition\n   */\n  current: StateDeclaration;\n\n  /**\n   * Current state (internal object)\n   *\n   * The to-state from the latest successful transition\n   * @internalapi\n   */\n  $current: StateObject;\n\n  /**\n   * The current started/running transition.\n   * This transition has reached at least the onStart phase, but is not yet complete\n   */\n  transition: Transition;\n\n  /** @internalapi */\n  lastStartedTransitionId: number = -1;\n\n  /** @internalapi */\n  transitionHistory = new Queue<Transition>([], 1);\n\n  /** @internalapi */\n  successfulTransitions = new Queue<Transition>([], 1);\n\n  dispose() {\n    this.transitionHistory.clear();\n    this.successfulTransitions.clear();\n    this.transition = null;\n  }\n}\n","/**\n * @coreapi\n * @module url\n */ /** */\n\nimport { UIRouter } from \"../router\";\nimport { LocationServices, notImplemented, LocationConfig } from \"../common/coreservices\";\nimport { noop, createProxyFunctions } from \"../common/common\";\nimport { UrlConfigApi, UrlSyncApi, UrlRulesApi, UrlParts, MatchResult } from \"./interface\";\n\n/** @hidden */\nconst makeStub = (keys: string[]): any =>\n    keys.reduce((acc, key) => (acc[key] = notImplemented(key), acc), { dispose: noop });\n\n/** @hidden */ const locationServicesFns = [\"url\", \"path\", \"search\", \"hash\", \"onChange\"];\n/** @hidden */ const locationConfigFns = [\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\"];\n/** @hidden */ const umfFns = [\"type\", \"caseInsensitive\", \"strictMode\", \"defaultSquashPolicy\"];\n/** @hidden */ const rulesFns = [\"sort\", \"when\", \"initial\", \"otherwise\", \"rules\", \"rule\", \"removeRule\"];\n/** @hidden */ const syncFns = [\"deferIntercept\", \"listen\", \"sync\", \"match\"];\n\n/**\n * API for URL management\n */\nexport class UrlService implements LocationServices, UrlSyncApi {\n  /** @hidden */\n  static locationServiceStub: LocationServices = makeStub(locationServicesFns);\n  /** @hidden */\n  static locationConfigStub: LocationConfig = makeStub(locationConfigFns);\n\n  /** @inheritdoc */\n  url(): string;\n  /** @inheritdoc */\n  url(newurl: string, replace?: boolean, state?): void;\n  url(newurl?, replace?, state?): any { return };\n  /** @inheritdoc */\n  path(): string { return };\n  /** @inheritdoc */\n  search(): { [key: string]: any } { return };\n  /** @inheritdoc */\n  hash(): string { return };\n  /** @inheritdoc */\n  onChange(callback: Function): Function { return };\n\n\n  /**\n   * Returns the current URL parts\n   *\n   * This method returns the current URL components as a [[UrlParts]] object.\n   *\n   * @returns the current url parts\n   */\n  parts(): UrlParts {\n    return { path: this.path(), search: this.search(), hash: this.hash() }\n  }\n\n  dispose() { }\n\n  /** @inheritdoc */\n  sync(evt?) { return }\n  /** @inheritdoc */\n  listen(enabled?: boolean): Function { return };\n  /** @inheritdoc */\n  deferIntercept(defer?: boolean) { return }\n  /** @inheritdoc */\n  match(urlParts: UrlParts): MatchResult { return }\n\n  /**\n   * A nested API for managing URL rules and rewrites\n   *\n   * See: [[UrlRulesApi]] for details\n   */\n  rules: UrlRulesApi;\n\n  /**\n   * A nested API to configure the URL and retrieve URL information\n   *\n   * See: [[UrlConfigApi]] for details\n   */\n  config: UrlConfigApi;\n\n  /** @hidden */\n  private router: UIRouter;\n\n  /** @hidden */\n  constructor(router: UIRouter, lateBind = true) {\n    this.router = router;\n    this.rules = {} as any;\n    this.config = {} as any;\n\n    // proxy function calls from UrlService to the LocationService/LocationConfig\n    const locationServices = () => router.locationService;\n    createProxyFunctions(locationServices, this, locationServices, locationServicesFns, lateBind);\n\n    const locationConfig = () => router.locationConfig;\n    createProxyFunctions(locationConfig, this.config, locationConfig, locationConfigFns, lateBind);\n\n    const umf = () => router.urlMatcherFactory;\n    createProxyFunctions(umf, this.config, umf, umfFns);\n\n    const urlRouter = () => router.urlRouter;\n    createProxyFunctions(urlRouter, this.rules, urlRouter, rulesFns);\n    createProxyFunctions(urlRouter, this, urlRouter, syncFns);\n  }\n}\n","/**\n * @coreapi\n * @module core\n */ /** */\nimport { UrlMatcherFactory } from \"./url/urlMatcherFactory\";\nimport { UrlRouter } from \"./url/urlRouter\";\nimport { TransitionService } from \"./transition/transitionService\";\nimport { ViewService } from \"./view/view\";\nimport { StateRegistry } from \"./state/stateRegistry\";\nimport { StateService } from \"./state/stateService\";\nimport { UIRouterGlobals } from \"./globals\";\nimport { UIRouterPlugin, Disposable } from \"./interface\";\nimport { values, removeFrom } from \"./common/common\";\nimport { isFunction } from \"./common/predicates\";\nimport { UrlService } from \"./url/urlService\";\nimport { LocationServices, LocationConfig } from \"./common/coreservices\";\nimport { Trace, trace } from \"./common/trace\";\n\n/** @hidden */\nlet _routerInstance = 0;\n\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nexport class UIRouter {\n  /** @hidden */ $id = _routerInstance++;\n  /** @hidden */ _disposed = false;\n  /** @hidden */ private _disposables: Disposable[] = [];\n\n  /** Provides trace information to the console */\n  trace: Trace = trace;\n\n  /** Provides services related to ui-view synchronization */\n  viewService = new ViewService();\n\n  /** Provides services related to Transitions */\n  transitionService: TransitionService = new TransitionService(this);\n\n  /** Global router state */\n  globals: UIRouterGlobals = new UIRouterGlobals();\n\n  /**\n   * Deprecated for public use. Use [[urlService]] instead.\n   * @deprecated Use [[urlService]] instead\n   */\n  urlMatcherFactory: UrlMatcherFactory = new UrlMatcherFactory();\n\n  /**\n   * Deprecated for public use. Use [[urlService]] instead.\n   * @deprecated Use [[urlService]] instead\n   */\n  urlRouter: UrlRouter = new UrlRouter(this);\n\n  /** Provides a registry for states, and related registration services */\n  stateRegistry: StateRegistry = new StateRegistry(this);\n\n  /** Provides services related to states */\n  stateService = new StateService(this);\n\n  /** Provides services related to the URL */\n  urlService: UrlService = new UrlService(this);\n\n\n  /** Registers an object to be notified when the router is disposed */\n  disposable(disposable: Disposable) {\n    this._disposables.push(disposable);\n  }\n\n  /**\n   * Disposes this router instance\n   *\n   * When called, clears resources retained by the router by calling `dispose(this)` on all\n   * registered [[disposable]] objects.\n   *\n   * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n   *\n   * @param disposable (optional) the disposable to dispose\n   */\n  dispose(disposable?: any): void {\n    if (disposable && isFunction(disposable.dispose)) {\n      disposable.dispose(this);\n      return undefined;\n    }\n\n    this._disposed = true;\n    this._disposables.slice().forEach(d => {\n      try {\n        typeof d.dispose === 'function' && d.dispose(this);\n        removeFrom(this._disposables, d);\n      } catch (ignored) {}\n    });\n  }\n\n  /**\n   * Creates a new `UIRouter` object\n   *\n   * @param locationService a [[LocationServices]] implementation\n   * @param locationConfig a [[LocationConfig]] implementation\n   * @internalapi\n   */\n  constructor(\n      public locationService: LocationServices = UrlService.locationServiceStub,\n      public locationConfig: LocationConfig = UrlService.locationConfigStub\n  ) {\n\n    this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n    this.globals.$current = this.stateRegistry.root();\n    this.globals.current = this.globals.$current.self;\n\n    this.disposable(this.globals);\n    this.disposable(this.stateService);\n    this.disposable(this.stateRegistry);\n    this.disposable(this.transitionService);\n    this.disposable(this.urlRouter);\n    this.disposable(locationService);\n    this.disposable(locationConfig);\n  }\n\n  /** @hidden */\n  private _plugins: { [key: string]: UIRouterPlugin } = {};\n\n  /** Add plugin (as ES6 class) */\n  plugin<T extends UIRouterPlugin>(plugin: { new(router: UIRouter, options?: any): T }, options?: any): T;\n  /** Add plugin (as javascript constructor function) */\n  plugin<T extends UIRouterPlugin>(plugin: { (router: UIRouter, options?: any): void }, options?: any): T;\n  /** Add plugin (as javascript factory function) */\n  plugin<T extends UIRouterPlugin>(plugin: PluginFactory<T>, options?: any): T;\n  /**\n   * Adds a plugin to UI-Router\n   *\n   * This method adds a UI-Router Plugin.\n   * A plugin can enhance or change UI-Router behavior using any public API.\n   *\n   * #### Example:\n   * ```js\n   * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n   *\n   * var plugin = router.addPlugin(MyCoolPlugin);\n   * ```\n   *\n   * ### Plugin authoring\n   *\n   * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n   *\n   * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n   * For example, it may configure router options or add a Transition Hook.\n   *\n   * The plugin can then be published as a separate module.\n   *\n   * #### Example:\n   * ```js\n   * export class MyAuthPlugin implements UIRouterPlugin {\n   *   constructor(router: UIRouter, options: any) {\n   *     this.name = \"MyAuthPlugin\";\n   *     let $transitions = router.transitionService;\n   *     let $state = router.stateService;\n   *\n   *     let authCriteria = {\n   *       to: (state) => state.data && state.data.requiresAuth\n   *     };\n   *\n   *     function authHook(transition: Transition) {\n   *       let authService = transition.injector().get('AuthService');\n   *       if (!authService.isAuthenticated()) {\n   *         return $state.target('login');\n   *       }\n   *     }\n   *\n   *     $transitions.onStart(authCriteria, authHook);\n   *   }\n   * }\n   * ```\n   *\n   * @param plugin one of:\n   *        - a plugin class which implements [[UIRouterPlugin]]\n   *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n   *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n   * @param options options to pass to the plugin class/factory\n   * @returns the registered plugin instance\n   */\n  plugin<T extends UIRouterPlugin>(plugin: any, options: any = {}): T {\n    let pluginInstance = new plugin(this, options);\n    if (!pluginInstance.name) throw new Error(\"Required property `name` missing on plugin: \" + pluginInstance);\n    this._disposables.push(pluginInstance);\n    return this._plugins[pluginInstance.name] = pluginInstance;\n  }\n\n  /**\n   * Returns registered plugins\n   *\n   * Returns the registered plugin of the given `pluginName`.\n   * If no `pluginName` is given, returns all registered plugins\n   *\n   * @param pluginName (optional) the name of the plugin to get\n   * @return the named plugin (undefined if not found), or all plugins (if `pluginName` is omitted)\n   */\n  getPlugin(pluginName: string): UIRouterPlugin;\n  getPlugin(): UIRouterPlugin[];\n  getPlugin(pluginName?: string): UIRouterPlugin|UIRouterPlugin[] {\n    return pluginName ? this._plugins[pluginName] : values(this._plugins);\n  }\n}\n\n/** @internalapi */\nexport type PluginFactory<T> = (router: UIRouter, options?: any) => T;\n","/** @module hooks */ /** */\nimport {isString, isFunction} from \"../common/predicates\"\nimport {Transition} from \"../transition/transition\";\nimport {services} from \"../common/coreservices\";\nimport {TargetState} from \"../state/targetState\";\nimport {TransitionService} from \"../transition/transitionService\";\nimport {TransitionHookFn} from \"../transition/interface\";\n\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n * \n * See [[StateDeclaration.redirectTo]]\n */\nconst redirectToHook: TransitionHookFn = (trans: Transition) => {\n  let redirect = trans.to().redirectTo;\n  if (!redirect) return;\n\n  let $state = trans.router.stateService;\n\n  function handleResult(result: any) {\n    if (!result) return;\n    if (result instanceof TargetState) return result;\n    if (isString(result)) return $state.target(<any> result, trans.params(), trans.options());\n    if (result['state'] || result['params'])\n      return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n  }\n\n  if (isFunction(redirect)) {\n    return services.$q.when(redirect(trans)).then(handleResult);\n  }\n  return handleResult(redirect);\n};\n\nexport const registerRedirectToHook = (transitionService: TransitionService) =>\n    transitionService.onStart({to: (state) => !!state.redirectTo}, redirectToHook);\n","/** @module hooks */\n/** for typedoc */\nimport { noop } from '../common/common';\nimport { Transition } from '../transition/transition';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { TransitionStateHookFn, TransitionHookFn } from '../transition/interface';\nimport { TransitionService } from '../transition/transitionService';\nimport { val } from '../common/hof';\nimport { StateDeclaration } from '../state/interface';\n\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath);`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nconst eagerResolvePath: TransitionHookFn = (trans: Transition) =>\n    new ResolveContext(trans.treeChanges().to)\n        .resolvePath(\"EAGER\", trans)\n        .then(noop);\n\nexport const registerEagerResolvePath = (transitionService: TransitionService) =>\n    transitionService.onStart({}, eagerResolvePath, {priority: 1000});\n\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nconst lazyResolveState: TransitionStateHookFn = (trans: Transition, state: StateDeclaration) =>\n    new ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath(\"LAZY\", trans)\n        .then(noop);\n\nexport const registerLazyResolveState = (transitionService: TransitionService) =>\n    transitionService.onEnter({ entering: val(true) }, lazyResolveState, {priority: 1000});\n\n","/** @module hooks */ /** for typedoc */\nimport {noop} from \"../common/common\";\nimport {services} from \"../common/coreservices\";\nimport {Transition} from \"../transition/transition\";\nimport {ViewService} from \"../view/view\";\nimport {ViewConfig} from \"../view/interface\";\nimport {TransitionHookFn} from \"../transition/interface\";\nimport {TransitionService} from \"../transition/transitionService\";\n\n\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nconst loadEnteringViews: TransitionHookFn = (transition: Transition) => {\n  let $q = services.$q;\n  let enteringViews = transition.views(\"entering\");\n  if (!enteringViews.length) return;\n  return $q.all(enteringViews.map(view => $q.when(view.load()))).then(noop);\n};\n\nexport const registerLoadEnteringViews = (transitionService: TransitionService) =>\n    transitionService.onFinish({}, loadEnteringViews);\n\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nconst activateViews: TransitionHookFn = (transition: Transition) => {\n  let enteringViews = transition.views(\"entering\");\n  let exitingViews = transition.views(\"exiting\");\n  if (!enteringViews.length && !exitingViews.length) return;\n\n  let $view: ViewService = transition.router.viewService;\n\n  exitingViews.forEach((vc: ViewConfig) => $view.deactivateViewConfig(vc));\n  enteringViews.forEach((vc: ViewConfig) => $view.activateViewConfig(vc));\n\n  $view.sync();\n};\n\nexport const registerActivateViews = (transitionService: TransitionService) =>\n    transitionService.onSuccess({}, activateViews);\n","/** @module hooks */\n/** for typedoc */\nimport { Transition } from '../transition/transition';\nimport { copy } from '../common/common';\nimport { TransitionService } from '../transition/transitionService';\n\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nconst updateGlobalState = (trans: Transition) => {\n  let globals = trans.router.globals;\n\n  const transitionSuccessful = () => {\n    globals.successfulTransitions.enqueue(trans);\n    globals.$current = trans.$to();\n    globals.current = globals.$current.self;\n\n    copy(trans.params(), globals.params);\n  };\n\n  const clearCurrentTransition = () => {\n    // Do not clear globals.transition if a different transition has started in the meantime\n    if (globals.transition === trans) globals.transition = null;\n  };\n\n  trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n  trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\n\nexport const registerUpdateGlobalState = (transitionService: TransitionService) =>\n    transitionService.onCreate({}, updateGlobalState);\n","/** @module hooks */ /** */\nimport {UrlRouter} from \"../url/urlRouter\";\nimport {StateService} from \"../state/stateService\";\nimport {Transition} from \"../transition/transition\";\nimport {TransitionHookFn} from \"../transition/interface\";\nimport {TransitionService} from \"../transition/transitionService\";\n\n/** \n * A [[TransitionHookFn]] which updates the URL after a successful transition\n * \n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nconst updateUrl: TransitionHookFn = (transition: Transition) => {\n  let options = transition.options();\n  let $state: StateService = transition.router.stateService;\n  let $urlRouter: UrlRouter = transition.router.urlRouter;\n\n  // Dont update the url in these situations:\n  // The transition was triggered by a URL sync (options.source === 'url')\n  // The user doesn't want the url to update (options.location === false)\n  // The destination state, and all parents have no navigable url\n  if (options.source !== 'url' && options.location && $state.$current.navigable) {\n    var urlOptions = {replace: options.location === 'replace'};\n    $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n  }\n\n  $urlRouter.update(true);\n};\n\nexport const registerUpdateUrl = (transitionService: TransitionService) =>\n    transitionService.onSuccess({}, updateUrl, {priority: 9999});\n","/** @module transition */ /** */\nimport { TransitionHookPhase, PathType } from \"./interface\";\nimport { GetErrorHandler, GetResultHandler, TransitionHook } from \"./transitionHook\";\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nexport class TransitionEventType {\n\n  constructor(public name:               string,\n              public hookPhase:          TransitionHookPhase,\n              public hookOrder:          number,\n              public criteriaMatchPath:  PathType,\n              public reverseSort:        boolean = false,\n              public getResultHandler:   GetResultHandler = TransitionHook.HANDLE_RESULT,\n              public getErrorHandler:    GetErrorHandler = TransitionHook.REJECT_ERROR,\n              public synchronous:        boolean = false,\n  ) { }\n}\n","/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nimport {\n  IHookRegistry, TransitionOptions, TransitionHookScope, TransitionHookPhase, TransitionCreateHookFn, HookMatchCriteria,\n  HookRegOptions, PathTypes, PathType, RegisteredHooks, TransitionHookFn, TransitionStateHookFn\n} from \"./interface\";\nimport { Transition } from \"./transition\";\nimport { makeEvent, RegisteredHook } from \"./hookRegistry\";\nimport { TargetState } from \"../state/targetState\";\nimport { PathNode } from \"../path/pathNode\";\nimport { ViewService } from \"../view/view\";\nimport { UIRouter } from \"../router\";\nimport { registerAddCoreResolvables } from \"../hooks/coreResolvables\";\nimport { registerRedirectToHook } from \"../hooks/redirectTo\";\nimport { registerOnExitHook, registerOnRetainHook, registerOnEnterHook } from \"../hooks/onEnterExitRetain\";\nimport { registerEagerResolvePath, registerLazyResolveState } from \"../hooks/resolve\";\nimport { registerLoadEnteringViews, registerActivateViews } from \"../hooks/views\";\nimport { registerUpdateGlobalState } from \"../hooks/updateGlobals\";\nimport { registerUpdateUrl } from \"../hooks/url\";\nimport { registerLazyLoadHook } from \"../hooks/lazyLoad\";\nimport { TransitionEventType } from \"./transitionEventType\";\nimport { TransitionHook, GetResultHandler, GetErrorHandler } from \"./transitionHook\";\nimport { isDefined } from \"../common/predicates\";\nimport { removeFrom, values, createProxyFunctions } from \"../common/common\";\nimport { Disposable } from \"../interface\"; // has or is using\nimport { val } from \"../common/hof\";\nimport { registerIgnoredTransitionHook } from '../hooks/ignoredTransition';\nimport { registerInvalidTransitionHook } from '../hooks/invalidTransition';\n\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexport let defaultTransOpts: TransitionOptions = {\n  location    : true,\n  relative    : null,\n  inherit     : false,\n  notify      : true,\n  reload      : false,\n  custom      : {},\n  current     : () => null,\n  source      : \"unknown\"\n};\n\n\n/**\n * Plugin API for Transition Service\n * @internalapi\n */\nexport interface TransitionServicePluginAPI {\n  /**\n   * Adds a Path to be used as a criterion against a TreeChanges path\n   *\n   * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n   * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n   * Each state in the exiting path is checked against the criteria and returned as part of the match.\n   *\n   * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n   * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n   * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n   */\n  _definePathType(name: string, hookScope: TransitionHookScope);\n\n  /**\n   * Gets a Path definition used as a criterion against a TreeChanges path\n   */\n  _getPathTypes(): PathTypes;\n\n  /**\n   * Defines a transition hook type and returns a transition hook registration\n   * function (which can then be used to register hooks of this type).\n   */\n  _defineEvent(name: string,\n               hookPhase: TransitionHookPhase,\n               hookOrder: number,\n               criteriaMatchPath: PathType,\n               reverseSort?: boolean,\n               getResultHandler?: GetResultHandler,\n               getErrorHandler?: GetErrorHandler,\n               rejectIfSuperseded?: boolean);\n\n  /**\n   * Returns the known event types, such as `onBefore`\n   * If a phase argument is provided, returns only events for the given phase.\n   */\n  _getEvents(phase?: TransitionHookPhase): TransitionEventType[];\n\n  /** Returns the hooks registered for the given hook name */\n  getHooks(hookName: string): RegisteredHook[];\n}\n\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nexport class TransitionService implements IHookRegistry, Disposable {\n  /** @hidden */\n  _transitionCount = 0;\n\n  /**\n   * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n   *\n   * Registers a transition lifecycle hook, which is invoked during transition construction.\n   *\n   * This low level hook should only be used by plugins.\n   * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n   * The Sticky States plugin uses this hook to modify the treechanges.\n   *\n   * ### Lifecycle\n   *\n   * `onCreate` hooks are invoked *while a transition is being constructed*.\n   *\n   * ### Return value\n   *\n   * The hook's return value is ignored\n   *\n   * @internalapi\n   * @param criteria defines which Transitions the Hook should be invoked for.\n   * @param callback the hook function which will be invoked.\n   * @param options the registration options\n   * @returns a function which deregisters the hook.\n   */\n  onCreate(criteria: HookMatchCriteria, callback: TransitionCreateHookFn, options?: HookRegOptions): Function { return }\n  /** @inheritdoc */\n  onBefore(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return }\n  /** @inheritdoc */\n  onStart(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return }\n  /** @inheritdoc */\n  onExit(criteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function { return }\n  /** @inheritdoc */\n  onRetain(criteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function { return }\n  /** @inheritdoc */\n  onEnter(criteria: HookMatchCriteria, callback: TransitionStateHookFn, options?: HookRegOptions): Function { return }\n  /** @inheritdoc */\n  onFinish(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return }\n  /** @inheritdoc */\n  onSuccess(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return }\n  /** @inheritdoc */\n  onError(criteria: HookMatchCriteria, callback: TransitionHookFn, options?: HookRegOptions): Function { return }\n\n  /** @hidden */\n  public $view: ViewService;\n\n  /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n  private _eventTypes: TransitionEventType[] = [];\n  /** @hidden The registered transition hooks */\n  _registeredHooks = { } as RegisteredHooks;\n  /** @hidden The  paths on a criteria object */\n  private _criteriaPaths = { } as PathTypes;\n  /** @hidden */\n  private _router: UIRouter;\n\n  /** @internalapi */\n  _pluginapi: TransitionServicePluginAPI;\n\n  /**\n   * This object has hook de-registration functions for the built-in hooks.\n   * This can be used by third parties libraries that wish to customize the behaviors\n   *\n   * @hidden\n   */\n  _deregisterHookFns: {\n    addCoreResolves: Function;\n    ignored: Function;\n    invalid: Function;\n    redirectTo: Function;\n    onExit: Function;\n    onRetain: Function;\n    onEnter: Function;\n    eagerResolve: Function;\n    lazyResolve: Function;\n    loadViews: Function;\n    activateViews: Function;\n    updateGlobals: Function;\n    updateUrl: Function;\n    lazyLoad: Function;\n  };\n\n  /** @hidden */\n  constructor(_router: UIRouter) {\n    this._router = _router;\n    this.$view = _router.viewService;\n    this._deregisterHookFns = <any> {};\n    this._pluginapi = <TransitionServicePluginAPI> createProxyFunctions(val(this), {}, val(this), [\n      '_definePathType',\n      '_defineEvent',\n      '_getPathTypes',\n      '_getEvents',\n      'getHooks',\n    ]);\n\n    this._defineCorePaths();\n    this._defineCoreEvents();\n    this._registerCoreTransitionHooks();\n  }\n\n  /**\n   * dispose\n   * @internalapi\n   */\n  dispose(router: UIRouter) {\n    values(this._registeredHooks).forEach((hooksArray: RegisteredHook[]) => hooksArray.forEach(hook => {\n      hook._deregistered = true;\n      removeFrom(hooksArray, hook);\n    }));\n  }\n\n  /**\n   * Creates a new [[Transition]] object\n   *\n   * This is a factory function for creating new Transition objects.\n   * It is used internally by the [[StateService]] and should generally not be called by application code.\n   *\n   * @param fromPath the path to the current state (the from state)\n   * @param targetState the target state (destination)\n   * @returns a Transition\n   */\n  create(fromPath: PathNode[], targetState: TargetState): Transition {\n    return new Transition(fromPath, targetState, this._router);\n  }\n\n  /** @hidden */\n  private _defineCoreEvents() {\n    const Phase = TransitionHookPhase;\n    const TH = TransitionHook;\n    const paths = this._criteriaPaths;\n    const NORMAL_SORT = false, REVERSE_SORT = true;\n    const ASYNCHRONOUS = false, SYNCHRONOUS = true;\n\n    this._defineEvent(\"onCreate\",  Phase.CREATE,  0,   paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n\n    this._defineEvent(\"onBefore\",  Phase.BEFORE,  0,   paths.to);\n\n    this._defineEvent(\"onStart\",   Phase.RUN,     0,   paths.to);\n    this._defineEvent(\"onExit\",    Phase.RUN,     100, paths.exiting, REVERSE_SORT);\n    this._defineEvent(\"onRetain\",  Phase.RUN,     200, paths.retained);\n    this._defineEvent(\"onEnter\",   Phase.RUN,     300, paths.entering);\n    this._defineEvent(\"onFinish\",  Phase.RUN,     400, paths.to);\n\n    this._defineEvent(\"onSuccess\", Phase.SUCCESS, 0,   paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    this._defineEvent(\"onError\",   Phase.ERROR,   0,   paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n  }\n\n  /** @hidden */\n  private _defineCorePaths() {\n    const { STATE, TRANSITION } = TransitionHookScope;\n\n    this._definePathType(\"to\", TRANSITION);\n    this._definePathType(\"from\", TRANSITION);\n    this._definePathType(\"exiting\", STATE);\n    this._definePathType(\"retained\", STATE);\n    this._definePathType(\"entering\", STATE);\n  }\n\n  /** @hidden */\n  _defineEvent(name: string,\n               hookPhase: TransitionHookPhase,\n               hookOrder: number,\n               criteriaMatchPath: PathType,\n               reverseSort: boolean = false,\n               getResultHandler: GetResultHandler = TransitionHook.HANDLE_RESULT,\n               getErrorHandler: GetErrorHandler = TransitionHook.REJECT_ERROR,\n               synchronous: boolean = false)\n  {\n    let eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n\n    this._eventTypes.push(eventType);\n    makeEvent(this, this, eventType);\n  };\n\n  /** @hidden */\n  private _getEvents(phase?: TransitionHookPhase): TransitionEventType[] {\n    let transitionHookTypes = isDefined(phase) ?\n        this._eventTypes.filter(type => type.hookPhase === phase) :\n        this._eventTypes.slice();\n\n    return transitionHookTypes.sort((l, r) => {\n      let cmpByPhase = l.hookPhase - r.hookPhase;\n      return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n    })\n  }\n\n  /**\n   * Adds a Path to be used as a criterion against a TreeChanges path\n   *\n   * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n   * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n   * Each state in the exiting path is checked against the criteria and returned as part of the match.\n   *\n   * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n   * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n   * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n   *\n   * @hidden\n   */\n  private _definePathType(name: string, hookScope: TransitionHookScope) {\n    this._criteriaPaths[name] = { name, scope: hookScope };\n  }\n\n  /** * @hidden */\n  private _getPathTypes(): PathTypes {\n    return this._criteriaPaths;\n  }\n\n  /** @hidden */\n  public getHooks(hookName: string): RegisteredHook[] {\n    return this._registeredHooks[hookName];\n  }\n\n  /** @hidden */\n  private _registerCoreTransitionHooks() {\n    let fns = this._deregisterHookFns;\n\n    fns.addCoreResolves = registerAddCoreResolvables(this);\n    fns.ignored         = registerIgnoredTransitionHook(this);\n    fns.invalid         = registerInvalidTransitionHook(this);\n\n    // Wire up redirectTo hook\n    fns.redirectTo      = registerRedirectToHook(this);\n    \n    // Wire up onExit/Retain/Enter state hooks\n    fns.onExit          = registerOnExitHook(this);\n    fns.onRetain        = registerOnRetainHook(this);\n    fns.onEnter         = registerOnEnterHook(this);\n\n    // Wire up Resolve hooks\n    fns.eagerResolve    = registerEagerResolvePath(this);\n    fns.lazyResolve     = registerLazyResolveState(this);\n                                 \n    // Wire up the View management hooks\n    fns.loadViews       = registerLoadEnteringViews(this);\n    fns.activateViews   = registerActivateViews(this);\n\n    // Updates global state after a transition\n    fns.updateGlobals   = registerUpdateGlobalState(this);\n\n    // After globals.current is updated at priority: 10000\n    fns.updateUrl       = registerUpdateUrl(this);\n\n    // Lazy load state trees\n    fns.lazyLoad        = registerLazyLoadHook(this);\n  }\n}\n","/**\n * @coreapi\n * @module state\n */\n/** */\nimport { createProxyFunctions, defaults, extend, inArray, noop, removeFrom, silenceUncaughtInPromise, silentRejection } from '../common/common';\nimport { isDefined, isObject, isString } from '../common/predicates';\nimport { Queue } from '../common/queue';\nimport { services } from '../common/coreservices';\n\nimport { PathUtils } from '../path/pathFactory';\nimport { PathNode } from '../path/pathNode';\n\nimport { HookResult, TransitionOptions } from '../transition/interface';\nimport { defaultTransOpts } from '../transition/transitionService';\nimport { Rejection, RejectType } from '../transition/rejectFactory';\nimport { Transition } from '../transition/transition';\n\nimport { HrefOptions, LazyLoadResult, StateDeclaration, StateOrName, TransitionPromise } from './interface';\nimport { StateObject } from './stateObject';\nimport { TargetState } from './targetState';\n\nimport { ParamsOrArray, RawParams } from '../params/interface';\nimport { Param } from '../params/param';\nimport { Glob } from '../common/glob';\nimport { UIRouter } from '../router';\nimport { UIInjector } from '../interface';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { lazyLoadState } from '../hooks/lazyLoad';\nimport { not, val } from '../common/hof';\nimport { StateParams } from '../params/stateParams';\n\nexport type OnInvalidCallback =\n    (toState?: TargetState, fromState?: TargetState, injector?: UIInjector) => HookResult;\n\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nexport class StateService {\n  /** @internalapi */\n  invalidCallbacks: OnInvalidCallback[] = [];\n\n  /**\n   * The [[Transition]] currently in progress (or null)\n   *\n   * This is a passthrough through to [[UIRouterGlobals.transition]]\n   */\n  get transition() { return this.router.globals.transition; }\n  /**\n   * The latest successful state parameters\n   *\n   * This is a passthrough through to [[UIRouterGlobals.params]]\n   */\n  get params(): StateParams { return this.router.globals.params; }\n  /**\n   * The current [[StateDeclaration]]\n   *\n   * This is a passthrough through to [[UIRouterGlobals.current]]\n   */\n  get current() { return this.router.globals.current; }\n  /**\n   * The current [[StateObject]]\n   *\n   * This is a passthrough through to [[UIRouterGlobals.$current]]\n   */\n  get $current() { return this.router.globals.$current; }\n\n  /** @internalapi */\n  constructor(private router: UIRouter) {\n    let getters = ['current', '$current', 'params', 'transition'];\n    let boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n    createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n  }\n\n  /** @internalapi */\n  dispose() {\n    this.defaultErrorHandler(noop);\n    this.invalidCallbacks = [];\n  }\n\n  /**\n   * Handler for when [[transitionTo]] is called with an invalid state.\n   *\n   * Invokes the [[onInvalid]] callbacks, in natural order.\n   * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n   * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n   *\n   * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n   *\n   * @internalapi\n   */\n  private _handleInvalidTargetState(fromPath: PathNode[], toState: TargetState) {\n    let fromState = PathUtils.makeTargetState(fromPath);\n    let globals = this.router.globals;\n    const latestThing = () => globals.transitionHistory.peekTail();\n    let latest = latestThing();\n    let callbackQueue = new Queue<OnInvalidCallback>(this.invalidCallbacks.slice());\n    let injector = new ResolveContext(fromPath).injector();\n\n    const checkForRedirect = (result: HookResult) => {\n      if (!(result instanceof TargetState)) {\n        return;\n      }\n\n      let target = <TargetState> result;\n      // Recreate the TargetState, in case the state is now defined.\n      target = this.target(target.identifier(), target.params(), target.options());\n\n      if (!target.valid()) {\n        return Rejection.invalid(target.error()).toPromise();\n      }\n\n      if (latestThing() !== latest) {\n        return Rejection.superseded().toPromise();\n      }\n\n      return this.transitionTo(target.identifier(), target.params(), target.options());\n    };\n\n    function invokeNextCallback() {\n      let nextCallback = callbackQueue.dequeue();\n      if (nextCallback === undefined) return Rejection.invalid(toState.error()).toPromise();\n\n      let callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n      return callbackResult.then(checkForRedirect).then(result => result || invokeNextCallback());\n    }\n\n    return invokeNextCallback();\n  }\n\n  /**\n   * Registers an Invalid State handler\n   *\n   * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n   * has been called with an invalid state reference parameter\n   *\n   * Example:\n   * ```js\n   * stateService.onInvalid(function(to, from, injector) {\n   *   if (to.name() === 'foo') {\n   *     let lazyLoader = injector.get('LazyLoadService');\n   *     return lazyLoader.load('foo')\n   *         .then(() => stateService.target('foo'));\n   *   }\n   * });\n   * ```\n   *\n   * @param {function} callback invoked when the toState is invalid\n   *   This function receives the (invalid) toState, the fromState, and an injector.\n   *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n   *   If one is returned, it is treated as a redirect.\n   *\n   * @returns a function which deregisters the callback\n   */\n  onInvalid(callback: OnInvalidCallback): Function {\n    this.invalidCallbacks.push(callback);\n    return function deregisterListener() {\n      removeFrom(this.invalidCallbacks)(callback);\n    }.bind(this);\n  }\n\n\n  /**\n   * Reloads the current state\n   *\n   * A method that force reloads the current state, or a partial state hierarchy.\n   * All resolves are re-resolved, and components reinstantiated.\n   *\n   * #### Example:\n   * ```js\n   * let app angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.reload = function(){\n   *     $state.reload();\n   *   }\n   * });\n   * ```\n   *\n   * Note: `reload()` is just an alias for:\n   *\n   * ```js\n   * $state.transitionTo($state.current, $state.params, {\n   *   reload: true, inherit: false\n   * });\n   * ```\n   *\n   * @param reloadState A state name or a state object.\n   *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n   *\n   * #### Example:\n   * ```js\n   * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n   * //and current state is 'contacts.detail.item'\n   * let app angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.reload = function(){\n   *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n   *     $state.reload('contact.detail');\n   *   }\n   * });\n   * ```\n   *\n   * @returns A promise representing the state of the new transition. See [[StateService.go]]\n   */\n  reload(reloadState?: StateOrName): Promise<StateObject> {\n    return this.transitionTo(this.current, this.params, {\n      reload: isDefined(reloadState) ? reloadState : true,\n      inherit: false,\n      notify: false,\n    });\n  };\n\n  /**\n   * Transition to a different state and/or parameters\n   *\n   * Convenience method for transitioning to a new state.\n   *\n   * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n   * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n   * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n   * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n   * inherit from the current parameter values (because of `inherit: true`).\n   *\n   * #### Example:\n   * ```js\n   * let app = angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.changeState = function () {\n   *     $state.go('contact.detail');\n   *   };\n   * });\n   * ```\n   *\n   * @param to Absolute state name, state object, or relative state path (relative to current state).\n   *\n   * Some examples:\n   *\n   * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n   * - `$state.go('^')` - will go to the parent state\n   * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n   * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n   *\n   * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n   *\n   *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n   *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n   *\n   * @param options Transition options\n   *\n   * @returns {promise} A promise representing the state of the new transition.\n   */\n  go(to: StateOrName, params?: RawParams, options?: TransitionOptions): TransitionPromise {\n    let defautGoOpts = { relative: this.$current, inherit: true };\n    let transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n    return this.transitionTo(to, params, transOpts);\n  };\n\n  /**\n   * Creates a [[TargetState]]\n   *\n   * This is a factory method for creating a TargetState\n   *\n   * This may be returned from a Transition Hook to redirect a transition, for example.\n   */\n  target(identifier: StateOrName, params?: ParamsOrArray, options: TransitionOptions = {}): TargetState {\n    // If we're reloading, find the state object to reload from\n    if (isObject(options.reload) && !(<any>options.reload).name)\n      throw new Error('Invalid reload state object');\n    let reg = this.router.stateRegistry;\n    options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(<any> options.reload, options.relative);\n\n    if (options.reload && !options.reloadState)\n      throw new Error(`No such reload state '${(isString(options.reload) ? options.reload : (<any>options.reload).name)}'`);\n\n    let stateDefinition = reg.matcher.find(identifier, options.relative);\n    return new TargetState(identifier, stateDefinition, params, options);\n  };\n\n  private getCurrentPath(): PathNode[] {\n    let globals = this.router.globals;\n    let latestSuccess: Transition = globals.successfulTransitions.peekTail();\n    const rootPath = () => [ new PathNode(this.router.stateRegistry.root()) ];\n    return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n  }\n\n  /**\n   * Low-level method for transitioning to a new state.\n   *\n   * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n   *\n   * #### Example:\n   * ```js\n   * let app = angular.module('app', ['ui.router']);\n   *\n   * app.controller('ctrl', function ($scope, $state) {\n   *   $scope.changeState = function () {\n   *     $state.transitionTo('contact.detail');\n   *   };\n   * });\n   * ```\n   *\n   * @param to State name or state object.\n   * @param toParams A map of the parameters that will be sent to the state,\n   *      will populate $stateParams.\n   * @param options Transition options\n   *\n   * @returns A promise representing the state of the new transition. See [[go]]\n   */\n  transitionTo(to: StateOrName, toParams: RawParams = {}, options: TransitionOptions = {}): TransitionPromise {\n    let router = this.router;\n    let globals = router.globals;\n    options = defaults(options, defaultTransOpts);\n    const getCurrent = () =>\n        globals.transition;\n    options = extend(options, { current: getCurrent });\n\n    let ref: TargetState = this.target(to, toParams, options);\n    let currentPath = this.getCurrentPath();\n\n    if (!ref.exists())\n      return this._handleInvalidTargetState(currentPath, ref);\n\n    if (!ref.valid())\n      return <TransitionPromise> silentRejection(ref.error());\n\n    /**\n     * Special handling for Ignored, Aborted, and Redirected transitions\n     *\n     * The semantics for the transition.run() promise and the StateService.transitionTo()\n     * promise differ. For instance, the run() promise may be rejected because it was\n     * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n     * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n     * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n     */\n    const rejectedTransitionHandler = (transition: Transition) => (error: any): Promise<any> => {\n      if (error instanceof Rejection) {\n        const isLatest = router.globals.lastStartedTransitionId === transition.$id;\n\n        if (error.type === RejectType.IGNORED) {\n          isLatest && router.urlRouter.update();\n          // Consider ignored `Transition.run()` as a successful `transitionTo`\n          return services.$q.when(globals.current);\n        }\n\n        const detail: any = error.detail;\n        if (error.type === RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n          // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n          // by returning the promise for the new (redirect) `Transition.run()`.\n          let redirect: Transition = transition.redirect(detail);\n          return redirect.run().catch(rejectedTransitionHandler(redirect));\n        }\n\n        if (error.type === RejectType.ABORTED) {\n          isLatest && router.urlRouter.update();\n          return services.$q.reject(error);\n        }\n      }\n\n      let errorHandler = this.defaultErrorHandler();\n      errorHandler(error);\n\n      return services.$q.reject(error);\n    };\n\n    let transition = this.router.transitionService.create(currentPath, ref);\n    let transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n    silenceUncaughtInPromise(transitionToPromise); // issue #2676\n\n    // Return a promise for the transition, which also has the transition object on it.\n    return extend(transitionToPromise, { transition });\n  };\n\n  /**\n   * Checks if the current state *is* the provided state\n   *\n   * Similar to [[includes]] but only checks for the full state name.\n   * If params is supplied then it will be tested for strict equality against the current\n   * active params object, so all params must match with none missing and no extras.\n   *\n   * #### Example:\n   * ```js\n   * $state.$current.name = 'contacts.details.item';\n   *\n   * // absolute name\n   * $state.is('contact.details.item'); // returns true\n   * $state.is(contactDetailItemStateObject); // returns true\n   * ```\n   *\n   * // relative name (. and ^), typically from a template\n   * // E.g. from the 'contacts.details' template\n   * ```html\n   * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n   * ```\n   *\n   * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n   * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n   * to test against the current active state.\n   * @param options An options object. The options are:\n   *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n   *     test relative to `options.relative` state (or name).\n   *\n   * @returns Returns true if it is the state.\n   */\n  is(stateOrName: StateOrName, params?: RawParams, options?: { relative?: StateOrName }): boolean {\n    options = defaults(options, { relative: this.$current });\n    let state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n    if (!isDefined(state)) return undefined;\n    if (this.$current !== state) return false;\n    if (!params) return true;\n\n    let schema: Param[] = state.parameters({ inherit: true, matchingKeys: params });\n    return Param.equals(schema, Param.values(schema, params), this.params);\n  };\n\n  /**\n   * Checks if the current state *includes* the provided state\n   *\n   * A method to determine if the current active state is equal to or is the child of the\n   * state stateName. If any params are passed then they will be tested for a match as well.\n   * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n   *\n   * #### Example when `$state.$current.name === 'contacts.details.item'`\n   * ```js\n   * // Using partial names\n   * $state.includes(\"contacts\"); // returns true\n   * $state.includes(\"contacts.details\"); // returns true\n   * $state.includes(\"contacts.details.item\"); // returns true\n   * $state.includes(\"contacts.list\"); // returns false\n   * $state.includes(\"about\"); // returns false\n   * ```\n   *\n   * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n   * ```js\n   * $state.includes(\"*.details.*.*\"); // returns true\n   * $state.includes(\"*.details.**\"); // returns true\n   * $state.includes(\"**.item.**\"); // returns true\n   * $state.includes(\"*.details.item.url\"); // returns true\n   * $state.includes(\"*.details.*.url\"); // returns true\n   * $state.includes(\"*.details.*\"); // returns false\n   * $state.includes(\"item.**\"); // returns false\n   * ```\n   *\n   * @param stateOrName A partial name, relative name, glob pattern,\n   *   or state object to be searched for within the current state name.\n   * @param params A param object, e.g. `{sectionId: section.id}`,\n   *   that you'd like to test against the current active state.\n   * @param options An options object. The options are:\n   *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n   *     test relative to `options.relative` state (or name).\n   *\n   * @returns {boolean} Returns true if it does include the state\n   */\n  includes(stateOrName: StateOrName, params?: RawParams, options?: TransitionOptions): boolean {\n    options = defaults(options, { relative: this.$current });\n    let glob = isString(stateOrName) && Glob.fromString(<string> stateOrName);\n\n    if (glob) {\n      if (!glob.matches(this.$current.name)) return false;\n      stateOrName = this.$current.name;\n    }\n    let state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n\n    if (!isDefined(state)) return undefined;\n    if (!isDefined(include[state.name])) return false;\n    if (!params) return true;\n\n    let schema: Param[] = state.parameters({ inherit: true, matchingKeys: params });\n    return Param.equals(schema, Param.values(schema, params), this.params);\n  };\n\n\n  /**\n   * Generates a URL for a state and parameters\n   *\n   * Returns the url for the given state populated with the given params.\n   *\n   * #### Example:\n   * ```js\n   * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n   * ```\n   *\n   * @param stateOrName The state name or state object you'd like to generate a url from.\n   * @param params An object of parameter values to fill the state's required parameters.\n   * @param options Options object. The options are:\n   *\n   * @returns {string} compiled state url\n   */\n  href(stateOrName: StateOrName, params: RawParams, options?: HrefOptions): string {\n    let defaultHrefOpts = {\n      lossy:    true,\n      inherit:  true,\n      absolute: false,\n      relative: this.$current,\n    };\n    options = defaults(options, defaultHrefOpts);\n    params = params || {};\n\n    let state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n\n    if (!isDefined(state)) return null;\n    if (options.inherit) params = <any> this.params.$inherit(params, this.$current, state);\n\n    let nav = (state && options.lossy) ? state.navigable : state;\n\n    if (!nav || nav.url === undefined || nav.url === null) {\n      return null;\n    }\n    return this.router.urlRouter.href(nav.url, params, {\n      absolute: options.absolute,\n    });\n  };\n\n  /** @hidden */\n  private _defaultErrorHandler: ((_error: any) => void) = function $defaultErrorHandler($error$) {\n    if ($error$ instanceof Error && $error$.stack) {\n      console.error($error$);\n      console.error($error$.stack);\n    } else if ($error$ instanceof Rejection) {\n      console.error($error$.toString());\n      if ($error$.detail && $error$.detail.stack)\n        console.error($error$.detail.stack);\n    } else {\n      console.error($error$);\n    }\n  };\n\n  /**\n   * Sets or gets the default [[transitionTo]] error handler.\n   *\n   * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n   * This includes errors caused by resolves and transition hooks.\n   *\n   * Note:\n   * This handler does not receive certain Transition rejections.\n   * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n   *\n   * The built-in default error handler logs the error to the console.\n   *\n   * You can provide your own custom handler.\n   *\n   * #### Example:\n   * ```js\n   * stateService.defaultErrorHandler(function() {\n   *   // Do not log transitionTo errors\n   * });\n   * ```\n   *\n   * @param handler a global error handler function\n   * @returns the current global error handler\n   */\n  defaultErrorHandler(handler?: (error: any) => void): (error: any) => void {\n    return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n  }\n\n  /**\n   * Gets a registered [[StateDeclaration]] object\n   *\n   * Returns the state declaration object for any specific state, or for all registered states.\n   *\n   * @param stateOrName (absolute or relative) If provided, will only get the declaration object for the requested state.\n   * If not provided, returns an array of ALL states.\n   * @param base When `stateOrName` is a relative state reference (such as `.bar.baz`), the state will be retrieved relative to this state.\n   *\n   * @returns a [[StateDeclaration]] object (or array of all registered [[StateDeclaration]] objects.)\n   */\n  get(stateOrName: StateOrName, base: StateOrName): StateDeclaration;\n  get(stateOrName: StateOrName): StateDeclaration;\n  get(): StateDeclaration[];\n  get(stateOrName?: StateOrName, base?: StateOrName): any {\n    let reg = this.router.stateRegistry;\n    if (arguments.length === 0) return reg.get();\n    return reg.get(stateOrName, base || this.$current);\n  }\n\n  /**\n   * Lazy loads a state\n   *\n   * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n   *\n   * @param stateOrName the state that should be lazy loaded\n   * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n   * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n   * This noop transition is not actually run.\n   *\n   * @returns a promise to lazy load\n   */\n  lazyLoad(stateOrName: StateOrName, transition?: Transition): Promise<LazyLoadResult> {\n    let state: StateDeclaration = this.get(stateOrName);\n    if (!state || !state.lazyLoad) throw new Error(\"Can not lazy load \" + stateOrName);\n\n    let currentPath = this.getCurrentPath();\n    let target = PathUtils.makeTargetState(currentPath);\n    transition = transition || this.router.transitionService.create(currentPath, target);\n\n    return lazyLoadState(transition, state);\n  }\n}\n","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport { isArray, isObject, $QLike } from \"../common/index\";\n\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nexport const $q = {\n  /** Normalizes a value as a promise */\n  when: (val) => new Promise((resolve, reject) => resolve(val)),\n\n  /** Normalizes a value as a promise rejection */\n  reject: (val) => new Promise((resolve, reject) => { reject(val); }),\n\n  /** @returns a deferred object, which has `resolve` and `reject` functions */\n  defer: () => {\n    let deferred: any = {};\n    deferred.promise = new Promise((resolve, reject) => {\n      deferred.resolve = resolve;\n      deferred.reject = reject;\n    });\n    return deferred;\n  },\n\n  /** Like Promise.all(), but also supports object key/promise notation like $q */\n  all: (promises: { [key: string]: Promise<any> } | Promise<any>[]) => {\n    if (isArray(promises)) {\n      return Promise.all(promises);\n    }\n\n    if (isObject(promises)) {\n      // Convert promises map to promises array.\n      // When each promise resolves, map it to a tuple { key: key, val: val }\n      let chain = Object.keys(promises)\n          .map(key => promises[key].then(val => ({key, val})));\n\n      // Then wait for all promises to resolve, and convert them back to an object\n      return $q.all(chain).then(values =>\n        values.reduce((acc, tuple) => { acc[tuple.key] = tuple.val; return acc; }, {}));\n    }\n  }\n} as $QLike;","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport {\n  extend, assertPredicate, isFunction, isArray, isInjectable, $InjectorLike, IInjectable\n} from \"../common/index\";\n\n// globally available injectables\nlet globals = {};\nlet STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nlet ARGUMENT_NAMES = /([^\\s,]+)/g;\n\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nexport const $injector = {\n  /** Gets an object from DI based on a string token */\n  get: name => globals[name],\n\n  /** Returns true if an object named `name` exists in global DI */\n  has: (name) => $injector.get(name) != null,\n\n  /**\n   * Injects a function\n   *\n   * @param fn the function to inject\n   * @param context the function's `this` binding\n   * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n   */\n  invoke: (fn: IInjectable, context?, locals?) => {\n    let all = extend({}, globals, locals || {});\n    let params = $injector.annotate(fn);\n    let ensureExist = assertPredicate((key: string) => all.hasOwnProperty(key), key => `DI can't find injectable: '${key}'`);\n    let args = params.filter(ensureExist).map(x => all[x]);\n    if (isFunction(fn)) return fn.apply(context, args);\n    else return (fn as any[]).slice(-1)[0].apply(context, args);\n  },\n\n  /**\n   * Returns a function's dependencies\n   *\n   * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n   * @return an array of `string`s\n   */\n  annotate: (fn: IInjectable): any[] => {\n    if (!isInjectable(fn)) throw new Error(`Not an injectable function: ${fn}`);\n    if (fn && (fn as any).$inject) return (fn as any).$inject;\n    if (isArray(fn)) return fn.slice(0, -1);\n    let fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    return result || [];\n  }\n} as $InjectorLike;","/**\n * @internalapi\n * @module vanilla\n */ /** */\n\nimport { LocationServices } from \"../common/coreservices\";\nimport { Disposable } from \"../interface\";\nimport { UIRouter } from \"../router\";\nimport { LocationLike, HistoryLike } from \"./interface\";\nimport { parseUrl, getParams, buildUrl } from \"./utils\";\nimport { isDefined } from \"../common/predicates\";\nimport { extend, deregAll, removeFrom } from \"../common/common\";\n/** A base `LocationServices` */\nexport abstract class BaseLocationServices implements LocationServices, Disposable {\n  constructor(router: UIRouter, public fireAfterUpdate: boolean) {\n    this._location = window && window.location;\n    this._history = window && window.history;\n  }\n\n  _listener = evt => this._listeners.forEach(cb => cb(evt));\n\n  private _listeners: Function[] = [];\n  _location: LocationLike;\n  _history: HistoryLike;\n\n  /**\n   * This should return the current internal URL representation.\n   *\n   * The internal URL includes only the portion that UI-Router matches.\n   * It does not include:\n   * - protocol\n   * - server\n   * - port\n   * - base href or hash\n   */\n  abstract _get(): string;\n\n  /**\n   * This should set the current URL.\n   *\n   * The `url` param should include only the portion that UI-Router matches on.\n   * It should not include:\n   * - protocol\n   * - server\n   * - port\n   * - base href or hash\n   *\n   * However, after this function completes, the browser URL should reflect the entire (fully qualified)\n   * HREF including those data.\n   */\n  abstract _set(state: any, title: string, url: string, replace: boolean);\n\n  hash   = () => parseUrl(this._get()).hash;\n  path   = () => parseUrl(this._get()).path;\n  search = () => getParams(parseUrl(this._get()).search);\n\n  url(url?: string, replace: boolean = true): string {\n    if (isDefined(url) && url !== this._get()) {\n      this._set(null, null, url, replace);\n\n      if (this.fireAfterUpdate) {\n        let evt = extend(new Event(\"locationchange\"), { url });\n        this._listeners.forEach(cb => cb(evt));\n      }\n    }\n\n    return buildUrl(this);\n  }\n\n  onChange(cb: EventListener) {\n    this._listeners.push(cb);\n    return () => removeFrom(this._listeners, cb);\n  }\n\n  dispose(router: UIRouter) {\n    deregAll(this._listeners);\n  }\n}\n","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport { trimHashVal } from \"./utils\";\nimport { UIRouter } from \"../router\";\nimport { BaseLocationServices } from \"./baseLocationService\";\n\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nexport class HashLocationService extends BaseLocationServices {\n  constructor(router: UIRouter) {\n    super(router, false);\n    window.addEventListener('hashchange', this._listener, false);\n  }\n\n  _get() {\n    return trimHashVal(this._location.hash);\n  }\n  _set(state: any, title: string, url: string, replace: boolean) {\n    this._location.hash = url;\n  }\n\n  dispose (router: UIRouter) {\n    super.dispose(router);\n    window.removeEventListener('hashchange', this._listener);\n  }\n}\n\n","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport { BaseLocationServices } from \"./baseLocationService\";\nimport { UIRouter } from \"../router\";\n\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nexport class MemoryLocationService extends BaseLocationServices {\n  _url: string;\n\n  constructor(router: UIRouter) {\n    super(router, true);\n  }\n\n  _get() {\n    return this._url;\n  }\n\n  _set(state: any, title: string, url: string, replace: boolean) {\n    this._url = url;\n  }\n}\n","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport { LocationConfig } from \"../common/coreservices\";\nimport { splitQuery, splitHash } from \"./utils\";\nimport { UIRouter } from \"../router\";\nimport { BaseLocationServices } from \"./baseLocationService\";\n\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nexport class PushStateLocationService extends BaseLocationServices {\n  _config: LocationConfig;\n\n  constructor(router: UIRouter) {\n    super(router, true);\n    this._config = router.urlService.config;\n    window.addEventListener(\"popstate\", this._listener, false);\n  };\n\n  _get() {\n    let { pathname, hash, search } = this._location;\n    search = splitQuery(search)[1]; // strip ? if found\n    hash = splitHash(hash)[1]; // strip # if found\n    return pathname + (search ? \"?\" + search : \"\") + (hash ? \"$\" + search : \"\");\n  }\n\n  _set(state: any, title: string, url: string, replace: boolean) {\n    let { _config, _history } = this;\n    let fullUrl = _config.baseHref() + url;\n\n    if (replace) {\n      _history.replaceState(state, title, fullUrl);\n    } else {\n      _history.pushState(state, title, fullUrl);\n    }\n  }\n\n  dispose(router: UIRouter) {\n    super.dispose(router);\n    window.removeEventListener(\"popstate\", this._listener);\n  }\n}\n\n","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport { LocationConfig } from \"../common/coreservices\";\nimport { isDefined } from \"../common/predicates\";\nimport { noop } from \"../common/common\";\n\n/** A `LocationConfig` mock that gets/sets all config from an in-memory object */\nexport class MemoryLocationConfig implements LocationConfig {\n  _baseHref = '';\n  _port = 80;\n  _protocol = \"http\";\n  _host = \"localhost\";\n  _hashPrefix = \"\";\n\n  port = () => this._port;\n  protocol = () => this._protocol;\n  host = () => this._host;\n  baseHref = () => this._baseHref;\n  html5Mode = () => false;\n  hashPrefix = (newval?) => isDefined(newval) ? this._hashPrefix = newval : this._hashPrefix;\n  dispose = noop;\n}","/**\n * @internalapi\n * @module vanilla\n */\n/** */\nimport { isDefined } from \"../common/predicates\";\nimport { LocationConfig } from \"../common/coreservices\";\n\n/** A `LocationConfig` that delegates to the browser's `location` object */\nexport class BrowserLocationConfig implements LocationConfig {\n  private _baseHref = undefined;\n  private _hashPrefix = \"\";\n\n  constructor(router?, private _isHtml5 = false) { }\n\n  port(): number {\n    if (location.port) {\n      return Number(location.port);\n    }\n\n    return this.protocol() === 'https' ? 443 : 80;\n  }\n\n  protocol(): string {\n    return location.protocol.replace(/:/g, '');\n  }\n\n  host(): string {\n    return location.hostname;\n  }\n\n  html5Mode(): boolean {\n    return this._isHtml5;\n  }\n\n  hashPrefix(): string;\n  hashPrefix(newprefix?: string): string {\n    return isDefined(newprefix) ? this._hashPrefix = newprefix : this._hashPrefix;\n  };\n\n  baseHref(href?: string): string {\n    return isDefined(href) ? this._baseHref = href : this._baseHref || this.applyDocumentBaseHref();\n  }\n\n  applyDocumentBaseHref() {\n    let baseTags = document.getElementsByTagName(\"base\");\n    return this._baseHref = baseTags.length ? baseTags[0].href.substr(location.origin.length) : \"\";\n  }\n\n  dispose() {}\n}\n","/**\n * # Core classes and interfaces\n *\n * The classes and interfaces that are core to ui-router and do not belong\n * to a more specific subsystem (such as resolve).\n *\n * @coreapi\n * @preferred\n * @module core\n */ /** for typedoc */\n\n// Need to import or export at least one concrete something\nimport {noop} from \"./common/common\";\nimport {UIRouter} from \"./router\";\n\n/**\n * An interface for getting values from dependency injection.\n *\n * This is primarily used to get resolve values for a given token.\n * An instance of the `UIInjector` can be retrieved from the current transition using [[Transition.injector]].\n *\n * ---\n *\n * If no resolve is found for a token, then it will delegate to the native injector.\n * The native injector may be Angular 1 `$injector`, Angular 2 `Injector`, or a simple polyfill.\n *\n * In Angular 2, the native injector might be the root Injector,\n * or it might be a lazy loaded `NgModule` injector scoped to a lazy load state tree.\n */\nexport interface UIInjector {\n  /**\n   * Gets a value from the injector.\n   *\n   * For a given token, returns the value from the injector that matches the token.\n   * If the token is for a resolve that has not yet been fetched, this throws an error.\n   *\n   * #### Example:\n   * ```js\n   * var myResolve = injector.get('myResolve');\n   * ```\n   *\n   * #### ng1 Example:\n   * ```js\n   * // Fetch StateService\n   * injector.get('$state').go('home');\n   * ```\n   *\n   * #### ng2 Example:\n   * ```js\n   * import {StateService} from \"ui-router-ng2\";\n   * // Fetch StateService\n   * injector.get(StateService).go('home');\n   * ```\n   *\n   * #### Typescript Example:\n   * ```js\n   * var stringArray = injector.get<string[]>('myStringArray');\n   * ```\n   *\n   * ### `NOWAIT` policy\n   *\n   * When using [[ResolvePolicy.async]] === `NOWAIT`, the value returned from `get()` is a promise for the result.\n   * The promise is not automatically unwrapped.\n   *\n   * @param token the key for the value to get.  May be a string, a class, or any arbitrary object.\n   * @return the Dependency Injection value that matches the token\n   */\n  get(token: any): any;\n  /** Gets a value as type `T` (generics parameter) */\n  get<T>(token: any): T;\n\n  /**\n   * Asynchronously gets a value from the injector\n   *\n   * For a given token, returns a promise for the value from the injector that matches the token.\n   * If the token is for a resolve that has not yet been fetched, this triggers the resolve to load.\n   *\n   * #### Example:\n   * ```js\n   * return injector.getAsync('myResolve').then(value => {\n   *   if (value === 'declined') return false;\n   * });\n   * ```\n   *\n   * @param token the key for the value to get.  May be a string or arbitrary object.\n   * @return a Promise for the Dependency Injection value that matches the token\n   */\n  getAsync(token: any): Promise<any>;\n  /** Asynchronously gets a value as type `T` (generics parameter) */\n  getAsync<T>(token: any): Promise<T>;\n\n  /**\n   * Gets a value from the native injector\n   *\n   * Returns a value from the native injector, bypassing anything in the [[ResolveContext]].\n   *\n   * Example:\n   * ```js\n   * let someThing = injector.getNative(SomeToken);\n   * ```\n   *\n   * @param token the key for the value to get.  May be a string or arbitrary object.\n   * @return the Dependency Injection value that matches the token\n   */\n  getNative(token: any): any;\n  getNative<T>(token: any): T;\n}\n\n/** @internalapi */\nexport interface UIRouterPlugin extends Disposable {\n  name: string;\n}\n\n/** @internalapi */\nexport abstract class UIRouterPluginBase implements UIRouterPlugin, Disposable {\n  abstract name: string;\n  dispose(router: UIRouter) { }\n}\n\n/** @internalapi */\nexport interface Disposable {\n  /** Instructs the Disposable to clean up any resources */\n  dispose(router?: UIRouter);\n}","/** @module ng1 */ /** for typedoc */\nimport {\n    val, isObject, createProxyFunctions, BuilderFunction, StateRegistry, StateService, OnInvalidCallback\n} from \"@uirouter/core\";\nimport { Ng1StateDeclaration } from \"./interface\";\n\n/**\n * The Angular 1 `StateProvider`\n *\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nexport class StateProvider {\n  constructor(private stateRegistry: StateRegistry, private stateService: StateService) {\n    createProxyFunctions(val(StateProvider.prototype), this, val(this));\n  }\n\n  /**\n   * Decorates states when they are registered\n   *\n   * Allows you to extend (carefully) or override (at your own peril) the\n   * `stateBuilder` object used internally by [[StateRegistry]].\n   * This can be used to add custom functionality to ui-router,\n   * for example inferring templateUrl based on the state name.\n   *\n   * When passing only a name, it returns the current (original or decorated) builder\n   * function that matches `name`.\n   *\n   * The builder functions that can be decorated are listed below. Though not all\n   * necessarily have a good use case for decoration, that is up to you to decide.\n   *\n   * In addition, users can attach custom decorators, which will generate new\n   * properties within the state's internal definition. There is currently no clear\n   * use-case for this beyond accessing internal states (i.e. $state.$current),\n   * however, expect this to become increasingly relevant as we introduce additional\n   * meta-programming features.\n   *\n   * **Warning**: Decorators should not be interdependent because the order of\n   * execution of the builder functions in non-deterministic. Builder functions\n   * should only be dependent on the state definition object and super function.\n   *\n   *\n   * Existing builder functions and current return values:\n   *\n   * - **parent** `{object}` - returns the parent state object.\n   * - **data** `{object}` - returns state data, including any inherited data that is not\n   *   overridden by own values (if any).\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n   *   or `null`.\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n   *   navigable).\n   * - **params** `{object}` - returns an array of state params that are ensured to\n   *   be a super-set of parent's params.\n   * - **views** `{object}` - returns a views object where each key is an absolute view\n   *   name (i.e. \"viewName@stateName\") and each value is the config object\n   *   (template, controller) for the view. Even when you don't use the views object\n   *   explicitly on a state config, one is still created for you internally.\n   *   So by decorating this builder function you have access to decorating template\n   *   and controller properties.\n   * - **ownParams** `{object}` - returns an array of params that belong to the state,\n   *   not including any params defined by ancestor states.\n   * - **path** `{string}` - returns the full path from the root down to this state.\n   *   Needed for state activation.\n   * - **includes** `{object}` - returns an object that includes every state that\n   *   would pass a `$state.includes()` test.\n   *\n   * #### Example:\n   * Override the internal 'views' builder with a function that takes the state\n   * definition, and a reference to the internal function being overridden:\n   * ```js\n   * $stateProvider.decorator('views', function (state, parent) {\n   *   let result = {},\n   *       views = parent(state);\n   *\n   *   angular.forEach(views, function (config, name) {\n   *     let autoName = (state.name + '.' + name).replace('.', '/');\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n   *     result[name] = config;\n   *   });\n   *   return result;\n   * });\n   *\n   * $stateProvider.state('home', {\n   *   views: {\n   *     'contact.list': { controller: 'ListController' },\n   *     'contact.item': { controller: 'ItemController' }\n   *   }\n   * });\n   * ```\n   *\n   *\n   * ```js\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\n   * // and /partials/home/contact/item.html, respectively.\n   * $state.go('home');\n   * ```\n   *\n   * @param {string} name The name of the builder function to decorate.\n   * @param {object} func A function that is responsible for decorating the original\n   * builder function. The function receives two parameters:\n   *\n   *   - `{object}` - state - The state config object.\n   *   - `{object}` - super - The original builder function.\n   *\n   * @return {object} $stateProvider - $stateProvider instance\n   */\n  decorator(name: string, func: BuilderFunction) {\n    return this.stateRegistry.decorator(name, func) || this;\n  }\n\n  /**\n   * Registers a state\n   *\n   * ### This is a passthrough to [[StateRegistry.register]].\n   *\n   * Registers a state configuration under a given state name.\n   * The stateConfig object has the following acceptable properties.\n   *\n   * <a id='template'></a>\n   *\n   * - **`template`** - {string|function=} - html template as a string or a function that returns\n   *   an html template as a string which should be used by the uiView directives. This property\n   *   takes precedence over templateUrl.\n   *\n   *   If `template` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <a id='templateUrl'></a>\n   *\n   * - **`templateUrl`** - {string|function=} - path or function that returns a path to an html\n   *   template that should be used by uiView.\n   *\n   *   If `templateUrl` is a function, it will be called with the following parameters:\n   *\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n   *     applying the current state\n   *\n   * <a id='templateProvider'></a>\n   *\n   * - **`templateProvider`** - {function=} - Provider function that returns HTML content\n   *   string.\n   *\n   * <a id='controller'></a>\n   *\n   * - **`controller`** - {string|function=} -  Controller fn that should be associated with newly\n   *   related scope or the name of a registered controller if passed as a string.\n   *\n   * <a id='controllerProvider'></a>\n   *\n   * - **`controllerProvider`** - {function=} - Injectable provider function that returns\n   *   the actual controller or string.\n   *\n   * <a id='controllerAs'></a>\n   *\n   * - **`controllerAs`** â {string=} â A controller alias name. If present the controller will be\n   *   published to scope under the controllerAs name.\n   *\n   * <a id='resolve'></a>\n   *\n   * - **`resolve`** - {object.&lt;string, function&gt;=} - An optional map of dependencies which\n   *   should be injected into the controller. If any of these dependencies are promises,\n   *   the router will wait for them all to be resolved or one to be rejected before the\n   *   controller is instantiated. If all the promises are resolved successfully, the values\n   *   of the resolved promises are injected and $stateChangeSuccess event is fired. If any\n   *   of the promises are rejected the $stateChangeError event is fired. The map object is:\n   *\n   *   - key - {string}: name of dependency to be injected into controller\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function,\n   *     it is injected and return value it treated as dependency. If result is a promise, it is\n   *     resolved before its value is injected into controller.\n   *\n   * <a id='url'></a>\n   *\n   * - **`url`** - {string=} - A url with optional parameters. When a state is navigated or\n   *   transitioned to, the `$stateParams` service will be populated with any\n   *   parameters that were passed.\n   *\n   * <a id='params'></a>\n   *\n   * - **`params`** - {object=} - An array of parameter names or regular expressions. Only\n   *   use this within a state if you are not using url. Otherwise you can specify your\n   *   parameters within the url. When a state is navigated or transitioned to, the\n   *   $stateParams service will be populated with any parameters that were passed.\n   *\n   * <a id='views'></a>\n   *\n   * - **`views`** - {object=} - Use the views property to set up multiple views or to target views\n   *   manually/explicitly.\n   *\n   * <a id='abstract'></a>\n   *\n   * - **`abstract`** - {boolean=} - An abstract state will never be directly activated,\n   *   but can provide inherited properties to its common children states.\n   *\n   * <a id='onEnter'></a>\n   *\n   * - **`onEnter`** - {object=} - Callback function for when a state is entered. Good way\n   *   to trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to use the `['injection1', 'injection2', function(injection1, injection2){}]` syntax.\n   *\n   * <a id='onExit'></a>\n   *\n   * - **`onExit`** - {object=} - Callback function for when a state is exited. Good way to\n   *   trigger an action or dispatch an event, such as opening a dialog.\n   * If minifying your scripts, make sure to use the `['injection1', 'injection2', function(injection1, injection2){}]` syntax.\n   *\n   * <a id='reloadOnSearch'></a>\n   *\n   * - **`reloadOnSearch = true`** - {boolean=} - If `false`, will not retrigger the same state\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()).\n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\n   *\n   * <a id='data'></a>\n   *\n   * - **`data`** - {object=} - Arbitrary data object, useful for custom configuration.\n   *\n   * #### Example:\n   * Some state name examples\n   * ```js\n   * // stateName can be a single top-level name (must be unique).\n   * $stateProvider.state(\"home\", {});\n   *\n   * // Or it can be a nested state name. This state is a child of the\n   * // above \"home\" state.\n   * $stateProvider.state(\"home.newest\", {});\n   *\n   * // Nest states as deeply as needed.\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n   *\n   * // state() returns $stateProvider, so you can chain state declarations.\n   * $stateProvider\n   *   .state(\"home\", {})\n   *   .state(\"about\", {})\n   *   .state(\"contacts\", {});\n   * ```\n   *\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\n   * @param {object} definition State configuration object.\n   */\n  state(name: string, definition: Ng1StateDeclaration): StateProvider;\n  state(definition: Ng1StateDeclaration): StateProvider;\n  state(name: any, definition?: any) {\n    if (isObject(name)) {\n      definition = name;\n    } else {\n      definition.name = name;\n    }\n    this.stateRegistry.register(definition);\n    return this;\n  }\n\n  /**\n   * Registers an invalid state handler\n   *\n   * This is a passthrough to [[StateService.onInvalid]] for ng1.\n   */\n\n  onInvalid(callback: OnInvalidCallback): Function {\n    return this.stateService.onInvalid(callback);\n  }\n}\n","/** @module ng1 */ /** */\nimport {\n  StateObject, TransitionStateHookFn, HookResult, Transition, services, ResolveContext, extend, BuilderFunction\n} from \"@uirouter/core\";\nimport { getLocals } from \"../services\";\nimport { Ng1StateDeclaration } from '../interface';\n\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n */\nexport const getStateHookBuilder = (hookName: \"onEnter\"|\"onExit\"|\"onRetain\") =>\nfunction stateHookBuilder(state: StateObject, parentFn: BuilderFunction): TransitionStateHookFn {\n  let hook = state[hookName];\n  let pathname = hookName === 'onExit' ? 'from' : 'to';\n\n  function decoratedNg1Hook(trans: Transition, state: Ng1StateDeclaration): HookResult {\n    let resolveContext = new ResolveContext(trans.treeChanges(pathname));\n    let locals = extend(getLocals(resolveContext), { $state$: state, $transition$: trans });\n    return services.$injector.invoke(hook, this, locals);\n  }\n\n  return hook ? decoratedNg1Hook : undefined;\n};\n","/**\n * @internalapi\n * @module ng1\n */ /** */\nimport { LocationConfig, LocationServices, UIRouter, ParamType } from \"@uirouter/core\";\nimport { val, createProxyFunctions, removeFrom, isObject } from \"@uirouter/core\";\nimport { ILocationService, ILocationProvider } from \"angular\";\n\n/**\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n */\nexport class Ng1LocationServices implements LocationConfig, LocationServices {\n  private $locationProvider: ILocationProvider;\n  private $location: ILocationService;\n  private $sniffer;\n\n  path;\n  search;\n  hash;\n  hashPrefix;\n  port;\n  protocol;\n  host;\n  baseHref;\n\n  // .onChange() registry\n  private _urlListeners: Function[] = [];\n\n  dispose() { }\n\n  constructor($locationProvider: ILocationProvider) {\n    this.$locationProvider = $locationProvider;\n    let _lp = val($locationProvider);\n    createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n  }\n\n  onChange(callback: Function) {\n    this._urlListeners.push(callback);\n    return () => removeFrom(this._urlListeners)(callback);\n  }\n\n  html5Mode() {\n    let html5Mode: any = this.$locationProvider.html5Mode();\n    html5Mode = isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n    return html5Mode && this.$sniffer.history;\n  }\n\n  url(newUrl?: string, replace = false, state?) {\n    if (newUrl) this.$location.url(newUrl);\n    if (replace) this.$location.replace();\n    if (state) this.$location.state(state);\n    return this.$location.url();\n  }\n\n  _runtimeServices($rootScope, $location: ILocationService, $sniffer, $browser) {\n    this.$location = $location;\n    this.$sniffer = $sniffer;\n\n    // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n    $rootScope.$on(\"$locationChangeSuccess\", evt => this._urlListeners.forEach(fn => fn(evt)));\n    let _loc = val($location);\n    let _browser = val($browser);\n\n    // Bind these LocationService functions to $location\n    createProxyFunctions(_loc, this, _loc, [\"replace\", \"path\", \"search\", \"hash\"]);\n    // Bind these LocationConfig functions to $location\n    createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n    // Bind these LocationConfig functions to $browser\n    createProxyFunctions(_browser, this, _browser, ['baseHref']);\n  }\n\n  /**\n   * Applys ng1-specific path parameter encoding\n   *\n   * The Angular 1 `$location` service is a bit weird.\n   * It doesn't allow slashes to be encoded/decoded bi-directionally.\n   *\n   * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n   *\n   * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n   *\n   * @param router\n   */\n  static monkeyPatchPathParameterType(router: UIRouter) {\n    let pathType: ParamType = router.urlMatcherFactory.type('path');\n\n    pathType.encode = (val: any) =>\n        val != null ? val.toString().replace(/(~|\\/)/g, m => ({ '~': '~~', '/': '~2F' }[m])) : val;\n\n    pathType.decode = (val: string) =>\n        val != null ? val.toString().replace(/(~~|~2F)/g, m => ({ '~~': '~', '~2F': '/' }[m])) : val;\n\n  }\n}\n","/** @module url */ /** */\nimport {\n    UIRouter, UrlRouter, LocationServices, $InjectorLike, BaseUrlRule, UrlRuleHandlerFn, UrlMatcher,\n    IInjectable\n} from \"@uirouter/core\";\nimport { services, isString, isFunction, isArray, identity } from \"@uirouter/core\";\n\nexport interface RawNg1RuleFunction {\n  ($injector: $InjectorLike, $location: LocationServices): string|void;\n}\n\n/**\n * Manages rules for client-side URL\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class manages the router rules for what to do when the URL changes.\n *\n * This provider remains for backwards compatibility.\n *\n * @deprecated\n */\nexport class UrlRouterProvider {\n  /** @hidden */ _router: UIRouter;\n  /** @hidden */ _urlRouter: UrlRouter;\n\n  /** @hidden */\n  constructor(router: UIRouter) {\n    this._router = router;\n    this._urlRouter = router.urlRouter;\n  }\n\n  /** @hidden */\n  $get() {\n    let urlRouter = this._urlRouter;\n    urlRouter.update(true);\n    if (!urlRouter.interceptDeferred) urlRouter.listen();\n    return urlRouter;\n  }\n\n  /**\n   * Registers a url handler function.\n   *\n   * Registers a low level url handler (a `rule`).\n   * A rule detects specific URL patterns and returns a redirect, or performs some action.\n   *\n   * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n   *\n   * #### Example:\n   * ```js\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Here's an example of how you might allow case insensitive urls\n   *   $urlRouterProvider.rule(function ($injector, $location) {\n   *     var path = $location.path(),\n   *         normalized = path.toLowerCase();\n   *\n   *     if (path !== normalized) {\n   *       return normalized;\n   *     }\n   *   });\n   * });\n   * ```\n   *\n   * @param ruleFn\n   * Handler function that takes `$injector` and `$location` services as arguments.\n   * You can use them to detect a url and return a different url as a string.\n   *\n   * @return [[UrlRouterProvider]] (`this`)\n   */\n  rule(ruleFn: RawNg1RuleFunction): UrlRouterProvider {\n    if (!isFunction(ruleFn)) throw new Error(\"'rule' must be a function\");\n\n    const match = () =>\n        ruleFn(services.$injector, this._router.locationService);\n\n    let rule = new BaseUrlRule(match, identity);\n    this._urlRouter.rule(rule);\n    return this;\n  };\n\n  /**\n   * Defines the path or behavior to use when no url can be matched.\n   *\n   * #### Example:\n   * ```js\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // if the path doesn't match any of the urls you configured\n   *   // otherwise will take care of routing the user to the\n   *   // specified url\n   *   $urlRouterProvider.otherwise('/index');\n   *\n   *   // Example of using function rule as param\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\n   *     return '/a/valid/url';\n   *   });\n   * });\n   * ```\n   *\n   * @param rule\n   * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n   * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n   *\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n   */\n  otherwise(rule: string | RawNg1RuleFunction): UrlRouterProvider {\n    let urlRouter = this._urlRouter;\n\n    if (isString(rule)) {\n      urlRouter.otherwise(rule);\n    } else if (isFunction(rule)) {\n      urlRouter.otherwise(() => rule(services.$injector, this._router.locationService));\n    } else {\n      throw new Error(\"'rule' must be a string or function\");\n    }\n\n    return this;\n  };\n\n  /**\n   * Registers a handler for a given url matching.\n   *\n   * If the handler is a string, it is\n   * treated as a redirect, and is interpolated according to the syntax of match\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n   *\n   * If the handler is a function, it is injectable.\n   * It gets invoked if `$location` matches.\n   * You have the option of inject the match object as `$match`.\n   *\n   * The handler can return\n   *\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n   *   will continue trying to find another one that matches.\n   * - **string** which is treated as a redirect and passed to `$location.url()`\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n   *\n   * #### Example:\n   * ```js\n   * var app = angular.module('app', ['ui.router.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n   *     if ($state.$current.navigable !== state ||\n   *         !equalForKeys($match, $stateParams) {\n   *      $state.transitionTo(state, $match, false);\n   *     }\n   *   });\n   * });\n   * ```\n   *\n   * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n   * @param handler The path (or function that returns a path) that you want to redirect your user to.\n   * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n   *\n   * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n   */\n  when(what: (RegExp|UrlMatcher|string), handler: string|IInjectable) {\n    if (isArray(handler) || isFunction(handler)) {\n      handler = UrlRouterProvider.injectableHandler(this._router, handler);\n    }\n\n    this._urlRouter.when(what, handler as any);\n    return this;\n  };\n\n  static injectableHandler(router: UIRouter, handler): UrlRuleHandlerFn {\n    return match =>\n        services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params });\n  }\n\n  /**\n   * Disables monitoring of the URL.\n   *\n   * Call this method before UI-Router has bootstrapped.\n   * It will stop UI-Router from performing the initial url sync.\n   *\n   * This can be useful to perform some asynchronous initialization before the router starts.\n   * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n   *\n   * #### Example:\n   * ```js\n   * var app = angular.module('app', ['ui.router']);\n   *\n   * app.config(function ($urlRouterProvider) {\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\n   *   $urlRouterProvider.deferIntercept();\n   * })\n   *\n   * app.run(function (MyService, $urlRouter, $http) {\n   *   $http.get(\"/stuff\").then(function(resp) {\n   *     MyService.doStuff(resp.data);\n   *     $urlRouter.listen();\n   *     $urlRouter.sync();\n   *   });\n   * });\n   * ```\n   *\n   * @param defer Indicates whether to defer location change interception.\n   *        Passing no parameter is equivalent to `true`.\n   */\n  deferIntercept(defer?: boolean) {\n    this._urlRouter.deferIntercept(defer);\n  };\n}\n","/** @module ng1 */ /** */\nimport { ng as angular } from \"./angular\";\nimport { IServiceProviderFactory } from \"angular\";\nimport IAnchorScrollService = angular.IAnchorScrollService;\nimport ITimeoutService = angular.ITimeoutService;\n\nexport interface UIViewScrollProvider {\n  /**\n   * Uses standard anchorScroll behavior\n   *\n   * Reverts [[$uiViewScroll]] back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\n   * service for scrolling based on the url anchor.\n   */\n  useAnchorScroll(): void;\n}\n\n\n/** @hidden */\nfunction $ViewScrollProvider() {\n\n  var useAnchorScroll = false;\n\n  this.useAnchorScroll = function () {\n    useAnchorScroll = true;\n  };\n\n  this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll: IAnchorScrollService, $timeout: ITimeoutService): Function {\n    if (useAnchorScroll) {\n      return $anchorScroll;\n    }\n\n    return function ($element: JQuery) {\n      return $timeout(function () {\n        $element[0].scrollIntoView();\n      }, 0, false);\n    };\n  }];\n}\n\nangular.module('ui.router.state').provider('$uiViewScroll', <IServiceProviderFactory> $ViewScrollProvider);\n","/**\n * Main entry point for angular 1.x build\n * @module ng1\n */ /** */\n\nexport * from \"./interface\";\nexport * from \"./services\";\nexport * from \"./statebuilders/views\";\nexport * from \"./stateProvider\";\nexport * from \"./urlRouterProvider\";\n\nimport \"./injectables\";\nimport \"./directives/stateDirectives\";\nimport \"./stateFilters\";\nimport \"./directives/viewDirective\";\nimport \"./viewScroll\";\n\nexport default \"ui.router\";\n\nimport * as core from \"@uirouter/core\";\nexport { core };\nexport * from \"@uirouter/core\";\n\n","/**!\n * AngularJS file upload directives and services. Supoorts: file upload/drop/paste, resume, cancel/abort,\n * progress, resize, thumbnail, preview, validation and CORS\n * @author  Danial  <danial.farid@gmail.com>\n * @version 12.2.13\n */\n\nif (window.XMLHttpRequest && !(window.FileAPI && FileAPI.shouldLoad)) {\n  window.XMLHttpRequest.prototype.setRequestHeader = (function (orig) {\n    return function (header, value) {\n      if (header === '__setXHR_') {\n        var val = value(this);\n        // fix for angular < 1.2.0\n        if (val instanceof Function) {\n          val(this);\n        }\n      } else {\n        orig.apply(this, arguments);\n      }\n    };\n  })(window.XMLHttpRequest.prototype.setRequestHeader);\n}\n\nvar ngFileUpload = angular.module('ngFileUpload', []);\n\nngFileUpload.version = '12.2.13';\n\nngFileUpload.service('UploadBase', ['$http', '$q', '$timeout', function ($http, $q, $timeout) {\n  var upload = this;\n  upload.promisesCount = 0;\n\n  this.isResumeSupported = function () {\n    return window.Blob && window.Blob.prototype.slice;\n  };\n\n  var resumeSupported = this.isResumeSupported();\n\n  function sendHttp(config) {\n    config.method = config.method || 'POST';\n    config.headers = config.headers || {};\n\n    var deferred = config._deferred = config._deferred || $q.defer();\n    var promise = deferred.promise;\n\n    function notifyProgress(e) {\n      if (deferred.notify) {\n        deferred.notify(e);\n      }\n      if (promise.progressFunc) {\n        $timeout(function () {\n          promise.progressFunc(e);\n        });\n      }\n    }\n\n    function getNotifyEvent(n) {\n      if (config._start != null && resumeSupported) {\n        return {\n          loaded: n.loaded + config._start,\n          total: (config._file && config._file.size) || n.total,\n          type: n.type, config: config,\n          lengthComputable: true, target: n.target\n        };\n      } else {\n        return n;\n      }\n    }\n\n    if (!config.disableProgress) {\n      config.headers.__setXHR_ = function () {\n        return function (xhr) {\n          if (!xhr || !xhr.upload || !xhr.upload.addEventListener) return;\n          config.__XHR = xhr;\n          if (config.xhrFn) config.xhrFn(xhr);\n          xhr.upload.addEventListener('progress', function (e) {\n            e.config = config;\n            notifyProgress(getNotifyEvent(e));\n          }, false);\n          //fix for firefox not firing upload progress end, also IE8-9\n          xhr.upload.addEventListener('load', function (e) {\n            if (e.lengthComputable) {\n              e.config = config;\n              notifyProgress(getNotifyEvent(e));\n            }\n          }, false);\n        };\n      };\n    }\n\n    function uploadWithAngular() {\n      $http(config).then(function (r) {\n          if (resumeSupported && config._chunkSize && !config._finished && config._file) {\n            var fileSize = config._file && config._file.size || 0;\n            notifyProgress({\n                loaded: Math.min(config._end, fileSize),\n                total: fileSize,\n                config: config,\n                type: 'progress'\n              }\n            );\n            upload.upload(config, true);\n          } else {\n            if (config._finished) delete config._finished;\n            deferred.resolve(r);\n          }\n        }, function (e) {\n          deferred.reject(e);\n        }, function (n) {\n          deferred.notify(n);\n        }\n      );\n    }\n\n    if (!resumeSupported) {\n      uploadWithAngular();\n    } else if (config._chunkSize && config._end && !config._finished) {\n      config._start = config._end;\n      config._end += config._chunkSize;\n      uploadWithAngular();\n    } else if (config.resumeSizeUrl) {\n      $http.get(config.resumeSizeUrl).then(function (resp) {\n        if (config.resumeSizeResponseReader) {\n          config._start = config.resumeSizeResponseReader(resp.data);\n        } else {\n          config._start = parseInt((resp.data.size == null ? resp.data : resp.data.size).toString());\n        }\n        if (config._chunkSize) {\n          config._end = config._start + config._chunkSize;\n        }\n        uploadWithAngular();\n      }, function (e) {\n        throw e;\n      });\n    } else if (config.resumeSize) {\n      config.resumeSize().then(function (size) {\n        config._start = size;\n        if (config._chunkSize) {\n          config._end = config._start + config._chunkSize;\n        }\n        uploadWithAngular();\n      }, function (e) {\n        throw e;\n      });\n    } else {\n      if (config._chunkSize) {\n        config._start = 0;\n        config._end = config._start + config._chunkSize;\n      }\n      uploadWithAngular();\n    }\n\n\n    promise.success = function (fn) {\n      promise.then(function (response) {\n        fn(response.data, response.status, response.headers, config);\n      });\n      return promise;\n    };\n\n    promise.error = function (fn) {\n      promise.then(null, function (response) {\n        fn(response.data, response.status, response.headers, config);\n      });\n      return promise;\n    };\n\n    promise.progress = function (fn) {\n      promise.progressFunc = fn;\n      promise.then(null, null, function (n) {\n        fn(n);\n      });\n      return promise;\n    };\n    promise.abort = promise.pause = function () {\n      if (config.__XHR) {\n        $timeout(function () {\n          config.__XHR.abort();\n        });\n      }\n      return promise;\n    };\n    promise.xhr = function (fn) {\n      config.xhrFn = (function (origXhrFn) {\n        return function () {\n          if (origXhrFn) origXhrFn.apply(promise, arguments);\n          fn.apply(promise, arguments);\n        };\n      })(config.xhrFn);\n      return promise;\n    };\n\n    upload.promisesCount++;\n    if (promise['finally'] && promise['finally'] instanceof Function) {\n      promise['finally'](function () {\n        upload.promisesCount--;\n      });\n    }\n    return promise;\n  }\n\n  this.isUploadInProgress = function () {\n    return upload.promisesCount > 0;\n  };\n\n  this.rename = function (file, name) {\n    file.ngfName = name;\n    return file;\n  };\n\n  this.jsonBlob = function (val) {\n    if (val != null && !angular.isString(val)) {\n      val = JSON.stringify(val);\n    }\n    var blob = new window.Blob([val], {type: 'application/json'});\n    blob._ngfBlob = true;\n    return blob;\n  };\n\n  this.json = function (val) {\n    return angular.toJson(val);\n  };\n\n  function copy(obj) {\n    var clone = {};\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        clone[key] = obj[key];\n      }\n    }\n    return clone;\n  }\n\n  this.isFile = function (file) {\n    return file != null && (file instanceof window.Blob || (file.flashId && file.name && file.size));\n  };\n\n  this.upload = function (config, internal) {\n    function toResumeFile(file, formData) {\n      if (file._ngfBlob) return file;\n      config._file = config._file || file;\n      if (config._start != null && resumeSupported) {\n        if (config._end && config._end >= file.size) {\n          config._finished = true;\n          config._end = file.size;\n        }\n        var slice = file.slice(config._start, config._end || file.size);\n        slice.name = file.name;\n        slice.ngfName = file.ngfName;\n        if (config._chunkSize) {\n          formData.append('_chunkSize', config._chunkSize);\n          formData.append('_currentChunkSize', config._end - config._start);\n          formData.append('_chunkNumber', Math.floor(config._start / config._chunkSize));\n          formData.append('_totalSize', config._file.size);\n        }\n        return slice;\n      }\n      return file;\n    }\n\n    function addFieldToFormData(formData, val, key) {\n      if (val !== undefined) {\n        if (angular.isDate(val)) {\n          val = val.toISOString();\n        }\n        if (angular.isString(val)) {\n          formData.append(key, val);\n        } else if (upload.isFile(val)) {\n          var file = toResumeFile(val, formData);\n          var split = key.split(',');\n          if (split[1]) {\n            file.ngfName = split[1].replace(/^\\s+|\\s+$/g, '');\n            key = split[0];\n          }\n          config._fileKey = config._fileKey || key;\n          formData.append(key, file, file.ngfName || file.name);\n        } else {\n          if (angular.isObject(val)) {\n            if (val.$$ngfCircularDetection) throw 'ngFileUpload: Circular reference in config.data. Make sure specified data for Upload.upload() has no circular reference: ' + key;\n\n            val.$$ngfCircularDetection = true;\n            try {\n              for (var k in val) {\n                if (val.hasOwnProperty(k) && k !== '$$ngfCircularDetection') {\n                  var objectKey = config.objectKey == null ? '[i]' : config.objectKey;\n                  if (val.length && parseInt(k) > -1) {\n                    objectKey = config.arrayKey == null ? objectKey : config.arrayKey;\n                  }\n                  addFieldToFormData(formData, val[k], key + objectKey.replace(/[ik]/g, k));\n                }\n              }\n            } finally {\n              delete val.$$ngfCircularDetection;\n            }\n          } else {\n            formData.append(key, val);\n          }\n        }\n      }\n    }\n\n    function digestConfig() {\n      config._chunkSize = upload.translateScalars(config.resumeChunkSize);\n      config._chunkSize = config._chunkSize ? parseInt(config._chunkSize.toString()) : null;\n\n      config.headers = config.headers || {};\n      config.headers['Content-Type'] = undefined;\n      config.transformRequest = config.transformRequest ?\n        (angular.isArray(config.transformRequest) ?\n          config.transformRequest : [config.transformRequest]) : [];\n      config.transformRequest.push(function (data) {\n        var formData = new window.FormData(), key;\n        data = data || config.fields || {};\n        if (config.file) {\n          data.file = config.file;\n        }\n        for (key in data) {\n          if (data.hasOwnProperty(key)) {\n            var val = data[key];\n            if (config.formDataAppender) {\n              config.formDataAppender(formData, key, val);\n            } else {\n              addFieldToFormData(formData, val, key);\n            }\n          }\n        }\n\n        return formData;\n      });\n    }\n\n    if (!internal) config = copy(config);\n    if (!config._isDigested) {\n      config._isDigested = true;\n      digestConfig();\n    }\n\n    return sendHttp(config);\n  };\n\n  this.http = function (config) {\n    config = copy(config);\n    config.transformRequest = config.transformRequest || function (data) {\n        if ((window.ArrayBuffer && data instanceof window.ArrayBuffer) || data instanceof window.Blob) {\n          return data;\n        }\n        return $http.defaults.transformRequest[0].apply(this, arguments);\n      };\n    config._chunkSize = upload.translateScalars(config.resumeChunkSize);\n    config._chunkSize = config._chunkSize ? parseInt(config._chunkSize.toString()) : null;\n\n    return sendHttp(config);\n  };\n\n  this.translateScalars = function (str) {\n    if (angular.isString(str)) {\n      if (str.search(/kb/i) === str.length - 2) {\n        return parseFloat(str.substring(0, str.length - 2) * 1024);\n      } else if (str.search(/mb/i) === str.length - 2) {\n        return parseFloat(str.substring(0, str.length - 2) * 1048576);\n      } else if (str.search(/gb/i) === str.length - 2) {\n        return parseFloat(str.substring(0, str.length - 2) * 1073741824);\n      } else if (str.search(/b/i) === str.length - 1) {\n        return parseFloat(str.substring(0, str.length - 1));\n      } else if (str.search(/s/i) === str.length - 1) {\n        return parseFloat(str.substring(0, str.length - 1));\n      } else if (str.search(/m/i) === str.length - 1) {\n        return parseFloat(str.substring(0, str.length - 1) * 60);\n      } else if (str.search(/h/i) === str.length - 1) {\n        return parseFloat(str.substring(0, str.length - 1) * 3600);\n      }\n    }\n    return str;\n  };\n\n  this.urlToBlob = function(url) {\n    var defer = $q.defer();\n    $http({url: url, method: 'get', responseType: 'arraybuffer'}).then(function (resp) {\n      var arrayBufferView = new Uint8Array(resp.data);\n      var type = resp.headers('content-type') || 'image/WebP';\n      var blob = new window.Blob([arrayBufferView], {type: type});\n      var matches = url.match(/.*\\/(.+?)(\\?.*)?$/);\n      if (matches.length > 1) {\n        blob.name = matches[1];\n      }\n      defer.resolve(blob);\n    }, function (e) {\n      defer.reject(e);\n    });\n    return defer.promise;\n  };\n\n  this.setDefaults = function (defaults) {\n    this.defaults = defaults || {};\n  };\n\n  this.defaults = {};\n  this.version = ngFileUpload.version;\n}\n\n]);\n\nngFileUpload.service('Upload', ['$parse', '$timeout', '$compile', '$q', 'UploadExif', function ($parse, $timeout, $compile, $q, UploadExif) {\n  var upload = UploadExif;\n  upload.getAttrWithDefaults = function (attr, name) {\n    if (attr[name] != null) return attr[name];\n    var def = upload.defaults[name];\n    return (def == null ? def : (angular.isString(def) ? def : JSON.stringify(def)));\n  };\n\n  upload.attrGetter = function (name, attr, scope, params) {\n    var attrVal = this.getAttrWithDefaults(attr, name);\n    if (scope) {\n      try {\n        if (params) {\n          return $parse(attrVal)(scope, params);\n        } else {\n          return $parse(attrVal)(scope);\n        }\n      } catch (e) {\n        // hangle string value without single qoute\n        if (name.search(/min|max|pattern/i)) {\n          return attrVal;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      return attrVal;\n    }\n  };\n\n  upload.shouldUpdateOn = function (type, attr, scope) {\n    var modelOptions = upload.attrGetter('ngfModelOptions', attr, scope);\n    if (modelOptions && modelOptions.updateOn) {\n      return modelOptions.updateOn.split(' ').indexOf(type) > -1;\n    }\n    return true;\n  };\n\n  upload.emptyPromise = function () {\n    var d = $q.defer();\n    var args = arguments;\n    $timeout(function () {\n      d.resolve.apply(d, args);\n    });\n    return d.promise;\n  };\n\n  upload.rejectPromise = function () {\n    var d = $q.defer();\n    var args = arguments;\n    $timeout(function () {\n      d.reject.apply(d, args);\n    });\n    return d.promise;\n  };\n\n  upload.happyPromise = function (promise, data) {\n    var d = $q.defer();\n    promise.then(function (result) {\n      d.resolve(result);\n    }, function (error) {\n      $timeout(function () {\n        throw error;\n      });\n      d.resolve(data);\n    });\n    return d.promise;\n  };\n\n  function applyExifRotations(files, attr, scope) {\n    var promises = [upload.emptyPromise()];\n    angular.forEach(files, function (f, i) {\n      if (f.type.indexOf('image/jpeg') === 0 && upload.attrGetter('ngfFixOrientation', attr, scope, {$file: f})) {\n        promises.push(upload.happyPromise(upload.applyExifRotation(f), f).then(function (fixedFile) {\n          files.splice(i, 1, fixedFile);\n        }));\n      }\n    });\n    return $q.all(promises);\n  }\n\n  function resizeFile(files, attr, scope, ngModel) {\n    var resizeVal = upload.attrGetter('ngfResize', attr, scope);\n    if (!resizeVal || !upload.isResizeSupported() || !files.length) return upload.emptyPromise();\n    if (resizeVal instanceof Function) {\n      var defer = $q.defer();\n      return resizeVal(files).then(function (p) {\n        resizeWithParams(p, files, attr, scope, ngModel).then(function (r) {\n          defer.resolve(r);\n        }, function (e) {\n          defer.reject(e);\n        });\n      }, function (e) {\n        defer.reject(e);\n      });\n    } else {\n      return resizeWithParams(resizeVal, files, attr, scope, ngModel);\n    }\n  }\n\n  function resizeWithParams(params, files, attr, scope, ngModel) {\n    var promises = [upload.emptyPromise()];\n\n    function handleFile(f, i) {\n      if (f.type.indexOf('image') === 0) {\n        if (params.pattern && !upload.validatePattern(f, params.pattern)) return;\n        params.resizeIf = function (width, height) {\n          return upload.attrGetter('ngfResizeIf', attr, scope,\n            {$width: width, $height: height, $file: f});\n        };\n        var promise = upload.resize(f, params);\n        promises.push(promise);\n        promise.then(function (resizedFile) {\n          files.splice(i, 1, resizedFile);\n        }, function (e) {\n          f.$error = 'resize';\n          (f.$errorMessages = (f.$errorMessages || {})).resize = true;\n          f.$errorParam = (e ? (e.message ? e.message : e) + ': ' : '') + (f && f.name);\n          ngModel.$ngfValidations.push({name: 'resize', valid: false});\n          upload.applyModelValidation(ngModel, files);\n        });\n      }\n    }\n\n    for (var i = 0; i < files.length; i++) {\n      handleFile(files[i], i);\n    }\n    return $q.all(promises);\n  }\n\n  upload.updateModel = function (ngModel, attr, scope, fileChange, files, evt, noDelay) {\n    function update(files, invalidFiles, newFiles, dupFiles, isSingleModel) {\n      attr.$$ngfPrevValidFiles = files;\n      attr.$$ngfPrevInvalidFiles = invalidFiles;\n      var file = files && files.length ? files[0] : null;\n      var invalidFile = invalidFiles && invalidFiles.length ? invalidFiles[0] : null;\n\n      if (ngModel) {\n        upload.applyModelValidation(ngModel, files);\n        ngModel.$setViewValue(isSingleModel ? file : files);\n      }\n\n      if (fileChange) {\n        $parse(fileChange)(scope, {\n          $files: files,\n          $file: file,\n          $newFiles: newFiles,\n          $duplicateFiles: dupFiles,\n          $invalidFiles: invalidFiles,\n          $invalidFile: invalidFile,\n          $event: evt\n        });\n      }\n\n      var invalidModel = upload.attrGetter('ngfModelInvalid', attr);\n      if (invalidModel) {\n        $timeout(function () {\n          $parse(invalidModel).assign(scope, isSingleModel ? invalidFile : invalidFiles);\n        });\n      }\n      $timeout(function () {\n        // scope apply changes\n      });\n    }\n\n    var allNewFiles, dupFiles = [], prevValidFiles, prevInvalidFiles,\n      invalids = [], valids = [];\n\n    function removeDuplicates() {\n      function equals(f1, f2) {\n        return f1.name === f2.name && (f1.$ngfOrigSize || f1.size) === (f2.$ngfOrigSize || f2.size) &&\n          f1.type === f2.type;\n      }\n\n      function isInPrevFiles(f) {\n        var j;\n        for (j = 0; j < prevValidFiles.length; j++) {\n          if (equals(f, prevValidFiles[j])) {\n            return true;\n          }\n        }\n        for (j = 0; j < prevInvalidFiles.length; j++) {\n          if (equals(f, prevInvalidFiles[j])) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      if (files) {\n        allNewFiles = [];\n        dupFiles = [];\n        for (var i = 0; i < files.length; i++) {\n          if (isInPrevFiles(files[i])) {\n            dupFiles.push(files[i]);\n          } else {\n            allNewFiles.push(files[i]);\n          }\n        }\n      }\n    }\n\n    function toArray(v) {\n      return angular.isArray(v) ? v : [v];\n    }\n\n    function resizeAndUpdate() {\n      function updateModel() {\n        $timeout(function () {\n          update(keep ? prevValidFiles.concat(valids) : valids,\n            keep ? prevInvalidFiles.concat(invalids) : invalids,\n            files, dupFiles, isSingleModel);\n        }, options && options.debounce ? options.debounce.change || options.debounce : 0);\n      }\n\n      var resizingFiles = validateAfterResize ? allNewFiles : valids;\n      resizeFile(resizingFiles, attr, scope, ngModel).then(function () {\n        if (validateAfterResize) {\n          upload.validate(allNewFiles, keep ? prevValidFiles.length : 0, ngModel, attr, scope)\n            .then(function (validationResult) {\n              valids = validationResult.validsFiles;\n              invalids = validationResult.invalidsFiles;\n              updateModel();\n            });\n        } else {\n          updateModel();\n        }\n      }, function () {\n        for (var i = 0; i < resizingFiles.length; i++) {\n          var f = resizingFiles[i];\n          if (f.$error === 'resize') {\n            var index = valids.indexOf(f);\n            if (index > -1) {\n              valids.splice(index, 1);\n              invalids.push(f);\n            }\n            updateModel();\n          }\n        }\n      });\n    }\n\n    prevValidFiles = attr.$$ngfPrevValidFiles || [];\n    prevInvalidFiles = attr.$$ngfPrevInvalidFiles || [];\n    if (ngModel && ngModel.$modelValue) {\n      prevValidFiles = toArray(ngModel.$modelValue);\n    }\n\n    var keep = upload.attrGetter('ngfKeep', attr, scope);\n    allNewFiles = (files || []).slice(0);\n    if (keep === 'distinct' || upload.attrGetter('ngfKeepDistinct', attr, scope) === true) {\n      removeDuplicates(attr, scope);\n    }\n\n    var isSingleModel = !keep && !upload.attrGetter('ngfMultiple', attr, scope) && !upload.attrGetter('multiple', attr);\n\n    if (keep && !allNewFiles.length) return;\n\n    upload.attrGetter('ngfBeforeModelChange', attr, scope, {\n      $files: files,\n      $file: files && files.length ? files[0] : null,\n      $newFiles: allNewFiles,\n      $duplicateFiles: dupFiles,\n      $event: evt\n    });\n\n    var validateAfterResize = upload.attrGetter('ngfValidateAfterResize', attr, scope);\n\n    var options = upload.attrGetter('ngfModelOptions', attr, scope);\n    upload.validate(allNewFiles, keep ? prevValidFiles.length : 0, ngModel, attr, scope)\n      .then(function (validationResult) {\n      if (noDelay) {\n        update(allNewFiles, [], files, dupFiles, isSingleModel);\n      } else {\n        if ((!options || !options.allowInvalid) && !validateAfterResize) {\n          valids = validationResult.validFiles;\n          invalids = validationResult.invalidFiles;\n        } else {\n          valids = allNewFiles;\n        }\n        if (upload.attrGetter('ngfFixOrientation', attr, scope) && upload.isExifSupported()) {\n          applyExifRotations(valids, attr, scope).then(function () {\n            resizeAndUpdate();\n          });\n        } else {\n          resizeAndUpdate();\n        }\n      }\n    });\n  };\n\n  return upload;\n}]);\n\nngFileUpload.directive('ngfSelect', ['$parse', '$timeout', '$compile', 'Upload', function ($parse, $timeout, $compile, Upload) {\n  var generatedElems = [];\n\n  function isDelayedClickSupported(ua) {\n    // fix for android native browser < 4.4 and safari windows\n    var m = ua.match(/Android[^\\d]*(\\d+)\\.(\\d+)/);\n    if (m && m.length > 2) {\n      var v = Upload.defaults.androidFixMinorVersion || 4;\n      return parseInt(m[1]) < 4 || (parseInt(m[1]) === v && parseInt(m[2]) < v);\n    }\n\n    // safari on windows\n    return ua.indexOf('Chrome') === -1 && /.*Windows.*Safari.*/.test(ua);\n  }\n\n  function linkFileSelect(scope, elem, attr, ngModel, $parse, $timeout, $compile, upload) {\n    /** @namespace attr.ngfSelect */\n    /** @namespace attr.ngfChange */\n    /** @namespace attr.ngModel */\n    /** @namespace attr.ngfModelOptions */\n    /** @namespace attr.ngfMultiple */\n    /** @namespace attr.ngfCapture */\n    /** @namespace attr.ngfValidate */\n    /** @namespace attr.ngfKeep */\n    var attrGetter = function (name, scope) {\n      return upload.attrGetter(name, attr, scope);\n    };\n\n    function isInputTypeFile() {\n      return elem[0].tagName.toLowerCase() === 'input' && attr.type && attr.type.toLowerCase() === 'file';\n    }\n\n    function fileChangeAttr() {\n      return attrGetter('ngfChange') || attrGetter('ngfSelect');\n    }\n\n    function changeFn(evt) {\n      if (upload.shouldUpdateOn('change', attr, scope)) {\n        var fileList = evt.__files_ || (evt.target && evt.target.files), files = [];\n        /* Handle duplicate call in  IE11 */\n        if (!fileList) return;\n        for (var i = 0; i < fileList.length; i++) {\n          files.push(fileList[i]);\n        }\n        upload.updateModel(ngModel, attr, scope, fileChangeAttr(),\n          files.length ? files : null, evt);\n      }\n    }\n\n    upload.registerModelChangeValidator(ngModel, attr, scope);\n\n    var unwatches = [];\n    if (attrGetter('ngfMultiple')) {\n      unwatches.push(scope.$watch(attrGetter('ngfMultiple'), function () {\n        fileElem.attr('multiple', attrGetter('ngfMultiple', scope));\n      }));\n    }\n    if (attrGetter('ngfCapture')) {\n      unwatches.push(scope.$watch(attrGetter('ngfCapture'), function () {\n        fileElem.attr('capture', attrGetter('ngfCapture', scope));\n      }));\n    }\n    if (attrGetter('ngfAccept')) {\n      unwatches.push(scope.$watch(attrGetter('ngfAccept'), function () {\n        fileElem.attr('accept', attrGetter('ngfAccept', scope));\n      }));\n    }\n    unwatches.push(attr.$observe('accept', function () {\n      fileElem.attr('accept', attrGetter('accept'));\n    }));\n    function bindAttrToFileInput(fileElem, label) {\n      function updateId(val) {\n        fileElem.attr('id', 'ngf-' + val);\n        label.attr('id', 'ngf-label-' + val);\n      }\n\n      for (var i = 0; i < elem[0].attributes.length; i++) {\n        var attribute = elem[0].attributes[i];\n        if (attribute.name !== 'type' && attribute.name !== 'class' && attribute.name !== 'style') {\n          if (attribute.name === 'id') {\n            updateId(attribute.value);\n            unwatches.push(attr.$observe('id', updateId));\n          } else {\n            fileElem.attr(attribute.name, (!attribute.value && (attribute.name === 'required' ||\n            attribute.name === 'multiple')) ? attribute.name : attribute.value);\n          }\n        }\n      }\n    }\n\n    function createFileInput() {\n      if (isInputTypeFile()) {\n        return elem;\n      }\n\n      var fileElem = angular.element('<input type=\"file\">');\n\n      var label = angular.element('<label>upload</label>');\n      label.css('visibility', 'hidden').css('position', 'absolute').css('overflow', 'hidden')\n        .css('width', '0px').css('height', '0px').css('border', 'none')\n        .css('margin', '0px').css('padding', '0px').attr('tabindex', '-1');\n      bindAttrToFileInput(fileElem, label);\n\n      generatedElems.push({el: elem, ref: label});\n\n      document.body.appendChild(label.append(fileElem)[0]);\n\n      return fileElem;\n    }\n\n    function clickHandler(evt) {\n      if (elem.attr('disabled')) return false;\n      if (attrGetter('ngfSelectDisabled', scope)) return;\n\n      var r = detectSwipe(evt);\n      // prevent the click if it is a swipe\n      if (r != null) return r;\n\n      resetModel(evt);\n\n      // fix for md when the element is removed from the DOM and added back #460\n      try {\n        if (!isInputTypeFile() && !document.body.contains(fileElem[0])) {\n          generatedElems.push({el: elem, ref: fileElem.parent()});\n          document.body.appendChild(fileElem.parent()[0]);\n          fileElem.bind('change', changeFn);\n        }\n      } catch (e) {/*ignore*/\n      }\n\n      if (isDelayedClickSupported(navigator.userAgent)) {\n        setTimeout(function () {\n          fileElem[0].click();\n        }, 0);\n      } else {\n        fileElem[0].click();\n      }\n\n      return false;\n    }\n\n\n    var initialTouchStartY = 0;\n    var initialTouchStartX = 0;\n\n    function detectSwipe(evt) {\n      var touches = evt.changedTouches || (evt.originalEvent && evt.originalEvent.changedTouches);\n      if (touches) {\n        if (evt.type === 'touchstart') {\n          initialTouchStartX = touches[0].clientX;\n          initialTouchStartY = touches[0].clientY;\n          return true; // don't block event default\n        } else {\n          // prevent scroll from triggering event\n          if (evt.type === 'touchend') {\n            var currentX = touches[0].clientX;\n            var currentY = touches[0].clientY;\n            if ((Math.abs(currentX - initialTouchStartX) > 20) ||\n              (Math.abs(currentY - initialTouchStartY) > 20)) {\n              evt.stopPropagation();\n              evt.preventDefault();\n              return false;\n            }\n          }\n          return true;\n        }\n      }\n    }\n\n    var fileElem = elem;\n\n    function resetModel(evt) {\n      if (upload.shouldUpdateOn('click', attr, scope) && fileElem.val()) {\n        fileElem.val(null);\n        upload.updateModel(ngModel, attr, scope, fileChangeAttr(), null, evt, true);\n      }\n    }\n\n    if (!isInputTypeFile()) {\n      fileElem = createFileInput();\n    }\n    fileElem.bind('change', changeFn);\n\n    if (!isInputTypeFile()) {\n      elem.bind('click touchstart touchend', clickHandler);\n    } else {\n      elem.bind('click', resetModel);\n    }\n\n    function ie10SameFileSelectFix(evt) {\n      if (fileElem && !fileElem.attr('__ngf_ie10_Fix_')) {\n        if (!fileElem[0].parentNode) {\n          fileElem = null;\n          return;\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n        fileElem.unbind('click');\n        var clone = fileElem.clone();\n        fileElem.replaceWith(clone);\n        fileElem = clone;\n        fileElem.attr('__ngf_ie10_Fix_', 'true');\n        fileElem.bind('change', changeFn);\n        fileElem.bind('click', ie10SameFileSelectFix);\n        fileElem[0].click();\n        return false;\n      } else {\n        fileElem.removeAttr('__ngf_ie10_Fix_');\n      }\n    }\n\n    if (navigator.appVersion.indexOf('MSIE 10') !== -1) {\n      fileElem.bind('click', ie10SameFileSelectFix);\n    }\n\n    if (ngModel) ngModel.$formatters.push(function (val) {\n      if (val == null || val.length === 0) {\n        if (fileElem.val()) {\n          fileElem.val(null);\n        }\n      }\n      return val;\n    });\n\n    scope.$on('$destroy', function () {\n      if (!isInputTypeFile()) fileElem.parent().remove();\n      angular.forEach(unwatches, function (unwatch) {\n        unwatch();\n      });\n    });\n\n    $timeout(function () {\n      for (var i = 0; i < generatedElems.length; i++) {\n        var g = generatedElems[i];\n        if (!document.body.contains(g.el[0])) {\n          generatedElems.splice(i, 1);\n          g.ref.remove();\n        }\n      }\n    });\n\n    if (window.FileAPI && window.FileAPI.ngfFixIE) {\n      window.FileAPI.ngfFixIE(elem, fileElem, changeFn);\n    }\n  }\n\n  return {\n    restrict: 'AEC',\n    require: '?ngModel',\n    link: function (scope, elem, attr, ngModel) {\n      linkFileSelect(scope, elem, attr, ngModel, $parse, $timeout, $compile, Upload);\n    }\n  };\n}]);\n\n(function () {\n\n  ngFileUpload.service('UploadDataUrl', ['UploadBase', '$timeout', '$q', function (UploadBase, $timeout, $q) {\n    var upload = UploadBase;\n    upload.base64DataUrl = function (file) {\n      if (angular.isArray(file)) {\n        var d = $q.defer(), count = 0;\n        angular.forEach(file, function (f) {\n          upload.dataUrl(f, true)['finally'](function () {\n            count++;\n            if (count === file.length) {\n              var urls = [];\n              angular.forEach(file, function (ff) {\n                urls.push(ff.$ngfDataUrl);\n              });\n              d.resolve(urls, file);\n            }\n          });\n        });\n        return d.promise;\n      } else {\n        return upload.dataUrl(file, true);\n      }\n    };\n    upload.dataUrl = function (file, disallowObjectUrl) {\n      if (!file) return upload.emptyPromise(file, file);\n      if ((disallowObjectUrl && file.$ngfDataUrl != null) || (!disallowObjectUrl && file.$ngfBlobUrl != null)) {\n        return upload.emptyPromise(disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl, file);\n      }\n      var p = disallowObjectUrl ? file.$$ngfDataUrlPromise : file.$$ngfBlobUrlPromise;\n      if (p) return p;\n\n      var deferred = $q.defer();\n      $timeout(function () {\n        if (window.FileReader && file &&\n          (!window.FileAPI || navigator.userAgent.indexOf('MSIE 8') === -1 || file.size < 20000) &&\n          (!window.FileAPI || navigator.userAgent.indexOf('MSIE 9') === -1 || file.size < 4000000)) {\n          //prefer URL.createObjectURL for handling refrences to files of all sizes\n          //since it doesn´t build a large string in memory\n          var URL = window.URL || window.webkitURL;\n          if (URL && URL.createObjectURL && !disallowObjectUrl) {\n            var url;\n            try {\n              url = URL.createObjectURL(file);\n            } catch (e) {\n              $timeout(function () {\n                file.$ngfBlobUrl = '';\n                deferred.reject();\n              });\n              return;\n            }\n            $timeout(function () {\n              file.$ngfBlobUrl = url;\n              if (url) {\n                deferred.resolve(url, file);\n                upload.blobUrls = upload.blobUrls || [];\n                upload.blobUrlsTotalSize = upload.blobUrlsTotalSize || 0;\n                upload.blobUrls.push({url: url, size: file.size});\n                upload.blobUrlsTotalSize += file.size || 0;\n                var maxMemory = upload.defaults.blobUrlsMaxMemory || 268435456;\n                var maxLength = upload.defaults.blobUrlsMaxQueueSize || 200;\n                while ((upload.blobUrlsTotalSize > maxMemory || upload.blobUrls.length > maxLength) && upload.blobUrls.length > 1) {\n                  var obj = upload.blobUrls.splice(0, 1)[0];\n                  URL.revokeObjectURL(obj.url);\n                  upload.blobUrlsTotalSize -= obj.size;\n                }\n              }\n            });\n          } else {\n            var fileReader = new FileReader();\n            fileReader.onload = function (e) {\n              $timeout(function () {\n                file.$ngfDataUrl = e.target.result;\n                deferred.resolve(e.target.result, file);\n                $timeout(function () {\n                  delete file.$ngfDataUrl;\n                }, 1000);\n              });\n            };\n            fileReader.onerror = function () {\n              $timeout(function () {\n                file.$ngfDataUrl = '';\n                deferred.reject();\n              });\n            };\n            fileReader.readAsDataURL(file);\n          }\n        } else {\n          $timeout(function () {\n            file[disallowObjectUrl ? '$ngfDataUrl' : '$ngfBlobUrl'] = '';\n            deferred.reject();\n          });\n        }\n      });\n\n      if (disallowObjectUrl) {\n        p = file.$$ngfDataUrlPromise = deferred.promise;\n      } else {\n        p = file.$$ngfBlobUrlPromise = deferred.promise;\n      }\n      p['finally'](function () {\n        delete file[disallowObjectUrl ? '$$ngfDataUrlPromise' : '$$ngfBlobUrlPromise'];\n      });\n      return p;\n    };\n    return upload;\n  }]);\n\n  function getTagType(el) {\n    if (el.tagName.toLowerCase() === 'img') return 'image';\n    if (el.tagName.toLowerCase() === 'audio') return 'audio';\n    if (el.tagName.toLowerCase() === 'video') return 'video';\n    return /./;\n  }\n\n  function linkFileDirective(Upload, $timeout, scope, elem, attr, directiveName, resizeParams, isBackground) {\n    function constructDataUrl(file) {\n      var disallowObjectUrl = Upload.attrGetter('ngfNoObjectUrl', attr, scope);\n      Upload.dataUrl(file, disallowObjectUrl)['finally'](function () {\n        $timeout(function () {\n          var src = (disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl) || file.$ngfDataUrl;\n          if (isBackground) {\n            elem.css('background-image', 'url(\\'' + (src || '') + '\\')');\n          } else {\n            elem.attr('src', src);\n          }\n          if (src) {\n            elem.removeClass('ng-hide');\n          } else {\n            elem.addClass('ng-hide');\n          }\n        });\n      });\n    }\n\n    $timeout(function () {\n      var unwatch = scope.$watch(attr[directiveName], function (file) {\n        var size = resizeParams;\n        if (directiveName === 'ngfThumbnail') {\n          if (!size) {\n            size = {\n              width: elem[0].naturalWidth || elem[0].clientWidth,\n              height: elem[0].naturalHeight || elem[0].clientHeight\n            };\n          }\n          if (size.width === 0 && window.getComputedStyle) {\n            var style = getComputedStyle(elem[0]);\n            if (style.width && style.width.indexOf('px') > -1 && style.height && style.height.indexOf('px') > -1) {\n              size = {\n                width: parseInt(style.width.slice(0, -2)),\n                height: parseInt(style.height.slice(0, -2))\n              };\n            }\n          }\n        }\n\n        if (angular.isString(file)) {\n          elem.removeClass('ng-hide');\n          if (isBackground) {\n            return elem.css('background-image', 'url(\\'' + file + '\\')');\n          } else {\n            return elem.attr('src', file);\n          }\n        }\n        if (file && file.type && file.type.search(getTagType(elem[0])) === 0 &&\n          (!isBackground || file.type.indexOf('image') === 0)) {\n          if (size && Upload.isResizeSupported()) {\n            size.resizeIf = function (width, height) {\n              return Upload.attrGetter('ngfResizeIf', attr, scope,\n                {$width: width, $height: height, $file: file});\n            };\n            Upload.resize(file, size).then(\n              function (f) {\n                constructDataUrl(f);\n              }, function (e) {\n                throw e;\n              }\n            );\n          } else {\n            constructDataUrl(file);\n          }\n        } else {\n          elem.addClass('ng-hide');\n        }\n      });\n\n      scope.$on('$destroy', function () {\n        unwatch();\n      });\n    });\n  }\n\n\n  /** @namespace attr.ngfSrc */\n  /** @namespace attr.ngfNoObjectUrl */\n  ngFileUpload.directive('ngfSrc', ['Upload', '$timeout', function (Upload, $timeout) {\n    return {\n      restrict: 'AE',\n      link: function (scope, elem, attr) {\n        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfSrc',\n          Upload.attrGetter('ngfResize', attr, scope), false);\n      }\n    };\n  }]);\n\n  /** @namespace attr.ngfBackground */\n  /** @namespace attr.ngfNoObjectUrl */\n  ngFileUpload.directive('ngfBackground', ['Upload', '$timeout', function (Upload, $timeout) {\n    return {\n      restrict: 'AE',\n      link: function (scope, elem, attr) {\n        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfBackground',\n          Upload.attrGetter('ngfResize', attr, scope), true);\n      }\n    };\n  }]);\n\n  /** @namespace attr.ngfThumbnail */\n  /** @namespace attr.ngfAsBackground */\n  /** @namespace attr.ngfSize */\n  /** @namespace attr.ngfNoObjectUrl */\n  ngFileUpload.directive('ngfThumbnail', ['Upload', '$timeout', function (Upload, $timeout) {\n    return {\n      restrict: 'AE',\n      link: function (scope, elem, attr) {\n        var size = Upload.attrGetter('ngfSize', attr, scope);\n        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfThumbnail', size,\n          Upload.attrGetter('ngfAsBackground', attr, scope));\n      }\n    };\n  }]);\n\n  ngFileUpload.config(['$compileProvider', function ($compileProvider) {\n    if ($compileProvider.imgSrcSanitizationWhitelist) $compileProvider.imgSrcSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|webcal|local|file|data|blob):/);\n    if ($compileProvider.aHrefSanitizationWhitelist) $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|webcal|local|file|data|blob):/);\n  }]);\n\n  ngFileUpload.filter('ngfDataUrl', ['UploadDataUrl', '$sce', function (UploadDataUrl, $sce) {\n    return function (file, disallowObjectUrl, trustedUrl) {\n      if (angular.isString(file)) {\n        return $sce.trustAsResourceUrl(file);\n      }\n      var src = file && ((disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl) || file.$ngfDataUrl);\n      if (file && !src) {\n        if (!file.$ngfDataUrlFilterInProgress && angular.isObject(file)) {\n          file.$ngfDataUrlFilterInProgress = true;\n          UploadDataUrl.dataUrl(file, disallowObjectUrl);\n        }\n        return '';\n      }\n      if (file) delete file.$ngfDataUrlFilterInProgress;\n      return (file && src ? (trustedUrl ? $sce.trustAsResourceUrl(src) : src) : file) || '';\n    };\n  }]);\n\n})();\n\nngFileUpload.service('UploadValidate', ['UploadDataUrl', '$q', '$timeout', function (UploadDataUrl, $q, $timeout) {\n  var upload = UploadDataUrl;\n\n  function globStringToRegex(str) {\n    var regexp = '', excludes = [];\n    if (str.length > 2 && str[0] === '/' && str[str.length - 1] === '/') {\n      regexp = str.substring(1, str.length - 1);\n    } else {\n      var split = str.split(',');\n      if (split.length > 1) {\n        for (var i = 0; i < split.length; i++) {\n          var r = globStringToRegex(split[i]);\n          if (r.regexp) {\n            regexp += '(' + r.regexp + ')';\n            if (i < split.length - 1) {\n              regexp += '|';\n            }\n          } else {\n            excludes = excludes.concat(r.excludes);\n          }\n        }\n      } else {\n        if (str.indexOf('!') === 0) {\n          excludes.push('^((?!' + globStringToRegex(str.substring(1)).regexp + ').)*$');\n        } else {\n          if (str.indexOf('.') === 0) {\n            str = '*' + str;\n          }\n          regexp = '^' + str.replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\-]', 'g'), '\\\\$&') + '$';\n          regexp = regexp.replace(/\\\\\\*/g, '.*').replace(/\\\\\\?/g, '.');\n        }\n      }\n    }\n    return {regexp: regexp, excludes: excludes};\n  }\n\n  upload.validatePattern = function (file, val) {\n    if (!val) {\n      return true;\n    }\n    var pattern = globStringToRegex(val), valid = true;\n    if (pattern.regexp && pattern.regexp.length) {\n      var regexp = new RegExp(pattern.regexp, 'i');\n      valid = (file.type != null && regexp.test(file.type)) ||\n        (file.name != null && regexp.test(file.name));\n    }\n    var len = pattern.excludes.length;\n    while (len--) {\n      var exclude = new RegExp(pattern.excludes[len], 'i');\n      valid = valid && (file.type == null || exclude.test(file.type)) &&\n        (file.name == null || exclude.test(file.name));\n    }\n    return valid;\n  };\n\n  upload.ratioToFloat = function (val) {\n    var r = val.toString(), xIndex = r.search(/[x:]/i);\n    if (xIndex > -1) {\n      r = parseFloat(r.substring(0, xIndex)) / parseFloat(r.substring(xIndex + 1));\n    } else {\n      r = parseFloat(r);\n    }\n    return r;\n  };\n\n  upload.registerModelChangeValidator = function (ngModel, attr, scope) {\n    if (ngModel) {\n      ngModel.$formatters.push(function (files) {\n        if (ngModel.$dirty) {\n          var filesArray = files;\n          if (files && !angular.isArray(files)) {\n            filesArray = [files];\n          }\n          upload.validate(filesArray, 0, ngModel, attr, scope).then(function () {\n            upload.applyModelValidation(ngModel, filesArray);\n          });\n        }\n        return files;\n      });\n    }\n  };\n\n  function markModelAsDirty(ngModel, files) {\n    if (files != null && !ngModel.$dirty) {\n      if (ngModel.$setDirty) {\n        ngModel.$setDirty();\n      } else {\n        ngModel.$dirty = true;\n      }\n    }\n  }\n\n  upload.applyModelValidation = function (ngModel, files) {\n    markModelAsDirty(ngModel, files);\n    angular.forEach(ngModel.$ngfValidations, function (validation) {\n      ngModel.$setValidity(validation.name, validation.valid);\n    });\n  };\n\n  upload.getValidationAttr = function (attr, scope, name, validationName, file) {\n    var dName = 'ngf' + name[0].toUpperCase() + name.substr(1);\n    var val = upload.attrGetter(dName, attr, scope, {$file: file});\n    if (val == null) {\n      val = upload.attrGetter('ngfValidate', attr, scope, {$file: file});\n      if (val) {\n        var split = (validationName || name).split('.');\n        val = val[split[0]];\n        if (split.length > 1) {\n          val = val && val[split[1]];\n        }\n      }\n    }\n    return val;\n  };\n\n  upload.validate = function (files, prevLength, ngModel, attr, scope) {\n    ngModel = ngModel || {};\n    ngModel.$ngfValidations = ngModel.$ngfValidations || [];\n\n    angular.forEach(ngModel.$ngfValidations, function (v) {\n      v.valid = true;\n    });\n\n    var attrGetter = function (name, params) {\n      return upload.attrGetter(name, attr, scope, params);\n    };\n\n    var ignoredErrors = (upload.attrGetter('ngfIgnoreInvalid', attr, scope) || '').split(' ');\n    var runAllValidation = upload.attrGetter('ngfRunAllValidations', attr, scope);\n\n    if (files == null || files.length === 0) {\n      return upload.emptyPromise({'validFiles': files, 'invalidFiles': []});\n    }\n\n    files = files.length === undefined ? [files] : files.slice(0);\n    var invalidFiles = [];\n\n    function validateSync(name, validationName, fn) {\n      if (files) {\n        var i = files.length, valid = null;\n        while (i--) {\n          var file = files[i];\n          if (file) {\n            var val = upload.getValidationAttr(attr, scope, name, validationName, file);\n            if (val != null) {\n              if (!fn(file, val, i)) {\n                if (ignoredErrors.indexOf(name) === -1) {\n                  file.$error = name;\n                  (file.$errorMessages = (file.$errorMessages || {}))[name] = true;\n                  file.$errorParam = val;\n                  if (invalidFiles.indexOf(file) === -1) {\n                    invalidFiles.push(file);\n                  }\n                  if (!runAllValidation) {\n                    files.splice(i, 1);\n                  }\n                  valid = false;\n                } else {\n                  files.splice(i, 1);\n                }\n              }\n            }\n          }\n        }\n        if (valid !== null) {\n          ngModel.$ngfValidations.push({name: name, valid: valid});\n        }\n      }\n    }\n\n    validateSync('pattern', null, upload.validatePattern);\n    validateSync('minSize', 'size.min', function (file, val) {\n      return file.size + 0.1 >= upload.translateScalars(val);\n    });\n    validateSync('maxSize', 'size.max', function (file, val) {\n      return file.size - 0.1 <= upload.translateScalars(val);\n    });\n    var totalSize = 0;\n    validateSync('maxTotalSize', null, function (file, val) {\n      totalSize += file.size;\n      if (totalSize > upload.translateScalars(val)) {\n        files.splice(0, files.length);\n        return false;\n      }\n      return true;\n    });\n\n    validateSync('validateFn', null, function (file, r) {\n      return r === true || r === null || r === '';\n    });\n\n    if (!files.length) {\n      return upload.emptyPromise({'validFiles': [], 'invalidFiles': invalidFiles});\n    }\n\n    function validateAsync(name, validationName, type, asyncFn, fn) {\n      function resolveResult(defer, file, val) {\n        function resolveInternal(fn) {\n          if (fn()) {\n            if (ignoredErrors.indexOf(name) === -1) {\n              file.$error = name;\n              (file.$errorMessages = (file.$errorMessages || {}))[name] = true;\n              file.$errorParam = val;\n              if (invalidFiles.indexOf(file) === -1) {\n                invalidFiles.push(file);\n              }\n              if (!runAllValidation) {\n                var i = files.indexOf(file);\n                if (i > -1) files.splice(i, 1);\n              }\n              defer.resolve(false);\n            } else {\n              var j = files.indexOf(file);\n              if (j > -1) files.splice(j, 1);\n              defer.resolve(true);\n            }\n          } else {\n            defer.resolve(true);\n          }\n        }\n\n        if (val != null) {\n          asyncFn(file, val).then(function (d) {\n            resolveInternal(function () {\n              return !fn(d, val);\n            });\n          }, function () {\n            resolveInternal(function () {\n              return attrGetter('ngfValidateForce', {$file: file});\n            });\n          });\n        } else {\n          defer.resolve(true);\n        }\n      }\n\n      var promises = [upload.emptyPromise(true)];\n      if (files) {\n        files = files.length === undefined ? [files] : files;\n        angular.forEach(files, function (file) {\n          var defer = $q.defer();\n          promises.push(defer.promise);\n          if (type && (file.type == null || file.type.search(type) !== 0)) {\n            defer.resolve(true);\n            return;\n          }\n          if (name === 'dimensions' && upload.attrGetter('ngfDimensions', attr) != null) {\n            upload.imageDimensions(file).then(function (d) {\n              resolveResult(defer, file,\n                attrGetter('ngfDimensions', {$file: file, $width: d.width, $height: d.height}));\n            }, function () {\n              defer.resolve(false);\n            });\n          } else if (name === 'duration' && upload.attrGetter('ngfDuration', attr) != null) {\n            upload.mediaDuration(file).then(function (d) {\n              resolveResult(defer, file,\n                attrGetter('ngfDuration', {$file: file, $duration: d}));\n            }, function () {\n              defer.resolve(false);\n            });\n          } else {\n            resolveResult(defer, file,\n              upload.getValidationAttr(attr, scope, name, validationName, file));\n          }\n        });\n      }\n      var deffer = $q.defer();\n      $q.all(promises).then(function (values) {\n        var isValid = true;\n        for (var i = 0; i < values.length; i++) {\n          if (!values[i]) {\n            isValid = false;\n            break;\n          }\n        }\n        ngModel.$ngfValidations.push({name: name, valid: isValid});\n        deffer.resolve(isValid);\n      });\n      return deffer.promise;\n    }\n\n    var deffer = $q.defer();\n    var promises = [];\n\n    promises.push(validateAsync('maxHeight', 'height.max', /image/,\n      this.imageDimensions, function (d, val) {\n        return d.height <= val;\n      }));\n    promises.push(validateAsync('minHeight', 'height.min', /image/,\n      this.imageDimensions, function (d, val) {\n        return d.height >= val;\n      }));\n    promises.push(validateAsync('maxWidth', 'width.max', /image/,\n      this.imageDimensions, function (d, val) {\n        return d.width <= val;\n      }));\n    promises.push(validateAsync('minWidth', 'width.min', /image/,\n      this.imageDimensions, function (d, val) {\n        return d.width >= val;\n      }));\n    promises.push(validateAsync('dimensions', null, /image/,\n      function (file, val) {\n        return upload.emptyPromise(val);\n      }, function (r) {\n        return r;\n      }));\n    promises.push(validateAsync('ratio', null, /image/,\n      this.imageDimensions, function (d, val) {\n        var split = val.toString().split(','), valid = false;\n        for (var i = 0; i < split.length; i++) {\n          if (Math.abs((d.width / d.height) - upload.ratioToFloat(split[i])) < 0.01) {\n            valid = true;\n          }\n        }\n        return valid;\n      }));\n    promises.push(validateAsync('maxRatio', 'ratio.max', /image/,\n      this.imageDimensions, function (d, val) {\n        return (d.width / d.height) - upload.ratioToFloat(val) < 0.0001;\n      }));\n    promises.push(validateAsync('minRatio', 'ratio.min', /image/,\n      this.imageDimensions, function (d, val) {\n        return (d.width / d.height) - upload.ratioToFloat(val) > -0.0001;\n      }));\n    promises.push(validateAsync('maxDuration', 'duration.max', /audio|video/,\n      this.mediaDuration, function (d, val) {\n        return d <= upload.translateScalars(val);\n      }));\n    promises.push(validateAsync('minDuration', 'duration.min', /audio|video/,\n      this.mediaDuration, function (d, val) {\n        return d >= upload.translateScalars(val);\n      }));\n    promises.push(validateAsync('duration', null, /audio|video/,\n      function (file, val) {\n        return upload.emptyPromise(val);\n      }, function (r) {\n        return r;\n      }));\n\n    promises.push(validateAsync('validateAsyncFn', null, null,\n      function (file, val) {\n        return val;\n      }, function (r) {\n        return r === true || r === null || r === '';\n      }));\n\n    $q.all(promises).then(function () {\n\n      if (runAllValidation) {\n        for (var i = 0; i < files.length; i++) {\n          var file = files[i];\n          if (file.$error) {\n            files.splice(i--, 1);\n          }\n        }\n      }\n\n      runAllValidation = false;\n      validateSync('maxFiles', null, function (file, val, i) {\n        return prevLength + i < val;\n      });\n\n      deffer.resolve({'validFiles': files, 'invalidFiles': invalidFiles});\n    });\n    return deffer.promise;\n  };\n\n  upload.imageDimensions = function (file) {\n    if (file.$ngfWidth && file.$ngfHeight) {\n      var d = $q.defer();\n      $timeout(function () {\n        d.resolve({width: file.$ngfWidth, height: file.$ngfHeight});\n      });\n      return d.promise;\n    }\n    if (file.$ngfDimensionPromise) return file.$ngfDimensionPromise;\n\n    var deferred = $q.defer();\n    $timeout(function () {\n      if (file.type.indexOf('image') !== 0) {\n        deferred.reject('not image');\n        return;\n      }\n      upload.dataUrl(file).then(function (dataUrl) {\n        var img = angular.element('<img>').attr('src', dataUrl)\n          .css('visibility', 'hidden').css('position', 'fixed')\n          .css('max-width', 'none !important').css('max-height', 'none !important');\n\n        function success() {\n          var width = img[0].naturalWidth || img[0].clientWidth;\n          var height = img[0].naturalHeight || img[0].clientHeight;\n          img.remove();\n          file.$ngfWidth = width;\n          file.$ngfHeight = height;\n          deferred.resolve({width: width, height: height});\n        }\n\n        function error() {\n          img.remove();\n          deferred.reject('load error');\n        }\n\n        img.on('load', success);\n        img.on('error', error);\n\n        var secondsCounter = 0;\n        function checkLoadErrorInCaseOfNoCallback() {\n          $timeout(function () {\n            if (img[0].parentNode) {\n              if (img[0].clientWidth) {\n                success();\n              } else if (secondsCounter++ > 10) {\n                error();\n              } else {\n                checkLoadErrorInCaseOfNoCallback();\n              }\n            }\n          }, 1000);\n        }\n\n        checkLoadErrorInCaseOfNoCallback();\n\n        angular.element(document.getElementsByTagName('body')[0]).append(img);\n      }, function () {\n        deferred.reject('load error');\n      });\n    });\n\n    file.$ngfDimensionPromise = deferred.promise;\n    file.$ngfDimensionPromise['finally'](function () {\n      delete file.$ngfDimensionPromise;\n    });\n    return file.$ngfDimensionPromise;\n  };\n\n  upload.mediaDuration = function (file) {\n    if (file.$ngfDuration) {\n      var d = $q.defer();\n      $timeout(function () {\n        d.resolve(file.$ngfDuration);\n      });\n      return d.promise;\n    }\n    if (file.$ngfDurationPromise) return file.$ngfDurationPromise;\n\n    var deferred = $q.defer();\n    $timeout(function () {\n      if (file.type.indexOf('audio') !== 0 && file.type.indexOf('video') !== 0) {\n        deferred.reject('not media');\n        return;\n      }\n      upload.dataUrl(file).then(function (dataUrl) {\n        var el = angular.element(file.type.indexOf('audio') === 0 ? '<audio>' : '<video>')\n          .attr('src', dataUrl).css('visibility', 'none').css('position', 'fixed');\n\n        function success() {\n          var duration = el[0].duration;\n          file.$ngfDuration = duration;\n          el.remove();\n          deferred.resolve(duration);\n        }\n\n        function error() {\n          el.remove();\n          deferred.reject('load error');\n        }\n\n        el.on('loadedmetadata', success);\n        el.on('error', error);\n        var count = 0;\n\n        function checkLoadError() {\n          $timeout(function () {\n            if (el[0].parentNode) {\n              if (el[0].duration) {\n                success();\n              } else if (count > 10) {\n                error();\n              } else {\n                checkLoadError();\n              }\n            }\n          }, 1000);\n        }\n\n        checkLoadError();\n\n        angular.element(document.body).append(el);\n      }, function () {\n        deferred.reject('load error');\n      });\n    });\n\n    file.$ngfDurationPromise = deferred.promise;\n    file.$ngfDurationPromise['finally'](function () {\n      delete file.$ngfDurationPromise;\n    });\n    return file.$ngfDurationPromise;\n  };\n  return upload;\n}\n]);\n\nngFileUpload.service('UploadResize', ['UploadValidate', '$q', function (UploadValidate, $q) {\n  var upload = UploadValidate;\n\n  /**\n   * Conserve aspect ratio of the original region. Useful when shrinking/enlarging\n   * images to fit into a certain area.\n   * Source:  http://stackoverflow.com/a/14731922\n   *\n   * @param {Number} srcWidth Source area width\n   * @param {Number} srcHeight Source area height\n   * @param {Number} maxWidth Nestable area maximum available width\n   * @param {Number} maxHeight Nestable area maximum available height\n   * @return {Object} { width, height }\n   */\n  var calculateAspectRatioFit = function (srcWidth, srcHeight, maxWidth, maxHeight, centerCrop) {\n    var ratio = centerCrop ? Math.max(maxWidth / srcWidth, maxHeight / srcHeight) :\n      Math.min(maxWidth / srcWidth, maxHeight / srcHeight);\n    return {\n      width: srcWidth * ratio, height: srcHeight * ratio,\n      marginX: srcWidth * ratio - maxWidth, marginY: srcHeight * ratio - maxHeight\n    };\n  };\n\n  // Extracted from https://github.com/romelgomez/angular-firebase-image-upload/blob/master/app/scripts/fileUpload.js#L89\n  var resize = function (imagen, width, height, quality, type, ratio, centerCrop, resizeIf) {\n    var deferred = $q.defer();\n    var canvasElement = document.createElement('canvas');\n    var imageElement = document.createElement('img');\n    imageElement.setAttribute('style', 'visibility:hidden;position:fixed;z-index:-100000');\n    document.body.appendChild(imageElement);\n\n    imageElement.onload = function () {\n      var imgWidth = imageElement.width, imgHeight = imageElement.height;\n      imageElement.parentNode.removeChild(imageElement);\n      if (resizeIf != null && resizeIf(imgWidth, imgHeight) === false) {\n        deferred.reject('resizeIf');\n        return;\n      }\n      try {\n        if (ratio) {\n          var ratioFloat = upload.ratioToFloat(ratio);\n          var imgRatio = imgWidth / imgHeight;\n          if (imgRatio < ratioFloat) {\n            width = imgWidth;\n            height = width / ratioFloat;\n          } else {\n            height = imgHeight;\n            width = height * ratioFloat;\n          }\n        }\n        if (!width) {\n          width = imgWidth;\n        }\n        if (!height) {\n          height = imgHeight;\n        }\n        var dimensions = calculateAspectRatioFit(imgWidth, imgHeight, width, height, centerCrop);\n        canvasElement.width = Math.min(dimensions.width, width);\n        canvasElement.height = Math.min(dimensions.height, height);\n        var context = canvasElement.getContext('2d');\n        context.drawImage(imageElement,\n          Math.min(0, -dimensions.marginX / 2), Math.min(0, -dimensions.marginY / 2),\n          dimensions.width, dimensions.height);\n        deferred.resolve(canvasElement.toDataURL(type || 'image/WebP', quality || 0.934));\n      } catch (e) {\n        deferred.reject(e);\n      }\n    };\n    imageElement.onerror = function () {\n      imageElement.parentNode.removeChild(imageElement);\n      deferred.reject();\n    };\n    imageElement.src = imagen;\n    return deferred.promise;\n  };\n\n  upload.dataUrltoBlob = function (dataurl, name, origSize) {\n    var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    var blob = new window.Blob([u8arr], {type: mime});\n    blob.name = name;\n    blob.$ngfOrigSize = origSize;\n    return blob;\n  };\n\n  upload.isResizeSupported = function () {\n    var elem = document.createElement('canvas');\n    return window.atob && elem.getContext && elem.getContext('2d') && window.Blob;\n  };\n\n  if (upload.isResizeSupported()) {\n    // add name getter to the blob constructor prototype\n    Object.defineProperty(window.Blob.prototype, 'name', {\n      get: function () {\n        return this.$ngfName;\n      },\n      set: function (v) {\n        this.$ngfName = v;\n      },\n      configurable: true\n    });\n  }\n\n  upload.resize = function (file, options) {\n    if (file.type.indexOf('image') !== 0) return upload.emptyPromise(file);\n\n    var deferred = $q.defer();\n    upload.dataUrl(file, true).then(function (url) {\n      resize(url, options.width, options.height, options.quality, options.type || file.type,\n        options.ratio, options.centerCrop, options.resizeIf)\n        .then(function (dataUrl) {\n          if (file.type === 'image/jpeg' && options.restoreExif !== false) {\n            try {\n              dataUrl = upload.restoreExif(url, dataUrl);\n            } catch (e) {\n              setTimeout(function () {throw e;}, 1);\n            }\n          }\n          try {\n            var blob = upload.dataUrltoBlob(dataUrl, file.name, file.size);\n            deferred.resolve(blob);\n          } catch (e) {\n            deferred.reject(e);\n          }\n        }, function (r) {\n          if (r === 'resizeIf') {\n            deferred.resolve(file);\n          }\n          deferred.reject(r);\n        });\n    }, function (e) {\n      deferred.reject(e);\n    });\n    return deferred.promise;\n  };\n\n  return upload;\n}]);\n\n(function () {\n  ngFileUpload.directive('ngfDrop', ['$parse', '$timeout', '$window', 'Upload', '$http', '$q',\n    function ($parse, $timeout, $window, Upload, $http, $q) {\n      return {\n        restrict: 'AEC',\n        require: '?ngModel',\n        link: function (scope, elem, attr, ngModel) {\n          linkDrop(scope, elem, attr, ngModel, $parse, $timeout, $window, Upload, $http, $q);\n        }\n      };\n    }]);\n\n  ngFileUpload.directive('ngfNoFileDrop', function () {\n    return function (scope, elem) {\n      if (dropAvailable()) elem.css('display', 'none');\n    };\n  });\n\n  ngFileUpload.directive('ngfDropAvailable', ['$parse', '$timeout', 'Upload', function ($parse, $timeout, Upload) {\n    return function (scope, elem, attr) {\n      if (dropAvailable()) {\n        var model = $parse(Upload.attrGetter('ngfDropAvailable', attr));\n        $timeout(function () {\n          model(scope);\n          if (model.assign) {\n            model.assign(scope, true);\n          }\n        });\n      }\n    };\n  }]);\n\n  function linkDrop(scope, elem, attr, ngModel, $parse, $timeout, $window, upload, $http, $q) {\n    var available = dropAvailable();\n\n    var attrGetter = function (name, scope, params) {\n      return upload.attrGetter(name, attr, scope, params);\n    };\n\n    if (attrGetter('dropAvailable')) {\n      $timeout(function () {\n        if (scope[attrGetter('dropAvailable')]) {\n          scope[attrGetter('dropAvailable')].value = available;\n        } else {\n          scope[attrGetter('dropAvailable')] = available;\n        }\n      });\n    }\n    if (!available) {\n      if (attrGetter('ngfHideOnDropNotAvailable', scope) === true) {\n        elem.css('display', 'none');\n      }\n      return;\n    }\n\n    function isDisabled() {\n      return elem.attr('disabled') || attrGetter('ngfDropDisabled', scope);\n    }\n\n    if (attrGetter('ngfSelect') == null) {\n      upload.registerModelChangeValidator(ngModel, attr, scope);\n    }\n\n    var leaveTimeout = null;\n    var stopPropagation = $parse(attrGetter('ngfStopPropagation'));\n    var dragOverDelay = 1;\n    var actualDragOverClass;\n\n    elem[0].addEventListener('dragover', function (evt) {\n      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;\n      evt.preventDefault();\n      if (stopPropagation(scope)) evt.stopPropagation();\n      // handling dragover events from the Chrome download bar\n      if (navigator.userAgent.indexOf('Chrome') > -1) {\n        var b = evt.dataTransfer.effectAllowed;\n        evt.dataTransfer.dropEffect = ('move' === b || 'linkMove' === b) ? 'move' : 'copy';\n      }\n      $timeout.cancel(leaveTimeout);\n      if (!actualDragOverClass) {\n        actualDragOverClass = 'C';\n        calculateDragOverClass(scope, attr, evt, function (clazz) {\n          actualDragOverClass = clazz;\n          elem.addClass(actualDragOverClass);\n          attrGetter('ngfDrag', scope, {$isDragging: true, $class: actualDragOverClass, $event: evt});\n        });\n      }\n    }, false);\n    elem[0].addEventListener('dragenter', function (evt) {\n      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;\n      evt.preventDefault();\n      if (stopPropagation(scope)) evt.stopPropagation();\n    }, false);\n    elem[0].addEventListener('dragleave', function (evt) {\n      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;\n      evt.preventDefault();\n      if (stopPropagation(scope)) evt.stopPropagation();\n      leaveTimeout = $timeout(function () {\n        if (actualDragOverClass) elem.removeClass(actualDragOverClass);\n        actualDragOverClass = null;\n        attrGetter('ngfDrag', scope, {$isDragging: false, $event: evt});\n      }, dragOverDelay || 100);\n    }, false);\n    elem[0].addEventListener('drop', function (evt) {\n      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;\n      evt.preventDefault();\n      if (stopPropagation(scope)) evt.stopPropagation();\n      if (actualDragOverClass) elem.removeClass(actualDragOverClass);\n      actualDragOverClass = null;\n      extractFilesAndUpdateModel(evt.dataTransfer, evt, 'dropUrl');\n    }, false);\n    elem[0].addEventListener('paste', function (evt) {\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1 &&\n        attrGetter('ngfEnableFirefoxPaste', scope)) {\n        evt.preventDefault();\n      }\n      if (isDisabled() || !upload.shouldUpdateOn('paste', attr, scope)) return;\n      extractFilesAndUpdateModel(evt.clipboardData || evt.originalEvent.clipboardData, evt, 'pasteUrl');\n    }, false);\n\n    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1 &&\n      attrGetter('ngfEnableFirefoxPaste', scope)) {\n      elem.attr('contenteditable', true);\n      elem.on('keypress', function (e) {\n        if (!e.metaKey && !e.ctrlKey) {\n          e.preventDefault();\n        }\n      });\n    }\n\n    function extractFilesAndUpdateModel(source, evt, updateOnType) {\n      if (!source) return;\n      // html needs to be calculated on the same process otherwise the data will be wiped\n      // after promise resolve or setTimeout.\n      var html;\n      try {\n        html = source && source.getData && source.getData('text/html');\n      } catch (e) {/* Fix IE11 that throw error calling getData */\n      }\n      extractFiles(source.items, source.files, attrGetter('ngfAllowDir', scope) !== false,\n        attrGetter('multiple') || attrGetter('ngfMultiple', scope)).then(function (files) {\n        if (files.length) {\n          updateModel(files, evt);\n        } else {\n          extractFilesFromHtml(updateOnType, html).then(function (files) {\n            updateModel(files, evt);\n          });\n        }\n      });\n    }\n\n    function updateModel(files, evt) {\n      upload.updateModel(ngModel, attr, scope, attrGetter('ngfChange') || attrGetter('ngfDrop'), files, evt);\n    }\n\n    function extractFilesFromHtml(updateOn, html) {\n      if (!upload.shouldUpdateOn(updateOn, attr, scope) || typeof html !== 'string') return upload.rejectPromise([]);\n      var urls = [];\n      html.replace(/<(img src|img [^>]* src) *=\\\"([^\\\"]*)\\\"/gi, function (m, n, src) {\n        urls.push(src);\n      });\n      var promises = [], files = [];\n      if (urls.length) {\n        angular.forEach(urls, function (url) {\n          promises.push(upload.urlToBlob(url).then(function (blob) {\n            files.push(blob);\n          }));\n        });\n        var defer = $q.defer();\n        $q.all(promises).then(function () {\n          defer.resolve(files);\n        }, function (e) {\n          defer.reject(e);\n        });\n        return defer.promise;\n      }\n      return upload.emptyPromise();\n    }\n\n    function calculateDragOverClass(scope, attr, evt, callback) {\n      var obj = attrGetter('ngfDragOverClass', scope, {$event: evt}), dClass = 'dragover';\n      if (angular.isString(obj)) {\n        dClass = obj;\n      } else if (obj) {\n        if (obj.delay) dragOverDelay = obj.delay;\n        if (obj.accept || obj.reject) {\n          var items = evt.dataTransfer.items;\n          if (items == null || !items.length) {\n            dClass = obj.accept;\n          } else {\n            var pattern = obj.pattern || attrGetter('ngfPattern', scope, {$event: evt});\n            var len = items.length;\n            while (len--) {\n              if (!upload.validatePattern(items[len], pattern)) {\n                dClass = obj.reject;\n                break;\n              } else {\n                dClass = obj.accept;\n              }\n            }\n          }\n        }\n      }\n      callback(dClass);\n    }\n\n    function extractFiles(items, fileList, allowDir, multiple) {\n      var maxFiles = upload.getValidationAttr(attr, scope, 'maxFiles');\n      if (maxFiles == null) {\n        maxFiles = Number.MAX_VALUE;\n      }\n      var maxTotalSize = upload.getValidationAttr(attr, scope, 'maxTotalSize');\n      if (maxTotalSize == null) {\n        maxTotalSize = Number.MAX_VALUE;\n      }\n      var includeDir = attrGetter('ngfIncludeDir', scope);\n      var files = [], totalSize = 0;\n\n      function traverseFileTree(entry, path) {\n        var defer = $q.defer();\n        if (entry != null) {\n          if (entry.isDirectory) {\n            var promises = [upload.emptyPromise()];\n            if (includeDir) {\n              var file = {type: 'directory'};\n              file.name = file.path = (path || '') + entry.name;\n              files.push(file);\n            }\n            var dirReader = entry.createReader();\n            var entries = [];\n            var readEntries = function () {\n              dirReader.readEntries(function (results) {\n                try {\n                  if (!results.length) {\n                    angular.forEach(entries.slice(0), function (e) {\n                      if (files.length <= maxFiles && totalSize <= maxTotalSize) {\n                        promises.push(traverseFileTree(e, (path ? path : '') + entry.name + '/'));\n                      }\n                    });\n                    $q.all(promises).then(function () {\n                      defer.resolve();\n                    }, function (e) {\n                      defer.reject(e);\n                    });\n                  } else {\n                    entries = entries.concat(Array.prototype.slice.call(results || [], 0));\n                    readEntries();\n                  }\n                } catch (e) {\n                  defer.reject(e);\n                }\n              }, function (e) {\n                defer.reject(e);\n              });\n            };\n            readEntries();\n          } else {\n            entry.file(function (file) {\n              try {\n                file.path = (path ? path : '') + file.name;\n                if (includeDir) {\n                  file = upload.rename(file, file.path);\n                }\n                files.push(file);\n                totalSize += file.size;\n                defer.resolve();\n              } catch (e) {\n                defer.reject(e);\n              }\n            }, function (e) {\n              defer.reject(e);\n            });\n          }\n        }\n        return defer.promise;\n      }\n\n      var promises = [upload.emptyPromise()];\n\n      if (items && items.length > 0 && $window.location.protocol !== 'file:') {\n        for (var i = 0; i < items.length; i++) {\n          if (items[i].webkitGetAsEntry && items[i].webkitGetAsEntry() && items[i].webkitGetAsEntry().isDirectory) {\n            var entry = items[i].webkitGetAsEntry();\n            if (entry.isDirectory && !allowDir) {\n              continue;\n            }\n            if (entry != null) {\n              promises.push(traverseFileTree(entry));\n            }\n          } else {\n            var f = items[i].getAsFile();\n            if (f != null) {\n              files.push(f);\n              totalSize += f.size;\n            }\n          }\n          if (files.length > maxFiles || totalSize > maxTotalSize ||\n            (!multiple && files.length > 0)) break;\n        }\n      } else {\n        if (fileList != null) {\n          for (var j = 0; j < fileList.length; j++) {\n            var file = fileList.item(j);\n            if (file.type || file.size > 0) {\n              files.push(file);\n              totalSize += file.size;\n            }\n            if (files.length > maxFiles || totalSize > maxTotalSize ||\n              (!multiple && files.length > 0)) break;\n          }\n        }\n      }\n\n      var defer = $q.defer();\n      $q.all(promises).then(function () {\n        if (!multiple && !includeDir && files.length) {\n          var i = 0;\n          while (files[i] && files[i].type === 'directory') i++;\n          defer.resolve([files[i]]);\n        } else {\n          defer.resolve(files);\n        }\n      }, function (e) {\n        defer.reject(e);\n      });\n\n      return defer.promise;\n    }\n  }\n\n  function dropAvailable() {\n    var div = document.createElement('div');\n    return ('draggable' in div) && ('ondrop' in div) && !/Edge\\/12./i.test(navigator.userAgent);\n  }\n\n})();\n\n// customized version of https://github.com/exif-js/exif-js\nngFileUpload.service('UploadExif', ['UploadResize', '$q', function (UploadResize, $q) {\n  var upload = UploadResize;\n\n  upload.isExifSupported = function () {\n    return window.FileReader && new FileReader().readAsArrayBuffer && upload.isResizeSupported();\n  };\n\n  function applyTransform(ctx, orientation, width, height) {\n    switch (orientation) {\n      case 2:\n        return ctx.transform(-1, 0, 0, 1, width, 0);\n      case 3:\n        return ctx.transform(-1, 0, 0, -1, width, height);\n      case 4:\n        return ctx.transform(1, 0, 0, -1, 0, height);\n      case 5:\n        return ctx.transform(0, 1, 1, 0, 0, 0);\n      case 6:\n        return ctx.transform(0, 1, -1, 0, height, 0);\n      case 7:\n        return ctx.transform(0, -1, -1, 0, height, width);\n      case 8:\n        return ctx.transform(0, -1, 1, 0, 0, width);\n    }\n  }\n\n  upload.readOrientation = function (file) {\n    var defer = $q.defer();\n    var reader = new FileReader();\n    var slicedFile = file.slice ? file.slice(0, 64 * 1024) : file;\n    reader.readAsArrayBuffer(slicedFile);\n    reader.onerror = function (e) {\n      return defer.reject(e);\n    };\n    reader.onload = function (e) {\n      var result = {orientation: 1};\n      var view = new DataView(this.result);\n      if (view.getUint16(0, false) !== 0xFFD8) return defer.resolve(result);\n\n      var length = view.byteLength,\n        offset = 2;\n      while (offset < length) {\n        var marker = view.getUint16(offset, false);\n        offset += 2;\n        if (marker === 0xFFE1) {\n          if (view.getUint32(offset += 2, false) !== 0x45786966) return defer.resolve(result);\n\n          var little = view.getUint16(offset += 6, false) === 0x4949;\n          offset += view.getUint32(offset + 4, little);\n          var tags = view.getUint16(offset, little);\n          offset += 2;\n          for (var i = 0; i < tags; i++)\n            if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n              var orientation = view.getUint16(offset + (i * 12) + 8, little);\n              if (orientation >= 2 && orientation <= 8) {\n                view.setUint16(offset + (i * 12) + 8, 1, little);\n                result.fixedArrayBuffer = e.target.result;\n              }\n              result.orientation = orientation;\n              return defer.resolve(result);\n            }\n        } else if ((marker & 0xFF00) !== 0xFF00) break;\n        else offset += view.getUint16(offset, false);\n      }\n      return defer.resolve(result);\n    };\n    return defer.promise;\n  };\n\n  function arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n\n  upload.applyExifRotation = function (file) {\n    if (file.type.indexOf('image/jpeg') !== 0) {\n      return upload.emptyPromise(file);\n    }\n\n    var deferred = $q.defer();\n    upload.readOrientation(file).then(function (result) {\n      if (result.orientation < 2 || result.orientation > 8) {\n        return deferred.resolve(file);\n      }\n      upload.dataUrl(file, true).then(function (url) {\n        var canvas = document.createElement('canvas');\n        var img = document.createElement('img');\n\n        img.onload = function () {\n          try {\n            canvas.width = result.orientation > 4 ? img.height : img.width;\n            canvas.height = result.orientation > 4 ? img.width : img.height;\n            var ctx = canvas.getContext('2d');\n            applyTransform(ctx, result.orientation, img.width, img.height);\n            ctx.drawImage(img, 0, 0);\n            var dataUrl = canvas.toDataURL(file.type || 'image/WebP', 0.934);\n            dataUrl = upload.restoreExif(arrayBufferToBase64(result.fixedArrayBuffer), dataUrl);\n            var blob = upload.dataUrltoBlob(dataUrl, file.name);\n            deferred.resolve(blob);\n          } catch (e) {\n            return deferred.reject(e);\n          }\n        };\n        img.onerror = function () {\n          deferred.reject();\n        };\n        img.src = url;\n      }, function (e) {\n        deferred.reject(e);\n      });\n    }, function (e) {\n      deferred.reject(e);\n    });\n    return deferred.promise;\n  };\n\n  upload.restoreExif = function (orig, resized) {\n    var ExifRestorer = {};\n\n    ExifRestorer.KEY_STR = 'ABCDEFGHIJKLMNOP' +\n      'QRSTUVWXYZabcdef' +\n      'ghijklmnopqrstuv' +\n      'wxyz0123456789+/' +\n      '=';\n\n    ExifRestorer.encode64 = function (input) {\n      var output = '',\n        chr1, chr2, chr3 = '',\n        enc1, enc2, enc3, enc4 = '',\n        i = 0;\n\n      do {\n        chr1 = input[i++];\n        chr2 = input[i++];\n        chr3 = input[i++];\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n\n        output = output +\n          this.KEY_STR.charAt(enc1) +\n          this.KEY_STR.charAt(enc2) +\n          this.KEY_STR.charAt(enc3) +\n          this.KEY_STR.charAt(enc4);\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n      } while (i < input.length);\n\n      return output;\n    };\n\n    ExifRestorer.restore = function (origFileBase64, resizedFileBase64) {\n      if (origFileBase64.match('data:image/jpeg;base64,')) {\n        origFileBase64 = origFileBase64.replace('data:image/jpeg;base64,', '');\n      }\n\n      var rawImage = this.decode64(origFileBase64);\n      var segments = this.slice2Segments(rawImage);\n\n      var image = this.exifManipulation(resizedFileBase64, segments);\n\n      return 'data:image/jpeg;base64,' + this.encode64(image);\n    };\n\n\n    ExifRestorer.exifManipulation = function (resizedFileBase64, segments) {\n      var exifArray = this.getExifArray(segments),\n        newImageArray = this.insertExif(resizedFileBase64, exifArray);\n      return new Uint8Array(newImageArray);\n    };\n\n\n    ExifRestorer.getExifArray = function (segments) {\n      var seg;\n      for (var x = 0; x < segments.length; x++) {\n        seg = segments[x];\n        if (seg[0] === 255 & seg[1] === 225) //(ff e1)\n        {\n          return seg;\n        }\n      }\n      return [];\n    };\n\n\n    ExifRestorer.insertExif = function (resizedFileBase64, exifArray) {\n      var imageData = resizedFileBase64.replace('data:image/jpeg;base64,', ''),\n        buf = this.decode64(imageData),\n        separatePoint = buf.indexOf(255, 3),\n        mae = buf.slice(0, separatePoint),\n        ato = buf.slice(separatePoint),\n        array = mae;\n\n      array = array.concat(exifArray);\n      array = array.concat(ato);\n      return array;\n    };\n\n\n    ExifRestorer.slice2Segments = function (rawImageArray) {\n      var head = 0,\n        segments = [];\n\n      while (1) {\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) {\n          break;\n        }\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) {\n          head += 2;\n        }\n        else {\n          var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n            endPoint = head + length + 2,\n            seg = rawImageArray.slice(head, endPoint);\n          segments.push(seg);\n          head = endPoint;\n        }\n        if (head > rawImageArray.length) {\n          break;\n        }\n      }\n\n      return segments;\n    };\n\n\n    ExifRestorer.decode64 = function (input) {\n      var chr1, chr2, chr3 = '',\n        enc1, enc2, enc3, enc4 = '',\n        i = 0,\n        buf = [];\n\n      // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n      var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n      if (base64test.exec(input)) {\n        console.log('There were invalid base64 characters in the input text.\\n' +\n          'Valid base64 characters are A-Z, a-z, 0-9, ' + ', ' / ',and \"=\"\\n' +\n          'Expect errors in decoding.');\n      }\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n      do {\n        enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        buf.push(chr1);\n\n        if (enc3 !== 64) {\n          buf.push(chr2);\n        }\n        if (enc4 !== 64) {\n          buf.push(chr3);\n        }\n\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n\n      } while (i < input.length);\n\n      return buf;\n    };\n\n    return ExifRestorer.restore(orig, resized);  //<= EXIF\n  };\n\n  return upload;\n}]);\n\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module', 'exports', 'angular', 'ws'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module, exports, require('angular'), require('ws'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod, mod.exports, global.angular, global.ws);\n    global.angularWebsocket = mod.exports;\n  }\n})(this, function (module, exports, _angular, ws) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _angular2 = _interopRequireDefault(_angular);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  var Socket;\n\n  if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && typeof require === 'function') {\n    try {\n\n      Socket = ws.Client || ws.client || ws;\n    } catch (e) {}\n  }\n\n  // Browser\n  Socket = Socket || window.WebSocket || window.MozWebSocket;\n\n  var noop = _angular2.default.noop;\n  var objectFreeze = Object.freeze ? Object.freeze : noop;\n  var objectDefineProperty = Object.defineProperty;\n  var isString = _angular2.default.isString;\n  var isFunction = _angular2.default.isFunction;\n  var isDefined = _angular2.default.isDefined;\n  var isObject = _angular2.default.isObject;\n  var isArray = _angular2.default.isArray;\n  var forEach = _angular2.default.forEach;\n  var arraySlice = Array.prototype.slice;\n  // ie8 wat\n  if (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (elt /*, from*/) {\n      var len = this.length >>> 0;\n      var from = Number(arguments[1]) || 0;\n      from = from < 0 ? Math.ceil(from) : Math.floor(from);\n      if (from < 0) {\n        from += len;\n      }\n\n      for (; from < len; from++) {\n        if (from in this && this[from] === elt) {\n          return from;\n        }\n      }\n      return -1;\n    };\n  }\n\n  // $WebSocketProvider.$inject = ['$rootScope', '$q', '$timeout', '$websocketBackend'];\n  function $WebSocketProvider($rootScope, $q, $timeout, $websocketBackend) {\n\n    function $WebSocket(url, protocols, options) {\n      if (!options && isObject(protocols) && !isArray(protocols)) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      this.protocols = protocols;\n      this.url = url || 'Missing URL';\n      this.ssl = /(wss)/i.test(this.url);\n\n      // this.binaryType = '';\n      // this.extensions = '';\n      // this.bufferedAmount = 0;\n      // this.trasnmitting = false;\n      // this.buffer = [];\n\n      // TODO: refactor options to use isDefined\n      this.scope = options && options.scope || $rootScope;\n      this.rootScopeFailover = options && options.rootScopeFailover && true;\n      this.useApplyAsync = options && options.useApplyAsync || false;\n      this.initialTimeout = options && options.initialTimeout || 500; // 500ms\n      this.maxTimeout = options && options.maxTimeout || 5 * 60 * 1000; // 5 minutes\n      this.reconnectIfNotNormalClose = options && options.reconnectIfNotNormalClose || false;\n      this.binaryType = options && options.binaryType || 'blob';\n\n      this._reconnectAttempts = 0;\n      this.sendQueue = [];\n      this.onOpenCallbacks = [];\n      this.onMessageCallbacks = [];\n      this.onErrorCallbacks = [];\n      this.onCloseCallbacks = [];\n\n      objectFreeze(this._readyStateConstants);\n\n      if (url) {\n        this._connect();\n      } else {\n        this._setInternalState(0);\n      }\n    }\n\n    $WebSocket.prototype._readyStateConstants = {\n      'CONNECTING': 0,\n      'OPEN': 1,\n      'CLOSING': 2,\n      'CLOSED': 3,\n      'RECONNECT_ABORTED': 4\n    };\n\n    $WebSocket.prototype._normalCloseCode = 1000;\n\n    $WebSocket.prototype._reconnectableStatusCodes = [4000];\n\n    $WebSocket.prototype.safeDigest = function safeDigest(autoApply) {\n      if (autoApply && !this.scope.$$phase) {\n        this.scope.$digest();\n      }\n    };\n\n    $WebSocket.prototype.bindToScope = function bindToScope(scope) {\n      var self = this;\n      if (scope) {\n        this.scope = scope;\n        if (this.rootScopeFailover) {\n          this.scope.$on('$destroy', function () {\n            self.scope = $rootScope;\n          });\n        }\n      }\n      return self;\n    };\n\n    $WebSocket.prototype._connect = function _connect(force) {\n      if (force || !this.socket || this.socket.readyState !== this._readyStateConstants.OPEN) {\n        this.socket = $websocketBackend.create(this.url, this.protocols);\n        this.socket.onmessage = _angular2.default.bind(this, this._onMessageHandler);\n        this.socket.onopen = _angular2.default.bind(this, this._onOpenHandler);\n        this.socket.onerror = _angular2.default.bind(this, this._onErrorHandler);\n        this.socket.onclose = _angular2.default.bind(this, this._onCloseHandler);\n        this.socket.binaryType = this.binaryType;\n      }\n    };\n\n    $WebSocket.prototype.fireQueue = function fireQueue() {\n      while (this.sendQueue.length && this.socket.readyState === this._readyStateConstants.OPEN) {\n        var data = this.sendQueue.shift();\n\n        this.socket.send(isString(data.message) || this.binaryType != 'blob' ? data.message : JSON.stringify(data.message));\n        data.deferred.resolve();\n      }\n    };\n\n    $WebSocket.prototype.notifyOpenCallbacks = function notifyOpenCallbacks(event) {\n      for (var i = 0; i < this.onOpenCallbacks.length; i++) {\n        this.onOpenCallbacks[i].call(this, event);\n      }\n    };\n\n    $WebSocket.prototype.notifyCloseCallbacks = function notifyCloseCallbacks(event) {\n      for (var i = 0; i < this.onCloseCallbacks.length; i++) {\n        this.onCloseCallbacks[i].call(this, event);\n      }\n    };\n\n    $WebSocket.prototype.notifyErrorCallbacks = function notifyErrorCallbacks(event) {\n      for (var i = 0; i < this.onErrorCallbacks.length; i++) {\n        this.onErrorCallbacks[i].call(this, event);\n      }\n    };\n\n    $WebSocket.prototype.onOpen = function onOpen(cb) {\n      this.onOpenCallbacks.push(cb);\n      return this;\n    };\n\n    $WebSocket.prototype.onClose = function onClose(cb) {\n      this.onCloseCallbacks.push(cb);\n      return this;\n    };\n\n    $WebSocket.prototype.onError = function onError(cb) {\n      this.onErrorCallbacks.push(cb);\n      return this;\n    };\n\n    $WebSocket.prototype.onMessage = function onMessage(callback, options) {\n      if (!isFunction(callback)) {\n        throw new Error('Callback must be a function');\n      }\n\n      if (options && isDefined(options.filter) && !isString(options.filter) && !(options.filter instanceof RegExp)) {\n        throw new Error('Pattern must be a string or regular expression');\n      }\n\n      this.onMessageCallbacks.push({\n        fn: callback,\n        pattern: options ? options.filter : undefined,\n        autoApply: options ? options.autoApply : true\n      });\n      return this;\n    };\n\n    $WebSocket.prototype._onOpenHandler = function _onOpenHandler(event) {\n      this._reconnectAttempts = 0;\n      this.notifyOpenCallbacks(event);\n      this.fireQueue();\n    };\n\n    $WebSocket.prototype._onCloseHandler = function _onCloseHandler(event) {\n      var self = this;\n      if (self.useApplyAsync) {\n        self.scope.$applyAsync(function () {\n          self.notifyCloseCallbacks(event);\n        });\n      } else {\n        self.notifyCloseCallbacks(event);\n        self.safeDigest(true);\n      }\n      if (this.reconnectIfNotNormalClose && event.code !== this._normalCloseCode || this._reconnectableStatusCodes.indexOf(event.code) > -1) {\n        this.reconnect();\n      }\n    };\n\n    $WebSocket.prototype._onErrorHandler = function _onErrorHandler(event) {\n      var self = this;\n      if (self.useApplyAsync) {\n        self.scope.$applyAsync(function () {\n          self.notifyErrorCallbacks(event);\n        });\n      } else {\n        self.notifyErrorCallbacks(event);\n        self.safeDigest(true);\n      }\n    };\n\n    $WebSocket.prototype._onMessageHandler = function _onMessageHandler(message) {\n      var pattern;\n      var self = this;\n      var currentCallback;\n      for (var i = 0; i < self.onMessageCallbacks.length; i++) {\n        currentCallback = self.onMessageCallbacks[i];\n        pattern = currentCallback.pattern;\n        if (pattern) {\n          if (isString(pattern) && message.data === pattern) {\n            applyAsyncOrDigest(currentCallback.fn, currentCallback.autoApply, message);\n          } else if (pattern instanceof RegExp && pattern.exec(message.data)) {\n            applyAsyncOrDigest(currentCallback.fn, currentCallback.autoApply, message);\n          }\n        } else {\n          applyAsyncOrDigest(currentCallback.fn, currentCallback.autoApply, message);\n        }\n      }\n\n      function applyAsyncOrDigest(callback, autoApply, args) {\n        args = arraySlice.call(arguments, 2);\n        if (self.useApplyAsync) {\n          self.scope.$applyAsync(function () {\n            callback.apply(self, args);\n          });\n        } else {\n          callback.apply(self, args);\n          self.safeDigest(autoApply);\n        }\n      }\n    };\n\n    $WebSocket.prototype.close = function close(force) {\n      if (force || !this.socket.bufferedAmount) {\n        this.socket.close();\n      }\n      return this;\n    };\n\n    $WebSocket.prototype.send = function send(data) {\n      var deferred = $q.defer();\n      var self = this;\n      var promise = cancelableify(deferred.promise);\n\n      if (self.readyState === self._readyStateConstants.RECONNECT_ABORTED) {\n        deferred.reject('Socket connection has been closed');\n      } else {\n        self.sendQueue.push({\n          message: data,\n          deferred: deferred\n        });\n        self.fireQueue();\n      }\n\n      // Credit goes to @btford\n      function cancelableify(promise) {\n        promise.cancel = cancel;\n        var then = promise.then;\n        promise.then = function () {\n          var newPromise = then.apply(this, arguments);\n          return cancelableify(newPromise);\n        };\n        return promise;\n      }\n\n      function cancel(reason) {\n        self.sendQueue.splice(self.sendQueue.indexOf(data), 1);\n        deferred.reject(reason);\n        return self;\n      }\n\n      if ($websocketBackend.isMocked && $websocketBackend.isMocked() && $websocketBackend.isConnected(this.url)) {\n        this._onMessageHandler($websocketBackend.mockSend());\n      }\n\n      return promise;\n    };\n\n    $WebSocket.prototype.reconnect = function reconnect() {\n      this.close();\n\n      var backoffDelay = this._getBackoffDelay(++this._reconnectAttempts);\n\n      var backoffDelaySeconds = backoffDelay / 1000;\n      console.log('Reconnecting in ' + backoffDelaySeconds + ' seconds');\n\n      $timeout(_angular2.default.bind(this, this._connect), backoffDelay);\n\n      return this;\n    };\n    // Exponential Backoff Formula by Prof. Douglas Thain\n    // http://dthain.blogspot.co.uk/2009/02/exponential-backoff-in-distributed.html\n    $WebSocket.prototype._getBackoffDelay = function _getBackoffDelay(attempt) {\n      var R = Math.random() + 1;\n      var T = this.initialTimeout;\n      var F = 2;\n      var N = attempt;\n      var M = this.maxTimeout;\n\n      return Math.floor(Math.min(R * T * Math.pow(F, N), M));\n    };\n\n    $WebSocket.prototype._setInternalState = function _setInternalState(state) {\n      if (Math.floor(state) !== state || state < 0 || state > 4) {\n        throw new Error('state must be an integer between 0 and 4, got: ' + state);\n      }\n\n      // ie8 wat\n      if (!objectDefineProperty) {\n        this.readyState = state || this.socket.readyState;\n      }\n      this._internalConnectionState = state;\n\n      forEach(this.sendQueue, function (pending) {\n        pending.deferred.reject('Message cancelled due to closed socket connection');\n      });\n    };\n\n    // Read only .readyState\n    if (objectDefineProperty) {\n      objectDefineProperty($WebSocket.prototype, 'readyState', {\n        get: function get() {\n          return this._internalConnectionState || this.socket.readyState;\n        },\n        set: function set() {\n          throw new Error('The readyState property is read-only');\n        }\n      });\n    }\n\n    return function (url, protocols, options) {\n      return new $WebSocket(url, protocols, options);\n    };\n  }\n\n  // $WebSocketBackendProvider.$inject = ['$log'];\n  function $WebSocketBackendProvider($log) {\n    this.create = function create(url, protocols) {\n      var match = /wss?:\\/\\//.exec(url);\n\n      if (!match) {\n        throw new Error('Invalid url provided');\n      }\n\n      if (protocols) {\n        return new Socket(url, protocols);\n      }\n\n      return new Socket(url);\n    };\n\n    this.createWebSocketBackend = function createWebSocketBackend(url, protocols) {\n      $log.warn('Deprecated: Please use .create(url, protocols)');\n      return this.create(url, protocols);\n    };\n  }\n\n  _angular2.default.module('ngWebSocket', []).factory('$websocket', ['$rootScope', '$q', '$timeout', '$websocketBackend', $WebSocketProvider]).factory('WebSocket', ['$rootScope', '$q', '$timeout', 'WebsocketBackend', $WebSocketProvider]).service('$websocketBackend', ['$log', $WebSocketBackendProvider]).service('WebSocketBackend', ['$log', $WebSocketBackendProvider]);\n\n  _angular2.default.module('angular-websocket', ['ngWebSocket']);\n\n  exports.default = _angular2.default.module('ngWebSocket');\n  module.exports = exports['default'];\n});","//\n// randexp v0.4.5\n// Create random strings that match a given regular expression.\n//\n// Copyright (C) 2017 by Roly Fentanes (https://github.com/fent)\n// MIT License\n//\n!function(){var e=\"RandExp\",t=function(){return function e(t,n,r){function o(s,i){if(!n[s]){if(!t[s]){var u=\"function\"==typeof require&&require;if(!i&&u)return u(s,!0);if(a)return a(s,!0);var p=new Error(\"Cannot find module '\"+s+\"'\");throw p.code=\"MODULE_NOT_FOUND\",p}var h=n[s]={exports:{}};t[s][0].call(h.exports,function(e){var n=t[s][1][e];return o(n?n:e)},h,h.exports,e,t,n,r)}return n[s].exports}for(var a=\"function\"==typeof require&&require,s=0;s<r.length;s++)o(r[s]);return o}({1:[function(e,t,n){function r(e){return e+(97<=e&&e<=122?-32:65<=e&&e<=90?32:0)}function o(){return!this.randInt(0,1)}function a(e){return e instanceof h?e.index(this.randInt(0,e.length-1)):e[this.randInt(0,e.length-1)]}function s(e){if(e.type===p.types.CHAR)return new h(e.value);if(e.type===p.types.RANGE)return new h(e.from,e.to);for(var t=new h,n=0;n<e.set.length;n++){var o=s.call(this,e.set[n]);if(t.add(o),this.ignoreCase)for(var a=0;a<o.length;a++){var i=o.index(a),u=r(i);i!==u&&t.add(u)}}return e.not?this.defaultRange.clone().subtract(t):t}function i(e,t){\"number\"==typeof t.max&&(e.max=t.max),t.defaultRange instanceof h&&(e.defaultRange=t.defaultRange),\"function\"==typeof t.randInt&&(e.randInt=t.randInt)}function u(e,t){var n,i,p,h,c;switch(e.type){case l.ROOT:case l.GROUP:if(e.followedBy||e.notFollowedBy)return\"\";for(e.remember&&void 0===e.groupNumber&&(e.groupNumber=t.push(null)-1),n=e.options?a.call(this,e.options):e.stack,i=\"\",h=0,c=n.length;h<c;h++)i+=u.call(this,n[h],t);return e.remember&&(t[e.groupNumber]=i),i;case l.POSITION:return\"\";case l.SET:var f=s.call(this,e);return f.length?String.fromCharCode(a.call(this,f)):\"\";case l.REPETITION:for(p=this.randInt(e.min,e.max===1/0?e.min+this.max:e.max),i=\"\",h=0;h<p;h++)i+=u.call(this,e.value,t);return i;case l.REFERENCE:return t[e.value-1]||\"\";case l.CHAR:var g=this.ignoreCase&&o.call(this)?r(e.value):e.value;return String.fromCharCode(g)}}var p=e(\"ret\"),h=e(\"discontinuous-range\"),l=p.types,c=t.exports=function(e,t){if(this.defaultRange=this.defaultRange.clone(),e instanceof RegExp)this.ignoreCase=e.ignoreCase,this.multiline=e.multiline,i(this,e),e=e.source;else{if(\"string\"!=typeof e)throw new Error(\"Expected a regexp or string\");this.ignoreCase=t&&t.indexOf(\"i\")!==-1,this.multiline=t&&t.indexOf(\"m\")!==-1}this.tokens=p(e)};c.prototype.max=100,c.prototype.gen=function(){return u.call(this,this.tokens,[])},c.randexp=function(e,t){var n;return void 0===e._randexp?(n=new c(e,t),e._randexp=n):n=e._randexp,i(n,e),n.gen()},c.sugar=function(){RegExp.prototype.gen=function(){return c.randexp(this)}},c.prototype.defaultRange=new h(32,126),c.prototype.randInt=function(e,t){return e+Math.floor(Math.random()*(1+t-e))}},{\"discontinuous-range\":2,ret:3}],2:[function(e,t,n){function r(e,t){this.low=e,this.high=t,this.length=1+t-e}function o(e,t){return this instanceof o?(this.ranges=[],this.length=0,void 0!==e&&this.add(e,t),void 0):new o(e,t)}function a(e){e.length=e.ranges.reduce(function(e,t){return e+t.length},0)}r.prototype.overlaps=function(e){return!(this.high<e.low||this.low>e.high)},r.prototype.touches=function(e){return!(this.high+1<e.low||this.low-1>e.high)},r.prototype.add=function(e){return this.touches(e)&&new r(Math.min(this.low,e.low),Math.max(this.high,e.high))},r.prototype.subtract=function(e){return!!this.overlaps(e)&&(e.low<=this.low&&e.high>=this.high?[]:e.low>this.low&&e.high<this.high?[new r(this.low,e.low-1),new r(e.high+1,this.high)]:e.low<=this.low?[new r(e.high+1,this.high)]:[new r(this.low,e.low-1)])},r.prototype.toString=function(){return this.low==this.high?this.low.toString():this.low+\"-\"+this.high},r.prototype.clone=function(){return new r(this.low,this.high)},o.prototype.add=function(e,t){function n(e){for(var t=[],n=0;n<s.ranges.length&&!e.touches(s.ranges[n]);)t.push(s.ranges[n].clone()),n++;for(;n<s.ranges.length&&e.touches(s.ranges[n]);)e=e.add(s.ranges[n]),n++;for(t.push(e);n<s.ranges.length;)t.push(s.ranges[n].clone()),n++;s.ranges=t,a(s)}var s=this;return e instanceof o?e.ranges.forEach(n):e instanceof r?n(e):(void 0===t&&(t=e),n(new r(e,t))),this},o.prototype.subtract=function(e,t){function n(e){for(var t=[],n=0;n<s.ranges.length&&!e.overlaps(s.ranges[n]);)t.push(s.ranges[n].clone()),n++;for(;n<s.ranges.length&&e.overlaps(s.ranges[n]);)t=t.concat(s.ranges[n].subtract(e)),n++;for(;n<s.ranges.length;)t.push(s.ranges[n].clone()),n++;s.ranges=t,a(s)}var s=this;return e instanceof o?e.ranges.forEach(n):e instanceof r?n(e):(void 0===t&&(t=e),n(new r(e,t))),this},o.prototype.index=function(e){for(var t=0;t<this.ranges.length&&this.ranges[t].length<=e;)e-=this.ranges[t].length,t++;return t>=this.ranges.length?null:this.ranges[t].low+e},o.prototype.toString=function(){return\"[ \"+this.ranges.join(\", \")+\" ]\"},o.prototype.clone=function(){return new o(this)},t.exports=o},{}],3:[function(e,t,n){var r=e(\"./util\"),o=e(\"./types\"),a=e(\"./sets\"),s=e(\"./positions\");t.exports=function(e){var t,n,i=0,u={type:o.ROOT,stack:[]},p=u,h=u.stack,l=[],c=function(t){r.error(e,\"Nothing to repeat at column \"+(t-1))},f=r.strToChars(e);for(t=f.length;i<t;)switch(n=f[i++]){case\"\\\\\":switch(n=f[i++]){case\"b\":h.push(s.wordBoundary());break;case\"B\":h.push(s.nonWordBoundary());break;case\"w\":h.push(a.words());break;case\"W\":h.push(a.notWords());break;case\"d\":h.push(a.ints());break;case\"D\":h.push(a.notInts());break;case\"s\":h.push(a.whitespace());break;case\"S\":h.push(a.notWhitespace());break;default:/\\d/.test(n)?h.push({type:o.REFERENCE,value:parseInt(n,10)}):h.push({type:o.CHAR,value:n.charCodeAt(0)})}break;case\"^\":h.push(s.begin());break;case\"$\":h.push(s.end());break;case\"[\":var g;\"^\"===f[i]?(g=!0,i++):g=!1;var y=r.tokenizeClass(f.slice(i),e);i+=y[1],h.push({type:o.SET,set:y[0],not:g});break;case\".\":h.push(a.anyChar());break;case\"(\":var d={type:o.GROUP,stack:[],remember:!0};n=f[i],\"?\"===n&&(n=f[i+1],i+=2,\"=\"===n?d.followedBy=!0:\"!\"===n?d.notFollowedBy=!0:\":\"!==n&&r.error(e,\"Invalid group, character '\"+n+\"' after '?' at column \"+(i-1)),d.remember=!1),h.push(d),l.push(p),p=d,h=d.stack;break;case\")\":0===l.length&&r.error(e,\"Unmatched ) at column \"+(i-1)),p=l.pop(),h=p.options?p.options[p.options.length-1]:p.stack;break;case\"|\":p.options||(p.options=[p.stack],delete p.stack);var v=[];p.options.push(v),h=v;break;case\"{\":var R,C,w=/^(\\d+)(,(\\d+)?)?\\}/.exec(f.slice(i));null!==w?(0===h.length&&c(i),R=parseInt(w[1],10),C=w[2]?w[3]?parseInt(w[3],10):1/0:R,i+=w[0].length,h.push({type:o.REPETITION,min:R,max:C,value:h.pop()})):h.push({type:o.CHAR,value:123});break;case\"?\":0===h.length&&c(i),h.push({type:o.REPETITION,min:0,max:1,value:h.pop()});break;case\"+\":0===h.length&&c(i),h.push({type:o.REPETITION,min:1,max:1/0,value:h.pop()});break;case\"*\":0===h.length&&c(i),h.push({type:o.REPETITION,min:0,max:1/0,value:h.pop()});break;default:h.push({type:o.CHAR,value:n.charCodeAt(0)})}return 0!==l.length&&r.error(e,\"Unterminated group\"),u},t.exports.types=o},{\"./positions\":4,\"./sets\":5,\"./types\":6,\"./util\":7}],4:[function(e,t,n){var r=e(\"./types\");n.wordBoundary=function(){return{type:r.POSITION,value:\"b\"}},n.nonWordBoundary=function(){return{type:r.POSITION,value:\"B\"}},n.begin=function(){return{type:r.POSITION,value:\"^\"}},n.end=function(){return{type:r.POSITION,value:\"$\"}}},{\"./types\":6}],5:[function(e,t,n){var r=e(\"./types\"),o=function(){return[{type:r.RANGE,from:48,to:57}]},a=function(){return[{type:r.CHAR,value:95},{type:r.RANGE,from:97,to:122},{type:r.RANGE,from:65,to:90}].concat(o())},s=function(){return[{type:r.CHAR,value:9},{type:r.CHAR,value:10},{type:r.CHAR,value:11},{type:r.CHAR,value:12},{type:r.CHAR,value:13},{type:r.CHAR,value:32},{type:r.CHAR,value:160},{type:r.CHAR,value:5760},{type:r.CHAR,value:6158},{type:r.CHAR,value:8192},{type:r.CHAR,value:8193},{type:r.CHAR,value:8194},{type:r.CHAR,value:8195},{type:r.CHAR,value:8196},{type:r.CHAR,value:8197},{type:r.CHAR,value:8198},{type:r.CHAR,value:8199},{type:r.CHAR,value:8200},{type:r.CHAR,value:8201},{type:r.CHAR,value:8202},{type:r.CHAR,value:8232},{type:r.CHAR,value:8233},{type:r.CHAR,value:8239},{type:r.CHAR,value:8287},{type:r.CHAR,value:12288},{type:r.CHAR,value:65279}]},i=function(){return[{type:r.CHAR,value:10},{type:r.CHAR,value:13},{type:r.CHAR,value:8232},{type:r.CHAR,value:8233}]};n.words=function(){return{type:r.SET,set:a(),not:!1}},n.notWords=function(){return{type:r.SET,set:a(),not:!0}},n.ints=function(){return{type:r.SET,set:o(),not:!1}},n.notInts=function(){return{type:r.SET,set:o(),not:!0}},n.whitespace=function(){return{type:r.SET,set:s(),not:!1}},n.notWhitespace=function(){return{type:r.SET,set:s(),not:!0}},n.anyChar=function(){return{type:r.SET,set:i(),not:!0}}},{\"./types\":6}],6:[function(e,t,n){t.exports={ROOT:0,GROUP:1,POSITION:2,SET:3,RANGE:4,REPETITION:5,REFERENCE:6,CHAR:7}},{}],7:[function(e,t,n){var r=e(\"./types\"),o=e(\"./sets\"),a=\"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^ ?\",s={0:0,t:9,n:10,v:11,f:12,r:13};n.strToChars=function(e){var t=/(\\[\\\\b\\])|(\\\\)?\\\\(?:u([A-F0-9]{4})|x([A-F0-9]{2})|(0?[0-7]{2})|c([@A-Z\\[\\\\\\]\\^?])|([0tnvfr]))/g;return e=e.replace(t,function(e,t,n,r,o,i,u,p){if(n)return e;var h=t?8:r?parseInt(r,16):o?parseInt(o,16):i?parseInt(i,8):u?a.indexOf(u):s[p],l=String.fromCharCode(h);return/[\\[\\]{}\\^$.|?*+()]/.test(l)&&(l=\"\\\\\"+l),l})},n.tokenizeClass=function(e,t){for(var a,s,i=[],u=/\\\\(?:(w)|(d)|(s)|(W)|(D)|(S))|((?:(?:\\\\)(.)|([^\\]\\\\]))-(?:\\\\)?([^\\]]))|(\\])|(?:\\\\)?(.)/g;null!=(a=u.exec(e));)if(a[1])i.push(o.words());else if(a[2])i.push(o.ints());else if(a[3])i.push(o.whitespace());else if(a[4])i.push(o.notWords());else if(a[5])i.push(o.notInts());else if(a[6])i.push(o.notWhitespace());else if(a[7])i.push({type:r.RANGE,from:(a[8]||a[9]).charCodeAt(0),to:a[10].charCodeAt(0)});else{if(!(s=a[12]))return[i,u.lastIndex];i.push({type:r.CHAR,value:s.charCodeAt(0)})}n.error(t,\"Unterminated character class\")},n.error=function(e,t){throw new SyntaxError(\"Invalid regular expression: /\"+e+\"/: \"+t)}},{\"./sets\":5,\"./types\":6}]},{},[1])}()(1);\"function\"==typeof define&&\"object\"==typeof define.amd?define(e,function(){return t}):\"undefined\"!=typeof window&&(window[e]=t)}();","angular.module('SER.auth', []);\n\nangular.module('SER.auth').value('userPermissions', []);\nangular.module('SER.auth').value('isSuperuser', false);\nangular.module('SER.auth').value('url403', '');\n\nangular.module('SER.auth').service('permissionService', [\n    'userPermissions',\n    'isSuperuser',\n    function (userPermissions, isSuperuser) {\n        \n        return {\n            hasPermission: function (requiredPermission) {\n\n                if (isSuperuser) {\n                    return true;\n                }\n\n                if (notValue(requiredPermission)) {\n                    return false;\n                }\n\n                return userPermissions.indexOf(requiredPermission) !== -1;\n            },\n            atLeastPermissions: function (requiredPermissions) {\n\n                if (isSuperuser) {\n                    return true;\n                }\n\n                if (hasValue(requiredPermissions)) {\n\n                    for (var index = 0; index < requiredPermissions.length; index++) {\n\n                        if (inArray(requiredPermissions[index], userPermissions)) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                }\n\n                return true;\n            },\n            hasPermissions: function (requiredPermissions) {\n\n                if (isSuperuser) {\n                    return true;\n                }\n\n                for (var index = 0; index < requiredPermissions.length; index++) {\n\n                    if (notInArray(requiredPermissions[index], userPermissions)) {\n                        return false;\n                    }\n                }\n\n                return true;\n            }\n        }\n\n    }\n]);","angular.module('SER.search', []);\n\nangular.module('SER.search').directive('serAutocomplete', ['$http', '$compile', '$document', function ($http, $compile, $document) {\n\n    return {\n        restrict: 'E',\n        scope: {\n            remoteUrl: '=',\n            keyword: '=?',\n            keywordField: '@',\n            placeholder: '=?',\n            disabled: '=?',\n            selectItem: '&?'\n        },\n        controller: ['$scope', function ($scope) {\n\n            if (notValue($scope.placeholder)) {\n                $scope.placeholder = __('search') + '...';\n            }\n\n            $scope.results = [];\n            $scope.focus = false;\n            $scope.blur = true;\n            $scope.isFetching = false;\n            $scope.showResults = false;\n\n            $scope.searchFocus = function () {\n                $scope.focus = true;\n                $scope.showResults = true;\n                $scope.blur = false;\n                $document.bind('click', $scope.checkFocus);\n            };\n\n            $scope.searchBlur = function () {\n                $scope.focus = false;\n                $scope.blur = true;\n            };\n\n            $scope.selectInternalItem = function (item) {\n                if (angular.isFunction($scope.selectItem)) {\n                    $scope.selectItem({ newValue: item });\n                }\n\n                if (hasValue($scope.keywordField)) {\n                    $scope.keyword = item[$scope.keywordField];\n                }\n\n                $scope.showResults = false;\n            };\n\n            //TODO mejorar deteccion de \"Sin resultados\"\n            $scope.fetch = function () {\n\n                $scope.isFetching = true;\n                $scope.showResults = false;\n\n                if ($scope.keyword) {\n\n                    $http.get($scope.remoteUrl + $scope.keyword).then(function (response) {\n                        $scope.results = response.data;\n                        $scope.isFetching = false;\n                        $scope.showResults = true;\n                    });\n                } else {\n                    $scope.isFetching = false;\n                    $scope.showResults = true;\n                    $scope.results = [];\n                }\n            };\n\n        }],\n        link: function (scope, element) {\n\n            var inputChangedPromise;\n\n            scope.checkFocus = function () {\n                var isChild = element[0].contains(event.target);\n                var isSelf = element[0] == event.target;\n                var isInside = isChild || isSelf;\n                if (!isInside) {\n                    scope.$apply(function () {\n                        scope.showResults = false;\n                        $document.unbind('click', scope.checkFocus);\n                    });\n                }\n            };\n\n            element.on('keyup', function (evt) {\n                if (inputChangedPromise) {\n                    clearTimeout(inputChangedPromise);\n                }\n                inputChangedPromise = setTimeout(function () {\n                    scope.$apply(function () {\n                        scope.fetch();\n                    });\n                }, 500);\n            });\n\n        },\n        template: function (element, attr) {\n\n            function getSpanAddon() {\n                var addon = element.find('addon').detach();\n                return addon.length ? '<span class=\"addon\">' + addon.html() + '</span>': '';\n            }\n\n            function getTemplateTag() {\n                var templateTag = element.find('ser-item-template').detach();\n                return templateTag.length ? templateTag.html() : element.html();\n            }\n\n            function getEmptyTag() {\n                var emptyTag = element.find('ser-empty-template').detach();\n                return emptyTag.length ? emptyTag.html() : '<div class=\"align-center\">' + __('no_results') + '</div>';\n            }\n\n            //TODO usar virtual-repeat\n            return '' +\n                '<div class=\"ser-autocomplete-wrapper\" ng-class=\"{focus: focus, blur: blur}\">' +\n\n                    '<div class=\"input-group\">' +\n                        getSpanAddon() +\n                        '<input placeholder=\"{{placeholder}}\" ng-model=\"keyword\" ng-disabled=\"disabled\" ng-focus=\"searchFocus()\" ng-blur=\"searchBlur()\" />' +\n                    '</div>' +\n\n                    '<div class=\"fetching line-loader\" ng-show=\"isFetching\"></div>' +\n\n                    '<div class=\"results\" ng-show=\"showResults\">' +\n                        '<div class=\"item\" ng-repeat=\"item in results\" ng-click=\"selectInternalItem(item)\">' + getTemplateTag() + '</div>' +\n\n                        '<div class=\"not-results\" ng-if=\"(results.length == 0) && keyword\">' +\n                            getEmptyTag() +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n        }\n    };\n\n    \n}]);","angular.module('SER.datepicker', []);\n\nangular.module('SER.datepicker').directive('serDate', ['$filter', function ($filter) {\n\n    return {\n        restrict: 'E',\n        require: ['ngModel'],\n        scope: {\n            ngModel: '=',\n            config: '='\n        },\n        controller: ['$scope', function ($scope) {\n\n            $scope.placeholder = __('select_date');\n            \n            $scope.clear = function () {\n                $scope.ngModel = null;\n            };\n\n        }],\n        link: function (scope, element) {\n\n            var tooltip_instance = element.find('.value-wrapper').tooltipster({\n                content: element.find('.picker-wrapper'),\n                delay: 0,\n                positionTracker: true,\n                trigger: 'click',\n                theme: 'tooltipster-borderless',\n                position: 'bottom',\n                interactive: true\n            });\n\n            var picker_instance = element.find('.date-wrapper').dateRangePicker({\n                inline: true,\n                container: element.find('.date-wrapper'),\n                alwaysOpen: true,\n                language: 'es',\n                singleDate: true,\n                singleMonth: true\n            }).bind('datepicker-change', function (event, obj) {\n\n                scope.$apply(function () {\n                    scope.ngModel = obj.date1;\n                });\n\n                element.find('.value-wrapper').tooltipster('close');\n\n            }).bind('datepicker-next-month-finish-clicked', function (event) {\n                element.find('.value-wrapper').tooltipster('reposition');\n            }).bind('datepicker-prev-month-finish-clicked', function (event) {\n                element.find('.value-wrapper').tooltipster('reposition');\n            });\n\n            if (scope.ngModel) {\n                picker_instance.data('dateRangePicker').setStart(scope.ngModel, true);\n            }\n\n            scope.$watch('ngModel', function (newValue, oldValue) {\n                if (newValue && newValue != oldValue) {\n                    picker_instance.data('dateRangePicker').setStart(newValue, true);\n                }\n            }, true);\n\n        },\n        template: function (element, attr) {\n\n            return '' +\n                '<div class=\"ser-date-wrapper\" ng-class=\"{open: open, \\'has-value\\': blur}\">' +\n\n                    '<div ng-class=\"{\\'bttn-group\\': ngModel}\" class=\"row center-center\">' +\n                        '<button type=\"button\" class=\"bttn value-wrapper\">{{ (ngModel | date: \\'longDate\\') || placeholder }}</button>' +\n                        '<button type=\"button\" ng-show=\"ngModel\" class=\"bttn clear\" ng-click=\"clear()\">×</button>' +\n                    '</div>' +\n\n                    '<div class=\"tooltip-templates\">' +\n                        '<div class=\"picker-wrapper\">' +\n                            '<div class=\"date-wrapper\"></div>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n        }\n    };\n\n\n}]);\n\nangular.module('SER.datepicker').directive('serDateRange', ['$filter', function ($filter) {\n\n    return {\n        restrict: 'E',\n        require: ['ngModel'],\n        scope: {\n            ngModel: '=',\n            config: '='\n        },\n        controller: ['$scope', function ($scope) {\n\n            $scope.placeholder = __('select_date_range');\n\n            $scope.clear = function () {\n                $scope.ngModel = null;\n                $scope.placeholder = __('select_date_range');\n            };\n\n        }],\n        link: function (scope, element) {\n\n            var tooltip_instance = element.find('.value-wrapper').tooltipster({\n                content: element.find('.picker-wrapper'),\n                delay: 0,\n                positionTracker: true,\n                trigger: 'click',\n                theme: 'tooltipster-borderless',\n                position: 'bottom',\n                interactive: true\n            });\n\n            var picker_instance = element.find('.date-wrapper').dateRangePicker({\n                inline: true,\n                container: element.find('.date-wrapper'),\n                alwaysOpen: true,\n                language: 'es'\n            }).bind('datepicker-change', function (event, obj) {\n\n                scope.$apply(function () {\n\n                    obj.date1.setHours(0, 0, 0, 0);\n                    obj.date2.setHours(23, 59, 59, 0);\n                    scope.ngModel = {\n                        FromDate: obj.date1,\n                        ToDate: obj.date2\n                    };\n\n                    scope.placeholder = $filter('date')(obj.date1, 'longDate') + ' - ' + $filter('date')(obj.date2, 'longDate');\n                });\n\n                element.find('.value-wrapper').tooltipster('close');\n\n            }).bind('datepicker-next-month-finish-clicked', function (event) {\n                element.find('.value-wrapper').tooltipster('reposition');\n            }).bind('datepicker-prev-month-finish-clicked', function (event) {\n                element.find('.value-wrapper').tooltipster('reposition');\n            });\n\n            if (scope.ngModel && scope.ngModel.FromDate && scope.ngModel.ToDate) {\n                picker_instance.data('dateRangePicker').setStart(scope.ngModel.FromDate, true);\n                picker_instance.data('dateRangePicker').setEnd(scope.ngModel.ToDate, true);\n                scope.placeholder = $filter('date')(scope.ngModel.FromDate, 'longDate') + ' - ' + $filter('date')(scope.ngModel.ToDate, 'longDate');\n            }\n\n            scope.$watch('ngModel', function (newValue, oldValue) {\n                if (newValue && newValue != oldValue) {\n                    picker_instance.data('dateRangePicker').setStart(scope.ngModel.FromDate, true);\n                    picker_instance.data('dateRangePicker').setEnd(scope.ngModel.ToDate, true);\n                }\n            }, true);\n\n        },\n        template: function (element, attr) {\n\n            return '' +\n                '<div class=\"ser-date-wrapper\" ng-class=\"{open: open, \\'has-value\\': blur}\">' +\n\n                    '<div ng-class=\"{\\'bttn-group\\': ngModel}\" class=\"row center-center\">' +\n                        '<button type=\"button\" class=\"bttn value-wrapper\">{{ placeholder }}</button>' +\n                        '<button type=\"button\" ng-show=\"ngModel\" class=\"bttn clear\" ng-click=\"clear()\">×</button>' +\n                    '</div>' +\n\n                    '<div class=\"tooltip-templates\">' +\n                        '<div class=\"picker-wrapper\">' +\n                            '<div class=\"date-wrapper\"></div>' +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n        }\n    };\n\n\n}]);","angular.module('SER.filters', []);\n\nangular.module('SER.filters').filter('PascalCase', [function () {\n    return function (input) {\n\n        return input\n            // Look for long acronyms and filter out the last letter\n            .replace(/([A-Z]+)([A-Z])/g, ' $1 $2')\n            // Look for lower-case letters followed by upper-case letters\n            .replace(/([a-z\\d])([A-Z])/g, '$1 $2')\n            // Look for lower-case letters followed by numbers\n            .replace(/([a-zA-Z])(\\d)/g, '$1 $2')\n            .replace(/^./, function (str) { return str.toUpperCase(); })\n            // Remove any white space left around the word\n            .trim();\n    };\n}]);\n\nangular.module('SER.filters').filter('getItem', ['$filter', function ($filter) {\n    return function (input, array, field) {\n        var fields = {};\n        fields[field] = input;\n        var resultArray = [];\n        resultArray = $filter('filter')(array, fields, true);\n        if (hasValue(resultArray) && 0 < resultArray.length) return resultArray[0];\n        return null;\n    };\n}]);","var i18n = {\n    __DICT: undefined,\n    loadJSON: function (locale_json) {\n        this.__DICT = locale_json;\n    },\n    __: function (key) {\n        if (typeof this.__DICT !== 'undefined') {\n\n            if (key in this.__DICT) {\n                return this.__DICT[key];\n            } else {\n                console.warn('Locale not found for: ' + key);\n                return key;\n            }\n        } else {\n            console.error('Locale JSON file not loaded | Locale not found for: ' + key);\n        }\n\n    }\n};\n\nvar __ = function (key) {\n    return i18n.__(key);\n};\n\nangular.module('SER.i18n', []);\n\nangular.module('SER.i18n').filter('translate', function () {\n    return function (input) {\n        return i18n.__(input);\n    };\n});","angular.module('SER.image', []);\n\nangular.module('SER.image').directive('callbackImage', function () {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n\n            element.on('dragstart', function (event) { event.preventDefault(); });\n\n            element.bind('error', function () {\n                element[0].src = attrs.callbackImage;\n            });\n\n        }\n    };\n});\n\nangular.module('SER.image').directive('retryGetImage', function () {\n    return {\n        restrict: 'A',\n        scope: {\n            retryGetImage: '@',\n            fallbackRetry: '='\n        },\n        link: function (scope, element, attrs) {\n\n            var timeout;\n\n            function retry() {\n                timeout = setTimeout(function () {\n                    element[0].src = scope.retryGetImage;\n                }, 5000);\n            }\n\n            scope.$watch('retryGetImage', function (new_value) {\n\n                clearTimeout(timeout);\n                element.unbind('load');\n                element.unbind('error');\n                element[0].src = new_value;\n                element.addClass('hidden');\n\n                element.bind('load', function () {\n                    element.removeClass('hidden');\n                    scope.fallbackRetry = false;\n                    clearTimeout(timeout);\n                    scope.$apply();\n                });\n\n                element.bind('error', function () {\n                    scope.fallbackRetry = true;\n                    retry();\n                });\n            });\n\n        }\n    };\n});\n\nangular.module('SER.image').directive('imgZoom', ['$timeout', function ($timeout) {\n    return {\n        restrict: 'E',\n        scope: {\n            image: '=',\n            options: '='\n        },\n        link: function (scope, element, attrs) {\n\n            element.find('.target').on('load', function () {\n                element.find('.loader').addClass('ng-hide');\n            });\n\n            element.find('.target').on('error', function () {\n                element.find('.loader').addClass('ng-hide');\n                scope.zoomReset();\n            });\n\n            scope.size = 'auto';\n\n            var defaults = {\n                'max-height': 'none'\n            };\n\n            angular.merge(defaults, scope.options);\n            //var clicked = false, clickY;\n            //$(element).on({\n            //    'mousemove': function (e) {\n            //        clicked && updateScrollPos(e);\n            //    },\n            //    'mousedown': function (e) {\n            //        clicked = true;\n            //        clickY = e.pageY;\n            //    },\n            //    'mouseup': function () {\n            //        clicked = false;\n            //    }\n            //});\n\n            //var updateScrollPos = function (e) {\n            //    $(element).css('cursor', 'row-resize');\n            //    $(element).scrollTop($(element).scrollTop() + (clickY - e.pageY));\n            //}\n\n            scope.zoomIn = function () {\n                scope.size = element.find('.target').width() * 1.1;\n                element.find('.target').css({\n                    'max-height': 'none',\n                    height: 'auto'\n                });\n            };\n\n            scope.zoomOut = function () {\n                scope.size = element.find('.target').width() / 1.1;\n                element.find('.target').css({\n                    'max-height': 'none',\n                    height: 'auto'\n                });\n            };\n\n            scope.zoomReset = function () {\n                scope.size = 'auto';\n                element.find('.target').css({\n                    'max-height': defaults['max-height'],\n                    height: 'auto'\n                });\n            };\n\n            scope.zoomExpand = function () {\n                scope.size = 'auto';\n                element.find('.target').css({\n                    'max-height': defaults['max-height'],\n                    height: element.height() - 2\n                });\n            };\n\n            $timeout(function () {\n                scope.zoomExpand();\n            }, 500);\n        },\n        template: function () {\n            return '' +\n                '<div class=\"controls\">' +\n                    '<button class=\"bttn icon\" ng-click=\"zoomOut()\"><i class=\"icon-zoom-out\"></i></button>' +\n                    '<button class=\"bttn icon\" ng-click=\"zoomReset()\"><i class=\"icon-zoom-actual\"></i></button>' +\n                    '<button class=\"bttn icon\" ng-click=\"zoomExpand()\"><i class=\"icon-zoom-expand\"></i></button>' +\n                    '<button class=\"bttn icon\" ng-click=\"zoomIn()\"><i class=\"icon-zoom-in\"></i></button>' +\n                '</div>' +\n                '<div class=\"loader dots\">' + __('loading') + '</div>' +\n                '<img class=\"target\" ng-src=\"{{ image }}\" ng-style=\"{width: size}\" callback-image=\"/images/' + __(\"no_image_available.svg\") + '\" />';\n        }\n    };\n}]);\n\nangular.module('SER.image').directive('zoomImage', function () {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n\n            var defaultValues = {\n                responsive: true,\n                loadingIcon: true,\n                tint: true,\n                scrollZoom: true,\n                zoomWindowWidth: 150,\n                zoomWindowHeight: 150,\n                imageSrc: attrs.ngSrc\n            };\n\n            angular.merge(defaultValues, scope.$eval(attrs.zoomImage));\n\n            element.elevateZoom(defaultValues);\n\n        }\n    };\n});","angular.module('SER.loader', []).service('afterPromises', [\n    function () {\n\n        var afterPromises = function (topCount, callbackFunction) {\n            this.callback = callbackFunction;\n            this.topCount = topCount;\n            this.counter = 0;\n        };\n\n        afterPromises.prototype.notify = function () {\n            this.counter += 1;\n            if (this.counter == this.topCount) {\n                this.callback();\n            }\n        };\n\n        return afterPromises;\n    }\n]);\n","angular.module('SER.search').directive('remoteSearch', ['$http', function search($http) {\n\n    return {\n        restrict: 'A',\n        require: ['ngModel'],\n        scope: {\n            remoteSearchResults: '=',\n            remoteSearch: '=',\n            model: '=ngModel'\n        },\n        link: function (scope, elem, attrs, ngModel) {\n\n            var inputChangedPromise;\n\n            var fetch = function () {\n\n                scope.$apply(function () {\n                    scope.remoteSearchResults = [];\n                });\n                \n                if (scope.model) {\n                    $http.get(scope.remoteSearch + scope.model).then(function (response) {\n                        if (0 < response.data.length) {\n                            scope.remoteSearchResults = response.data;\n                        }\n                    });\n                }\n            };\n\n            elem.on('keyup', function (evt) {\n                if (inputChangedPromise) {\n                    clearTimeout(inputChangedPromise);\n                }\n                inputChangedPromise = setTimeout(function () {\n                    fetch();\n                }, 500);\n            });\n\n        }\n    };\n\n    \n}]);\n\nangular.module('SER.search').directive('ngEnter', function () {\n    return function (scope, element, attrs) {\n        element.bind('keydown keypress', function (event) {\n            if (event.which === 13) {\n                scope.$apply(function () {\n                    scope.$eval(attrs.ngEnter, { $event: event });\n                });\n                event.preventDefault();\n                element.blur();\n            }\n        });\n    };\n});\n\n//angular.module('SER.search').directive('highlightText', ['$interpolate', '$parse', function search($interpolate, $parse) {\n//    return {\n//        terminal: true,\n//        controller: 'MdHighlightCtrl',\n//        compile: function mdHighlightCompile(tElement, tAttr) {\n//            var termExpr = $parse(tAttr.mdHighlightText);\n//            var unsafeContentExpr = $interpolate(tElement.html());\n\n//            return function mdHighlightLink(scope, element, attr, ctrl) {\n//                ctrl.init(termExpr, unsafeContentExpr);\n//            };\n//        }\n//    };\n//}]);","//TODO actualizar highlighted\nangular.module('SER.selector', []).directive('selector', [\n    '$rootScope',\n    '$filter',\n    '$timeout',\n    '$window',\n    '$http',\n    '$q',\n    '$templateCache',\n    function ($rootScope, $filter, $timeout, $window, $http, $q, $templateCache) {\n\n        return {\n            restrict: 'EC',\n            replace: true,\n            transclude: true,\n            scope: {\n                value: '=model',\n                disabled: '=?disable',\n                disableSearch: '=?',\n                required: '=?require',\n                multiple: '=?multi',\n                placeholder: '@?',\n                valueAttr: '@',\n                labelAttr: '@?',\n                options: '=?',\n                dropdownClass: '@?',\n                limit: '=?',\n                rtl: '=?',\n                api: '=?',\n                change: '&?',\n                removeButton: '=?',\n                softDelete: '=?',\n                closeAfterSelection: '=?'\n            },\n            link: function (scope, element, attrs, controller, transclude) {\n            \n                var dropdown = angular.element(element[0].querySelector('.selector-dropdown'));\n                var selectInput = angular.element(element[0].querySelector('select'));\n                var originParents = element.parents();\n                var namespace = 'selector-' + Math.round(Math.random() * 1000000);\n                dropdown.attr('id', namespace);\n\n                transclude(scope, function (clone, scope) {\n                    var filter = $filter('filter'),\n                        input = angular.element(element[0].querySelector('.selector-input input')),\n                        inputCtrl = input.controller('ngModel'),\n                        selectCtrl = element.find('select').controller('ngModel'),\n                        defaults = {\n                            api: {},\n                            search: '',\n                            disableSearch: false,\n                            selectedValues: [],\n                            highlighted: 0,\n                            valueAttr: null,\n                            labelAttr: 'label',\n                            options: [],\n                            limit: Infinity,\n                            removeButton: true,\n                            closeAfterSelection: true\n                        };\n\n                    dropdown.detach();\n\n                    // Default attributes\n                    if (!angular.isDefined(scope.value) && scope.multiple) scope.value = [];\n\n                    for (var defaultsKey in defaults) {\n                        if (!angular.isDefined(scope[defaultsKey])) scope[defaultsKey] = defaults[defaultsKey];\n                    }\n\n                    // Options' utilities\n                    scope.getObjValue = function (obj, path) {\n                        var key;\n                        if (!angular.isDefined(obj) || !angular.isDefined(path)) return obj;\n                        path = angular.isArray(path) ? path : path.split('.');\n                        key = path.shift();\n\n                        if (key.indexOf('[') > 0) {\n                            var match = key.match(/(\\w+)\\[(\\d+)\\]/);\n                            if (match !== null) {\n                                obj = obj[match[1]];\n                                key = match[2];\n                            }\n                        }\n                        return path.length === 0 ? obj[key] : scope.getObjValue(obj[key], path);\n                    };\n                    scope.setObjValue = function (obj, path, value) {\n                        var key;\n                        if (!angular.isDefined(obj)) obj = {};\n                        path = angular.isArray(path) ? path : path.split('.');\n                        key = path.shift();\n\n                        if (key.indexOf('[') > 0) {\n                            var match = key.match(/(\\w+)\\[(\\d+)\\]/);\n                            if (match !== null) {\n                                obj = obj[match[1]];\n                                key = match[2];\n                            }\n                        }\n                        obj[key] = path.length === 0 ? value : scope.setObjValue(obj[key], path, value);\n                        return obj;\n                    };\n                    scope.optionValue = function (option) {\n                        return scope.valueAttr === null ? option : scope.getObjValue(option, scope.valueAttr);\n                    };\n                    scope.optionEquals = function (option, value) {\n                        return angular.equals(scope.optionValue(option), angular.isDefined(value) ? value : scope.value);\n                    };\n\n                    // Value utilities\n                    scope.setValue = function (value) {\n                        if (!scope.multiple) scope.value = scope.valueAttr === null ? value : scope.getObjValue(value || {}, scope.valueAttr);\n                        else scope.value = scope.valueAttr === null ? value || [] : (value || []).map(function (option) { return scope.getObjValue(option, scope.valueAttr); });\n                    };\n                    scope.hasValue = function () {\n                        return scope.multiple ? (scope.value || []).length > 0 : !!scope.value;\n                    };\n\n                    // Fill with options in the select\n                    scope.optionToObject = function (option) {\n                        var object = {},\n                            element = angular.element(option);\n\n                        angular.forEach(option.dataset, function (value, key) {\n                            if (!key.match(/^\\$/)) object[key] = value;\n                        });\n                        if (option.value)\n                            scope.setObjValue(object, scope.valueAttr || 'value', option.value);\n                        if (element.text())\n                            scope.setObjValue(object, scope.labelAttr, element.text().trim());\n                        scope.options.push(object);\n\n                        if (element.attr('selected') && (scope.multiple || !scope.hasValue()))\n                            if (!scope.multiple) {\n                                if (!scope.value) scope.value = scope.optionValue(object);\n                            } else {\n                                if (!scope.value) scope.value = [];\n                                scope.value.push(scope.optionValue(object));\n                            }\n                    };\n                    scope.fillWithHtml = function () {\n                        scope.options = [];\n                        angular.forEach(clone, function (element) {\n                            var tagName = (element.tagName || '').toLowerCase();\n\n                            if (tagName === 'option') scope.optionToObject(element);\n                        });\n                        scope.updateSelected();\n                    };\n\n                    // Initialization\n                    scope.initialize = function () {\n                        if (!angular.isArray(scope.options) || !scope.options.length)\n                            scope.fillWithHtml();\n                        if (scope.hasValue()) {\n                            if (!scope.multiple) {\n                                if (angular.isArray(scope.value)) scope.value = scope.value[0];\n                            } else {\n                                if (!angular.isArray(scope.value)) scope.value = [scope.value];\n                            }\n                            scope.updateSelected();\n                            scope.filterOptions();\n                            scope.updateValue();\n                        }\n                    };\n                    scope.$watch('multiple', function () {\n                        $timeout(scope.setInputWidth);\n                    });\n\n                    var dropdownPosition = function () {\n                        var label = input.parent()[0];\n\n                        var style = {\n                            top: '',\n                            bottom: '',\n                            left: label.getBoundingClientRect().left + 'px',\n                            width: label.offsetWidth + 'px'\n                        };\n\n                        if (angular.element(document.body).height() - (label.offsetHeight + label.getBoundingClientRect().top) >= 220) {\n                            style.top = label.offsetHeight + label.getBoundingClientRect().top;\n                            dropdown.removeClass('ontop');\n                        } else {\n                        \n                            style.bottom = angular.element(document.body).height() - label.getBoundingClientRect().top;\n                            dropdown.addClass('ontop');\n                        }\n\n                        dropdown.css(style);\n                    };\n\n                    // Dropdown utilities\n                    scope.showDropdown = function () {\n                        dropdownPosition();\n                        angular.element(document.body).append(dropdown);\n\n                        $timeout(function () {\n                            angular.element(window).triggerHandler('resize');\n                        }, 50);\n                    };\n                    scope.open = function () {\n                        if (scope.multiple && (scope.selectedValues || []).length >= scope.limit) return;\n                        scope.isOpen = true;\n                        scope.showDropdown();\n                        $timeout(scope.scrollToHighlighted);\n                    };\n                    scope.close = function () {\n                        scope.isOpen = false;\n                        dropdown.detach();\n                        scope.resetInput()\n                    };\n                    var highlight = function (index) {\n                        if (scope.filteredOptions.length)\n                            scope.highlighted = (scope.filteredOptions.length + index) % scope.filteredOptions.length;\n                    };\n                    var decrementHighlighted = function () {\n                        highlight(scope.highlighted - 1);\n                    };\n                    var incrementHighlighted = function () {\n                        highlight(scope.highlighted + 1);\n                    };\n                    scope.set = function (option) {\n                        if (scope.multiple && (scope.selectedValues || []).length >= scope.limit) return;\n\n                        if (!scope.multiple) scope.selectedValues = [option];\n                        else {\n                            if (!scope.selectedValues)\n                                scope.selectedValues = [];\n                            if (scope.selectedValues.indexOf(option) < 0)\n                                scope.selectedValues.push(option);\n                        }\n                        if (!scope.multiple && scope.closeAfterSelection) input.blur();\n                        highlight(scope.options.indexOf(option));\n                        scope.resetInput();\n                        selectCtrl.$setDirty();\n                    };\n                    scope.unset = function (index) {\n                        if (!scope.multiple) scope.selectedValues = [];\n                        else scope.selectedValues.splice(angular.isDefined(index) ? index : scope.selectedValues.length - 1, 1);\n                        scope.resetInput();\n                        selectCtrl.$setDirty();\n                    };\n                    scope.keydown = function (e) {\n                        switch (e.keyCode) {\n                            case KEYS.up:\n                                if (!scope.isOpen) break;\n                                decrementHighlighted();\n                                e.preventDefault();\n                                break;\n                            case KEYS.down:\n                                if (!scope.isOpen) scope.open();\n                                else incrementHighlighted();\n                                e.preventDefault();\n                                break;\n                            case KEYS.escape:\n                                highlight(0);\n                                scope.close();\n                                break;\n                            case KEYS.enter:\n                                if (scope.isOpen) {\n                                    if (scope.filteredOptions.length)\n                                        scope.set();\n                                    e.preventDefault();\n                                }\n                                break;\n                            case KEYS.backspace:\n                                if (!input.val()) {\n                                    var search = scope.getObjValue(scope.selectedValues.slice(-1)[0] || {}, scope.labelAttr || '');\n                                    scope.unset();\n                                    scope.open();\n                                    if (scope.softDelete && !scope.disableSearch)\n                                        $timeout(function () {\n                                            scope.search = search;\n                                        });\n                                    e.preventDefault();\n                                }\n                                break;\n                            case KEYS.left:\n                            case KEYS.right:\n                            case KEYS.shift:\n                            case KEYS.ctrl:\n                            case KEYS.alt:\n                            case KEYS.tab:\n                            case KEYS.leftCmd:\n                            case KEYS.rightCmd:\n                                break;\n                            default:\n                                if (!scope.multiple && scope.hasValue()) {\n                                    e.preventDefault();\n                                } else {\n                                    scope.open();\n                                    highlight(0);\n                                }\n                                break;\n                        }\n                    };\n\n                    // Filtered options\n                    scope.inOptions = function (options, value) {\n                        return options.indexOf(value) >= 0;\n                    };\n                    scope.filterOptions = function () {\n                        scope.filteredOptions = filter(scope.options || [], scope.search);\n                        if (!angular.isArray(scope.selectedValues)) scope.selectedValues = [];\n                        if (scope.multiple)\n                            scope.filteredOptions = scope.filteredOptions.filter(function (option) {\n                                return !scope.inOptions(scope.selectedValues, option);\n                            });\n                        else {\n                            var index = scope.filteredOptions.indexOf(scope.selectedValues[0]);\n                            if (index >= 0) highlight(index);\n                        }\n                    };\n\n                    // Input width utilities\n                    scope.measureWidth = function () {\n                        var width,\n                            styles = getStyles(input[0]),\n                            shadow = angular.element('<span class=\"selector-shadow\"></span>');\n                        shadow.text(input.val() || (!scope.hasValue() ? scope.placeholder : '') || '');\n                        angular.element(document.body).append(shadow);\n                        angular.forEach(['fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'letterSpacing', 'textTransform', 'wordSpacing', 'textIndent'], function (style) {\n                            shadow.css(style, styles[style]);\n                        });\n                        width = shadow[0].offsetWidth;\n                        shadow.remove();\n                        return width;\n                    };\n                    scope.setInputWidth = function () {\n                        var width = scope.measureWidth() + 1;\n                        input.css('width', width + 'px');\n                    };\n                    scope.resetInput = function () {\n                        input.val('');\n                        scope.setInputWidth();\n                        $timeout(function () { scope.search = ''; });\n                    };\n\n                    scope.$watch('[search, options, value]', function () {\n                        // hide selected items\n                        scope.filterOptions();\n                        $timeout(function () {\n                            // set input width\n                            scope.setInputWidth();\n                            // repositionate dropdown\n                            if (scope.isOpen) scope.showDropdown();\n                        });\n                    }, true);\n\n                    // Update value\n                    scope.updateValue = function (origin) {\n                        if (!angular.isDefined(origin)) origin = scope.selectedValues || [];\n                        scope.setValue(!scope.multiple ? origin[0] : origin);\n                    };\n                    scope.$watch('selectedValues', function (newValue, oldValue) {\n                        if (angular.equals(newValue, oldValue)) return;\n                        scope.updateValue();\n                        if (angular.isFunction(scope.change))\n                            scope.change(scope.multiple\n                                ? { newValue: newValue, oldValue: oldValue }\n                                : { newValue: (newValue || [])[0], oldValue: (oldValue || [])[0] });\n                    }, true);\n                    scope.$watchCollection('options', function (newValue, oldValue) {\n                        if (angular.equals(newValue, oldValue)) return;\n                        scope.updateSelected();\n                    });\n\n                    // Update selected values\n                    scope.updateSelected = function () {\n                        if (!scope.multiple) scope.selectedValues = (scope.options || []).filter(function (option) { return scope.optionEquals(option); }).slice(0, 1);\n                        else\n                            scope.selectedValues = (scope.value || []).map(function (value) {\n                                return filter(scope.options, function (option) {\n                                    return scope.optionEquals(option, value);\n                                })[0];\n                            }).filter(function (value) { return angular.isDefined(value); }).slice(0, scope.limit);\n                    };\n                    scope.$watch('value', function (newValue, oldValue) {\n                        if (angular.equals(newValue, oldValue)) return;\n                        scope.updateSelected();\n                    }, true);\n\n                    // DOM event listeners\n                    input = angular.element(element[0].querySelector('.selector-input input'))\n                        .on('focus', function () {\n                            $timeout(function () {\n                                scope.$apply(scope.open);\n                            });\n                        })\n                        .on('blur', function () {\n                            scope.close();\n                        })\n                        .on('keydown', function (e) {\n                            scope.$apply(function () {\n                                scope.keydown(e);\n                            });\n                        })\n                        .on('input', function () {\n                            scope.setInputWidth();\n                        });\n\n                    dropdown\n                        .on('mousedown', function (e) {\n                            e.preventDefault();\n                        });\n\n                    // scrolling may require the tooltip to be moved or even\n                    // repositioned in some cases\n\n                    originParents.each(function (i, parent) {\n                        angular.element(parent).on('scroll.' + namespace, function (e) {\n                            dropdownPosition();\n                        });\n                    });\n\n                    // Update select controller\n                    scope.$watch(function () { return inputCtrl.$pristine; }, function ($pristine) {\n                        selectCtrl[$pristine ? '$setPristine' : '$setDirty']();\n                    });\n                    scope.$watch(function () { return inputCtrl.$touched; }, function ($touched) {\n                        selectCtrl[$touched ? '$setTouched' : '$setUntouched']();\n                    });\n\n                    // Expose APIs\n                    angular.forEach(['open', 'close'], function (api) {\n                        scope.api[api] = scope[api];\n                    });\n                    scope.api.focus = function () {\n                        input[0].focus();\n                    };\n                    scope.api.set = function (value) {\n                        return scope.value = value;\n                    };\n                    scope.api.unset = function (value) {\n                        var values = !value ? scope.selectedValues : (scope.selectedValues || []).filter(function (option) { return scope.optionEquals(option, value); }),\n                            indexes =\n                                scope.selectedValues.map(function (option, index) {\n                                    return scope.inOptions(values, option) ? index : -1;\n                                }).filter(function (index) { return index >= 0; });\n\n                        angular.forEach(indexes, function (index, i) {\n                            scope.unset(index - i);\n                        });\n                    };\n\n                    scope.isDirty = function () {\n                        return selectInput.hasClass('ng-dirty');\n                    };\n\n                    scope.isInvalid = function () {\n                        return selectInput.hasClass('ng-invalid');\n                    };\n\n                    scope.initialize();\n                });\n\n                scope.$on('$destroy', function () {\n                    dropdown.remove();\n                    dropdown.off('mousedown');\n                    angular.element(element[0].querySelector('.selector-input input')).off('focus blur keydown input ');\n                    angular.element(document.body).off('resize.' + namespace);\n                    originParents.each(function (i, el) {\n                        $(el).off('scroll.' + namespace  + ' resize.' + namespace);\n                    });\n                    // clear the array to prevent memory leaks\n                    originParents = null;\n                });\n            },\n            template: function (element, attrs) {\n\n                var viewItemTemplate = $templateCache.get(attrs.viewItemTemplate) ? $templateCache.get(attrs.viewItemTemplate) : '<span ng-bind=\"getObjValue(option, labelAttr) || option\"></span>';\n                var dropdownItemTemplate;\n\n                if (attrs.labelAttr) {\n                    dropdownItemTemplate = '<span ng-bind=\"getObjValue(option, labelAttr) || option\"></span>';\n                } else {\n                    dropdownItemTemplate = $templateCache.get(attrs.viewItemTemplate) ? $templateCache.get(attrs.viewItemTemplate) : '<span ng-bind=\"getObjValue(option, labelAttr) || option\"></span>';\n                }\n\n                if (attrs.dropdownItemTemplate) {\n                    dropdownItemTemplate = $templateCache.get(attrs.dropdownItemTemplate) ? $templateCache.get(attrs.dropdownItemTemplate) : '<span ng-bind=\"getObjValue(option, labelAttr) || option\"></span>';\n                }\n\n                var name = '';\n\n                if (attrs.name) {\n                    name = 'name=\"' + attrs.name + '\"';\n                }\n\n                var template = $templateCache.get('selector/Base') ? $templateCache.get('selector/Base') : '' +\n                    '<div class=\"selector-container\" ng-attr-dir=\"{{rtl ? \\'rtl\\' : \\'ltr\\'}}\" ng-class=\"{open: isOpen, empty: !filteredOptions.length && !search, \\'ng-dirty\\': isDirty(), \\'ng-invalid\\': isInvalid(),multiple: multiple, \\'has-value\\': hasValue(), rtl: rtl, \\'remove-button\\': removeButton, disabled: disabled}\">' +\n                        '<select ' + name + ' ng-required=\"required && !hasValue()\" class=\"not-styled\" ng-model=\"selectedValues\" multiple style=\"display: none;\"></select>' +\n                        '<label class=\"selector-input\">' +\n                            '<ul class=\"selector-values\">' +\n                                '<li ng-repeat=\"(index, option) in selectedValues track by index\">' +\n                                    '<div>' + viewItemTemplate + '</div>' +\n                                    '<div ng-if=\"multiple\" class=\"selector-helper\" ng-click=\"!disabled && unset(index)\">' +\n                                        '<span class=\"selector-icon\"></span>' +\n                                    '</div>' +\n                                '</li>' +\n                            '</ul>' +\n                            '<input ng-model=\"search\" class=\"selector-search-input not-styled\" placeholder=\"{{!hasValue() ? placeholder : \\'\\'}}\"' +\n                                'ng-disabled=\"disabled\" ng-readonly=\"disableSearch\" ng-required=\"required && !hasValue()\" autocomplete=\"off\">' +\n                            '<div ng-if=\"!multiple\" class=\"selector-helper selector-global-helper\" ng-click=\"!disabled && removeButton && unset()\">' +\n                                '<span class=\"selector-icon\"></span>' +\n                            '</div>' +\n                        '</label>' +\n                        '<ul md-virtual-repeat-container md-auto-shrink md-top-index=\"highlighted\" class=\"selector-dropdown ' + attrs.dropdownClass + '\">' +\n                            '<li md-virtual-repeat=\"option in filteredOptions\" ng-class=\"{active: highlighted == $index}\" class=\"selector-option\" ng-click=\"set(option)\">' + dropdownItemTemplate + '</li>' +\n                        '</ul>' +\n                    '</div>';\n\n                return template;\n            }\n        };\n    }\n]);","angular.module('SER.tooltipster', []);\n\nangular.module('SER.tooltipster').directive('tooltipster', function () {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n\n            var tooltipster_default = {\n                content: attrs.tooltipster,\n                maxWidth: 300,\n                delay: 0,\n                contentAsHTML: true,\n                positionTracker: true,\n                trigger: 'hover',\n                theme: 'tooltipster-borderless'\n            };\n\n            angular.merge(tooltipster_default, scope.$eval(attrs.tooltipsterOptions));\n            element.tooltipster(tooltipster_default);\n\n        }\n    };\n});\n\nangular.module('SER.tooltipster').directive('tooltipsterMenu', function () {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n\n            var tooltipster_default = {\n                content: element.find('.tooltip-content'),\n                delay: 0,\n                positionTracker: true,\n                trigger: 'click',\n                theme: 'tooltipster-borderless',\n                position: 'bottom',\n                interactive: true\n            };\n\n            angular.merge(tooltipster_default, scope.$eval(attrs.tooltipsterMenu));\n            element.tooltipster(tooltipster_default);\n\n            scope.closeTooltip = function () {\n                element.tooltipster('close');\n            };\n\n            element.find('.action').on('click', function () {\n                scope.closeTooltip();\n            });\n\n        }\n    };\n});\n\nangular.module('SER.tooltipster').directive('tooltipsterHtml', function () {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n\n            var tooltipster_default = {\n                content: element.find('.tooltip-content'),\n                delay: 0,\n                positionTracker: true,\n                trigger: 'hover',\n                theme: 'tooltipster-borderless',\n                position: 'top'\n            };\n\n            angular.merge(tooltipster_default, scope.$eval(attrs.tooltipsterMenu));\n            element.tooltipster(tooltipster_default);\n\n        }\n    };\n});","angular.module('SER.match', []).directive('match', ['$parse', function ($parse) {\n    return {\n        require: '?ngModel',\n        restrict: 'A',\n        link: function(scope, elem, attrs, ctrl) {\n            if(!ctrl || !attrs.match) {\n                return;\n            }\n\n            var matchGetter = $parse(attrs.match);\n            var caselessGetter = $parse(attrs.matchCaseless);\n            var noMatchGetter = $parse(attrs.notMatch);\n            var matchIgnoreEmptyGetter = $parse(attrs.matchIgnoreEmpty);\n\n            scope.$watch(getMatchValue, function(){\n                ctrl.$$parseAndValidate();\n            });\n\n            ctrl.$validators.match = function(modelValue, viewValue){\n              var matcher = modelValue || viewValue;\n              var match = getMatchValue();\n              var notMatch = noMatchGetter(scope);\n              var value;\n\n              if (matchIgnoreEmptyGetter(scope) && !viewValue) {\n                return true;\n              }\n\n              if(caselessGetter(scope)){\n                value = angular.lowercase(matcher) === angular.lowercase(match);\n              }else{\n                value = matcher === match;\n              }\n              /*jslint bitwise: true */\n              value ^= notMatch;\n              /*jslint bitwise: false */\n              return !!value;\n            };\n\n            function getMatchValue(){\n                var match = matchGetter(scope);\n                if(angular.isObject(match) && match.hasOwnProperty('$viewValue')){\n                    match = match.$viewValue;\n                }\n                return match;\n            }\n        }\n    };\n}]);\n","angular.module('SER.barcode', []);\n\nangular.module('SER.barcode').directive('barcode', function () {\n\n    return {\n        restrict: 'EA',\n        scope: {\n            model: '=',\n            options: '='\n        },\n        link: function (scope, element, attrs) {\n            \n            var default_options = {\n                format: \"CODE128\",\n                lineColor: \"#000000\",\n                width: 3,\n                height: 110,\n                displayValue: true\n            };\n\n            angular.merge(default_options, scope.options);\n\n            scope.$watch('model', function (new_value) {\n                JsBarcode(element[0], new_value, default_options);\n            });\n\n        }\n    };\n\n});","angular.module('SER.diff', []);\n\nangular.module('SER.diff').factory('ObjectDiff', [\n    '$sce',\n    function objectDiff($sce) {\n\n        var openChar = '{',\n            closeChar = '}',\n            service = {\n                diff: diff,\n                getPatchChanges: getPatchChanges\n            };\n\n        return service;\n\n\n        /* service methods */\n\n        /**\n         * diff between object a and b\n         * @param {Object} a\n         * @param {Object} b\n         * @param shallow\n         * @param isOwn\n         * @return {Object}\n         */\n        function diff(a, b, shallow, isOwn) {\n\n            if (a === b) {\n                return equalObj(a);\n            }\n\n            var diffValue = {};\n            var equal = true;\n\n            for (var key in a) {\n                if ((!isOwn && key in b) || (isOwn && typeof b != 'undefined' && b.hasOwnProperty(key))) {\n                    if (a[key] === b[key]) {\n                        diffValue[key] = equalObj(a[key]);\n                    } else {\n                        if (!shallow && isValidAttr(a[key], b[key])) {\n                            var valueDiff = diff(a[key], b[key], shallow, isOwn);\n                            if (valueDiff.changed == 'equal') {\n                                diffValue[key] = equalObj(a[key]);\n                            } else {\n                                equal = false;\n                                diffValue[key] = valueDiff;\n                            }\n                        } else {\n                            equal = false;\n                            diffValue[key] = {\n                                changed: 'primitive change',\n                                removed: a[key],\n                                added: b[key]\n                            }\n                        }\n                    }\n                } else {\n                    equal = false;\n                    diffValue[key] = {\n                        changed: 'removed',\n                        value: a[key]\n                    }\n                }\n            }\n\n            for (key in b) {\n                if ((!isOwn && !(key in a)) || (isOwn && typeof a != 'undefined' && !a.hasOwnProperty(key))) {\n                    equal = false;\n                    diffValue[key] = {\n                        changed: 'added',\n                        value: b[key]\n                    }\n                }\n            }\n\n            if (equal) {\n                return equalObj(a);\n            } else {\n                return {\n                    changed: 'object change',\n                    value: diffValue\n                }\n            }\n        }\n\n\n        /**\n         * diff between object a and b own properties only\n         * @param {Object} a\n         * @param {Object} b\n         * @return {Object}\n         * @param deep\n         */\n        function getPatchChanges(init_obj, mod_obj, shallow, isOwn) {\n            var _mod_obj = angular.fromJson(angular.toJson(mod_obj));\n            var _diff = diff(angular.fromJson(angular.toJson(init_obj)), _mod_obj, shallow, isOwn);\n            var result = [];\n\n            if (_diff.changed !== 'equal') {\n                angular.forEach(_diff.value, function (value, key) {\n                    if (value.changed !== 'equal') {\n                        result.push({\n                            \"op\": \"replace\",\n                            \"path\": \"/\" + key,\n                            \"value\": _mod_obj[key]\n                        });\n                    }\n                });\n            }\n\n            return result;\n\n        }\n\n        /**\n         * @param obj\n         * @returns {{changed: string, value: *}}\n         */\n        function equalObj(obj) {\n            return {\n                changed: 'equal',\n                value: obj\n            }\n        }\n\n        /**\n         * @param a\n         * @param b\n         * @returns {*|boolean}\n         */\n        function isValidAttr(a, b) {\n            var typeA = typeof a;\n            var typeB = typeof b;\n            return (a && b && (typeA == 'object' || typeA == 'function') && (typeB == 'object' || typeB == 'function'));\n        }\n\n        /**\n         * @param {string} key\n         * @return {string}\n         */\n        function stringifyObjectKey(key) {\n            return /^[a-z0-9_$]*$/i.test(key) ?\n                key :\n                JSON.stringify(key);\n        }\n\n        /**\n         * @param {string} string\n         * @return {string}\n         */\n        function escapeHTML(string) {\n            return string.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n\n        /**\n         * @param {Object} obj\n         * @return {string}\n         * @param shallow\n         */\n        function inspect(obj, shallow) {\n\n            return _inspect('', obj, shallow);\n\n            /**\n             * @param {string} accumulator\n             * @param {object} obj\n             * @see http://jsperf.com/continuation-passing-style/3\n             * @return {string}\n             * @param shallow\n             */\n            function _inspect(accumulator, obj, shallow) {\n                switch (typeof obj) {\n                    case 'object':\n                        if (!obj) {\n                            accumulator += 'null';\n                            break;\n                        }\n                        if (shallow) {\n                            accumulator += '[object]';\n                            break;\n                        }\n                        var keys = Object.keys(obj);\n                        var length = keys.length;\n                        if (length === 0) {\n                            accumulator += '<span>' + openChar + closeChar + '</span>';\n                        } else {\n                            accumulator += '<span>' + openChar + '</span>\\n<div class=\"diff-level\">';\n                            for (var i = 0; i < length; i++) {\n                                var key = keys[i];\n                                accumulator = _inspect(accumulator + stringifyObjectKey(escapeHTML(key)) + '<span>: </span>', obj[key]);\n                                if (i < length - 1) {\n                                    accumulator += '<span>,</span>\\n';\n                                }\n                            }\n                            accumulator += '\\n</div><span>' + closeChar + '</span>'\n                        }\n                        break;\n\n                    case 'string':\n                        accumulator += JSON.stringify(escapeHTML(obj));\n                        break;\n\n                    case 'undefined':\n                        accumulator += 'undefined';\n                        break;\n\n                    default:\n                        accumulator += escapeHTML(String(obj));\n                        break;\n                }\n                return accumulator;\n            }\n        }\n    }\n\n]);","angular.module('SER', [\n    // Angular modules\n    'ngAnimate',\n    'ngMessages',\n    'ngSanitize',\n    'ngResource',\n    'ngMaterial',\n    // Third Party modules\n    'ui.router',\n    'ngFileUpload',\n    'angular.filter',\n    // SER modules\n    'SER.i18n',\n    'SER.auth',\n    'SER.selector',\n    'SER.match',\n    'SER.image',\n    'SER.search',\n    'SER.tooltipster',\n    'SER.datepicker',\n    'SER.loader',\n    'SER.filters',\n    'SER.barcode',\n    'SER.diff'\n]);\n\n(function (url) {\n    // Create a new `Image` instance\n    var SerImagePowered = new Image();\n\n    SerImagePowered.onload = function () {\n        // Inside here we already have the dimensions of the loaded image\n        var style = [\n            // Hacky way of forcing image's viewport using `font-size` and `line-height`\n            'font-size: 1px;',\n            'line-height: ' + this.height + 'px;',\n\n            // Hacky way of forcing a middle/center anchor point for the image\n            'padding: ' + this.height * .5 + 'px ' + this.width * .5 + 'px;',\n\n            // Set image dimensions\n            'background-size: ' + this.width + 'px ' + this.height + 'px;',\n\n            // Set image URL\n            'background: url(' + url + ');'\n        ].join(' ');\n        \n        console.log('');\n        console.log('');\n        console.log('%c', style);\n        console.log('https://www.sersoluciones.com');\n        console.log('');\n        console.log('');\n    };\n\n    // Actually loads the image\n    SerImagePowered.src = url;\n\n})('https://www.sersoluciones.com/wp-content/uploads/2017/04/powered.jpg');\n\n\n//Routes & Http\nangular.module('SER').config([\n    '$urlRouterProvider',\n    '$urlMatcherFactoryProvider',\n    '$compileProvider',\n    '$resourceProvider',\n    '$httpProvider',\n    function ($urlRouterProvider, $urlMatcherFactoryProvider, $compileProvider, $resourceProvider, $httpProvider) {\n\n        $httpProvider.defaults.paramSerialize = '$httpParamSerializerJQLike';\n        $resourceProvider.defaults.stripTrailingSlashes = true;\n        $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|skype|tel|chrome-extension):/);\n\n        $urlRouterProvider.rule(function ($injector, $location) {\n\n            var path = $location.path();\n            var hasTrailingSlash = '/' === path[path.length - 1];\n\n            if (hasTrailingSlash) {\n                //if last charcter is a slash, return the same url without the slash\n                return path.substr(0, path.length - 1);\n            }\n\n        });\n\n        var GUID_REGEXP = /^[a-f\\d]{8}-([a-f\\d]{4}-){3}[a-f\\d]{12}$/i;\n        $urlMatcherFactoryProvider.type('guid', {\n            encode: angular.identity,\n            decode: angular.identity,\n            is: function (item) {\n                return GUID_REGEXP.test(item);\n            }\n        });\n\n    }\n]);\n\nangular.module('SER').run(['$rootScope', '$sce', function ($rootScope, $sce) {\n\n    $rootScope.backHistory = function () {\n        $window.history.back();\n    };\n\n    $rootScope.__ = __;\n\n    $rootScope.isArray = angular.isArray;\n    $rootScope.isObject = angular.isObject;\n    $rootScope.isString = angular.isString;\n    $rootScope.isUndefined = angular.isUndefined;\n    $rootScope.isNumber = angular.isNumber;\n    $rootScope.isDefined = angular.isDefined;\n    $rootScope.isDate = angular.isDate;\n\n    $rootScope.hasProperty = hasProperty;\n    $rootScope.hasValue = hasValue;\n    $rootScope.notValue = notValue;\n    $rootScope.inArray = inArray;\n    $rootScope.getObjectByValue = getObjectByValue;\n    $rootScope.isEmptyObject = $.isEmptyObject;\n\n    $rootScope.bodyHeight = function () {\n        return angular.element('body').height();\n    };\n    $rootScope.browserWidth = browserWidth;\n\n    $rootScope.trustAsHtml = function (string) {\n        return $sce.trustAsHtml(string);\n    };\n\n}]);"]}